void Win32CrtStartup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0:[0..31] d1:[0..31]
// LiveOut:
// Trashed:
// Preserved: a7
// Terminates process
Win32CrtStartup_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

Win32CrtStartup_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001004:
	__btst(d0, d1)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001498()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: a7
fn00001498_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001498:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001498_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000149C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: a7
// Terminates process
fn0000149C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000149C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000149C:
	__syscall(0xA9A0)
	branch true l000014BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014BE:
	__syscall(0xA86E)
	__syscall(0xA8FE)
	__syscall(0xA912)
	__syscall(0xA930)
	__syscall(0xA9CC)
	__syscall(0xA97B)
	__syscall(0xA850)
	__syscall(0xA986)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014B6:
	Mem28[0x00000AF0:word16] = 0x001A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014E2:
	__syscall(0xA9F4)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000014E8(word32 a3, word32 a5, word32 dwArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..15] a5:[0..31] Stack +0002:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a7 d0 d1 d2
// Preserved:
fn000014E8_entry:
	word16 wLoc12_180 = SLICE(dwLoc12, word16, 16)
	word16 wArg00_194 = SLICE(dwLoc02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014E8:
	Mem14[0x0000:word16] = 0x0000
	__syscall(0xA9A0)
	word16 wLoc02_193 = SLICE(a3, word16, 0)
	branch SEQ(wLoc12_180, 0x4441) == 0x00000000 l00001592
	word32 dwLoc02_190 = SEQ(wLoc02_193, wArg00_194)
	word32 dwLoc12_184 = SEQ(wLoc12_180, 0x4441)
	dwLoc02_190 = SLICE(dwLoc02_190, word16, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001592:
	Mem20[0x00000AF0:word16] = 0xFDA3
	__syscall(0xA9F4)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000014FE:
	word32 a3_23 = Mem14[dwLoc12_184:word32]
	word32 d0_26 = Mem14[a3_23:word32]
	word32 a2_27 = a5 - d0_26
	word32 a0_28 = a2_27
	word32 d0_29 = d0_26 >>u 0x00000001
	branch d0_26 >>u 0x00000001 == 0x00000000 l00001514
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000150E:
	Mem33[a0_28:word16] = 0x0000
	dwLoc02_190 = SLICE(dwLoc02_269, word16, 0) (alias)
	a0_28 = a0_28 + 2
	d0_29 = d0_29 - 0x00000001
	dwLoc02_269 = dwLoc02_190
	branch d0_29 != 0x00000000 l0000150E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001514:
	word32 a2_45 = a2_27 - Mem41[a3_23 + 4:word32]
	__syscall(0xA02E)
	word32 d0_47 = Mem41[a3_23 + 8:word32]
	word32 a2_48 = a2_45 - d0_47
	dwLoc02_190 = SLICE(dwLoc02_190, word16, 0) (alias)
	word32 a0_49 = a2_48
	word32 d0_50 = d0_47 >>u 0x00000001
	branch d0_47 >>u 0x00000001 == 0x00000000 l00001534
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000152E:
	Mem54[a0_49:word16] = 0x0000
	dwLoc02_190 = SLICE(dwLoc02_268, word16, 0) (alias)
	a0_49 = a0_49 + 2
	d0_50 = d0_50 - 0x00000001
	dwLoc02_268 = dwLoc02_190
	branch d0_50 != 0x00000000 l0000152E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001534:
	word32 a2_130 = a2_48 - Mem62[a3_23 + 12:word32]
	word32 a3_125 = Mem62[a3_23 + 12:word32] + ((a3_23 + 16) + Mem62[a3_23 + 4:word32])
	__syscall(0xA02E)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001556:
	word32 d0_127
	byte v19_84 = Mem83[a3_125:byte]
	a3_125 = a3_125 + 1
	word32 d0_86 = (int32) v19_84
	branch v19_84 > 0x00 l00001576
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000155C:
	branch v19_84 < 0x00 l00001572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001572:
	a3_125 = a3_125 + 1
	d0_86 = (int32) Mem83[a3_125:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001576:
	d0_127 = DPB(d0_86, (word16) (d0_86 * 0x00000002), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000155E:
	branch Mem83[a3_125:byte] == 0x00 l0000159A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000159A:
	__syscall(0xA9A3)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000014E8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001562:
	a3_125 = a3_125 + 4
	d0_127 = DPB(__swap((int32) Mem83[a3_125 + 1:byte]), Mem83[a3_125 + 3:byte], 0) * 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001578:
	a2_130 = a2_130 + d0_127
	branch dwArg02 == 0x00000000 l00001582
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000157E:
	branch Mem83[a2_130:word32] >= 0x00000000 l00001586
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001586:
	Mem152[a2_130:word32] = Mem83[Mem83[a2_130:word32] + dwArg02 + 2:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001582:
	Mem161[a2_130:word32] = Mem83[a2_130:word32] + dwLoc02_190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000158E:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000015E8(word32 d0, word32 d3, word32 a0, word32 a2, word32 a5, word32 a6, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] a6:[0..31] d0:[0..31] d3:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a2 a5 a6 a7 d0 d3
// Preserved:
fn000015E8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000015E8:
	word32 v9_17 = Mem15[dwArg04 + 16:word32]
	word32 a7_23
	word32 a6_24
	word32 d0_29
	word32 a5_27
	word32 a2_26
	call a5 + 130 (retsize: 4;)
		uses: a0:a0,a2:dwArg04,a5:a5,a6:fp - 0x00000004,a7:fp - 0x00000010,d0:d0,d3:d3,Stack +0004:v9_17,Stack +0008:a2,Stack +000C:d3,Stack +0010:a6,Stack +0018:dwArg04
		defs: a2:a2_26,a5:a5_27,a6:a6_24,a7:a7_23,d0:d0_29
	branch d0_29 == 0x00000000 l0000162A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001602:
	word32 d3_46
	branch a2_26 - (a5_27 + -2656) != 0x00000000 l00001610
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001610:
	branch a2_26 - (a5_27 + -2624) != 0x00000000 l00001628
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001618:
	d3_46 = 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000160A:
	d3_46 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000161A:
	Mem53[a5_27 + -1368:word32] = Mem20[a5_27 + -1368:word32] + 0x00000001
	word32 d0_56 = Mem53[a2_26 + 12:word32]
	word16 v23_57 = (word16) d0_56 & 0x010C
	word32 d0_58 = DPB(d0_56, v23_57, 0)
	branch v23_57 == 0x0000 l00001634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001634:
	branch Mem53[a5_27 + -2696 + d3_46 * 4:word32] != 0x00000000 l00001652
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000163E:
	Mem71[a7_23:word32] = 0x00000200
	word32 d0_78
	call a5_27 + 114 (retsize: 4;)
		uses: a0:a5_27 + -2696,a2:a2_26,a5:a5_27,a6:a6_24,a7:a7_23,d0:d0_58,d3:d3_64,Stack +0000:a6,Stack +0008:dwArg04,Stack +FFFFFFF4:v9_17,Stack +FFFFFFF8:a2,Stack +FFFFFFFC:d3
		defs: a2:a2_76,a5:a5_77,d0:d0_78,d3:d3_75
	Mem84[a5_27 + -2696 + d3_46 * 4:word32] = d0_78
	branch d0_78 == 0x00000000 l0000162A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001652:
	word32 d0_91 = Mem90[a5_27 + -2696 + d3_46 * 4:word32]
	Mem94[a2_26 + 8:word32] = d0_91
	Mem96[a2_26:word32] = d0_91
	Mem98[a2_26 + 24:word32] = 0x00000200
	Mem100[a2_26 + 4:word32] = 0x00000200
	Mem102[a2_26 + 14:word16] = Mem100[a2_26 + 14:word16] | 0x1102
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001628:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000162A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000015E8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001680(word32 d3, word32 d4, word32 a5, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] d3:[0..31] d4:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZN a2 a5 a6 a7 d0 d1 d2 d3 d4
// Preserved: X
fn00001680_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001680:
	branch dwArg04 == 0x00000000 l000016B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000016B8:
	branch __btst(Mem11[dwArg08 + 14:byte], 0x0004) l000016C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000016C0:
	fn00001D80(d3, d4, dwArg08, a5, fp - 0x00000004, dwArg08, out d1_128, out d2_129, out d3_130, out d4_131, out a2_132, out a5_133, out a6_134, out a7_32)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001690:
	branch __btst(Mem11[dwArg08 + 14:byte], 0x0004) l000016C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000016C8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001698:
	word32 a2_53
	fn00001D80(d3, d4, dwArg08, a5, fp - 0x00000004, dwArg08, out d1_123, out d2_124, out d3_125, out d4_126, out a2_53, out a5_127, out a6_59, out a7_60)
	Mem69[a2_53 + 14:word16] = Mem51[a2_53 + 14:word16] & 0xEEFF
	Mem72[a2_53 + 24:word32] = 0
	Mem74[a2_53:word32] = 0
	Mem76[a2_53 + 8:word32] = 0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001680_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000016D0(word32 d3, word32 d4, word32 d5, word32 d6, word32 d7, word32 a2, word32 a3, word32 a4, word32 a5, word32 a6, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a4:[0..31] a5:[0..31] a6:[0..31] d3:[0..31] d4:[0..31] d5:[0..31] d6:[0..31] d7:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a2 a3 a4 a5 a6 a7 d0 d2 d3 d4 d5 d6 d7
// Preserved:
fn000016D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000016D0:
	byte v17_41 = Mem39[dwArg08:byte]
	word32 dwLoc0C_196 = 0
	word32 a0_106 = dwArg08
	word32 d6_110 = DPB(d6, v17_41, 0)
	word32 dwArg08_198 = dwArg08 + 0x00000001
	branch v17_41 == 0x00 l00001C34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000016FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000170E:
	branch Test(LT,false) l00001C34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001716:
	word32 d0_69
	branch (byte) d6_110 < 0x20 l00001734
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000171C:
	branch (byte) d6_110 > 0x78 l00001734
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001734:
	d0_69 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001722:
	d0_69 = (int32) (Mem57[a5 + -2072 + (int32) ((byte) d6_110):byte] & 0x0F)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001736:
	word32 d0_99 = (int32) (Mem57[a5 + -2040 + ((d0_69 << 0x00000003) + dwLoc0C_196):byte] >> 0x04)
	dwLoc0C_196 = d0_99
	branch d0_99 >u 7 l00001C24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C24:
	byte v38_107 = Mem101[dwArg08_198:byte]
	a0_106 = dwArg08_198
	d6_110 = DPB(d6_110, v38_107, 0)
	dwArg08_198 = dwArg08_198 + 0x00000001
	Mem57 = Mem112
	branch v38_107 != 0x00 l0000170E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C34:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001750:
	word16 v37_144 = Mem101[0x00001758 + (int32) ((int16) d0_99) * 2:word16]
	call 0x00001758 + (int32) v37_144 (retsize: 4;)
		uses: a0:a0_179,a2:a5 + -2072,a3:a5 + -2040,a4:dwLoc1C,a5:a5,a6:fp - 0x00000004,a7:fp - 0x00000244,d0:DPB(d0_99, v37_144, 0),d2:7,d3:dwLoc10,d4:dwLoc14,d5:dwLoc18,d6:d6_62,d7:dwLoc20,Stack +0004:d3,Stack +0008:d4,Stack +000C:d5,Stack +0010:d6,Stack +0014:d7,Stack +0018:a2,Stack +001C:a3,Stack +0020:a4,Stack +0024:0,Stack +0228:dwLoc20,Stack +022C:dwLoc1C,Stack +0230:dwLoc18,Stack +0234:dwLoc14,Stack +0238:dwLoc10,Stack +023C:d0_99,Stack +0244:a6,Stack +0250:dwArg08_210
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000016D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00001C40(word32 d2, word32 d3, word32 d4, word32 d5, word32 a0, word32 a2, word32 a3, word32 a5, byte bArg04, word32 dwArg08, ptr32 & d3Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] d2:[0..31] d3:[0..31] d4:[0..31] d5:[0..31] Stack +0004:[0..7] Stack +0008:[0..31]
// LiveOut: a0 a2 a3 a5 a6 a7 d2 d3 d4 d5
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved:
fn00001C40_entry:
	byte bArg07_84 = SLICE(dwArg04, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C40:
	word32 d0_29
	word32 v5_9 = Mem5[dwArg08 + 4:word32] - 0x00000001
	Mem10[dwArg08 + 4:word32] = v5_9
	word32 a6_35 = fp - 0x00000004
	branch v5_9 < 0x00000000 l00001C60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C60:
	d0_29 = fn00001E94(d2, d3, d4, d5, a0, a2, a3, a5, fp - 0x00000004, dwArg08, out d3_38, out d4_39, out d5_40, out a2_32, out a3_33, out a5_34, out a6_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C4E:
	Mem49[Mem10[dwArg08:word32]:byte] = bArg07_84
	word32 a0_50 = Mem49[dwArg08:word32]
	d0_29 = (int32) (int16) (int32) Mem49[a0_50:byte]
	Mem57[dwArg08:word32] = a0_50 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C6C:
	word32 a0_65 = Mem64[a6_35 + 16:word32]
	branch d0_29 != -1 l00001C7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C7C:
	Mem68[a0_65:word32] = Mem64[a0_65:word32] + 0x00000001
	word32 a6_71 = Mem68[a6_35:word32]
	d3Out = <invalid>
	d4Out = <invalid>
	d5Out = <invalid>
	a0Out = <invalid>
	a2Out = <invalid>
	a3Out = <invalid>
	a5Out = <invalid>
	a6Out = a6_71
	a7Out = a6_35 + 0x00000004
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C76:
	Mem74[a0_65:word32] = d0_29
	word32 a6_77 = Mem74[a6_35:word32]
	d3Out = <invalid>
	d4Out = <invalid>
	d5Out = <invalid>
	a0Out = <invalid>
	a2Out = <invalid>
	a3Out = <invalid>
	a5Out = <invalid>
	a6Out = a6_77
	a7Out = a6_35 + 0x00000004
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001C40_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001C84(word32 d2, word32 a0, word32 a2, word32 a3, word32 a5, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6
// Preserved:
fn00001C84_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C84:
	word32 a7_17 = fp - 0x00000014
	word32 d5_22 = dwArg08 - 0x00000001
	branch dwArg08 <= 0x00000000 l00001CBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001C98:
	word32 d3_29 = dwArg04
	word32 d4_30 = dwArg0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001CA4:
	word32 a7_34 = a7_17 - 4
	Mem37[a7_34:word32] = dwArg10
	Mem41[a7_34 - 4:word32] = d4_30
	Mem45[a7_34 - 8:word32] = d3_29
	word32 a7_59
	word32 d5_65
	d2 = fn00001C40(d2, d3_29, d4_30, d5_22, a0, a2, a3, a5, Mem45[a7_34 - 8:word32], Mem45[a7_34 - 4:word32], out d3_29, out d4_30, out d5_65, out a0, out a2, out a3, out a5, out a6_128, out a7_59)
	a7_17 = a7_59 + 12
	d5_22 = d5_65 - 0x00000001
	branch d5_65 > 0x00000000 l00001CA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001CBA:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001C84_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001CC4(word32 d2, word32 a2, word32 a3, word32 a5, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a5:[0..31] d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6
// Preserved:
fn00001CC4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001CC4:
	word32 a7_17 = fp - 0x00000014
	word32 d5_22 = dwArg08 - 0x00000001
	branch dwArg08 <= 0x00000000 l00001D02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001CD8:
	word32 d3_29 = dwArg04
	word32 d4_30 = dwArg0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001CE4:
	word32 a7_38 = a7_17 - 4
	Mem41[a7_38:word32] = dwArg10
	Mem45[a7_38 - 4:word32] = d4_30
	Mem52[a7_38 - 8:word32] = (int32) Mem45[d3_29:byte]
	word32 a7_65
	word32 d5_71
	d2 = fn00001C40(d2, d3_29 + 0x00000001, d4_30, d5_22, d3_29, a2, a3, a5, Mem52[a7_38 - 8:word32], Mem52[a7_38 - 4:word32], out d3_29, out d4_30, out d5_71, out a0_134, out a2, out a3, out a5, out a6_135, out a7_65)
	a7_17 = a7_65 + 12
	d5_22 = d5_71 - 0x00000001
	branch d5_71 > 0x00000000 l00001CE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D02:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001CC4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001D0C(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0
// Preserved: a6 a7
fn00001D0C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D0C:
	Mem11[dwArg04:word32] = Mem5[dwArg04:word32] + 4
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001D0C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00001D24(word32 d3, word32 d4, word32 a2, word32 a5, word32 a6, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & d6Out, ptr32 & d7Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] a6:[0..31] d3:[0..31] d4:[0..31] Stack +0004:[0..31]
// LiveOut: a2 a5 a6 a7 d0 d3 d4 d5 d6 d7
// Trashed: CVZNX a2 a5 a6 a7 d0 d1 d2 d3 d4
// Preserved:
fn00001D24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D24:
	branch dwArg04 != 0x00000000 l00001D44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D44:
	word32 a2_23
	word32 d1_25
	word32 d2_26
	word32 d4_27
	word32 a5_28
	word32 a6_29
	word32 a7_30
	word32 d3_31
	word32 d0_24 = fn00001D80(d3, d4, dwArg04, a5, fp - 0x00000004, dwArg04, out d1_25, out d2_26, out d3_31, out d4_27, out a2_23, out a5_28, out a6_29, out a7_30)
	branch d0_24 == 0x00000000 l00001D58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D58:
	branch __btst(Mem18[a2_23 + 14:byte], 0x0006) l00001D78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D78:
	word32 a2_46 = Mem18[a7_30 + 4:word32]
	word32 a6_48 = Mem18[a6_29:word32]
	d3Out = d3_31
	d4Out = d4_27
	d5Out = <invalid>
	d6Out = <invalid>
	d7Out = <invalid>
	a2Out = a2_46
	a5Out = a5_28
	a6Out = a6_48
	a7Out = a6_29 + 0x00000004
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D60:
	Mem53[a7_30:word32] = Mem18[a2_23 + 16:word32]
	word32 a7_55
	word32 a6_56
	word32 d0_58
	word32 a5_60
	word32 d4_61
	word32 d3_62
	call a5_28 + 138 (retsize: 4;)
		uses: a2:a2_23,a5:a5_28,a6:a6_29,a7:a7_30,d0:d0_24,d1:d1_25,d2:d2_26,d3:d3_31,d4:d4_27,Stack +0000:a6,Stack +0008:dwArg04,Stack +FFFFFFF8:dwArg04,Stack +FFFFFFFC:a2
		defs: a5:a5_60,a6:a6_56,a7:a7_55,d0:d0_58,d3:d3_62,d4:d4_61
	word32 a2_74 = Mem53[a7_55 + 4:word32]
	word32 a6_76 = Mem53[a6_56:word32]
	d3Out = d3_62
	d4Out = d4_61
	d5Out = <invalid>
	d6Out = <invalid>
	d7Out = <invalid>
	a2Out = a2_74
	a5Out = a5_60
	a6Out = a6_76
	a7Out = a6_56 + 0x00000004
	return (int32) SLICE(cond(d0_58), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D50:
	word32 a2_81 = Mem18[a7_30 + 4:word32]
	word32 a6_83 = Mem18[a6_29:word32]
	d3Out = d3_31
	d4Out = d4_27
	d5Out = <invalid>
	d6Out = <invalid>
	d7Out = <invalid>
	a2Out = a2_81
	a5Out = a5_28
	a6Out = a6_83
	a7Out = a6_29 + 0x00000004
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D32:
	word32 a6_91
	word32 a5_95
	word32 d4_96
	word32 d3_97
	word32 d0_93 = fn00001E04(a5, 0, out d3_97, out d4_96, out a5_95, out a6_91)
	word32 a6_105 = Mem88[a6_91:word32]
	d3Out = d3_97
	d4Out = d4_96
	d5Out = <invalid>
	d6Out = <invalid>
	d7Out = <invalid>
	a2Out = a2
	a5Out = a5_95
	a6Out = a6_105
	a7Out = a6_91 + 0x00000004
	return d0_93
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001D24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00001D80(word32 d3, word32 d4, word32 a2, word32 a5, word32 a6, word32 dwArg04, ptr32 & d1Out, ptr32 & d2Out, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] a6:[0..31] d3:[0..31] d4:[0..31] Stack +0004:[0..31]
// LiveOut: a2 a5 a6 a7 d0 d1 d2 d3 d4
// Trashed: CVZNX a2 a5 a6 a7 d0 d1 d2 d3 d4
// Preserved:
fn00001D80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D80:
	word32 d1_105 = Mem16[dwArg04 + 12:word32]
	word32 a6_51 = fp - 0x00000004
	word32 a7_14 = fp - 0x00000010
	word32 d3_17 = 0
	word32 a2_18 = dwArg04
	word32 d2_106 = 2
	branch (d1_105 & 3) != 2 l00001DE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001D9E:
	word16 v16_27 = (word16) d1_105 & 0x0108
	d1_105 = DPB(d1_105, v16_27, 0)
	branch v16_27 == 0x0000 l00001DE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001DA4:
	word32 d0_33 = Mem16[dwArg04 + 8:word32]
	word32 d4_35 = Mem16[dwArg04:word32] - d0_33
	branch d4_35 <= 0x00000000 l00001DE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001DAE:
	word32 a7_50
	word32 d4_53
	word32 d0_56
	call a5 + 146 (retsize: 4;)
		uses: a2:dwArg04,a5:a5,a6:fp - 0x00000004,a7:fp - 0x0000001C,d0:d0_33,d1:d1_28,d2:2,d3:0,d4:d4_35,Stack +0004:Mem43[dwArg04 + 16:word32],Stack +0008:d0_33,Stack +000C:d4_35,Stack +0010:d3,Stack +0014:d4,Stack +0018:a2,Stack +001C:a6,Stack +0024:dwArg04
		defs: a2:a2_52,a5:a5_58,a6:a6_51,a7:a7_50,d0:d0_56,d1:d1_55,d2:d2_57,d3:d3_54,d4:d4_53
	a7_14 = a7_50 + 12
	branch d0_56 - d4_53 != 0x00000000 l00001DD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001DD8:
	__bset(Mem47[a2_18 + 15:byte], 0x0005, out Mem47[a2_18 + 15:byte])
	d3_17 = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001DC2:
	word32 d0_67 = Mem47[a2_18 + 12:word32]
	branch __btst((byte) d0_67, 0x0007) l00001DE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001DCC:
	word32 d0_70
	__bclr(d0_67, 0x00000001, out d0_70)
	Mem73[a2_18 + 12:word32] = d0_70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001DE0:
	Mem78[a2_18:word32] = Mem76[a2_18 + 8:word32]
	Mem81[a2_18 + 4:word32] = 0
	word32 a7_87 = a7_14 + 4
	word32 d3_86 = Mem81[a7_14:word32]
	word32 d4_88 = Mem81[a7_87:word32]
	word32 a2_90 = Mem81[a7_87 + 4:word32]
	word32 a6_93 = Mem81[a6_51:word32]
	d1Out = d1_105
	d2Out = d2_106
	d3Out = d3_86
	d4Out = d4_88
	a2Out = a2_90
	a5Out = a5
	a6Out = a6_93
	a7Out = a6_51 + 0x00000004
	return d3_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001D80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001DF4(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: CVZNX a2 a5 a6 a7 d0 d2 d3 d4 d5 d6 d7
// Preserved:
fn00001DF4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001DF4:
	fn00001E04(a5, 1, out d3_34, out d4_35, out a5_36, out a6_16)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001DF4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00001E04(word32 a5, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a5 a6 d0 d3 d4
// Trashed: CVZNX a2 a5 a6 a7 d0 d3 d4 d5 d6 d7
// Preserved:
fn00001E04_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E04:
	word32 d3_108
	word32 a6_102 = fp - 0x00000004
	word32 a7_112 = fp - 0x0000001C
	word32 d6_105 = 1
	word32 a2_103 = a5 + -2688
	word32 d4_107 = 0
	word32 d5_106 = 0
	branch a5 + -2688 - Mem25[a5 + -2048:word32] >u 0x00000000 l00001E64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E64:
	d3_108 = dwArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E1E:
	d3_108 = dwArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E22:
	branch d3_108 - d6_105 != 0x00000000 l00001E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E26:
	branch ((word16) Mem45[a2_103 + 12:word32] & 0x0083) == 0x0000 l00001E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E40:
	branch d3_108 != 0x00000000 l00001E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E44:
	branch __btst(Mem45[a2_103 + 15:word32], d6_105) l00001E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E4A:
	Mem66[a7_112 - 4:word32] = a2_103
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 a7_68
	word32 d7_75
	word32 d0_89 = fn00001D24(d3_108, d4_107, a2_103, a5, a6_102, stackArg4, out d3_108, out d4_107, out d5_106, out d6_105, out d7_75, out a2_103, out a5, out a6_102, out a7_68)
	a7_112 = a7_68 + 4
	branch d0_89 - d7_75 != 0x00000000 l00001E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E56:
	d5_106 = d0_89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E30:
	Mem99[a7_112 - 4:word32] = a2_103
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	a7_112 = a7_101 + 4
	word32 a7_101
	word32 d7_104
	branch fn00001D24(d3_108, d4_107, a2_103, a5, a6_102, stackArg4, out d3_108, out d4_107, out d5_106, out d6_105, out d7_104, out a2_103, out a5, out a6_102, out a7_101) - d7_104 == 0x00000000 l00001E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E3C:
	d4_107 = d4_107 + d6_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E58:
	a2_103 = a2_103 + 32
	branch a2_103 - Mem121[a5 + -2048:word32] <=u 0x00000000 l00001E22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E62:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E68:
	branch d3_108 == 1 l00001E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E6E:
	d4_107 = d5_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E70:
	word32 d4_147 = Mem144[a7_112 + 4:word32]
	word32 a6_160 = Mem144[a6_102:word32]
	d3Out = Mem144[a7_112:word32]
	d4Out = d4_147
	a5Out = a5
	a6Out = a6_160
	return d4_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001E04_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00001E94(word32 d2, word32 d3, word32 d4, word32 d5, word32 a0, word32 a2, word32 a3, word32 a5, word32 a6, word32 dwArg08, ptr32 & d3Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a3:[0..31] a5:[0..31] a6:[0..31] d2:[0..31] d3:[0..31] d4:[0..31] d5:[0..31] Stack +0008:[0..31]
// LiveOut: a2 a3 a5 a6 d0 d3 d4 d5
// Trashed: CVZNX a0 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved:
fn00001E94_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001E94:
	word32 d0_26 = Mem22[dwArg08 + 12:word32]
	word16 v12_28 = (word16) d0_26 & 0x0082
	word32 a6_113 = fp - 0x00000004
	word32 a7_136 = fp - 0x0000001C
	word32 a3_115 = dwArg08
	word32 d3_122 = Mem22[dwArg08 + 16:word32]
	word32 a2_117 = dwArg08 + 12
	word32 d1_127 = DPB(d0_26, v12_28, 0)
	branch v12_28 == 0x0000 l00001F5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001EB4:
	branch __btst((byte) d0_26, 0x0006) l00001F5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001EBC:
	branch __btst((byte) d0_26, 0x0000) l00001EDA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001EC2:
	Mem38[dwArg08 + 4:word32] = 0
	d0_26 = Mem38[dwArg08 + 12:word32]
	branch __btst((byte) d0_26, 0x0004) l00001F5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F5C:
	word32 d0_43
	__bset(d0_26, 0x0005, out d0_43)
	Mem47[dwArg08 + 12:word32] = d0_43
	d3Out = d3
	d4Out = d4
	d5Out = d5
	a2Out = a2
	a3Out = a3
	a5Out = a5
	a6Out = a6
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001ED2:
	Mem65[dwArg08:word32] = Mem38[dwArg08 + 8:word32]
	__bclr(Mem65[dwArg08 + 15:byte], 0x00, out Mem65[dwArg08 + 15:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001EDA:
	word32 d0_71
	__bset(Mem69[dwArg08 + 12:word32], 0x0001, out d0_71)
	Mem74[dwArg08 + 12:word32] = d0_71
	word32 d0_75
	__bclr(d0_71, 0x00000004, out d0_75)
	Mem78[dwArg08 + 12:word32] = d0_75
	Mem82[dwArg08 + 4:word32] = 0
	word32 d0_84 = Mem82[dwArg08 + 12:word32]
	word16 v23_85 = (word16) d0_84 & 0x010C
	word32 d4_121 = 0
	word32 d0_124 = DPB(d0_84, v23_85, 0)
	branch v23_85 != 0x0000 l00001F1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001EF8:
	a0 = a5 + -2656
	branch dwArg08 - (a5 + -2656) == 0x00000000 l00001F08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F00:
	a0 = a5 + -2624
	branch dwArg08 - (a5 + -2624) != 0x00000000 l00001F14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F08:
	word32 a7_110
	call a5 + 130 (retsize: 4;)
		uses: a0:a0_128,a2:dwArg08 + 12,a3:dwArg08,a5:a5,a6:fp - 0x00000004,a7:fp - 0x00000020,d0:d0_86,d1:d1_29,d2:d2,d3:d3_24,d4:0,d5:0,Stack +0004:d3_24,Stack +0008:d3,Stack +000C:d4,Stack +0010:d5,Stack +0014:a2,Stack +0018:a3,Stack +0020:a6,Stack +002C:dwArg08
		defs: a0:a0_129,a2:a2_117,a3:a3_115,a5:a5_130,a6:a6_113,a7:a7_110,d0:d0_124,d1:d1_127,d2:d2_134,d3:d3_122,d4:d4_121
	dwLoc20 = d3_122
	a7_136 = a7_110 + 4
	branch d0_124 != 0x00000000 l00001F1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F14:
	word32 a7_142 = a7_136 - 4
	Mem145[a7_142:word32] = a3_115
	word32 a7_157
	d2 = fn00002014(d0_124, d2, a0, a2_117, a5, a6_113, Mem145[a7_142:word32], out a0, out a2_117, out a5, out a6_113, out a7_157)
	a7_136 = a7_157 + 4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F1C:
	word32 d5_197
	word32 d0_168 = Mem167[a2_117:word32]
	word16 v30_169 = (word16) d0_168 & 0x0108
	word32 d0_170 = DPB(d0_168, v30_169, 0)
	branch v30_169 == 0x0000 l00001F94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F94:
	Mem178[a6_113 + -1:byte] = Mem167[a6_113 + 11:byte]
	word32 a7_180 = a7_136 - 4
	Mem182[a7_180:word32] = 1
	Mem184[a7_180 - 0x00000004:word32] = a6_113 + -1
	Mem189[a7_180 - 0x00000008:word32] = d3_122
	word32 a7_192
	word32 d0_202
	call a5 + 146 (retsize: 4;)
		uses: a0:a0_206,a2:a2_166,a3:a3_194,a5:a5_191,a6:a6_176,a7:a7_180 - 0x00000008,d0:d0_170,d1:d1_203,d2:d2_211,d3:d3_186,d4:d4_198,d5:1,Stack +0000:a6,Stack +000C:dwArg08,Stack +FFFFFFE4:dwLoc20_386,Stack +FFFFFFE8:d3,Stack +FFFFFFEC:d4,Stack +FFFFFFF0:d5,Stack +FFFFFFF4:a2,Stack +FFFFFFF8:a3
		defs: a2:a2_196,a5:a5_210,a6:a6_193,a7:a7_192,d0:d0_202,d5:d5_197
	a7_136 = a7_192 + 12
	d4_121 = d0_202
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F24:
	word32 d0_217 = Mem167[a3_115 + 8:word32]
	d5_197 = Mem167[a3_115:word32] - d0_217
	Mem223[a3_115:word32] = d0_217 + 1
	word32 d0_224 = Mem223[a3_115 + 24:word32]
	Mem228[a3_115 + 4:word32] = d0_224 - 0x00000001
	branch d5_197 <= 0x00000000 l00001F6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F6C:
	word32 a0_234 = a5 + -1704
	branch __btst(Mem228[a0_234 + d3_122:byte], 0x0005) l00001F8A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F78:
	word32 a7_237 = a7_136 - 4
	Mem239[a7_237:word32] = 2
	Mem243[a7_237 - 4:word32] = 0
	Mem246[a7_237 - 8:word32] = d3_122
	word32 a7_248
	call a5 + 154 (retsize: 4;)
		uses: a0:a0_234,a2:a2_166,a3:a3_194,a5:a5_191,a6:a6_176,a7:a7_237 - 8,d0:d0_224 - 0x00000001,d1:0,d2:2,d3:d3_186,d4:d4_198,d5:d5_219,Stack +0000:a6,Stack +000C:dwArg08,Stack +FFFFFFE4:dwLoc20_386,Stack +FFFFFFE8:d3,Stack +FFFFFFEC:d4,Stack +FFFFFFF0:d5,Stack +FFFFFFF4:a2,Stack +FFFFFFF8:a3
		defs: a2:a2_251,a3:a3_250,a5:a5_258,a6:a6_249,a7:a7_248,d4:d4_253,d5:d5_252
	a7_136 = a7_248 + 12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F8A:
	Mem267[Mem263[a3_115 + 8:word32]:byte] = Mem263[a6_113 + 11:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001F40:
	word32 a7_269 = a7_136 - 4
	Mem271[a7_269:word32] = d5_197
	Mem275[a7_269 - 4:word32] = Mem271[a3_115 + 8:word32]
	Mem278[a7_269 - 8:word32] = d3_122
	word32 a7_280
	word32 a3_282
	word32 d0_287
	call a5 + 146 (retsize: 4;)
		uses: a0:d0_217 + 1,a2:a2_166,a3:a3_194,a5:a5_191,a6:a6_176,a7:a7_269 - 8,d0:d0_224 - 0x00000001,d1:d1_203,d2:d2_211,d3:d3_186,d4:d4_198,d5:d5_219,Stack +0000:a6,Stack +000C:dwArg08,Stack +FFFFFFE4:dwLoc20_386,Stack +FFFFFFE8:d3,Stack +FFFFFFEC:d4,Stack +FFFFFFF0:d5,Stack +FFFFFFF4:a2,Stack +FFFFFFF8:a3
		defs: a2:a2_283,a3:a3_282,a5:a5_290,a6:a6_281,a7:a7_280,d0:d0_287,d5:d5_284
	Mem297[Mem278[a3_282 + 8:word32]:byte] = Mem278[a6_113 + 11:byte]
	a7_136 = a7_280 + 12
	d4_121 = d0_287
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001FAE:
	branch d4_121 - d5_197 == 0x00000000 l00001FC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001FC4:
	word32 a7_316 = a7_136 + 4
	word32 d0_309 = Mem307[a6_113 + 8:word32] & 0x000000FF
	word32 d4_317 = Mem307[a7_316:word32]
	word32 d5_319 = Mem307[a7_316 + 4:word32]
	word32 a2_321 = Mem307[a7_316 + 8:word32]
	word32 a3_323 = Mem307[a7_316 + 12:word32]
	word32 a6_325 = Mem307[a6_113:word32]
	d3Out = Mem307[a7_136:word32]
	d4Out = d4_317
	d5Out = d5_319
	a2Out = a2_321
	a3Out = a3_323
	a5Out = a5
	a6Out = a6_325
	return d0_309
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001FB2:
	__bset(Mem307[a2_117 + 3:byte], 0x0005, out Mem307[a2_117 + 3:byte])
	word32 a7_333 = a7_136 + 4
	word32 d4_334 = Mem307[a7_333:word32]
	word32 d5_336 = Mem307[a7_333 + 4:word32]
	word32 a2_338 = Mem307[a7_333 + 8:word32]
	word32 a3_340 = Mem307[a7_333 + 12:word32]
	word32 a6_342 = Mem307[a6_113:word32]
	d3Out = Mem307[a7_136:word32]
	d4Out = d4_334
	d5Out = d5_336
	a2Out = a2_338
	a3Out = a3_340
	a5Out = a5
	a6Out = a6_342
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001E94_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00001FD8(word32 a2, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a2 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6
// Preserved:
fn00001FD8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001FD8:
	word32 a6_35 = fp - 0x00000004
	word32 a7_17 = fp - 0x00000014
	word32 d3_22 = 0
	word32 d4_25 = a5 + -2592
	branch a5 + -2592 - Mem19[a5 + -2048:word32] >u 0x00000000 l00002008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001FF2:
	word32 a7_30 = a7_17 - 4
	Mem33[a7_30:word32] = d4_25
	a7_17 = a7_45 + 4
	word32 a7_45
	word32 d4_47
	branch fn00002068(d3_22, d4_25, a2, a5, a6_35, Mem33[a7_30:word32], out d3_22, out d4_47, out a2, out a5, out a6_35, out a7_45) == -1 l00002000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00001FFE:
	d3_22 = d3_22 + 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002000:
	d4_25 = d4_47 + 32
	branch d4_47 + 32 - Mem33[a5 + -2048:word32] <=u 0x00000000 l00001FF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002008:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00001FD8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002014(word32 d0, word32 d2, word32 a0, word32 a2, word32 a5, word32 a6, word32 dwArg04, ptr32 & a0Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[0..31] a5:[0..31] a6:[0..31] d0:[0..31] d2:[0..31] Stack +0004:[0..31]
// LiveOut: a0 a2 a5 a6 a7 d2
// Trashed: CVZNX a0 a2 a5 a6 a7 d0 d2
// Preserved:
fn00002014_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002014:
	Mem14[a5 + -1368:word32] = Mem11[a5 + -1368:word32] + 0x00000001
	word32 a7_19
	word32 a6_20
	word32 a2_21
	word32 a5_22
	word32 d0_24
	word32 a0_26
	call a5 + 114 (retsize: 4;)
		uses: a0:a0,a2:dwArg04,a5:a5,a6:fp - 0x00000004,a7:fp - 0x0000000C,d0:d0,d2:d2,Stack +0004:0x00000200,Stack +0008:a2,Stack +000C:a6,Stack +0014:dwArg04
		defs: a0:a0_26,a2:a2_21,a5:a5_22,a6:a6_20,a7:a7_19,d0:d0_24
	Mem32[a2_21 + 8:word32] = d0_24
	branch d0_24 == 0x00000000 l00002044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002044:
	__bset(Mem32[a2_21 + 15:byte], 0x0002, out Mem32[a2_21 + 15:byte])
	Mem38[a2_21 + 8:word32] = a2_21 + 20
	Mem41[a2_21 + 24:word32] = 1
	a0_26 = a2_21 + 20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002032:
	__bset(Mem32[a2_21 + 15:byte], 0x0003, out Mem32[a2_21 + 15:byte])
	Mem45[a2_21 + 24:word32] = 0x00000200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002058:
	Mem50[a2_21:word32] = Mem48[a2_21 + 8:word32]
	Mem53[a2_21 + 4:word32] = 0
	word32 a2_57 = Mem53[a7_19 + 4:word32]
	word32 a6_60 = Mem53[a6_20:word32]
	a0Out = a0_26
	a2Out = a2_57
	a5Out = a5_22
	a6Out = a6_60
	a7Out = a6_20 + 0x00000004
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002014_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002068(word32 d3, word32 d4, word32 a2, word32 a5, word32 a6, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] a6:[0..31] d3:[0..31] d4:[0..31] Stack +0004:[0..31]
// LiveOut: a2 a5 a6 a7 d0 d3 d4
// Trashed: CVZNX a2 a5 a6 a7 d0 d1 d2 d3 d4
// Preserved:
fn00002068_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002068:
	word32 d0_18 = Mem15[dwArg04 + 12:word32]
	word32 a6_122 = fp - 0x00000004
	word32 a7_12 = fp - 0x0000000C
	word32 d3_124 = -1
	word32 a2_125 = dwArg04
	branch __btst((byte) d0_18, 0x0006) l00002090
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002090:
	branch ((word16) d0_18 & 0x0083) == 0x0000 l000020E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002096:
	word32 a2_33
	word32 d2_36
	word32 d4_37
	word32 a5_38
	word32 a6_39
	word32 a7_40
	word32 d0_34 = fn00001D80(-1, d4, dwArg04, a5, fp - 0x00000004, dwArg04, out d1_220, out d2_36, out d3_221, out d4_37, out a2_33, out a5_38, out a6_39, out a7_40)
	Mem51[a7_40:word32] = a2_33
	word32 d1_54
	word32 a2_55
	word32 a5_56
	word32 a6_57
	word32 a7_58
	word32 d2_59
	word32 d0_53 = fn000020F0(d2_36, a2_33, a5_38, a6_39, Mem51[a7_40:word32], out d1_54, out d2_59, out a2_55, out a5_56, out a6_57, out a7_58)
	Mem68[a7_58:word32] = Mem51[a2_55 + 16:word32]
	word32 a7_70
	word32 d0_74
	word32 d2_76
	word32 d1_78
	call a5_56 + 162 (retsize: 4;)
		uses: a2:a2_55,a5:a5_56,a6:a6_57,a7:a7_58,d0:d0_53,d1:d1_54,d2:d2_59,d3:d0_34,d4:d4_37,Stack +0000:a6,Stack +0008:dwArg04,Stack +FFFFFFF4:dwArg04,Stack +FFFFFFF8:a2,Stack +FFFFFFFC:d3
		defs: a2:a2_73,a5:a5_75,a6:a6_71,a7:a7_70,d0:d0_74,d1:d1_78,d2:d2_76,d3:d3_72,d4:d4_77
	a7_12 = a7_70 + 4
	branch d0_74 >= 0x00000000 l000020BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000020BC:
	word32 d0_87 = Mem68[a2_125 + 28:word32]
	branch d0_87 == 0x00000000 l000020E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000020C2:
	Mem92[a7_70:word32] = d0_87
	word32 a7_94
	word32 a6_95
	word32 a2_97
	word32 d0_98
	word32 a5_99
	word32 d2_100
	word32 d4_101
	word32 d1_102
	word32 d3_109
	call a5 + 178 (retsize: 4;)
		uses: a2:a2_73,a5:a5_75,a6:a6_71,a7:a7_70,d0:d0_87,d1:d1_78,d2:d2_76,d3:d3_72,d4:d4_77,Stack +0000:a6,Stack +0008:dwArg04,Stack +FFFFFFF4:dwArg04,Stack +FFFFFFF8:a2,Stack +FFFFFFFC:d3
		defs: a2:a2_97,a5:a5_99,a6:a6_95,a7:a7_94,d0:d0_98,d1:d1_102,d2:d2_100,d3:d3_96,d4:d4_101
	branch d0_98 == 0x00000000 l000020D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000020CE:
	d3_109 = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000020D0:
	Mem117[a7_94:word32] = Mem92[a2_97 + 28:word32]
	word32 a7_120
	call a5_99 + 122 (retsize: 4;)
		uses: a2:a2_97,a5:a5_99,a6:a6_95,a7:a7_94,d0:d0_98,d1:d1_102,d2:d2_100,d3:d3_123,d4:d4_101,Stack +0000:a6,Stack +0008:dwArg04,Stack +FFFFFFF4:dwArg04,Stack +FFFFFFF8:a2,Stack +FFFFFFFC:d3
		defs: a2:a2_125,a5:a5_128,a6:a6_122,a7:a7_120,d3:d3_124,d4:d4_132
	Mem139[a2_125 + 28:word32] = 0
	a7_12 = a7_120 + 4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000020B6:
	d3_124 = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000020E0:
	Mem146[a2_125 + 12:word32] = 0
	word32 a2_152 = Mem146[a7_12:word32]
	word32 a6_158 = Mem146[a6_122:word32]
	d3Out = Mem146[a7_12 + 4:word32]
	d4Out = d4
	a2Out = a2_152
	a5Out = a5
	a6Out = a6_158
	a7Out = a6_122 + 0x00000004
	return d3_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002080:
	Mem162[dwArg04 + 12:word32] = 0
	d3Out = d3
	d4Out = d4
	a2Out = a2
	a5Out = a5
	a6Out = a6
	a7Out = fp
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002068_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000020F0(word32 d2, word32 a2, word32 a5, word32 a6, word32 dwArg04, ptr32 & d1Out, ptr32 & d2Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] a6:[0..31] d2:[0..31] Stack +0004:[0..31]
// LiveOut: a2 a5 a6 a7 d0 d1 d2
// Trashed: CVZN a2 a5 a6 a7 d0 d1 d2
// Preserved:
fn000020F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000020F0:
	word32 d0_13 = Mem11[dwArg04 + 12:word32]
	word16 v9_15 = (word16) d0_13 & 0x0083
	word32 a6_29 = fp - 0x00000004
	word32 a7_37 = fp - 0x00000008
	word32 d1_16 = DPB(d0_13, v9_15, 0)
	branch v9_15 == 0x0000 l00002128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002106:
	branch __btst((byte) d0_13, 0x0003) l00002128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000210C:
	word32 a7_28
	word32 a2_30
	call a5 + 122 (retsize: 4;)
		uses: a2:dwArg04,a5:a5,a6:fp - 0x00000004,a7:fp - 0x0000000C,d0:d0_13,d1:d1_16,d2:d2,Stack +0004:Mem11[dwArg04 + 8:word32],Stack +0008:a2,Stack +000C:a6,Stack +0014:dwArg04
		defs: a2:a2_30,a5:a5_33,a6:a6_29,a7:a7_28,d0:d0_31,d1:d1_32
	__bclr(Mem25[a2_30 + 15:byte], 0x03, out Mem25[a2_30 + 15:byte])
	Mem41[a2_30:word32] = 0
	Mem43[a2_30 + 8:word32] = 0
	Mem45[a2_30 + 4:word32] = 0
	a7_37 = a7_28 + 4
	d2 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002128:
	word32 a2_50 = Mem48[a7_37:word32]
	word32 a6_53 = Mem48[a6_29:word32]
	d1Out = d1_16
	d2Out = d2
	a2Out = a2_50
	a5Out = a5
	a6Out = a6_53
	a7Out = a6_29 + 0x00000004
	return d0_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000020F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000021F0(word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a6 a7 d3 d4
fn000021F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000021F0:
	word32 d0_19 = Mem16[Mem16[a5 + -1376:word32] + 28:word32]
	word32 a1_21 = d0_19
	branch d0_19 == 0x00000000 l0000225A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002204:
	word32 d1_27 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002218:
	word32 d0_32 = Mem30[Mem30[a1_21 + 4:word32]:word32]
	branch d0_32 == 0x45434F4E l00002228
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002228:
	Mem41[a5 + -1704 + d1_27:byte] = Mem30[a5 + -1704 + d1_27:byte] | 0x41
	Mem43[a1_21 + d1_27 * 4:word32] = a1_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002222:
	branch d0_32 == 0x46535953 l00002238
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002238:
	Mem51[a5 + -1704 + d1_27:byte] = Mem30[a5 + -1704 + d1_27:byte] | 0x01
	word32 a0_53 = Mem51[Mem51[a1_21 + 8:word32]:word32]
	word32 a0_55 = DPB(a0_53, Mem51[a0_53 + 2:word16], 0)
	Mem57[a0_55 + d1_27 * 4:word32] = a0_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002226:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002250:
	a1_21 = a1_21 + 20
	d1_27 = d1_27 + 0x00000001
	branch d1_27 < 3 l00002218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000225A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000021F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00002264(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7
fn00002264_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002264:
	branch dwArg04 == 0x00000000 l0000228C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002272:
	byte v11_16 = Mem11[dwArg04:byte]
	branch v11_16 == 0x00 l0000228C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002276:
	word32 a2_21 = dwArg04
	word32 d0_24 = (int32) v11_16
	word32 a1_28 = dwArg04 + 1
	branch d0_24 == 0x00000000 l0000228A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002284:
	Mem36[a2_21:byte] = Mem31[a1_28:byte]
	a1_28 = a1_28 + 1
	a2_21 = a2_21 + 1
	d0_24 = d0_24 - 0x00000001
	branch d0_24 != 0x00000000 l00002284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000228A:
	Mem43[a2_21:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000228C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002264_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00002294(word32 d3, word32 d4, word32 d5, word32 a5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] d3:[0..31] d4:[0..31] d5:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a5 a6 a7 d0 d2 d3 d4 d5
// Preserved:
fn00002294_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002294:
	fn00002354(d3, d4, d5, a5, fp - 0x00000004, 0, 0x00)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002294_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000022C4(word32 d3, word32 d4, word32 d5, word32 a1, word32 a2, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..31] a2:[0..31] a5:[0..31] a6:[0..31] d3:[0..31] d4:[0..31] d5:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a5 a6 a7 d0 d3 d4 d5
// Preserved:
fn000022C4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000022C4:
	word32 d4_21
	word32 d5_22
	word32 a6_25
	word32 a7_26
	word32 d3_27
	fn000023B4(d3, d4, d5, fp - 0x00000004, a5 + -744, a5 + -740, out d3_27, out d4_21, out d5_22, out a0_136, out a6_25, out a7_26)
	Mem35[a7_26 + 0x00000004:word32] = a5 + -748
	Mem37[a7_26:word32] = a5 + -752
	word32 d4_38
	word32 d5_39
	word32 a0_40
	word32 a6_42
	word32 a7_43
	word32 d3_44
	word32 d0_41 = fn000023B4(d3_27, d4_21, d5_22, a6_25, Mem37[a7_26:word32], Mem37[a7_26 + 4:word32], out d3_44, out d4_38, out d5_39, out a0_40, out a6_42, out a7_43)
	Mem53[a7_43 + 2:word16] = 0xA89F
	Mem56[a7_43 + 1:byte] = 0x01
	word32 a7_58
	word32 a6_59
	word32 a5_61
	word32 a1_63
	word32 d0_64
	word32 a0_65
	word32 d5_66
	word32 d4_67
	word32 d3_68
	call a5 + 194 (retsize: 4;)
		uses: a0:a0_40,a1:a1,a2:a2,a5:a5,a6:a6_42,a7:a7_43 + 1,d0:d0_41,d3:d3_44,d4:d4_38,d5:d5_39,Stack +0000:a6,Stack +FFFFFFF0:a5 + -744,Stack +FFFFFFF4:a5 + -740,Stack +FFFFFFF8:a2
		defs: a0:a0_65,a1:a1_63,a5:a5_61,a6:a6_59,a7:a7_58,d0:d0_64,d3:d3_68,d4:d4_67,d5:d5_66
	word32 v10_70 = Mem56[a7_58:word32]
	Mem76[a7_58 - 2:word16] = 0xA1AD
	Mem78[0x00:byte] = 0x00
	word32 a7_83
	word32 a6_84
	word32 a2_85
	word32 a5_86
	word32 a0_89
	call a5_61 + 194 (retsize: 4;)
		uses: a0:a0_65,a1:a1_63,a2:v10_70,a5:a5_61,a6:a6_59,a7:a7_58 - 3,d0:d0_64,d3:d3_68,d4:d4_67,d5:d5_66,Stack +0000:a6,Stack +FFFFFFF0:a5 + -744,Stack +FFFFFFF4:a5 + -740,Stack +FFFFFFF8:a2
		defs: a0:a0_89,a2:a2_85,a5:a5_86,a6:a6_84,a7:a7_83
	branch a2_85 - Mem78[a7_83:word32] == 0x00000000 l0000231C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002304:
	__syscall(0xA1AD)
	Mem102[a6_84 + -4:word32] = a0_89
	branch true l0000231C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002316:
	Mem108[a5_86 + -1720:word32] = Mem102[a6_84 + -4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000231C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000022C4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002354(word32 d3, word32 d4, word32 d5, word32 a5, word32 a6, word32 dwArg08, byte bArg0F)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] a6:[0..31] d3:[0..31] d4:[0..31] d5:[0..31] Stack +0008:[0..31] Stack +000F:[0..7]
// LiveOut: a6
// Trashed: CVZNX a0 a5 a6 a7 d0 d3 d4 d5
// Preserved:
fn00002354_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002354:
	Mem10[a5 + -1380:byte] = bArg0F
	word32 a6_35 = fp - 0x00000004
	word32 a7_43 = fp - 0x00000004
	branch dwArg08 != 0x00000000 l00002386
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002364:
	branch Mem10[a5 + -708:word32] == 0x00000000 l00002378
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000236A:
	word32 v11_19 = Mem10[a5 + -712:word32]
	word32 v13_23 = Mem22[a5 + -708:word32]
	word32 a7_36
	fn000023B4(d3, d4, d5, fp - 0x00000004, v13_23, v11_19, out d3, out d4, out d5, out a0_165, out a6_35, out a7_36)
	dwLoc08 = v11_19
	dwLoc0C = v13_23
	a7_43 = a7_36 + 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002378:
	word32 a7_45 = a7_43 - 0x00000004
	Mem47[a7_45:word32] = a5 + -728
	Mem49[a7_45 - 0x00000004:word32] = a5 + -736
	word32 a7_59
	fn000023B4(d3, d4, d5, a6_35, Mem49[a7_45 - 0x00000004:word32], Mem49[a7_45:word32], out d3, out d4, out d5, out a0_164, out a6_35, out a7_59)
	a7_43 = a7_59 + 8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002386:
	word32 a7_68 = a7_43 - 0x00000004
	Mem70[a7_68:word32] = a5 + -720
	Mem72[a7_68 - 0x00000004:word32] = a5 + -724
	word32 d4_77
	word32 d5_78
	word32 a7_82
	word32 d3_83
	word32 a0_108
	word32 a6_106
	word32 d0_80 = fn000023B4(d3, d4, d5, a6_35, Mem72[a7_68 - 0x00000004:word32], Mem72[a7_68:word32], out d3_83, out d4_77, out d5_78, out a0_108, out a6_106, out a7_82)
	branch Mem72[a6_106 + 16:word32] != 0x00000000 l000023AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000239A:
	branch Mem72[a5 + -1376:word32] == 0x00000000 l000023AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023A0:
	a0_108 = Mem72[a5 + -1376:word32]
	Mem100[a0_108 + 14:word32] = Mem72[a6_106 + 8:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023AA:
	call a5 + 98 (retsize: 4;)
		uses: a0:a0_108,a5:a5,a6:a6_81,a7:a7_82 + 8,d0:d0_80,d3:d3_83,d4:d4_77,d5:d5_78,Stack +0000:a6,Stack +000C:dwArg08,Stack +0013:bArg0F,Stack +FFFFFFF8:dwLoc0C_144,Stack +FFFFFFFC:dwLoc08_140
		defs: a6:a6_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023AE:
	return Mem121[a6_106:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002354_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000023B4(word32 d3, word32 d4, word32 d5, word32 a6, word32 dwArg04, word32 dwArg08, ptr32 & d3Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & a0Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a6:[0..31] d3:[0..31] d4:[0..31] d5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a6 a7 d0 d3 d4 d5
// Trashed: CVZNX a0 a6 a7 d0 d3 d4 d5
// Preserved:
fn000023B4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023B4:
	word32 a6_36 = fp - 0x00000004
	word32 a7_14 = fp - 0x00000010
	word32 d5_17 = -1
	word32 d4_18 = dwArg08
	word32 d3_19 = dwArg04
	branch dwArg08 - dwArg04 <=u 0x00000000 l000023DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023CA:
	a0 = d3_19
	d0 = Mem16[d3_19:word32]
	branch d0 == 0x00000000 l000023D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023D0:
	branch d0 - d5_17 == 0x00000000 l000023D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023D4:
	call d0 (retsize: 4;)
		uses: a0:d0_26,a6:a6_36,a7:a7_34,d0:d0_26,d3:d3_23,d4:d4_39,d5:d5_29,Stack +0000:a6,Stack +0008:dwArg04,Stack +000C:dwArg08,Stack +FFFFFFF4:d3,Stack +FFFFFFF8:d4,Stack +FFFFFFFC:d5
		defs: a0:a0_42,a6:a6_37,a7:a7_35,d0:d0_43,d3:d3_41,d4:d4_40,d5:d5_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023D8:
	d3_19 = d3_19 + 0x00000004
	branch d4_18 - d3_19 >u 0x00000000 l000023CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023DE:
	word32 a7_57 = a7_14 + 4
	word32 d4_58 = Mem16[a7_57:word32]
	word32 d5_60 = Mem16[a7_57 + 4:word32]
	word32 a6_64 = Mem16[a6_36:word32]
	d3Out = Mem16[a7_14:word32]
	d4Out = d4_58
	d5Out = d5_60
	a0Out = a0
	a6Out = a6_64
	a7Out = a6_36 + 0x00000004
	return d0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000023B4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000023F8(word32 a2, word32 a5, word32 a6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] a6:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a5 a6 a7 d0 d1 d2
// Preserved:
fn000023F8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000023F8:
	word32 a5_13
	word32 a6_14
	word32 a7_15
	word32 a2_12 = fn00002418(a2, a5, fp - 0x00000004, out a5_13, out a6_14, out a7_15)
	Mem27[a7_15 - 4:word32] = Mem5[a6_14 + 8:word32]
	word32 a1_30
	word32 d1_32
	word32 d2_33
	word32 a2_34
	word32 a5_35
	word32 a6_36
	word32 a7_37
	word32 d0_31 = fn0000243C(a2_12, a5_13, a6_14, Mem27[a7_15 - 4:word32], out d1_32, out d2_33, out a1_30, out a2_34, out a5_35, out a6_36, out a7_37)
	Mem45[a7_37:word32] = 0x000000FF
	word32 a0_46 = Mem45[a5_35 + -1288:word32]
	call a0_46 (retsize: 4;)
		uses: a0:a0_46,a1:a1_30,a2:a2_34,a5:a5_35,a6:a6_36,a7:a7_37,d0:d0_31,d1:d1_32,d2:d2_33,Stack +0000:a6
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000023F8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002418(word32 a2, word32 a5, word32 a6, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] a6:[0..31]
// LiveOut: a2 a5 a6 a7
// Trashed: CVZNX a0 a1 a2 a5 a6 a7 d0 d1 d2
// Preserved:
fn00002418_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002418:
	word32 a1_13
	word32 d1_15
	word32 d2_16
	word32 a7_20
	word32 a6_19
	word32 a2_17
	word32 a5_18
	fn0000243C(a2, a5, fp - 0x00000004, 0x000000FC, out d1_15, out d2_16, out a1_13, out a2_17, out a5_18, out a6_19, out a7_20)
	word32 a7_26 = a7_20 + 4
	word32 a0_27 = Mem9[a5_18 + -1012:word32]
	branch a0_27 == 0x00000000 l00002430
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000242E:
	call a0_27 (retsize: 4;)
		uses: a0:a0_27,a1:a1_13,a2:a2_17,a5:a5_18,a6:a6_19,a7:a7_20 + 4,d0:a0_27,d1:d1_15,d2:d2_16,Stack +0000:a6,Stack +FFFFFFFC:0x000000FC
		defs: a2:a2_36,a5:a5_33,a6:a6_32,a7:a7_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002430:
	word32 a7_42 = a7_26 - 0x00000004
	Mem43[a7_42:word32] = 0x000000FF
	word32 a2_52
	word32 a5_53
	word32 a6_54
	fn0000243C(a2_17, a5_18, a6_19, Mem43[a7_42:word32], out d1_69, out d2_70, out a1_71, out a2_52, out a5_53, out a6_54, out a7_72)
	word32 a6_62 = Mem43[a6_54:word32]
	a5Out = a5_53
	a6Out = a6_62
	a7Out = a6_54 + 0x00000004
	return a2_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002418_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000243C(word32 a2, word32 a5, word32 a6, word32 dwArg04, ptr32 & d1Out, ptr32 & d2Out, ptr32 & a1Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] a6:[0..31] Stack +0004:[0..31]
// LiveOut: a1 a2 a5 a6 a7 d0 d1 d2
// Trashed: CVZNX a0 a1 a2 a5 a6 a7 d0 d1 d2
// Preserved:
fn0000243C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000243C:
	word32 a6_6 = fp - 0x00000004
	word32 a7_8 = fp - 0x00000008
	word32 a1_114 = a5 + -1012
	word32 d1_121 = 0
	word32 d2_122 = a5 + -1100
	word32 d0_120 = dwArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002452:
	branch dwArg04 - Mem11[d2_122:word32] == 0x00000000 l00002460
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002458:
	d2_122 = d2_122 + 0x00000008
	d1_121 = d1_121 + 0x00000001
	branch d2_122 - (a5 + -1012) <u 0x00000000 l00002452
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002460:
	branch dwArg04 - Mem11[(a5 + -1100) + d1_121 * 8:word32] != 0x00000000 l0000248E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000246A:
	word32 a0_44 = Mem11[a5 + -1096 + d1_121 * 8:word32]
	word32 a1_45 = a0_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002478:
	a1_45 = a1_145 + 1
	a1_145 = a1_45
	branch Mem11[a1_145:byte] != 0x00 l00002478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000247C:
	word32 a1_56 = a1_45 - (a0_44 + 1)
	word32 a7_74
	call a5 + 146 (retsize: 4;)
		uses: a0:a0_44,a1:a1_56,a2:a0_44 + 1,a5:a5,a6:fp - 0x00000004,a7:fp - 0x00000014,d0:dwArg04,d1:d1_38,d2:2,Stack +0004:2,Stack +0008:a0_44,Stack +000C:a1_56,Stack +0010:a2,Stack +0014:a6,Stack +001C:dwArg04
		defs: a1:a1_80,a5:a5_81,a6:a6_78,a7:a7_74,d0:d0_87,d1:d1_83,d2:d2_85
	a7_8 = a7_74 + 12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000248E:
	word32 a2_93 = Mem91[a7_8:word32]
	word32 a6_96 = Mem91[a6_6:word32]
	d1Out = d1_121
	d2Out = d2_122
	a1Out = a1_114
	a2Out = a2_93
	a5Out = a5
	a6Out = a6_96
	a7Out = a6_6 + 0x00000004
	return d0_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000243C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000024B0(word32 d3, word32 a3, word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a5:[0..31] d3:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn000024B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000024B0:
	fn000024C4(d3, a3, a5, dwArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000024B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000024C4(word32 d3, word32 a3, word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a5:[0..31] d3:[0..31] Stack +0004:[0..31]
// LiveOut: a6
// Trashed: CVZN a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: X
fn000024C4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000024C4:
	word32 a7_12 = fp - 0x0000000C
	branch dwArg04 <=u -32 l000024E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000024E0:
	word32 d3_24 = DPB(dwArg04 + 0x00000003, (word16) (dwArg04 + 0x00000003) & 0xFFFC, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000024EA:
	word32 a7_28 = a7_12 - 4
	Mem31[a7_28:word32] = d3_24
	word32 a5_43
	word32 a7_45
	word32 d4_46
	word32 a6_44
	branch fn00002510(a3, a5, Mem31[a7_28:word32], out d3_24, out d4_46, out a3, out a5_43, out a6_44, out a7_45) != 0x00000000 l00002506
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000024F6:
	branch d4_46 == 0x00000000 l00002506
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000024FA:
	Mem66[a7_45:word32] = d3_24
	a7_12 = a7_72 + 4
	word32 a7_72
	branch fn00002644(a5_43, a6_44, Mem66[a7_45:word32], out a5, out a6_44, out a7_72) != 0x00000000 l000024EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002506:
	return Mem83[a6_44:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000024D6:
	return a6
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000024C4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002510(word32 a3, word32 a5, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a5:[0..31] Stack +0004:[0..31]
// LiveOut: a3 a5 a6 a7 d0 d3 d4
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn00002510_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002510:
	word32 a0_25
	word32 d0_23 = fn000027B0(a5, dwArg04, out a0_25)
	word32 a6_179 = fp - 0x00000004
	word32 d3_116 = dwArg04
	word32 a7_100 = fp - 0x0000000C
	word32 a2_106 = d0_23
	branch d0_23 != 0x00000000 l0000254A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000252A:
	word32 a7_49
	branch fn000028A0(a0_25, d0_23, a3, a5, dwArg04, out d3_116, out d4, out a3, out a5, out a6_179, out a7_49) == -1 l000025A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000025A8:
	word32 a6_76 = Mem40[a6_179:word32]
	d3Out = Mem40[a7_49 + 8:word32]
	d4Out = d4
	a3Out = a3
	a5Out = a5
	a6Out = a6_76
	a7Out = a6_179 + 0x00000004
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002538:
	Mem80[a7_49:word32] = d3_116
	word32 d0_83 = fn000027B0(a5, Mem80[a7_49:word32], out a0_243)
	a7_100 = a7_49 + 4
	a2_106 = d0_83
	branch d0_83 != 0x00000000 l0000254A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002546:
	a5 = fn000027A0(a5, a6_179, out a6_179, out a7_100)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000254A:
	word32 d0_109 = Mem107[Mem107[a2_106:word32] + 4:word32]
	word32 d1_112 = Mem107[a2_106 + 4:word32]
	branch DPB(d0_109, (word16) d0_109 & 0xFFFC, 0) - DPB(d1_112, (word16) d1_112 & 0xFFFC, 0) - d3_116 == 4 l00002586
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002566:
	word32 a7_124 = a7_100 - 4
	Mem126[a7_124:word32] = d3_116
	Mem129[a7_124 - 4:word32] = a2_106
	word32 d0_133 = fn000025B4(a5, Mem129[a7_124 - 4:word32], Mem129[a7_124:word32])
	branch d0_133 == 0x00000000 l00002586
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002576:
	word32 d0_149
	__bclr(Mem129[d0_133 + 4:word32], 0x00000001, out d0_149)
	word32 d0_151
	__bset(d0_149, 0x0000, out d0_151)
	Mem154[d0_133 + 4:word32] = d0_151
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002586:
	word32 d0_158 = Mem157[a2_106 + 4:word32]
	Mem162[a2_106 + 4:word32] = DPB(d0_158, (word16) d0_158 & 0xFFFC, 0)
	Mem165[a5 + -1332:word32] = Mem162[a2_106:word32]
	word32 d0_166 = Mem165[a2_106 + 4:word32]
	word32 a6_181 = Mem165[a6_179:word32]
	d3Out = Mem165[a7_100 + 4:word32]
	d4Out = d4
	a3Out = a3
	a5Out = a5
	a6Out = a6_181
	a7Out = a6_179 + 0x00000004
	return DPB(d0_166, (word16) d0_166 & 0xFFFC, 0) + 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002510_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000025B4(word32 a5, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a6 a7
fn000025B4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000025B4:
	word32 a0_13 = Mem11[dwArg04:word32]
	word32 d0_14 = Mem11[a0_13 + 4:word32]
	word32 d1_17 = Mem11[dwArg04 + 4:word32]
	branch DPB(d0_14, (word16) d0_14 & 0xFFFC, 0) - DPB(d1_17, (word16) d1_17 & 0xFFFC, 0) - 0x00000004 - dwArg08 <=u 0x00000000 l00002608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000025DA:
	word32 d0_28 = fn0000273C(a0_13, a5, out a0_108)
	branch d0_28 == 0x00000000 l00002608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002608:
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000025E4:
	word32 d0_50 = Mem11[dwArg04 + 4:word32]
	word32 d0_53 = DPB(d0_50, (word16) d0_50 & 0xFFFC, 0) + dwArg08
	Mem58[d0_28 + 4:word32] = d0_53 + 0x00000004
	Mem60[d0_53 + 0x00000004:word32] = d0_28
	Mem62[d0_28:word32] = Mem60[dwArg04:word32]
	Mem64[dwArg04:word32] = d0_28
	return d0_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000025B4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00002610(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN d0
// Preserved: a6 a7
fn00002610_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002610:
	Mem10[a5 + -716:word32] = dwArg04
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002610_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002644(word32 a5, word32 a6, word32 dwArg04, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] a6:[0..31] Stack +0004:[0..31]
// LiveOut: a5 a6 a7 d0
// Trashed: CVZN a0 a5 a6 a7 d0
// Preserved:
fn00002644_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002644:
	word32 a6_19 = fp - 0x00000004
	word32 a0_9 = Mem5[a5 + -716:word32]
	branch a0_9 == 0x00000000 l00002664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002650:
	word32 d0_22
	call a0_9 (retsize: 4;)
		uses: a0:a0_9,a5:a5,a6:fp - 0x00000004,a7:fp - 0x00000008,d0:a0_9,Stack +0004:dwArg04,Stack +0008:a6,Stack +0010:dwArg04
		defs: a5:a5_20,a6:a6_19,d0:d0_22
	branch d0_22 == 0x00000000 l00002664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002664:
	word32 a6_34 = Mem33[a6_19:word32]
	a5Out = a5
	a6Out = a6_34
	a7Out = a6_19 + 0x00000004
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000265C:
	word32 a6_39 = Mem16[a6_19:word32]
	a5Out = a5
	a6Out = a6_39
	a7Out = a6_19 + 0x00000004
	return 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002644_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000273C(word32 a0, word32 a5, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 d0
// Trashed: CVZN a0 d0 d1 d2
// Preserved: X a6 a7
fn0000273C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000273C:
	word32 d0_15
	word32 a0_14
	branch Mem5[a5 + -1328:word32] != 0x00000000 l0000274E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002746:
	d0_15 = fn0000275C(a0, a5, out a0_14)
	branch d0_15 == 0x00000000 l00002758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000274E:
	d0_15 = Mem5[a5 + -1328:word32]
	Mem32[a5 + -1328:word32] = Mem5[d0_15:word32]
	a0_14 = d0_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002758:
	a0Out = a0_14
	return d0_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000273C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000275C(word32 a0, word32 a5, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 d0 d1 d2
// Preserved: a6 a7
fn0000275C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000275C:
	__syscall(0xA11E)
	branch a0 != 0x00000000 l00002774
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002774:
	Mem16[a5 + -1328:word32] = a0
	word32 d0_13 = a0
	word32 d1_19 = a0 + 0x00000008
	branch a0 + 0x00000FF8 - a0 <=u 0x00000000 l00002794
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002788:
	Mem28[d0_13:word32] = d1_82
	d0_13 = d1_82
	d1_19 = d1_82 + 0x00000008
	d1_82 = d1_19
	branch a0 + 0x00000FF8 - d1_82 >u 0x00000000 l00002788
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002794:
	Mem40[a0 + 0x00000FF8:word32] = 0
	a0Out = a0 + 0x00000FF8
	return 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000276C:
	a0Out = a0
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000275C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000027A0(word32 a5, word32 a6, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] a6:[0..31]
// LiveOut: a5 a6 a7
// Trashed: CVZN a5 a6 a7 d2
// Preserved:
fn000027A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000027A0:
	word32 a6_15
	word32 a5_17
	call a5 + 90 (retsize: 4;)
		uses: a5:a5,a6:fp - 0x00000004,a7:fp - 0x00000008,d2:18,Stack +0004:18,Stack +0008:a6
		defs: a5:a5_17,a6:a6_15
	a6Out = Mem11[a6_15:word32]
	a7Out = a6_15 + 0x00000004
	return a5_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000027A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000027B0(word32 a5, word32 dwArg04, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a3 a4 a6 a7 d3 d4 d5 d6
fn000027B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000027B0:
	word32 a2_100 = Mem28[a5 + -1332:word32]
	word32 a1_208 = 0x00000000
	branch a5 + -1324 - a2_100 == 0x00000000 l00002814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002814:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000027D0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000027D4:
	word32 a4_45 = a2_100 + 4
	branch (Mem46[a4_45:word32] & 3) != 0x00000001 l0000280C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000027E0:
	a0 = Mem55[a2_100:word32]
	word32 d0_57 = Mem55[a0 + 4:word32]
	word32 d3_63 = Mem55[a4_45:word32]
	branch DPB(d0_57, (word16) d0_57 & 0xFFFC, 0) - DPB(d3_63, (word16) d3_63 & 0xFFFC, 0) - 0x00000004 - dwArg04 >=u 0x00000000 l00002880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000027F8:
	branch (d0_57 & 3) != 0x00000001 l0000280C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000280C:
	a2_100 = Mem80[a2_100:word32]
	branch a2_100 - (a5 + -1324) != 0x00000000 l000027D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002812:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002818:
	a2_100 = Mem95[a5 + -1336:word32]
	branch a2_100 - Mem95[a5 + -1332:word32] == 0x00000000 l00002882
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000282C:
	word32 a3_101 = a2_100 + 4
	branch (Mem102[a3_101:word32] & 3) != 0x00000001 l0000288C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002838:
	a0 = Mem111[a2_100:word32]
	word32 d3_113 = Mem111[a0 + 4:word32]
	word32 d1_119 = Mem111[a3_101:word32]
	branch DPB(d3_113, (word16) d3_113 & 0xFFFC, 0) - DPB(d1_119, (word16) d1_119 & 0xFFFC, 0) - 0x00000004 - dwArg04 >=u 0x00000000 l00002880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000284E:
	branch (d3_113 & 3) != 0x00000001 l0000288C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000288C:
	a2_100 = Mem136[a2_100:word32]
	branch a2_100 - Mem136[a5 + -1332:word32] != 0x00000000 l0000282C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002894:
	a0Out = a0
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002854:
	Mem184[a2_100:word32] = Mem111[a0:word32]
	Mem186[a0:word32] = Mem184[a5 + -1328:word32]
	Mem188[a5 + -1328:word32] = a0
	branch a0 - Mem188[a5 + -1332:word32] != 0x00000000 l00002838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002864:
	Mem193[a5 + -1332:word32] = a2_100
	a0 = Mem193[a2_100:word32]
	word32 d0_195 = Mem193[a0 + 4:word32]
	word32 d1_198 = Mem193[a3_101:word32]
	branch DPB(d0_195, (word16) d0_195 & 0xFFFC, 0) - DPB(d1_198, (word16) d1_198 & 0xFFFC, 0) - 0x00000004 - dwArg04 <u 0x00000000 l00002882
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002880:
	a1_208 = a2_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002882:
	a0Out = a0
	return a1_208
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000027B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000027FE:
	Mem235[a2_100:word32] = Mem55[a0:word32]
	Mem237[a0:word32] = Mem235[a5 + -1328:word32]
	Mem239[a5 + -1328:word32] = a0
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000028A0(word32 a0, word32 a2, word32 a3, word32 a5, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a2:[16..31] a3:[0..31] a5:[0..31] Stack +0004:[0..31]
// LiveOut: a3 a5 a6 a7 d0 d3 d4
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn000028A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000028A0:
	word32 d4_113 = Mem25[a5 + -1292:word32]
	word32 a6_341 = fp - 0x00000004
	word32 a7_23 = fp - 0x0000001C
	word32 a2_116 = DPB(a2, 0x0010, 0)
	word32 d5_114 = -1
	word32 d3_268 = DPB(dwArg04 + 0x00000007, (word16) (dwArg04 + 0x00000007) & 0xFFFC, 0)
	branch d4_113 - Mem25[a5 + -1312:word32] >= 0x00000000 l0000290E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000028C6:
	word32 d7_118 = d4_113 << 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000028CA:
	branch Mem44[Mem44[Mem44[a5 + -1316:word32]:word32] + d7_118:word32] == 0x00000000 l000028E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000028D6:
	word32 a7_53 = a7_23 - 4
	Mem56[a7_53:word32] = d3_268
	Mem60[a7_53 - 4:word32] = d4_113
	a7_23 = a7_69 + 8
	word32 a7_69
	branch fn00002A54(a3, a5, Mem60[a7_53 - 4:word32], Mem60[a7_53:word32], out d3_268, out d4_113, out d5_114, out a2_116, out a3, out a5, out a6_341, out a7_69) != -1 l000028FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000028FC:
	Mem87[a5 + -1292:word32] = d4_113
	word32 d4_92 = Mem87[a7_69 + 12:word32]
	word32 a6_102 = Mem87[a6_341:word32]
	d3Out = Mem87[a7_69 + 8:word32]
	d4Out = d4_92
	a3Out = a3
	a5Out = a5
	a6Out = a6_102
	a7Out = a6_341 + 0x00000004
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000028E4:
	a0 = Mem105[Mem105[a5 + -1316:word32]:word32]
	branch Mem105[a0 + d7_118:word32] == 0x00000000 l0000290C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000290C:
	d5_114 = d4_113
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000028F0:
	d4_113 = d4_113 + 0x00000001
	d7_118 = d7_118 + a2_116
	branch d4_113 - Mem105[a5 + -1312:word32] < 0x00000000 l000028CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000028FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000290E:
	branch d5_114 != -1 l000029B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002916:
	branch Mem132[a5 + -1316:word32] == 0x00000000 l0000292E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002926:
	a0 = Mem132[a5 + -1316:word32]
	__syscall(0xA024)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000292E:
	branch Mem132[a5 + -1316:word32] == 0x00000000 l0000293C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002934:
	a0 = Mem132[a5 + -1296:word32]
	branch Mem132[a0:word16] == 0x0000 l00002974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000293C:
	__syscall(0xA122)
	branch a0 != 0x00000000 l00002950
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002950:
	__syscall(0xA029)
	branch Mem132[a5 + -1316:word32] == 0x00000000 l00002970
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000295A:
	__syscall(0xA02E)
	__syscall(0xA023)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002970:
	Mem184[a5 + -1316:word32] = a0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002974:
	a0 = Mem188[Mem188[a5 + -1316:word32]:word32] + (Mem188[a5 + -1312:word32] << 0x00000004)
	word32 d0_195 = 7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002986:
	Mem200[a0:word32] = 0
	word32 a0_201 = a0 + 4
	Mem203[a0_201:word32] = 0
	Mem206[a0_201 + 4:word32] = 0
	Mem209[a0_201 + 8:word32] = 0
	Mem212[a0_201 + 12:word32] = 0
	Mem215[a0_201 + 16:word32] = 0
	Mem218[a0_201 + 20:word32] = 0
	Mem221[a0_201 + 24:word32] = 0
	Mem224[a0_201 + 28:word32] = 0
	Mem227[a0_201 + 32:word32] = 0
	Mem230[a0_201 + 36:word32] = 0
	Mem233[a0_201 + 40:word32] = 0
	Mem236[a0_201 + 44:word32] = 0
	Mem239[a0_201 + 48:word32] = 0
	Mem242[a0_201 + 52:word32] = 0
	Mem245[a0_201 + 56:word32] = 0
	word16 v48_249 = SLICE(d0_195, word16, 0)
	a0 = a0_201 + 60
	d0_195 = DPB(d0_195, v48_249 - 1, 0)
	branch v48_249 != 0x0000 l00002986
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000029AA:
	d5_114 = Mem245[a5 + -1312:word32]
	Mem256[a5 + -1312:word32] = Mem245[a5 + -1312:word32] + 32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000029B4:
	word32 a7_266 = a7_23 - 4
	Mem276[a7_266:word32] = d3_268
	Mem280[a7_266 - 4:word32] = d5_114
	word32 a3_299
	word32 a5_300
	word32 a6_301
	word32 a7_302
	word32 d0_293 = fn000029C8(a0, a3, a5, Mem280[a7_266 - 4:word32], Mem280[a7_266:word32], out a3_299, out a5_300, out a6_301, out a7_302)
	word32 d4_314 = Mem280[a7_302 + 12:word32]
	word32 a6_324 = Mem280[a6_301:word32]
	d3Out = Mem280[a7_302 + 8:word32]
	d4Out = d4_314
	a3Out = a3_299
	a5Out = a5_300
	a6Out = a6_324
	a7Out = a6_301 + 0x00000004
	return d0_293
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002946:
	word32 d4_330 = Mem132[a7_23 + 4:word32]
	word32 a6_345 = Mem132[a6_341:word32]
	d3Out = Mem132[a7_23:word32]
	d4Out = d4_330
	a3Out = a3
	a5Out = a5
	a6Out = a6_345
	a7Out = a6_341 + 0x00000004
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000028A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000029C8(word32 a0, word32 a3, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] a3:[0..31] a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a3 a5 a6 a7 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved:
fn000029C8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000029C8:
	word32 d4_18 = Mem16[a5 + -1300:word32]
	word32 d4_22 = DPB(d4_18 + 0x00000FFF, (word16) (d4_18 + 0x00000FFF) & 0xF000, 0)
	word32 a6_102 = fp - 0x00000004
	branch d4_22 - dwArg08 >=u 0x00000000 l000029E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000029E6:
	d4_22 = dwArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000029E8:
	word32 d0_104
	__syscall(0xA11E)
	branch a0 == 0x00000000 l00002A4A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000029F2:
	word32 a1_41 = Mem16[Mem16[a5 + -1316:word32]:word32]
	branch ((word16) a0 & 0x0003) == 0x0000 l00002A14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002A14:
	Mem54[a0 + (dwArg04 << 0x00000004):word32] = a0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000029FE:
	Mem65[a0 + (dwArg04 << 0x00000004):word32] = DPB(a0 + 0x00000003, (word16) (a0 + 0x00000003) & 0xFFFC, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002A20:
	word32 a1_72 = a1_41 + (dwArg04 << 0x00000004)
	Mem75[a1_72 + 12:word32] = a0
	Mem78[a1_72 + 8:word32] = d4_22
	Mem81[a1_72 + 4:word32] = 0
	word32 a2_99
	word32 a7_103
	word32 d3_107
	word32 d5_109
	d0_104 = fn00002A54(a3, a5, dwArg04, dwArg08, out d3_107, out d4_196, out d5_109, out a2_99, out a3, out a5, out a6_102, out a7_103)
	branch d0_104 == 0x00000000 l00002A4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002A42:
	Mem122[a7_103 + 4:word32] = d5_109
	fn00002AE0(d3_107, a2_99, a5, Mem122[a7_103 + 4:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002A4A:
	d0_104 = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002A4C:
	word32 a6_146 = Mem136[a6_102:word32]
	a3Out = a3
	a5Out = a5
	a6Out = a6_146
	a7Out = a6_102 + 0x00000004
	return d0_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000029C8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002A54(word32 a3, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & d3Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & a2Out, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a3:[0..31] a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a2 a3 a5 a6 a7 d0 d3 d4 d5
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved:
fn00002A54_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002A54:
	word32 a2_25 = Mem19[Mem19[a5 + -1316:word32]:word32] + (dwArg04 << 0x00000004)
	word32 d4_26 = Mem19[a2_25 + 8:word32]
	word32 d1_27 = Mem19[a2_25 + 4:word32]
	word32 d0_29 = d4_26 - d1_27
	word32 d3_37 = DPB(dwArg08 + 0x00000003, (word16) (dwArg08 + 0x00000003) & 0xFFFC, 0)
	word32 a1_32 = Mem19[a2_25:word32] + d1_27
	branch d3_37 - d0_29 <=u 0x00000000 l00002ABE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002A8A:
	__syscall(0xA020)
	word32 d4_42 = d4_26 - d0_29 + d3_37
	word32 d4_46 = DPB(d4_42 + 0x00000004, (word16) (d4_42 + 0x00000004) & 0xFFFC, 0)
	a2_25 = Mem19[Mem19[a5 + -1316:word32]:word32] + (dwArg04 << 0x00000004)
	branch Mem19[Mem19[a5 + -1296:word32]:word16] == 0x0000 l00002AB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002AB4:
	Mem57[a2_25 + 8:word32] = d4_46
	a1_32 = Mem57[a2_25:word32] + Mem57[a2_25 + 4:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002ABE:
	Mem65[a2_25 + 4:word32] = Mem62[a2_25 + 4:word32] + d3_37
	word32 a7_102 = a7_89 + 8
	word32 a3_86
	word32 a7_89
	word32 a6_101
	word32 a5_100
	branch fn00002BB4(a2_25, a3, a5, fp - 0x00000004, a1_32, d3_37, out a3_86, out a5_100, out a6_101, out a7_89) == 0x00000000 l00002AD4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002AD0:
	a5_100 = fn000027A0(a5_100, a6_101, out a6_101, out a7_102)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002AD4:
	word32 a7_113 = a7_102 + 4
	word32 d4_114 = Mem74[a7_113:word32]
	word32 d5_116 = Mem74[a7_113 + 4:word32]
	word32 a2_118 = Mem74[a7_113 + 8:word32]
	word32 a6_121 = Mem74[a6_101:word32]
	d3Out = Mem74[a7_102:word32]
	d4Out = d4_114
	d5Out = d5_116
	a2Out = a2_118
	a3Out = a3_86
	a5Out = a5_100
	a6Out = a6_121
	a7Out = a6_101 + 0x00000004
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002AA8:
	d3Out = d3
	d4Out = d4
	d5Out = d5
	a2Out = a2
	a3Out = a3
	a5Out = a5
	a6Out = a6
	a7Out = fp
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002A54_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00002AE0(word32 d3, word32 a2, word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a5:[0..31] d3:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 d2
// Preserved: a6 a7 d3
fn00002AE0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002AE0:
	branch Mem11[Mem11[Mem11[a5 + -1316:word32]:word32] + (dwArg04 << 0x00000004):word32] == 0x00000000 l00002AFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002AF8:
	__syscall(0xA01F)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002AFE:
	Mem32[a2 + (dwArg04 << 0x00000004):word32] = 0
	Mem34[a2 + 4 + (dwArg04 << 0x00000004):word32] = 0
	Mem36[a2 + 8 + (dwArg04 << 0x00000004):word32] = 0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002AE0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00002B18(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a2 a5 a6 a7 d0 d1 d2
// Preserved:
fn00002B18_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002B18:
	branch dwArg04 == 0x00000000 l00002B78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002B24:
	word32 a2_18 = Mem11[dwArg04 - 0x00000004:word32]
	word32 d1_19 = Mem11[a2_18 + 4:word32]
	branch DPB(d1_19, (word16) d1_19 & 0xFFFC, 0) - (dwArg04 - 0x00000004) == 0x00000000 l00002B3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002B36:
	a5 = fn000027A0(a5, fp - 0x00000004, out a6_115, out a7_116)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002B3A:
	word32 d0_37
	__bclr(Mem11[a2_18 + 4:word32], 0x00000001, out d0_37)
	word32 d0_39
	__bset(d0_37, 0x0000, out d0_39)
	Mem42[a2_18 + 4:word32] = d0_39
	branch Mem42[a5 + -1308:word32] == -1 l00002B78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002B52:
	branch d0_39 - Mem42[Mem42[a5 + -1332:word32] + 4:word32] >=u 0x00000000 l00002B78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002B5C:
	word32 d1_53 = Mem42[Mem42[a2_18:word32] + 4:word32]
	branch DPB(d1_53, (word16) d1_53 & 0xFFFC, 0) - DPB(d0_39, (word16) d0_39 & 0xFFFC, 0) - 0x00000004 - Mem42[a5 + -1308:word32] <u 0x00000000 l00002B78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002B74:
	Mem65[a5 + -1332:word32] = a2_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002B78:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002B18_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002BB4(word32 a2, word32 a3, word32 a5, word32 a6, word32 dwArg04, word32 dwArg08, ptr32 & a3Out, ptr32 & a5Out, ptr32 & a6Out, ptr32 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2:[0..31] a3:[0..31] a5:[0..31] a6:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a3 a5 a6 a7 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2
// Preserved:
fn00002BB4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002BB4:
	word32 dwLoc1C_312 = fp + 0xFFFFFFE8
	word32 a0_30
	word32 d0_31 = fn0000273C(fp + 0xFFFFFFE8, a5, out a0_30)
	branch d0_31 == 0x00000000 l00002DE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002BE2:
	word32 a0_42
	word32 d0_43 = fn0000273C(a0_30, a5, out a0_42)
	branch d0_43 == 0x00000000 l00002DE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002BEE:
	word32 d0_55 = fn0000273C(a0_42, a5, out a0_423)
	branch d0_55 == 0x00000000 l00002DE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002BFA:
	word32 a0_296
	word32 a3_100
	word32 a1_74
	word32 d0_75 = fn00002EA8(a5, dwArg04, fp + 0xFFFFFFF8, out a1_74)
	branch d0_75 != 0x00000000 l00002C28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C28:
	a0_296 = fp + 0xFFFFFFE8
	a3_100 = d0_31
	dwLoc1C_312 = fp + 0xFFFFFFEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C0E:
	a0_296 = dwLoc08
	branch (Mem71[dwLoc08 + 4:word32] & 3) != 2 l00002DE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C22:
	a3_100 = dwLoc08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C32:
	Mem104[a3_100 + 4:word32] = dwArg04
	word32 d1_106
	__bclr(dwArg04, 0x00000001, out d1_106)
	word32 d1_108
	__bset(d1_106, 0x0000, out d1_108)
	Mem111[a3_100 + 4:word32] = d1_108
	Mem113[dwArg04:word32] = a3_100
	branch d0_75 + 0x00000003 >u 3 l00002C60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C60:
	branch (Mem113[dwLoc08 + 4:word32] & 3) != 2 l00002DE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002DE8:
	branch Mem131[dwLoc1C_312:word32] == 0x00000000 l00002E0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002DF0:
	Mem143[Mem138[dwLoc1C_312:word32]:word32] = Mem138[a5 + -1328:word32]
	Mem146[a5 + -1328:word32] = Mem143[dwLoc1C_312:word32]
	word32 v30_147 = dwLoc1C_312 + 0x00000004
	dwLoc1C_312 = v30_147
	Mem138 = Mem148
	branch Mem148[v30_147:word32] != 0x00000000 l00002DF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002E0E:
	a3Out = a3
	a5Out = a5
	a6Out = a6
	a7Out = fp
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C74:
	branch a5 + -1324 - Mem113[dwLoc08:word32] != 0x00000000 l00002C92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C7C:
	word32 d0_176 = Mem113[a3_100 + 4:word32]
	word32 d0_179 = DPB(d0_176, (word16) d0_176 & 0xFFFC, 0) + dwArg08
	branch d0_179 - Mem113[a5 + -1320:word32] <=u 0x00000000 l00002C92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C8E:
	Mem185[a5 + -1320:word32] = d0_179
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C92:
	fn00002E18(a3_100, dwArg08, Mem190[dwLoc08:word32], fp + 0xFFFFFFE4)
	word32 d0_223 = Mem220[Mem220[dwLoc08:word32] + 4:word32]
	word32 d1_227 = Mem220[dwLoc08 + 4:word32]
	word32 d0_230 = DPB(d0_223, (word16) d0_223 & 0xFFFC, 0) - DPB(d1_227, (word16) d1_227 & 0xFFFC, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002DA4:
	fn00002E18(dwLoc08, d0_230, a3_100, fp + 0xFFFFFFE4)
	word32 d0_252 = Mem237[Mem237[a5 + -1332:word32] + 4:word32]
	branch DPB(d0_252, (word16) d0_252 & 0xFFFC, 0) - dwArg04 <=u 0x00000000 l00002DDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002DBC:
	word32 d0_260 = Mem237[Mem237[a3_100:word32] + 4:word32]
	word32 d1_263 = Mem237[a3_100 + 4:word32]
	branch DPB(d0_260, (word16) d0_260 & 0xFFFC, 0) - DPB(d1_263, (word16) d1_263 & 0xFFFC, 0) - 0x00000004 - Mem237[a5 + -1308:word32] <u 0x00000000 l00002DDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002DD8:
	Mem273[a5 + -1332:word32] = a3_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002DDC:
	a3Out = a3
	a5Out = a5
	a6Out = a6
	a7Out = fp
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002C4E:
	word16 v38_288 = Mem113[0x00002C58 + (int32) ((int16) (d0_75 + 0x00000003)) * 2:word16]
	word32 a7_291
	word32 a6_292
	word32 a3_294
	word32 d0_298
	word32 a5_300
	call 0x00002C58 + (int32) v38_288 (retsize: 4;)
		uses: a0:a0_296,a1:a1_74,a2:dwArg04,a3:a3_103,a5:a5,a6:fp - 0x00000004,a7:fp - 0x00000024,d0:DPB(d0_75 + 0x00000003, v38_288, 0),d1:d1_108,d2:3,Stack +0000:fp + 0xFFFFFFF8,Stack +0004:a3,Stack +0008:a2,Stack +000C:dwLoc1C_323,Stack +0010:d0_31,Stack +0014:d0_43,Stack +0018:d0_55,Stack +001C:0,Stack +0020:dwLoc08,Stack +0024:a6,Stack +002C:dwArg04,Stack +0030:dwArg08,Stack +FFFFFFF4:dwLoc34,Stack +FFFFFFF8:dwLoc30,Stack +FFFFFFFC:dwArg04
		defs: a3:a3_294,a5:a5_300,a6:a6_292,a7:a7_291,d0:d0_298
	a3Out = a3_294
	a5Out = a5_300
	a6Out = a6_292
	a7Out = a7_291
	return d0_298
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002BB4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00002E18(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a3 a6 a7
fn00002E18_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002E18:
	word32 d2_17 = Mem15[dwArg04 + 4:word32]
	word32 a2_16 = dwArg04
	branch (d2_17 & 3) == 2 l00002E9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002E34:
	word32 d1_27 = Mem15[dwArg0C + 4:word32]
	branch (d1_27 & 0x00000003) != 0x00000002 l00002E6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002E6C:
	word32 d2_35 = DPB(d2_17, (word16) d2_17 & 0xFFFC, 0) + dwArg08
	branch DPB(d1_27, (word16) d1_27 & 0xFFFC, 0) - d2_35 == 0x00000000 l00002E9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002E7C:
	word32 a0_43 = Mem15[dwArg10:word32]
	word32 v33_44 = Mem15[a0_43:word32]
	Mem48[dwArg10:word32] = a0_43 + 4
	Mem50[v33_44 + 4:word32] = d2_35
	word32 d2_51
	__bclr(d2_35, 0x00000000, out d2_51)
	word32 d2_53
	__bset(d2_51, 0x0001, out d2_53)
	Mem56[v33_44 + 4:word32] = d2_53
	Mem58[dwArg04:word32] = v33_44
	a2_16 = v33_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002E9A:
	Mem65[a2_16:word32] = dwArg0C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002E4C:
	word32 d2_78 = DPB(d2_17, (word16) d2_17 & 0xFFFC, 0) + dwArg08
	Mem81[dwArg0C + 4:word32] = d2_78
	word32 d2_82
	__bclr(d2_78, 0x00000000, out d2_82)
	word32 d2_84
	__bset(d2_82, 0x0001, out d2_84)
	Mem87[dwArg0C + 4:word32] = d2_84
	Mem89[dwArg04:word32] = dwArg0C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002E18_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00002EA8(word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a1 d0
// Trashed: CVZN a0 a1 d0 d1 d2
// Preserved: a6 a7
fn00002EA8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002EA8:
	branch a5 + -1324 - Mem5[a5 + -1336:word32] != 0x00000000 l00002EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002EBC:
	word32 d0_14 = Mem5[Mem5[a5 + -1336:word32] + 4:word32]
	branch DPB(d0_14, (word16) d0_14 & 0xFFFC, 0) - dwArg04 <=u 0x00000000 l00002ED8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002ED8:
	word32 d0_21 = Mem5[a5 + -1320:word32]
	branch DPB(d0_21, (word16) d0_21 & 0xFFFC, 0) - dwArg04 >u 0x00000000 l00002EEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002EEC:
	word32 a1_29 = Mem5[a5 + -1336:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002EF6:
	word32 a0_32 = Mem5[a1_29:word32]
	word32 d1_33 = Mem5[a0_32 + 4:word32]
	branch DPB(d1_33, (word16) d1_33 & 0xFFFC, 0) - dwArg04 >u 0x00000000 l00002F08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002F08:
	Mem44[dwArg08:word32] = a1_29
	word32 d1_46 = Mem44[a1_29 + 4:word32]
	word32 d0_45 = 0
	branch DPB(d1_46, (word16) d1_46 & 0xFFFC, 0) - dwArg04 == 0x00000000 l00002F1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002F1C:
	d0_45 = 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002F1E:
	a1Out = a1_29
	return d0_45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002F02:
	a1_29 = a0_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002EE4:
	a1Out = a1
	return -2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002ED0:
	a1Out = a1
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00002EB6:
	a1Out = a1
	return -3
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00002EA8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00003340(word32 a5, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0006:[0..15]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a6 a7
fn00003340_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00003340:
	Mem18[a5 + -1728:word32] = (int32) wArg06
	word32 d2_19 = 0
	word32 d0_21 = a5 + -1284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000335C:
	branch wArg06 - Mem18[d0_21:word16] == 0x0000 l00003374
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00003374:
	Mem37[a5 + -1732:word32] = (int32) Mem18[a5 + -1282 + d2_19 * 4:word16]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00003362:
	d0_21 = d0_21 + 0x00000004
	d2_19 = d2_19 + 0x00000001
	branch d0_21 - (a5 + -1100) <u 0x00000000 l0000335C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000336A:
	Mem52[a5 + -1732:word32] = 22
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00003340_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



