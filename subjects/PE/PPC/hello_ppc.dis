word32 fn00400220(word32 r2, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r13:[0..31] r14:[0..31] r15:[0..31] r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r3 r30 r31
// Trashed: cr0 ctr r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00400220_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400220:
	word32 r29_56
	word32 r30_58
	word32 r31_59
	word32 r2_46 = fn00400268(r2, Mem11[r2 + 68:word32], r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, lr, out r29_56, out r30_58, out r31_59)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400254:
	r3Out = 0
	r29Out = r29_56
	r30Out = r30_58
	r31Out = r31_59
	return r2_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400220_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00400268(word32 r2, word32 r3, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r13:[0..31] r14:[0..31] r15:[0..31] r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r30 r31
// Trashed: cr0 ctr r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00400268_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400268:
	Mem23[v11:word32] = r29
	Mem26[v11 + 4:word32] = r30
	Mem29[v11 + 8:word32] = r31
	word32 r31_34 = Mem29[r2 + 72:word32]
	word32 r3_45
	word32 r31_46
	word32 r25_55
	word32 r26_56
	word32 r27_57
	word32 r28_58
	word32 r29_59
	word32 r3_100
	word32 r30_101
	word32 r31_102
	word32 r2_125 = fn00400430(fn004004B4(fn004002F8(r2, r31_34 + 32, r25, r26, r27, r28, r29, r30, r31_34 + 32, lr, out r3_45, out r25_55, out r26_56, out r27_57, out r28_58, out r29_59, out r31_46), r31_46, r3, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25_55, r26_56, r27_57, r28_58, r29_59, r3_45, r31_46, lr, out r3_100, out r25_164, out r26_165, out r27_166, out r28_167, out r29_168, out r30_101, out r31_102), r30_101, r31_102, r3_100, r30_101)
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2_125
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400268_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004002F8(word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004002F8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004002F8:
	Mem7[v3:word32] = r30
	Mem10[v3 + 4:word32] = r31
	word32 r31_13 = r3
	branch fn00401474(r2, Mem10[r3 + 16:word32]) != 0x00000000 l00400338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400338:
	word32 r10_36
	word32 r11_26 = Mem17[r2 + 72:word32]
	branch r3 != r11_26 + 32 l00400350
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400350:
	branch r3 != r11_26 + 64 l00400418
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400418:
	r3Out = 0
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040035C:
	r10_36 = 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400348:
	r10_36 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400360:
	word32 r4_40 = Mem17[r2 + 76:word32]
	Mem43[r4_40:word32] = Mem17[r4_40:word32] + 1
	branch (Mem43[r3 + 12:word32] & 0x0000010C) == 0x00000000 l00400394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400394:
	word32 r30_48 = Mem43[r2 + 80:word32]
	word32 r10_50 = r10_36 << 0x02
	word32 r11_100 = Mem43[r30_48 + r10_50:word32]
	word32 r30_52 = r10_50 + r30_48
	branch r11_100 != 0x00000000 l004003E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004003AC:
	word32 r3_77
	word32 r30_78
	r2 = fn00400F9C(r2, 4096, r25, r26, r27, r28, r29, r30_52, r3, lr, out r3_77, out r25, out r26, out r27, out r28, out r29, out r30_78, out r31_13)
	Mem90[r30_78:word32] = r3_77
	r11_100 = r3_77
	branch r3_77 != 0x00000000 l004003E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004003E0:
	Mem99[r31_13 + 12:word32] = Mem93[r31_13 + 12:word32] | 0x00001102
	Mem101[r31_13 + 8:word32] = r11_100
	Mem103[r31_13 + 24:word32] = 4096
	Mem104[r31_13 + 4:word32] = 4096
	Mem105[r31_13:word32] = r11_100
	r3Out = 1
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004003C8:
	r3Out = 0
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040037C:
	r3Out = 0
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400320:
	r3Out = 0
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004002F8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00400430(word32 r2, word32 r3, word32 r4, word32 r29, word32 r30)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r4:[0..31]
// LiveOut: r2
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r1 r31
fn00400430_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400430:
	branch r3 == 0x00000000 l00400488
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400488:
	branch (Mem11[r4 + 12:word32] & 0x00001000) == 0x00000000 l004004A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400494:
	r2 = fn004012B0(r2, r4, r29, r30, r4, out r3_108, out r29_109, out r30_110, out r31_111)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040044C:
	branch (Mem11[r4 + 12:word32] & 0x00001000) == 0x00000000 l004004A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400458:
	word32 r31_48
	r2 = fn004012B0(r2, r4, r29, r30, r4, out r3_105, out r29_106, out r30_107, out r31_48)
	word32 r4_61 = Mem11[r31_48 + 12:word32]
	Mem63[r31_48 + 24:word32] = 0
	Mem64[r31_48:word32] = 0
	Mem65[r31_48 + 8:word32] = 0
	Mem68[r31_48 + 12:word32] = r4_61 & -4353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004004A0:
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400430_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004004B4(word32 r2, word32 r3, word32 r4, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r13:[0..31] r14:[0..31] r15:[0..31] r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004004B4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004004B4:
	Mem7[v3:word32] = r13
	Mem10[v3 + 4:word32] = r14
	Mem13[v3 + 8:word32] = r15
	Mem16[v3 + 12:word32] = r16
	Mem19[v3 + 16:word32] = r17
	Mem22[v3 + 20:word32] = r18
	Mem25[v3 + 24:word32] = r19
	Mem28[v3 + 28:word32] = r20
	Mem31[v3 + 32:word32] = r21
	Mem34[v3 + 36:word32] = r22
	Mem37[v3 + 40:word32] = r23
	Mem40[v3 + 44:word32] = r24
	Mem43[v3 + 48:word32] = r25
	Mem46[v3 + 52:word32] = r26
	Mem49[v3 + 56:word32] = r27
	Mem52[v3 + 60:word32] = r28
	Mem55[v3 + 64:word32] = r29
	Mem58[v3 + 68:word32] = r30
	Mem61[v3 + 72:word32] = r31
	word32 r31_198 = (int32) (int8) (word32) Mem68[r4:byte]
	word32 r23_193 = r4 + 1
	word32 dwLoc0284_306 = 0
	branch r31_198 == 0x00000000 l00400DEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004004F0:
	word32 r26_170 = fp + -640
	word32 r14_84 = Mem80[r2 + 84:word32]
	word32 r16_85 = Mem80[r2 + 88:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400508:
	branch false l00400DEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400514:
	word32 r10_105
	branch r31_198 <= 31 l00400544
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040051C:
	branch r31_198 >= 121 l00400544
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400544:
	r10_105 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400524:
	r10_105 = (int32) (int8) (word32) Mem89[r14_84 + -28 + r31_198:byte] & 0x0000000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400548:
	word32 r4_122 = (int32) (int8) ((int32) (int8) (word32) Mem89[r14_84 + 4 + ((r10_105 << 0x03) + dwLoc0284_306):byte] >> 0x00000004)
	dwLoc0284_306 = r4_122
	Mem237 = Mem125
	branch r4_122 >= 0x00000008 l00400DDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400578:
	lr = fn004005A0(r4_122 << 0x02, lr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004005B0:
	branch ((word32) Mem125[Mem125[r16_85:word32] + ((r31_198 & 0x000000FF) << 0x01):word16] & 0x00008000) == 0x00000000 l004005EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004005C8:
	r2 = fn00400E04(r2, r31_198, r3, fp + -648, r25, r26_170, r27, r28, r29, r30, lr, out r25, out r26_170, out r27, out r28, out r29, out r30)
	r23_193 = r23_193 + 1
	r31_198 = (int32) (int8) (word32) Mem144[r23_193:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004005EC:
	r2 = fn00400E04(r2, r31_198, r3, fp + -648, r25, r26_170, r27, r28, r29, r30, lr, out r25, out r26_170, out r27, out r28, out r29, out r30)
	Mem237 = Mem201
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400DDC:
	r23_193 = r23_193 + 1
	r31_198 = (int32) (int8) (word32) Mem237[r23_193:byte]
	branch r31_198 != 0x00000000 l00400508
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400DEC:
	r3Out = 0
	r25Out = dwLoc20
	r26Out = dwLoc1C
	r27Out = dwLoc18
	r28Out = dwLoc14
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004004B4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004005A0(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r11:[0..31]
// LiveOut: lr
// Trashed: lr r0
// Preserved: r1
fn004005A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004005A0:
	return lr + r11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004005A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00400680(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r11:[0..31]
// LiveOut:
// Trashed: lr r0
// Preserved: r1
fn00400680_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400680:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400680_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00400838(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r11:[0..31]
// LiveOut:
// Trashed: lr r0
// Preserved: r1
fn00400838_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400838:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400838_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00400E04(word32 r2, word32 r3, word32 r4, word32 r5, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 lr, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r30
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r1 r31
fn00400E04_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400E04:
	word32 r11_47
	word32 r5_10 = Mem6[r4 + 4:word32]
	Mem16[r4 + 4:word32] = r5_10 + -1
	word32 r31_33 = r5
	branch r5_10 <= 0x00000000 l00400E5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400E5C:
	word32 r3_31
	r2 = fn00401598(r2, r3, r4, r25, r26, r27, r28, r29, r30, r5, lr, out r3_31, out r25, out r26, out r27, out r28, out r29, out r30, out r31_33)
	r11_47 = r3_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400E2C:
	Mem51[Mem16[r4:word32]:byte] = (byte) (int32) (int8) r3
	word32 r6_52 = Mem51[r4:word32]
	word32 r7_53 = (word32) Mem51[r6_52:byte]
	Mem55[r4:word32] = r6_52 + 1
	r11_47 = (int32) (int16) ((int32) (int8) r7_53 & 0x000000FF)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400E68:
	branch r11_47 != -1 l00400E7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400E7C:
	Mem69[r31_33:word32] = Mem66[r31_33:word32] + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400E70:
	Mem71[r31_33:word32] = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400E88:
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = r30
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400E04_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00400E9C(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: cr0 lr r1
fn00400E9C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400E9C:
	Mem7[v3:word32] = r28
	Mem10[v3 + 4:word32] = r29
	Mem13[v3 + 8:word32] = r30
	Mem16[v3 + 12:word32] = r31
	word32 r28_25 = r3
	word32 r29_27 = r5
	word32 r30_29 = r6
	word32 r31_31 = r4 + -1
	branch r4 <= 0x00000000 l00400EEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400ECC:
	r2 = fn00400E04(r2, r28_25, r29_27, r30_29, r25, r26, r27, r28_25, r29_27, r30_29, lr, out r25, out r26, out r27, out r28_25, out r29_27, out r30_29)
	r31_31 = r31_128 + -1
	r31_128 = r31_31
	branch r31_128 > 0x00000000 l00400ECC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400EEC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400E9C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00400F00(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: cr0 lr r1
fn00400F00_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400F00:
	Mem7[v3:word32] = r28
	Mem10[v3 + 4:word32] = r29
	Mem13[v3 + 8:word32] = r30
	Mem16[v3 + 12:word32] = r31
	word32 r30_25 = r3
	word32 r28_27 = r5
	word32 r29_29 = r6
	word32 r31_31 = r4 + -1
	branch r4 <= 0x00000000 l00400F60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400F30:
	r2 = fn00400E04(r2, (int32) (int8) (word32) Mem30[r30_25:byte], r28_27, r29_29, r25, r26, r27, r28_27, r29_29, r30_25 + 1, lr, out r25, out r26, out r27, out r28_27, out r29_29, out r30_25)
	r31_31 = r31_133 + -1
	r31_133 = r31_31
	branch r31_133 > 0x00000000 l00400F30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400F60:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400F00_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00400F74(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: r3 r4
// Preserved: r1
fn00400F74_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400F74:
	Mem7[r3:word32] = Mem0[r3:word32] + 4
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400F74_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00400F88(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: r3 r4
// Preserved: r1
fn00400F88_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400F88:
	Mem7[r3:word32] = Mem0[r3:word32] + 4
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400F88_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00400F9C(word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00400F9C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400F9C:
	word32 r25_26
	word32 r26_27
	word32 r27_28
	word32 r28_29
	word32 r29_30
	word32 r3_31
	word32 r30_32
	word32 r31_33
	word32 r2_25 = fn00400FC4(r2, r3, Mem0[Mem0[r2 + 100:word32]:word32], r25, r26, r27, r28, r29, r30, r31, lr, out r3_31, out r25_26, out r26_27, out r27_28, out r28_29, out r29_30, out r30_32, out r31_33)
	r3Out = r3_31
	r25Out = r25_26
	r26Out = r26_27
	r27Out = r27_28
	r28Out = r28_29
	r29Out = r29_30
	r30Out = r30_32
	r31Out = r31_33
	return r2_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400F9C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00400FC4(word32 r2, word32 r3, word32 r4, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: cr0 lr r1
fn00400FC4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400FC4:
	Mem7[v3:word32] = r30
	Mem10[v3 + 4:word32] = r31
	word32 r30_15 = r4
	branch r3 <= -32 l00400FF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400FF8:
	word32 r31_23 = r3 + 7 & -8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401004:
	word32 r3_38
	word32 r2_49 = fn0040105C(r2, r31_23, r25, r26, r27, r28, r29, r30_15, r31_23, lr, out r3_38, out r25, out r26, out r27, out r28, out r29, out r30_15, out r31_23)
	branch r3_38 != 0x00000000 l00401048
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401014:
	branch r30_15 == 0x00000000 l00401048
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401048:
	r3Out = r3_38
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = <invalid>
	r31Out = <invalid>
	return r2_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040101C:
	word32 r3_71
	r2 = fn004017F0(r2_49, r31_23, out r3_71)
	branch r3_71 != 0x00000000 l00401004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401030:
	r3Out = 0
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00400FE8:
	r3Out = 0
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00400FC4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0040105C(word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn0040105C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040105C:
	Mem10[v5:word32] = r29
	Mem13[v5 + 4:word32] = r30
	Mem16[v5 + 8:word32] = r31
	word32 r3_23 = fn00401F40(r2, r3)
	word32 r30_114 = r3
	word32 r31_105 = r3_23
	branch r3_23 != 0x00000000 l004010D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401088:
	word32 r29_52
	word32 r3_53
	r2 = fn00401ADC(r2, r3, r25, r26, r27, r28, r29, r3, r3_23, lr, out r3_53, out r25, out r26, out r27, out r28, out r29_52, out r30_114)
	branch r3_53 == -1 l004010C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004010C0:
	r3Out = 0
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = r29_52
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040109C:
	word32 r3_76 = fn00401F40(r2, r30_114)
	r31_105 = r3_76
	branch r3_76 != 0x00000000 l004010D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004010B4:
	r2 = fn00401AB4(r2, r29_52, r30_114, out r29_235, out r30_114)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004010D8:
	word32 r29_110 = -4
	branch (Mem16[Mem16[r31_105:word32] + 4:word32] & -4) - (Mem16[r31_105 + 4:word32] & -4) - r30_114 == 0x00000008 l00401128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401100:
	word32 r3_122
	r2 = fn0040115C(r2, r31_105, r30_114, -4, r30_114, r31_105, out r3_122, out r29_110, out r31_105)
	branch r3_122 == 0x00000000 l00401128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401114:
	Mem139[r3_122 + 4:word32] = Mem16[r3_122 + 4:word32] & -3 | 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401128:
	word32 r5_147 = Mem142[r31_105:word32]
	word32 r6_149 = Mem142[r2 + 104:word32]
	word32 r4_151 = Mem142[r31_105 + 4:word32] & r29_110
	Mem152[r31_105 + 4:word32] = r4_151
	Mem153[r6_149 + 4:word32] = r5_147
	r3Out = (r4_151 & r29_110) + 8
	r25Out = r25
	r26Out = r26
	r27Out = r27
	r28Out = r28
	r29Out = dwLoc10
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040105C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0040115C(word32 r2, word32 r3, word32 r4, word32 r29, word32 r30, word32 r31, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r29 r3 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6
// Preserved: lr r1
fn0040115C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040115C:
	Mem7[v3:word32] = r29
	Mem10[v3 + 4:word32] = r30
	Mem13[v3 + 8:word32] = r31
	branch (Mem13[Mem13[r3:word32] + 4:word32] & -4) - (Mem13[r3 + 4:word32] & -4) + -8 <= r4 l004011E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040119C:
	word32 r3_33
	r2 = fn004019CC(r2, out r3_33)
	branch r3_33 == 0x00000000 l004011E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004011E4:
	r3Out = 0
	r29Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004011AC:
	word32 r29_60 = (Mem30[r3 + 4:word32] & -4) + r4
	Mem62[r3_33 + 4:word32] = r29_60 + 8
	Mem63[r29_60 + 8:word32] = r3_33
	Mem66[r3_33:word32] = Mem63[r3:word32]
	Mem67[r3:word32] = r3_33
	r3Out = r3_33
	r29Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040115C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004011FC(word32 r2, word32 r3, word32 r29, word32 r30, ptr32 & r3Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31]
// LiveOut: r2 r27 r28 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r1 r31
fn004011FC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004011FC:
	branch r3 != 0x00000000 l00401234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401234:
	word32 r29_19
	word32 r3_20
	word32 r30_21
	word32 r31_22
	word32 r2_28 = fn004012B0(r2, r3, r29, r30, r3, out r3_20, out r29_19, out r30_21, out r31_22)
	branch r3_20 == 0x00000000 l0040125C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040125C:
	branch (Mem12[r31_22 + 12:word32] & 0x00004000) == 0x00000000 l00401298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401298:
	r3Out = 0
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = r29_19
	r30Out = r30_21
	r31Out = <invalid>
	return r2_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401268:
	word32 r29_45
	word32 r3_46
	word32 r30_47
	word32 r2_56 = fn004020BC(r2_28, Mem12[r31_22 + 16:word32], r29_19, r30_21, r31_22, out r3_46, out r29_45, out r30_47)
	word32 r3_135 = -1
	branch r3_46 != 0x00000000 l00401284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401280:
	r3_135 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401284:
	r3Out = r3_135
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = r29_45
	r30Out = r30_47
	r31Out = <invalid>
	return r2_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401244:
	r3Out = -1
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = r29_19
	r30Out = r30_21
	r31Out = <invalid>
	return r2_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401218:
	word32 r3_79
	word32 r29_86
	word32 r30_87
	word32 r2_88 = fn00401380(r2, 0, r27, r28, r29, r30, r3, out r3_79, out r29_86, out r30_87)
	r3Out = r3_79
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = r29_86
	r30Out = r30_87
	r31Out = <invalid>
	return r2_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004011FC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004012B0(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004012B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004012B0:
	Mem7[v3:word32] = r29
	Mem10[v3 + 4:word32] = r30
	Mem13[v3 + 8:word32] = r31
	word32 r31_16 = r3
	word32 r11_17 = Mem13[r3 + 12:word32]
	word32 r29_24 = 0
	branch (r11_17 & 0x00000003) != 2 l00401334
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004012D8:
	branch (r11_17 & 0x00000108) == 0x00000000 l00401334
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004012E0:
	word32 r4_27 = Mem23[r3 + 8:word32]
	word32 r30_29 = Mem23[r3:word32] - r4_27
	branch r30_29 <= 0x00000000 l00401334
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004012F0:
	word32 r3_36
	word32 r30_46
	r2 = fn00402248(r2, Mem23[r3 + 16:word32], r4_27, r30_29, 0, r30_29, r3, out r3_36, out r29_24, out r30_46, out r31_16)
	branch r3_36 != r30_46 l00401324
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401324:
	Mem56[r31_16 + 12:word32] = Mem23[r31_16 + 12:word32] | 0x00000020
	r29_24 = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401308:
	word32 r11_57 = Mem23[r31_16 + 12:word32]
	branch (r11_57 & 0x00000080) == 0x00000000 l00401334
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401314:
	Mem62[r31_16 + 12:word32] = r11_57 & -3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401334:
	word32 r4_67 = Mem64[r31_16 + 8:word32]
	Mem72[r31_16 + 4:word32] = 0
	Mem73[r31_16:word32] = r4_67
	r3Out = r29_24
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004012B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0040135C(word32 r2, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r31:[0..31]
// LiveOut:
// Trashed: cr0 r12 r2 r27 r28 r29 r3 r30 r31 r4 r5
// Preserved: lr r1
fn0040135C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040135C:
	fn00401380(r2, 1, r27, r28, r29, r30, r31, out r3_32, out r29_33, out r30_34)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040135C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401380(word32 r2, word32 r3, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r3 r30
// Trashed: cr0 lr r12 r2 r27 r28 r29 r3 r30 r31 r4 r5
// Preserved: r1
fn00401380_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401380:
	Mem7[v3:word32] = r27
	Mem10[v3 + 4:word32] = r28
	Mem13[v3 + 8:word32] = r29
	Mem16[v3 + 12:word32] = r30
	Mem19[v3 + 16:word32] = r31
	word32 r4_23 = Mem19[r2 + 72:word32]
	word32 r27_22 = Mem19[r2 + 108:word32]
	word32 r31_100 = r4_23
	word32 r30_102 = r3
	word32 r29_105 = 0
	word32 r28_108 = 0
	branch Mem19[r27_22:word32] < r4_23 l00401418
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004013B4:
	branch r30_102 != 1 l004013E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004013BC:
	branch (Mem31[r31_100 + 12:word32] & 0x00000083) == 0x00000000 l004013E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004013E0:
	branch r30_102 != 0x00000000 l00401408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004013E8:
	branch (Mem31[r31_100 + 12:word32] & 0x00000002) == 0x00000000 l00401408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004013F4:
	word32 r3_76
	r2 = fn004011FC(r2, r31_100, r29_105, r30_102, out r3_76, out r27_22, out r28_108, out r29_105, out r30_102, out r31_100)
	branch r3_76 != -1 l00401408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401404:
	r28_108 = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004013C8:
	word32 r3_92
	r2 = fn004011FC(r2, r31_100, r29_105, r30_102, out r3_92, out r27_22, out r28_108, out r29_105, out r30_102, out r31_100)
	branch r3_92 == -1 l00401408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004013D8:
	r29_105 = r29_105 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401408:
	r31_100 = r31_100 + 32
	branch Mem31[r27_22:word32] >= r31_100 l004013B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401418:
	word32 r3_107 = r29_105
	branch r30_102 == 1 l00401428
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401424:
	r3_107 = r28_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401428:
	r3Out = r3_107
	r29Out = dwLoc10
	r30Out = dwLoc0C
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401380_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401474(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31]
// LiveOut: r3
// Trashed: cr0 r3 r4 r5
// Preserved: r1
fn00401474_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401474:
	branch Mem0[Mem0[r2 + 116:word32]:word32] > r3 l00401490
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401490:
	return (int32) (int8) (word32) Mem0[Mem0[r2 + 120:word32] + r3:byte] & 0x00000040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401488:
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401474_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn004014A4(word32 r2, word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: cr0 ctr r10 r11 r3 r4 r5
// Preserved: r1
fn004014A4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014A4:
	word32 r3_28 = 0
	branch r3 == 0x00000000 l004014C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014B4:
	branch r5 != 0x00000000 l004014C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014C4:
	branch r3 != 0x00000000 l004014F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014F4:
	branch r5 <= 0x00000000 l00401550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014FC:
	word32 ctr_13 = r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401500:
	word32 r11_16 = (word32) Mem15[r4:word16]
	branch r11_16 >= 0x00000100 l00401538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401538:
	Mem21[Mem15[r2 + 124:word32]:word32] = 42
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040150C:
	Mem29[r3 + r3_28:byte] = (byte) (int32) (int8) (r11_16 & 0x000000FF)
	r4 = r4 + 2
	branch (word32) Mem29[r4:word16] == 0x00000000 l0040154C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040154C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040152C:
	r3_28 = r3_28 + 1
	ctr_13 = ctr_13 - 0x00000001
	branch ctr_13 != 0x00000000 l00401500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401534:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401550:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014CC:
	word32 r11_39 = r4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014D0:
	r11_39 = r11_87 + 2
	r11_87 = r11_39
	branch (word32) Mem0[r11_87:word16] != 0x00000000 l004014D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014E4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004014BC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004014A4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00401554(word32 r2, word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: cr0 r3 r4 r5
// Preserved: r1
fn00401554_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401554:
	branch r3 != 0x00000000 l00401568
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401568:
	branch (r4 & 0x0000FFFF) <= 0x000000FF l00401584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401584:
	Mem13[r3:byte] = (byte) (int32) (int8) (r4 & 0x0000FFFF & 0x000000FF)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401570:
	Mem19[Mem0[r2 + 124:word32]:word32] = 42
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401560:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401554_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401598(word32 r2, word32 r3, word32 r4, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00401598_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401598:
	Mem7[v3:word32] = r27
	Mem10[v3 + 4:word32] = r28
	Mem13[v3 + 8:word32] = r29
	Mem16[v3 + 12:word32] = r30
	Mem19[v3 + 16:word32] = r31
	word32 r31_195 = r4
	word32 r10_23 = Mem19[r4 + 12:word32]
	word32 r27_147 = r3
	word32 r30_151 = Mem31[r4 + 16:word32]
	branch (r10_23 & 0x00000082) == 0x00000000 l00401774
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004015C4:
	branch (r10_23 & 0x00000040) != 0x00000000 l00401774
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401774:
	Mem38[r4 + 12:word32] = r10_23 | 0x00000020
	r3Out = -1
	r25Out = r25
	r26Out = r26
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004015CC:
	branch (r10_23 & 0x00000001) == 0x00000000 l00401620
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401620:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004015D4:
	word32 r4_56 = Mem31[r4 + 12:word32]
	Mem61[r4 + 4:word32] = 0
	branch (r4_56 & 0x00000010) == 0x00000000 l00401608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401608:
	Mem63[r4 + 12:word32] = r4_56 | 0x00000020
	r3Out = -1
	r25Out = r25
	r26Out = r26
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004015EC:
	word32 r10_77 = Mem61[r4 + 12:word32]
	Mem80[r4:word32] = Mem61[r4 + 8:word32]
	Mem82[r4 + 12:word32] = r10_77 & -2
	r10_23 = r10_77 & -2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401624:
	word32 r10_84 = r10_23 | 0x00000002
	Mem86[r4 + 12:word32] = r10_84
	Mem89[r4 + 12:word32] = r10_84 & -17
	word32 r10_90 = Mem89[r4 + 12:word32]
	Mem92[r4 + 4:word32] = 0
	word32 r28_148 = 0
	branch (r10_90 & 0x0000010C) != 0x00000000 l00401688
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040164C:
	word32 r11_98 = Mem92[r2 + 72:word32]
	branch r4 == r11_98 + 32 l00401668
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040165C:
	branch r4 != r11_98 + 64 l0040167C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401668:
	branch fn00401474(r2, r30_151) != 0x00000000 l00401688
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040167C:
	r2 = fn0040298C(r2, r4, r25, r26, r3, 0, r29, r30_151, lr, out r25, out r26, out r27_147, out r28_148, out r30_151)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401688:
	word32 r29_193
	branch (Mem92[r4 + 12:word32] & 0x00000108) == 0x00000000 l0040170C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040170C:
	word32 r3_184
	r2 = fn00402248(r2, r30_151, fp + -24, 1, 1, r30_151, r4, out r3_184, out r29_193, out r30_466, out r31_195)
	r28_148 = r3_184
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401694:
	word32 r4_202 = Mem92[r4 + 8:word32]
	word32 r5_203 = Mem92[r4 + 24:word32]
	r29_193 = Mem92[r4:word32] - r4_202
	Mem207[r4:word32] = r4_202 + 1
	Mem209[r4 + 4:word32] = r5_203 + -1
	branch r29_193 <= 0x00000000 l004016D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004016D4:
	branch ((int32) (int8) (word32) Mem209[Mem209[r2 + 120:word32] + r30_151:byte] & 0x00000020) == 0x00000000 l004016FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004016E8:
	r2 = fn004026B8(r2, r30_151, 0, 2, r26, r27_147, r28_148, r29_193, r30_151, r4, out r26, out r27_147, out r28_148, out r29_193, out r31_195)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004016B8:
	word32 r3_247
	r2 = fn00402248(r2, r30_151, Mem209[r4 + 8:word32], r29_193, r29_193, r30_151, r4, out r3_247, out r29_193, out r30_467, out r31_195)
	r28_148 = r3_247
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004016FC:
	Mem270[Mem209[r31_195 + 8:word32]:byte] = (byte) (int32) (int8) r27_147
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401730:
	branch r28_148 == r29_193 l0040175C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040175C:
	r3Out = r27_147 & 0x000000FF
	r25Out = r25
	r26Out = r26
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401738:
	Mem301[r31_195 + 12:word32] = Mem278[r31_195 + 12:word32] | 0x00000020
	r3Out = -1
	r25Out = r25
	r26Out = r26
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401598_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0040178C(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: r3 r4 r5
// Preserved: r1
fn0040178C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040178C:
	Mem8[Mem0[r2 + 128:word32]:word32] = r3
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040178C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004017F0(word32 r2, word32 r3, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31]
// LiveOut: r2 r3
// Trashed: cr1 ctr r0 r11 r12 r2 r3 r4
// Preserved: lr r1
fn004017F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004017F0:
	branch Mem0[Mem0[r2 + 128:word32]:word32] == 0x00000000 l00401838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040180C:
	fn00403F10(r2, Mem12[Mem12[r2 + 128:word32]:word32])
	r2 = dwLoc24
	branch r3 == 0x00000000 l00401838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401838:
	r3Out = 0
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401824:
	r3Out = 1
	return dwLoc24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004017F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004019CC(word32 r2, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r2 r3
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r3 r4 r5
// Preserved: lr r1 r31
fn004019CC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004019CC:
	word32 r31_8 = Mem6[r2 + 104:word32]
	branch Mem6[r31_8 + 8:word32] != 0x00000000 l00401A10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004019EC:
	word32 r3_20
	r2 = fn00401A34(r2, out r3_20)
	branch r3_20 != 0x00000000 l00401A10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401A10:
	word32 r4_26 = Mem12[r31_8 + 8:word32]
	Mem31[r31_8 + 8:word32] = Mem12[r4_26:word32]
	r3Out = r4_26
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004019F8:
	r3Out = 0
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004019CC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401A34(word32 r2, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r2 r3
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r3 r4
// Preserved: lr r1
fn00401A34_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401A34:
	fn00404104(r2)
	branch true l00401A68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401A68:
	Mem19[Mem7[dwLoc24 + 104:word32] + 8:word32] = 4096
	word32 r10_18 = 0x00001000
	word32 r11_22 = 0x00001008
	branch false l00401A98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401A84:
	Mem25[r10_18:word32] = r11_73
	r10_18 = r11_73
	r11_22 = r11_73 + 8
	r11_73 = r11_22
	branch r11_73 < 8184 l00401A84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401A98:
	Mem38[8184:word32] = 0
	r3Out = 1
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401A54:
	r3Out = 0
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401A34_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401AB4(word32 r2, word32 r29, word32 r30, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r30:[0..31]
// LiveOut: r2 r29 r30
// Trashed: cr1 ctr r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00401AB4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401AB4:
	word32 r29_18
	word32 r30_20
	word32 r2_17 = fn00402C4C(r2, 18, r29, r30, out r29_18, out r30_20)
	r29Out = r29_18
	r30Out = r30_20
	return r2_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401AB4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401ADC(word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r3 r30
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: cr0 lr r1
fn00401ADC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401ADC:
	Mem7[v3:word32] = r25
	Mem10[v3 + 4:word32] = r26
	Mem13[v3 + 8:word32] = r27
	Mem16[v3 + 12:word32] = r28
	Mem19[v3 + 16:word32] = r29
	Mem22[v3 + 20:word32] = r30
	Mem25[v3 + 24:word32] = r31
	word32 r25_28 = Mem25[r2 + 152:word32]
	word32 r28_114 = Mem25[r2 + 148:word32]
	word32 r30_112 = Mem25[r25_28 + 4:word32]
	word32 r11_33 = Mem25[r25_28 + 4:word32]
	word32 r27_113 = -1
	word32 r26_232 = r3 + 15 & -8
	branch r11_33 >= Mem25[r28_114:word32] l00401BA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401B24:
	r31 = r11_33 << 0x04
	word32 r29_105 = Mem39[r2 + 140:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401B2C:
	branch Mem39[Mem39[Mem39[r29_105:word32]:word32] + r31:word32] == 0x00000000 l00401B54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401B40:
	word32 r3_71
	r2 = fn00401DD8(r2, r30_112, r26_232, r26_232, r27_113, r28_114, r29_105, r30_112, r31, lr, out r3_71, out r26_232, out r27_113, out r28_114, out r29_105, out r30_112, out r31)
	branch r3_71 != -1 l00401B80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401B80:
	Mem86[r25_28 + 4:word32] = r30_112
	r3Out = 0
	r25Out = <invalid>
	r26Out = <invalid>
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401B54:
	branch Mem39[Mem39[Mem39[r29_105:word32]:word32] + r31:word32] == 0x00000000 l00401B9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401B9C:
	r27_113 = r30_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401B68:
	r30_112 = r30_112 + 1
	r31 = r31 + 16
	branch r30_112 < Mem39[r28_114:word32] l00401B2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401B7C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401BA0:
	word32 r29_125 = Mem39[r2 + 140:word32]
	word32 r11_127 = Mem39[r28_114:word32]
	word32 r9_128 = Mem39[r29_125:word32]
	branch r27_113 != -1 l00401CC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401BB4:
	word32 r31_131 = r11_127 + 32 << 0x04
	branch r9_128 == 0x00000000 l00401BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401BC4:
	r2 = Mem39[fn0040408C(r2) + 20:word32]
	r9_128 = Mem39[r29_125:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401BD8:
	branch r9_128 == 0x00000000 l00401BF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401BE0:
	branch (word32) Mem39[Mem39[Mem39[r2 + 152:word32]:word32]:word16] == 0x00000000 l00401C74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401BF4:
	fn004040A4(r2)
	branch r31_131 != 0x00000000 l00401C24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401C24:
	word32 r1_165 = fn004040BC(dwLoc44)
	r2 = Mem39[r1_165 + 20:word32]
	branch Mem39[r29_125:word32] == 0x00000000 l00401C6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401C3C:
	Mem177[r1_165 + 56:word32] = Mem39[r28_114:word32]
	r2 = Mem177[fn004040EC(Mem177[fn004040D4(r2) + 20:word32]) + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401C6C:
	Mem197[r29_125:word32] = r31_131
	r9_128 = Mem197[r29_125:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401C74:
	r31 = r31_131
	word32 r11_205 = 0
	word32 r10_207 = (Mem200[r28_114:word32] << 0x04) + Mem200[r9_128:word32]
	word32 ctr_209 = 32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401C94:
	Mem214[r10_207 + r11_205:word32] = 0
	word32 r11_215 = r11_205 + 4
	Mem216[r10_207 + r11_215:word32] = 0
	Mem218[r10_207 + (r11_215 + 4):word32] = 0
	Mem220[r10_207 + (r11_215 + 8):word32] = 0
	r11_205 = r11_215 + 12
	ctr_209 = ctr_209 - 0x00000001
	branch ctr_209 != 0x00000000 l00401C94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401CB8:
	word32 r4_225 = Mem220[r28_114:word32]
	Mem228[r28_114:word32] = r4_225 + 32
	r27_113 = r4_225
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401CC8:
	word32 r3_273
	word32 r2_271 = fn00401CE8(r2, r27_113, r26_232, r26_232, r27_113, r28_114, r29_125, r30_112, r31, lr, out r3_273)
	r3Out = r3_273
	r25Out = <invalid>
	r26Out = <invalid>
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	return r2_271
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401C0C:
	r3Out = -1
	r25Out = <invalid>
	r26Out = <invalid>
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	return dwLoc44
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401ADC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401CE8(word32 r2, word32 r3, word32 r4, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r3
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00401CE8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401CE8:
	Mem7[v3:word32] = r29
	Mem10[v3 + 4:word32] = r30
	Mem13[v3 + 8:word32] = r31
	word32 r31_24 = Mem13[Mem13[r2 + 144:word32]:word32] + 4095 & -4096
	branch r4 <= r31_24 l00401D20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401D1C:
	r31_24 = r4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401D20:
	fn00404104(r2)
	word32 r3_31 = r31_24 + 8
	word32 r2_124 = dwLoc34
	branch r3_31 == 0x00000000 l00401DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401D38:
	word32 r8_51
	word32 r11_47 = Mem28[Mem28[Mem28[dwLoc34 + 140:word32]:word32]:word32]
	branch (r3_31 & 0x00000003) == 0x00000000 l00401D6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401D6C:
	Mem50[r11_47 + (r3 << 0x04):word32] = r3_31
	r8_51 = (r3 << 0x04) + r11_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401D50:
	Mem56[r11_47 + (r3 << 0x04):word32] = r3_31 + 7 & -8
	r8_51 = (r3 << 0x04) + r11_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401D78:
	Mem65[r8_51 + 12:word32] = r3_31
	Mem67[r8_51 + 8:word32] = r31_24
	Mem69[r8_51 + 4:word32] = 0
	word32 r3_91
	word32 r30_92
	word32 r31_93
	word32 r2_86 = fn00401DD8(dwLoc34, r3, r4, r26, r27, r28, r4, r3, r31_24, lr, out r3_91, out r26_214, out r27_215, out r28_216, out r29_217, out r30_92, out r31_93)
	branch r3_91 == 0x00000000 l00401DA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401DA8:
	r3Out = 0
	return r2_86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401D9C:
	r2_124 = fn00401ED4(r2_86, r30_92, r30_92, r31_93)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401DC0:
	r3Out = -1
	return r2_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401CE8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401DD8(word32 r2, word32 r3, word32 r4, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r26 r27 r28 r29 r3 r30 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: cr0 lr r1
fn00401DD8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401DD8:
	Mem7[v3:word32] = r28
	Mem10[v3 + 4:word32] = r29
	Mem13[v3 + 8:word32] = r30
	Mem16[v3 + 12:word32] = r31
	word32 r29_19 = Mem16[r2 + 140:word32]
	word32 r5_25 = Mem16[Mem16[r29_19:word32]:word32]
	word32 r11_27 = r5_25 + (r3 << 0x04)
	word32 r8_28 = Mem16[r11_27 + 4:word32]
	word32 r9_29 = Mem16[r11_27 + 8:word32]
	word32 r30_30 = r4 + 7 & -8
	word32 r10_31 = r9_29 - r8_28
	word32 r8_37 = r8_28 + Mem16[r5_25 + (r3 << 0x04):word32]
	branch r30_30 <= r10_31 l00401E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401E24:
	fn0040411C(r2)
	word32 r10_52 = Mem36[Mem36[r29_19:word32]:word32]
	r28 = r30_30 - r10_31 + r9_29 + 8 & -8
	r2 = dwLoc3C
	r11_27 = r10_52 + (r3 << 0x04)
	branch (word32) Mem36[Mem36[Mem36[dwLoc3C + 152:word32]:word32]:word16] == 0x00000000 l00401E78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401E78:
	Mem56[r11_27 + 8:word32] = r28
	r8_37 = Mem56[r11_27 + 4:word32] + Mem56[r10_52 + (r3 << 0x04):word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401E88:
	Mem71[r11_27 + 4:word32] = Mem61[r11_27 + 4:word32] + r30_30
	word32 r26_86
	word32 r27_87
	word32 r29_89
	word32 r3_90
	word32 r30_91
	word32 r2_107 = fn00402CE0(r2, r8_37, r30_30, r26, r27, r28, r29_19, r30_30, r3 << 0x04, lr, out r3_90, out r26_86, out r27_87, out r29_89, out r30_91)
	branch r3_90 == 0x00000000 l00401EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401EB4:
	r2_107 = fn00401AB4(r2_107, r29_89, r30_91, out r29_212, out r30_213)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401EBC:
	r3Out = 0
	r26Out = r26_86
	r27Out = r27_87
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return r2_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401E60:
	r3Out = -1
	r26Out = r26
	r27Out = r27
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return dwLoc3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401DD8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401ED4(word32 r2, word32 r3, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r3 r30 r31 r4
// Preserved: lr r1
fn00401ED4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401ED4:
	Mem7[v3:word32] = r30
	Mem10[v3 + 4:word32] = r31
	word32 r30_13 = Mem10[r2 + 140:word32]
	word32 r11_16 = Mem10[r30_13:word32]
	branch Mem20[Mem10[r11_16:word32] + (r3 << 0x04):word32] == 0x00000000 l00401F14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401F04:
	r2 = Mem20[fn00404134(r2) + 20:word32]
	r11_16 = Mem20[r30_13:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401F14:
	word32 r11_36 = Mem20[r11_16:word32]
	Mem40[r11_36 + (r3 << 0x04):word32] = 0
	word32 r31_41 = r11_36 + (r3 << 0x04)
	Mem42[r31_41 + 4:word32] = 0
	Mem43[r31_41 + 8:word32] = 0
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401ED4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00401F40(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31]
// LiveOut: r3
// Trashed: cr0 r10 r11 r12 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1 r13
fn00401F40_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401F40:
	word32 r7_5 = Mem0[r2 + 104:word32]
	word32 r4_107 = 0
	word32 r11_14 = Mem12[r7_5 + 4:word32]
	branch Mem6[r7_5 + 4:word32] == r7_5 + 12 l00401FDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401FDC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401F64:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401F68:
	branch (Mem18[r11_14 + 4:word32] & 0x00000003) != 0x00000001 l00401FC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401F78:
	word32 r10_25 = Mem24[r11_14:word32]
	word32 r9_27 = Mem24[r10_25 + 4:word32]
	branch (r9_27 & -4) - (Mem24[r11_14 + 4:word32] & -4) + -8 >= r3 l00401FD4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401FD4:
	r4_107 = r11_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401F9C:
	branch (r9_27 & 0x00000003) != 0x00000001 l00401FC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401FC0:
	r11_14 = Mem40[r11_14:word32]
	branch r11_14 != r7_5 + 12 l00401F68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401FD0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401FE0:
	word32 r11_50 = Mem48[r7_5:word32]
	branch Mem48[r7_5 + 4:word32] == r11_50 l004020AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401FFC:
	branch (Mem60[r11_50 + 4:word32] & 0x00000003) != 0x00000001 l00402064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040200C:
	word32 r10_67 = Mem66[r11_50:word32]
	word32 r9_69 = Mem66[r10_67 + 4:word32]
	branch (r9_69 & -4) - (Mem66[r11_50 + 4:word32] & -4) + -8 >= r3 l00402078
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402078:
	r4_107 = r11_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402030:
	branch (r9_69 & 0x00000003) != 0x00000001 l00402064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402064:
	r11_50 = Mem83[r11_50:word32]
	branch Mem83[r7_5 + 4:word32] != r11_50 l00401FFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402074:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402040:
	Mem91[r11_50:word32] = Mem66[r10_67:word32]
	Mem94[r10_67:word32] = Mem91[r7_5 + 8:word32]
	Mem95[r7_5 + 8:word32] = r10_67
	branch Mem95[r7_5 + 4:word32] != r10_67 l0040200C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402060:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402080:
	Mem98[r7_5 + 4:word32] = r11_50
	branch (Mem98[Mem98[r11_50:word32] + 4:word32] & -4) - (Mem98[r11_50 + 4:word32] & -4) + -8 < r3 l004020AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004020A8:
	r4_107 = r11_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004020AC:
	return r4_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00401F40_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00401FA8:
	Mem125[r11_14:word32] = Mem24[r10_25:word32]
	Mem127[r10_25:word32] = Mem125[r7_5 + 8:word32]
	Mem128[r7_5 + 8:word32] = r10_25
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004020BC(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r3 r30
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004020BC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004020BC:
	word32 r4_8 = Mem6[Mem0[r2 + 116:word32]:word32]
	Mem11[v5:word32] = r29
	Mem14[v5 + 4:word32] = r30
	Mem17[v5 + 8:word32] = r31
	branch r3 >= r4_8 l00402220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004020E4:
	word32 r11_29 = (int32) (int8) (word32) Mem25[Mem25[r2 + 120:word32] + r3:byte]
	branch (r11_29 & 0x00000001) == 0x00000000 l00402220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402220:
	word32 r5_35 = Mem25[r2 + 164:word32]
	Mem46[Mem25[r2 + 124:word32]:word32] = 9
	Mem48[r5_35:word32] = 0
	r3Out = -1
	r29Out = <invalid>
	r30Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004020F8:
	branch (r11_29 & 0x00000040) != 0x00000000 l00402210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402210:
	r3Out = 0
	r29Out = <invalid>
	r30Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402100:
	word32 r11_62 = 0
	word32 ctr_64 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402114:
	Mem69[fp + -96 + r11_62:word32] = 0
	word32 r11_70 = r11_62 + 4
	Mem71[fp + -96 + r11_70:word32] = 0
	Mem73[fp + -96 + (r11_70 + 4):word32] = 0
	Mem75[fp + -96 + (r11_70 + 8):word32] = 0
	r11_62 = r11_70 + 12
	ctr_64 = ctr_64 - 0x00000001
	branch ctr_64 != 0x00000000 l00402114
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402138:
	fn00404074(r2)
	branch fp == 0xFFFFFFA0 l00402184
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402184:
	word32 r11_100 = 0
	word32 ctr_109 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402190:
	Mem101[fp + -96 + r11_100:word32] = 0
	word32 r11_102 = r11_100 + 4
	Mem103[fp + -96 + r11_102:word32] = 0
	Mem105[fp + -96 + (r11_102 + 4):word32] = 0
	Mem107[fp + -96 + (r11_102 + 8):word32] = 0
	r11_100 = r11_102 + 12
	ctr_109 = ctr_109 - 0x00000001
	branch ctr_109 != 0x00000000 l00402190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004021B4:
	fn00403F3C(dwLoc84)
	branch fp == 0xFFFFFFA0 l004021F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004021F8:
	r3Out = 0
	r29Out = <invalid>
	r30Out = <invalid>
	return dwLoc84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004021D8:
	fn00403104(dwLoc84, fp + -96)
	r3Out = -1
	r29Out = <invalid>
	r30Out = <invalid>
	return dwLoc84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402160:
	Mem168[Mem87[dwLoc84 + 124:word32]:word32] = 5
	r3Out = -1
	r29Out = <invalid>
	r30Out = <invalid>
	return dwLoc84
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004020BC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00402248(word32 r2, word32 r3, word32 r4, word32 r5, word32 r29, word32 r30, word32 r31, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r2 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00402248_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402248:
	word32 r6_8 = Mem0[Mem0[r2 + 116:word32]:word32]
	Mem18[v11:word32] = r29
	Mem21[v11 + 4:word32] = r30
	Mem24[v11 + 8:word32] = r31
	branch r3 >= r6_8 l00402374
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402270:
	word32 r11_126 = (int32) (int8) (word32) Mem24[Mem24[r2 + 120:word32] + r3:byte]
	branch (r11_126 & 0x00000001) == 0x00000000 l00402374
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402284:
	branch (r11_126 & 0x00000010) != 0x00000000 l00402374
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402374:
	word32 r5_37 = Mem24[r2 + 164:word32]
	Mem41[Mem24[r2 + 124:word32]:word32] = 9
	Mem43[r5_37:word32] = 0
	r3Out = -1
	r29Out = r29
	r30Out = r30
	r31Out = r31
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040228C:
	word32 r2_101
	word32 r3_66
	branch (r11_126 & 0x00000040) == 0x00000000 l004022E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004022E4:
	branch (r11_126 & 0x00000020) == 0x00000000 l00402320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402320:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402314:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402324:
	r3_66 = fp + -96
	r2_101 = Mem73[fn0040405C(r2) + 20:word32]
	r11_126 = dwLoc38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402294:
	word32 r31_78 = Mem24[Mem24[r2 + 156:word32] + (r3 << 0x02):word32]
	word32 r30_80 = Mem24[r31_78 + 4:word32]
	Mem81[r31_78 + 16:word32] = r4
	Mem82[r31_78 + 12:word32] = r5
	r2_101 = Mem82[fn00403F10(r2, Mem82[r30_80 + 16:word32]) + 20:word32]
	r3_66 = (int32) (int16) r31_78
	branch r3_66 == 0x00000000 l004022D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004022D8:
	r11_126 = r5 - Mem82[r31_78 + 12:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004022D0:
	r3_66 = (int32) Mem82[r31_78 + 2:int16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402334:
	branch r3_66 != 0x00000000 l00402354
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402354:
	fn00403104(r2_101, r3_66)
	r3Out = -1
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040233C:
	r3Out = r11_126
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2_101
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00402248_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00402398(word32 r2, word32 r28, word32 r29, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r31:[0..31]
// LiveOut:
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: cr0 lr r1
fn00402398_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402398:
	Mem7[v3:word32] = r29
	Mem10[v3 + 4:word32] = r30
	Mem13[v3 + 8:word32] = r31
	word32 r4_17 = Mem13[r2 + 72:word32]
	word32 r29_16 = Mem13[r2 + 108:word32]
	word32 r31_19 = r4_17 + 96
	word32 r30_23 = 0
	branch Mem13[r29_16:word32] < r4_17 + 96 l004023EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004023C4:
	word32 r3_33
	word32 r31_35
	r2 = fn00403170(r2, r31_19, r28, r29_16, r30_23, r31_19, out r3_33, out r28, out r29_16, out r30_23, out r31_35)
	branch r3_33 == -1 l004023DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004023D8:
	r30_23 = r30_23 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004023DC:
	r31_19 = r31_35 + 32
	branch Mem24[r29_16:word32] >= r31_35 + 32 l004023C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004023EC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00402398_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00402404(word32 r2, word32 r29, word32 r30, word32 r31, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r30
// Trashed: cr1 ctr r0 r12 r2 r29 r3 r30 r4 r5
// Preserved: lr r1 r31
fn00402404_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402404:
	word32 r29_17
	word32 r30_18
	word32 r31_19
	word32 r2_23 = fn0040262C(r2, Mem0[r2 + 168:word32], Mem0[r2 + 172:word32], r29, r30, r31, out r29_17, out r30_18, out r31_19)
	word32 r29_28
	word32 r30_29
	word32 r2_52 = Mem13[fn00404044(Mem13[fn00404044(fn0040262C(r2_23, Mem13[r2_23 + 176:word32], Mem13[r2_23 + 180:word32], r29_17, r30_18, r31_19, out r29_28, out r30_29, out r31_90)) + 20:word32]) + 20:word32]
	branch 0xFFFFF90E == 0x00000000 l00402480
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402458:
	word32 r1_59 = fn00403F9C(r2_52)
	r2_52 = Mem13[r1_59 + 20:word32]
	branch true l00402480
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402474:
	Mem66[Mem13[r2_52 + 184:word32]:word32] = Mem13[r1_59 + 56:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402480:
	r29Out = r29_28
	r30Out = r30_29
	return r2_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00402404_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004024F0(word32 r2, word32 r3, word32 r4, word32 r5, word32 r29, word32 r30, word32 r31, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r2 r29 r31
// Trashed: cr1 ctr r0 r11 r12 r2 r29 r3 r30 r31 r4 r5
// Preserved: lr r1
fn004024F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004024F0:
	word32 r4_9 = Mem0[r2 + 112:word32]
	Mem14[v8:word32] = r30
	Mem17[v8 + 4:word32] = r31
	Mem26[r4_9:byte] = (byte) (int32) (int8) r5
	word32 r30_20 = r3
	word32 r31_22 = r5
	branch r4 != 0x00000000 l00402544
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040251C:
	word32 r3_28 = Mem26[Mem26[r2 + 188:word32]:word32]
	branch r3_28 == 0x00000000 l00402538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040252C:
	r2 = fn0040262C(r2, r3_28, Mem26[Mem26[r2 + 192:word32]:word32], r29, r3, r5, out r29, out r30_20, out r31_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402538:
	r2 = fn0040262C(r2, Mem26[r2 + 196:word32], Mem26[r2 + 200:word32], r29, r30_20, r31_22, out r29, out r30_20, out r31_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402544:
	word32 r29_66
	word32 r30_67
	word32 r31_68
	word32 r2_124 = fn0040262C(r2, Mem26[r2 + 204:word32], Mem26[r2 + 208:word32], r29, r30_20, r31_22, out r29_66, out r30_67, out r31_68)
	branch r31_68 != 0x00000000 l00402574
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402558:
	word32 r11_76 = Mem26[Mem26[r2_124 + 212:word32]:word32]
	branch r11_76 == 0x00000000 l0040256C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402568:
	Mem78[r11_76 + 14:word32] = r30_67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040256C:
	r2_124 = fn00403248(r2_124)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402574:
	r29Out = r29_66
	r31Out = dwLoc04
	return r2_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004024F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0040262C(word32 r2, word32 r3, word32 r4, word32 r29, word32 r30, word32 r31, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r29 r30 r31
// Trashed: cr1 ctr r0 r12 r2 r29 r30 r31 r4
// Preserved: lr r1
fn0040262C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040262C:
	Mem7[v3:word32] = r29
	Mem10[v3 + 4:word32] = r30
	Mem13[v3 + 8:word32] = r31
	word32 r30_16 = r3
	branch r4 <= r3 l0040267C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040264C:
	word32 r31_25 = Mem22[r30_16:word32]
	branch r31_25 == 0x00000000 l00402670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402658:
	branch r31_25 == -1 l00402670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402664:
	r2 = Mem22[fn00403F10(r2, r31_25) + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402670:
	r30_16 = r30_16 + 4
	branch r4 > r30_16 l0040264C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040267C:
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040262C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004026B8(word32 r2, word32 r3, word32 r4, word32 r5, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r2 r26 r27 r28 r29 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004026B8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004026B8:
	Mem7[v3:word32] = r26
	Mem10[v3 + 4:word32] = r27
	Mem13[v3 + 8:word32] = r28
	Mem16[v3 + 12:word32] = r29
	Mem19[v3 + 16:word32] = r30
	Mem22[v3 + 20:word32] = r31
	word32 r1_136 = fp + -160
	word32 r29_105 = r4
	branch Mem22[Mem22[r2 + 116:word32]:word32] <= r3 l00402964
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004026E4:
	word32 r11_39 = (int32) (int8) (word32) Mem35[Mem35[r2 + 120:word32] + r3:byte]
	branch (r11_39 & 0x00000001) == 0x00000000 l00402964
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004026F8:
	branch (r11_39 & 0x00000040) != 0x00000000 l00402964
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402964:
	word32 r5_47 = Mem35[r2 + 164:word32]
	Mem60[Mem35[r2 + 124:word32]:word32] = 9
	Mem62[r5_47:word32] = 0
	r26Out = r26
	r27Out = r27
	r28Out = <invalid>
	r29Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402700:
	word32 r3_130
	branch r5 == 0x00000000 l00402738
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402738:
	r3_130 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040270C:
	branch r5 == 1 l00402744
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402744:
	word32 r11_71 = 0
	word32 ctr_73 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402758:
	Mem78[fp + -104 + r11_71:word32] = 0
	word32 r11_79 = r11_71 + 4
	Mem80[fp + -104 + r11_79:word32] = 0
	Mem82[fp + -104 + (r11_79 + 4):word32] = 0
	Mem84[fp + -104 + (r11_79 + 8):word32] = 0
	r11_71 = r11_79 + 12
	ctr_73 = ctr_73 - 0x00000001
	branch ctr_73 != 0x00000000 l00402758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040277C:
	r1_136 = fn00403FE4(r2)
	r3_130 = fp + -104
	r2 = Mem96[r1_136 + 20:word32]
	r29_105 = r4 + dwLoc3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402714:
	branch r5 == 2 l004027A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004027A8:
	word32 r11_108 = 0
	word32 ctr_110 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004027BC:
	Mem115[fp + -104 + r11_108:word32] = 0
	word32 r11_116 = r11_108 + 4
	Mem117[fp + -104 + r11_116:word32] = 0
	Mem119[fp + -104 + (r11_116 + 4):word32] = 0
	Mem121[fp + -104 + (r11_116 + 8):word32] = 0
	r11_108 = r11_116 + 12
	ctr_110 = ctr_110 - 0x00000001
	branch ctr_110 != 0x00000000 l004027BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004027E0:
	r1_136 = fn00403FFC(r2)
	r3_130 = fp + -104
	r2 = Mem133[r1_136 + 20:word32]
	r29_105 = r4 + dwLoc4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402808:
	branch r3_130 != 0x00000000 l00402920
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402810:
	word32 r31_146 = r1_136 + 56
	word32 r11_147 = 0
	word32 ctr_149 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402820:
	Mem153[r31_146 + r11_147:word32] = 0
	word32 r11_154 = r11_147 + 4
	Mem155[r31_146 + r11_154:word32] = 0
	Mem157[r31_146 + (r11_154 + 4):word32] = 0
	Mem159[r31_146 + (r11_154 + 8):word32] = 0
	r11_147 = r11_154 + 12
	ctr_149 = ctr_149 - 0x00000001
	branch ctr_149 != 0x00000000 l00402820
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402844:
	word32 r27_165 = Mem159[r2 + 156:word32]
	word32 r4_169 = Mem159[r27_165 + (r3 << 0x02):word32]
	Mem173[r31_146 + 46:word32] = r29_105
	Mem176[r31_146 + 24:word16] = (word16) (int32) (int16) r4_169
	Mem179[r31_146 + 44:word16] = 0x0001
	r3_130 = r31_146
	word32 r27_177 = (r3 << 0x02) + r27_165
	r2 = Mem179[fn00404014(r2) + 20:word32]
	branch r31_146 != -39 l00402920
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040287C:
	word32 r11_187 = 0
	word32 ctr_189 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402888:
	Mem193[r31_146 + r11_187:word32] = 0
	word32 r11_194 = r11_187 + 4
	Mem195[r31_146 + r11_194:word32] = 0
	Mem197[r31_146 + (r11_194 + 4):word32] = 0
	Mem199[r31_146 + (r11_194 + 8):word32] = 0
	r11_187 = r11_194 + 12
	ctr_189 = ctr_189 - 0x00000001
	branch ctr_189 != 0x00000000 l00402888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004028AC:
	word32 r4_204 = Mem199[r27_177:word32]
	Mem207[r31_146 + 28:word32] = r29_105
	Mem210[r31_146 + 24:word16] = (word16) (int32) (int16) r4_204
	r3_130 = r31_146
	r2 = Mem210[fn0040402C(r2) + 20:word32]
	branch r31_146 != 0x00000000 l00402920
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004028D0:
	word32 r11_219 = 0
	word32 ctr_221 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004028DC:
	Mem225[r31_146 + r11_219:word32] = 0
	word32 r11_226 = r11_219 + 4
	Mem227[r31_146 + r11_226:word32] = 0
	Mem229[r31_146 + (r11_226 + 4):word32] = 0
	Mem231[r31_146 + (r11_226 + 8):word32] = 0
	r11_219 = r11_226 + 12
	ctr_221 = ctr_221 - 0x00000001
	branch ctr_221 != 0x00000000 l004028DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402900:
	word32 r27_236 = Mem231[r27_177:word32]
	Mem240[r31_146 + 44:word16] = 0x0001
	Mem242[r31_146 + 46:word32] = r29_105
	Mem245[r31_146 + 24:word16] = (word16) (int32) (int16) r27_236
	r3_130 = r31_146
	r2 = Mem245[fn00404014(r2) + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402920:
	branch r3_130 == 0x00000000 l00402948
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402948:
	r26Out = dwLoc18
	r27Out = dwLoc14
	r28Out = <invalid>
	r29Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402928:
	fn00403104(r2, r3_130)
	r26Out = dwLoc18
	r27Out = dwLoc14
	r28Out = <invalid>
	r29Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040271C:
	Mem318[Mem35[r2 + 124:word32]:word32] = 22
	r26Out = r26
	r27Out = r27
	r28Out = <invalid>
	r29Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004026B8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0040298C(word32 r2, word32 r3, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 lr, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r30
// Trashed: cr1 ctr r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r1 r31
fn0040298C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040298C:
	word32 r4_5 = Mem0[r2 + 76:word32]
	Mem17[r4_5:word32] = Mem0[r4_5:word32] + 1
	word32 r25_31
	word32 r26_32
	word32 r27_33
	word32 r28_34
	word32 r3_36
	word32 r30_37
	word32 r31_38
	word32 r2_30 = fn00400F9C(r2, 4096, r25, r26, r27, r28, r29, r30, r3, lr, out r3_36, out r25_31, out r26_32, out r27_33, out r28_34, out r29_100, out r30_37, out r31_38)
	Mem49[r31_38 + 8:word32] = r3_36
	branch r3_36 == 0x00000000 l004029E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004029E4:
	word32 r4_50 = Mem49[r31_38 + 12:word32]
	Mem52[r31_38 + 8:word32] = r31_38 + 20
	Mem54[r31_38 + 12:word32] = r4_50 | 0x00000004
	Mem56[r31_38 + 24:word32] = 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004029CC:
	word32 r4_57 = Mem49[r31_38 + 12:word32]
	Mem59[r31_38 + 24:word32] = 4096
	Mem61[r31_38 + 12:word32] = r4_57 | 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402A00:
	word32 r4_66 = Mem63[r31_38 + 8:word32]
	Mem69[r31_38 + 4:word32] = 0
	Mem70[r31_38:word32] = r4_66
	r25Out = r25_31
	r26Out = r26_32
	r27Out = r27_33
	r28Out = r28_34
	r30Out = r30_37
	return r2_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040298C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00402A24(word32 r2, word32 r3, word32 r4, word32 r5, word32 r11, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r11:[0..31] r13:[0..31] r14:[0..31] r15:[0..31] r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: cr0 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00402A24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402A24:
	word32 r31_159
	word32 r30_158
	word32 r29_157
	word32 r2_156
	Mem7[v3:word32] = r27
	Mem10[v3 + 4:word32] = r28
	Mem13[v3 + 8:word32] = r29
	Mem16[v3 + 12:word32] = r30
	Mem19[v3 + 16:word32] = r31
	word32 r28_22 = r4
	word32 r27_234 = r3
	word32 r29_236 = r5
	branch Mem19[Mem19[r2 + 212:word32]:word32] == 0x00000000 l00402AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402AB0:
	word32 r1_40 = fn00403F9C(r2)
	word32 r2_43 = Mem33[r1_40 + 20:word32]
	branch true l00402B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402AD0:
	r1_40 = fn00403FB4(r2_43)
	r2_43 = Mem33[r1_40 + 20:word32]
	branch fp != 0xFFFFFDE0 l00402AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402AF4:
	r11 = (int32) (int8) (word32) Mem33[0x00000BFF:byte] & 0x000000FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402AE8:
	r11 = Mem33[0x00000120:word32] & 0x000000FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402B04:
	branch (r11 & 0x00000020) == 0x00000000 l00402B4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402B4C:
	word32 r29_131
	word32 r3_132
	word32 r30_133
	word32 r31_134
	r2_156 = fn00402248(fn004032FC(r2_43, Mem33[r2_43 + 216:word32], r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r3, r4, r5, r30, r1_40 + 64, lr, out r3_132, out r29_131, out r30_133, out r31_134), 2, r31_134, r3_132, r29_131, r30_133, r31_134, out r3_415, out r29_157, out r30_158, out r31_159)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402B0C:
	word32 r2_183 = fn004032FC(r2_43, Mem33[r2_43 + 216:word32], r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r3, r4, r5, r30, r1_40 + 64, lr, out r3_416, out r29_157, out r30_158, out r31_159)
	fn004032AC(r31_159)
	r2_156 = Mem33[fn00403FCC(r2_183) + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402A50:
	word32 r31_219 = Mem33[r2 + 72:word32]
	branch (Mem33[r31_219 + 76:word32] & 0x0000010C) != 0x00000000 l00402A7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402A60:
	r2 = fn00403450(r2, r31_219 + 64, 0, 4, 0, r25, r26, r3, r4, r5, r30, r31_219, lr, out r25, out r26, out r27_234, out r28_22, out r29_236, out r31_219)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402A7C:
	word32 r30_260 = r31_219 + 64
	word32 r29_299
	word32 r30_301
	r2_156 = fn004011FC(fn004033C4(r2, r30_260, Mem33[r2 + 216:word32], r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27_234, r28_22, r29_236, r30_260, r31_219, lr, out r29_299, out r30_301, out r31_159), r30_301, r29_299, r30_301, out r3_411, out r27_412, out r28_413, out r29_157, out r30_158, out r31_414)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402B84:
	fn0040326C(r2_156, r29_157, r30_158, r31_159, lr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00402A24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00402BA0(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r30 r31
// Trashed: cr1 ctr r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r0 r1
fn00402BA0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402BA0:
	Mem12[v7:word32] = r30
	Mem15[v7 + 4:word32] = r31
	branch r3 == 0x00000000 l00402C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402BB8:
	word32 r31_17 = Mem15[r3 + -8:word32]
	word32 r30_19 = -4
	branch (Mem15[r31_17 + 4:word32] & -4) == r3 + -8 l00402BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402BD0:
	r2 = fn00401AB4(r2, r29, -4, out r29, out r30_19)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402BD8:
	word32 r10_46 = Mem15[r2 + 220:word32]
	word32 r11_49 = Mem15[r31_17 + 4:word32] & -3 | 0x00000001
	Mem50[r31_17 + 4:word32] = r11_49
	word32 r10_51 = Mem50[r10_46:word32]
	branch r10_51 == -1 l00402C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402C00:
	word32 r9_54 = Mem50[r2 + 104:word32]
	branch Mem50[Mem50[r9_54 + 4:word32] + 4:word32] <= r11_49 l00402C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402C14:
	branch (Mem50[Mem50[r31_17:word32] + 4:word32] & r30_19) - (r11_49 & r30_19) + -8 < r10_51 l00402C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402C34:
	Mem66[r9_54 + 4:word32] = r31_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402C38:
	r29Out = r29
	r30Out = dwLoc08
	r31Out = dwLoc04
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00402BA0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00402C4C(word32 r2, word32 r3, word32 r29, word32 r30, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31]
// LiveOut: r2 r29 r30
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: lr r1 r31
fn00402C4C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402C4C:
	word32 r29_21
	word32 r30_23
	word32 r31_24
	word32 r29_42
	word32 r30_44
	word32 r2_41 = fn00403618(fn004035CC(r2, r29, r30, r3, out r29_21, out r30_23, out r31_24), r31_24, r29_21, r30_23, r31_24, out r29_42, out r30_44, out r31_71)
	fn00403F10(r2_41, Mem9[Mem9[r2_41 + 224:word32]:word32])
	r29Out = r29_42
	r30Out = r30_44
	return dwLoc2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00402C4C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00402CE0(word32 r2, word32 r3, word32 r4, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r26 r27 r29 r3 r30
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00402CE0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402CE0:
	Mem9[v5:word32] = r26
	Mem12[v5 + 4:word32] = r27
	Mem15[v5 + 8:word32] = r28
	Mem18[v5 + 12:word32] = r29
	Mem21[v5 + 16:word32] = r30
	Mem24[v5 + 20:word32] = r31
	word32 dwLoc28_287 = fp + -56
	word32 r3_41
	word32 r2_127 = fn004019CC(r2, out r3_41)
	branch r3_41 == 0x00000000 l00403014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402D30:
	word32 r3_55
	r2_127 = fn004019CC(r2_127, out r3_55)
	branch r3_55 == 0x00000000 l00403014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402D48:
	word32 r3_69
	r2_127 = fn004019CC(r2_127, out r3_69)
	branch r3_69 == 0x00000000 l00403014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402D60:
	word32 r30_104
	word32 r3_87 = fn004036B0(r2_127, r3, fp + -36)
	branch r3_87 != 0x00000000 l00402D9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402D9C:
	dwLoc28_287 = fp + -52
	r30_104 = r3_41
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402D7C:
	branch (Mem81[dwLoc24 + 4:word32] & 0x00000003) != 0x00000002 l00403014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402D90:
	r30_104 = dwLoc24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402DB0:
	word32 r31_165
	Mem110[r30_104 + 4:word32] = r3
	Mem114[r30_104 + 4:word32] = r3 & -3 | 0x00000001
	Mem115[r3:word32] = r30_104
	branch r3_87 >= 0x00000001 l00402DFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402DFC:
	branch (Mem115[dwLoc24 + 4:word32] & 0x00000003) != 0x00000002 l00403014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403014:
	word32 r11_125 = Mem123[dwLoc28_287:word32]
	branch r11_125 == 0x00000000 l00403058
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403024:
	word32 r4_129 = Mem123[r2_127 + 104:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040302C:
	Mem135[r11_125:word32] = Mem132[r4_129 + 8:word32]
	Mem142[r4_129 + 8:word32] = Mem135[dwLoc28_287:word32]
	dwLoc28_287 = dwLoc28_287 + 4
	r11_125 = Mem142[dwLoc28_287:word32]
	branch r11_125 != 0x00000000 l0040302C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403058:
	r3Out = -1
	r26Out = <invalid>
	r27Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	return r2_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402E10:
	r31_165 = Mem115[r2_127 + 104:word32]
	word32 r5_166 = Mem115[dwLoc24:word32]
	branch r5_166 != r31_165 + 12 l00402E4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402E4C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402E28:
	word32 r11_175 = (Mem115[r30_104 + 4:word32] & -4) + r4
	branch Mem115[r31_165 + 16:word32] >= r11_175 l00402E50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402E44:
	Mem177[r31_165 + 16:word32] = r11_175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402E50:
	fn00403070(r30_104, r4, r5_166, fp + -40)
	fn00403070(dwLoc24, (Mem195[Mem195[dwLoc24:word32] + 4:word32] & -4) - (Mem195[dwLoc24 + 4:word32] & -4), r30_104, fp + -40)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402DD4:
	fn00402DEC(r3_87 + 3 << 0x02, lr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402E94:
	r31_165 = Mem221[r2_127 + 104:word32]
	Mem227[r31_165 + 16:word32] = r4 + r3
	fn00403070(r30_104, r4, r31_165 + 12, fp + -40)
	Mem238[r31_165 + 4:word32] = r30_104
	Mem239[r31_165:word32] = r30_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402FB8:
	branch (Mem243[Mem243[r31_165 + 4:word32] + 4:word32] & -4) <= r3 l00402FFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402FCC:
	branch (Mem243[Mem243[r30_104:word32] + 4:word32] & -4) - (Mem243[r30_104 + 4:word32] & -4) + -8 < Mem243[Mem243[r2_127 + 220:word32]:word32] l00402FFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402FF8:
	Mem264[r31_165 + 4:word32] = r30_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402FFC:
	r3Out = 0
	r26Out = <invalid>
	r27Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	return r2_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00402CE0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00402DEC(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r11:[0..31]
// LiveOut:
// Trashed: lr r0
// Preserved: r1
fn00402DEC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00402DEC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00402DEC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403070(word32 r3, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: cr0 r10 r11 r3 r4 r6 r7 r8 r9
// Preserved: r1
fn00403070_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403070:
	word32 r9_5 = Mem0[r3 + 4:word32]
	branch (r9_5 & 0x00000003) == 0x00000002 l004030FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403080:
	word32 r10_10 = Mem0[r5 + 4:word32]
	branch (r10_10 & 0x00000003) != 0x00000002 l004030B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004030B4:
	word32 r4_17 = (r9_5 & -4) + r4
	branch (r10_10 & -4) == r4_17 l004030FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004030D0:
	word32 r4_22 = Mem0[r6:word32]
	word32 r8_24 = Mem0[r4_22:word32]
	Mem27[r6:word32] = r4_22 + 4
	Mem28[r8_24 + 4:word32] = r4_17
	Mem30[r8_24 + 4:word32] = r4_17 & -2 | 0x00000002
	Mem31[r3:word32] = r8_24
	r3 = r8_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403090:
	word32 r4_35 = (r9_5 & -4) + r4
	Mem36[r5 + 4:word32] = r4_35
	Mem40[r5 + 4:word32] = r4_35 & -2 | 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004030FC:
	Mem43[r3:word32] = r5
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403070_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403104(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..15]
// LiveOut:
// Trashed: cr1 r10 r11 r3 r4 r5 r8 r9
// Preserved: r1
fn00403104_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403104:
	word32 r8_6 = Mem0[r2 + 228:word32]
	word32 r3_9 = (int32) (int16) r3
	Mem13[Mem0[r2 + 164:word32]:word32] = r3_9
	word32 r10_14 = 0
	word32 r11_15 = r8_6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403128:
	branch (int32) Mem13[r11_15:int16] == r3_9 l00403148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403148:
	Mem28[Mem13[r2 + 124:word32]:word32] = (word32) Mem13[r8_6 + 2 + (r10_14 << 0x02):word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403134:
	r11_15 = r11_15 + 4
	r10_14 = r10_14 + 1
	branch r11_15 < r8_6 + 184 l00403128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403144:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403160:
	Mem35[Mem13[r2 + 124:word32]:word32] = 22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040316C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403104_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403170(word32 r2, word32 r3, word32 r28, word32 r29, word32 r30, word32 r31, ptr32 & r3Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r28 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00403170_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403170:
	Mem7[v3:word32] = r30
	Mem10[v3 + 4:word32] = r31
	word32 r31_113 = r3
	word32 r11_14 = Mem10[r3 + 12:word32]
	word32 r30_112 = -1
	branch (r11_14 & 0x00000040) == 0x00000000 l004031AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004031AC:
	branch (r11_14 & 0x00000083) == 0x00000000 l00403228
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004031B4:
	word32 r29_28
	word32 r3_29
	word32 r31_31
	word32 r29_52
	word32 r30_54
	word32 r3_67
	r2 = fn00403898(fn00403A0C(fn004012B0(r2, r3, r29, -1, r3, out r3_29, out r29_28, out r30_240, out r31_31), r31_31, r29_28, r3_29, out r29_52, out r30_54), Mem19[r31_31 + 16:word32], r28, r29_52, r30_54, r31_31, out r3_67, out r28, out r29, out r30_112, out r31_113)
	branch r3_67 >= 0x00000000 l004031F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004031F0:
	word32 r3_84 = Mem19[r31_113 + 28:word32]
	branch r3_84 == 0x00000000 l00403228
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403228:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004031FC:
	word32 r3_88
	word32 r29_96
	word32 r31_98
	word32 r30_104
	word32 r2_95 = fn00403744(r2, r3_84, r29, r30_112, r31_113, out r3_88, out r29_96, out r30_104, out r31_98)
	branch r3_88 == 0x00000000 l00403210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040320C:
	r30_104 = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403210:
	r2 = fn00402BA0(r2_95, Mem19[r31_98 + 28:word32], r29_96, r30_104, r31_98, out r29, out r30_112, out r31_113)
	Mem130[r31_113 + 28:word32] = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004031E4:
	r30_112 = -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040322C:
	Mem146[r31_113 + 12:word32] = 0
	r3Out = r30_112
	r28Out = r28
	r29Out = r29
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403194:
	Mem154[r3 + 12:word32] = 0
	r3Out = -1
	r28Out = r28
	r29Out = r29
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403170_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403248(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r2
// Trashed: ctr r0 r12 r2
// Preserved: lr r1
fn00403248_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403248:
	fn00403F84(r2)
	return dwLoc24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403248_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0040326C(word32 r2, word32 r29, word32 r30, word32 r31, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r29:[0..31] r30:[0..31] r31:[0..31]
// LiveOut:
// Trashed: cr1 ctr r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn0040326C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040326C:
	word32 r29_21
	word32 r30_23
	word32 r31_24
	word32 r30_35
	word32 r31_36
	word32 r29_41
	fn004035A0(fn00403B08(fn00403618(r2, 10, r29, r30, r31, out r29_21, out r30_23, out r31_24), 22, r29_21, r30_23, r31_24, lr, out r29_41, out r30_35, out r31_36), 3, r29_41, r30_35, r31_36, out r29_64, out r31_65)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040326C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn004032AC(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: cr0 r10 r11 r4 r9
// Preserved: r1
fn004032AC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032AC:
	branch r3 == 0x00000000 l004032F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032B4:
	branch (int32) (int8) (word32) Mem0[r3:byte] == 0x00000000 l004032F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032C0:
	word32 r11_10 = r3 + 1
	word32 r10_11 = (word32) Mem0[r3:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032C8:
	word32 r4_14 = (word32) Mem13[r11_10 + 0:byte]
	r11_10 = r11_10 + 1
	Mem17[r11_10:byte] = (byte) r10_11
	r10_11 = r4_14
	branch r4_14 != 0x00000000 l004032C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032DC:
	word32 r10_21 = r11_10 - r3
	word32 r9_23 = 255
	branch r10_21 >= 255 l004032F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032EC:
	r9_23 = r10_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032F0:
	Mem29[r3:byte] = (byte) (int32) (int8) r9_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032F8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004032AC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004032FC(word32 r2, word32 r4, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r13:[0..31] r14:[0..31] r15:[0..31] r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004032FC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004032FC:
	Mem26[v13:word32] = r30
	Mem29[v13 + 4:word32] = r31
	word32 r25_74
	word32 r26_75
	word32 r27_76
	word32 r28_77
	word32 r3_79
	word32 r31_81
	word32 r29_108
	word32 r2_115 = fn004004B4(r2, fp + -40, r4, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, fp + -40, lr, out r3_79, out r25_74, out r26_75, out r27_76, out r28_77, out r29_108, out r30_197, out r31_81)
	word32 r4_95 = Mem42[r31_81 + 4:word32]
	Mem100[r31_81 + 4:word32] = r4_95 + -1
	word32 r30_110 = r3_79
	branch r4_95 <= 0x00000000 l0040339C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040339C:
	r2_115 = fn00401598(r2_115, 0, r31_81, r25_74, r26_75, r27_76, r28_77, r29_108, r3_79, r31_81, lr, out r3_198, out r25_122, out r26_121, out r27_106, out r28_107, out r29_108, out r30_110, out r31_199)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403380:
	Mem127[Mem100[r31_81:word32]:byte] = 0x00
	Mem130[r31_81:word32] = Mem127[r31_81:word32] + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004033AC:
	r3Out = r30_110
	r29Out = r29_108
	r30Out = dwLoc08
	r31Out = dwLoc04
	return r2_115
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004032FC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004033C4(word32 r2, word32 r3, word32 r4, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r13:[0..31] r14:[0..31] r15:[0..31] r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31]
// LiveOut: r2 r29 r30 r31
// Trashed: cr0 ctr r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004033C4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004033C4:
	Mem26[v13:word32] = r29
	Mem29[v13 + 4:word32] = r30
	Mem32[v13 + 8:word32] = r31
	word32 r3_44
	word32 r31_45
	word32 r25_54
	word32 r26_55
	word32 r27_56
	word32 r28_57
	word32 r29_58
	word32 r3_99
	word32 r30_100
	word32 r31_101
	word32 r2_124 = fn00400430(fn004004B4(fn004002F8(r2, r3, r25, r26, r27, r28, r29, r30, r3, lr, out r3_44, out r25_54, out r26_55, out r27_56, out r28_57, out r29_58, out r31_45), r31_45, r4, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25_54, r26_55, r27_56, r28_57, r29_58, r3_44, r31_45, lr, out r3_99, out r25_163, out r26_164, out r27_165, out r28_166, out r29_167, out r30_100, out r31_101), r30_100, r31_101, r3_99, r30_100)
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004033C4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403450(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r25Out, ptr32 & r26Out, ptr32 & r27Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r2 r25 r26 r27 r28 r29 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00403450_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403450:
	Mem7[v3:word32] = r27
	Mem10[v3 + 4:word32] = r28
	Mem13[v3 + 8:word32] = r29
	Mem16[v3 + 12:word32] = r30
	Mem19[v3 + 16:word32] = r31
	word32 r28_108 = r6
	branch r5 == 4 l004034B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040347C:
	branch r6 == 0x00000000 l004034A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403484:
	branch r6 > 0x7FFFFFFF l004034A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403494:
	branch r5 == 0x00000000 l004034B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040349C:
	branch r5 == 64 l004034B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004034B4:
	word32 r29_48
	word32 r30_50
	word32 r30_73
	word32 r29_121
	word32 r31_112
	word32 r2_104 = fn00403A0C(fn004012B0(r2, r3, r4, r5, r3, out r3_294, out r29_48, out r30_50, out r31_112), r31_112, r29_48, r30_50, out r29_121, out r30_73)
	word32 r11_84 = Mem32[r31_112 + 12:word32]
	Mem87[r31_112 + 12:word32] = r11_84 & -14605
	branch (r30_73 & 0x00000004) == 0x00000000 l004034F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004034F8:
	branch r29_121 != 0x00000000 l00403540
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403540:
	Mem90[r31_112 + 12:word32] = r11_84 & -14605 | 0x00000100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403500:
	word32 r3_110
	r2_104 = fn00400F9C(r2_104, r6, r25, r26, 0, r6, r29_121, r30_73 & 0x00000004, r31_112, lr, out r3_110, out r25, out r26, out r27_295, out r28_108, out r29_296, out r30_297, out r31_112)
	r29_121 = r3_110
	branch r3_110 != 0x00000000 l00403530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403530:
	Mem125[r31_112 + 12:word32] = Mem87[r31_112 + 12:word32] | 0x00000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403518:
	word32 r4_126 = Mem87[r2_104 + 76:word32]
	Mem130[r4_126:word32] = Mem87[r4_126:word32] + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004034E4:
	Mem132[r31_112 + 12:word32] = r11_84 & -14605 | 0x00000004
	r29_121 = r31_112 + 20
	r28_108 = 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403548:
	Mem137[r31_112 + 8:word32] = r29_121
	Mem139[r31_112 + 24:word32] = r28_108
	Mem140[r31_112:word32] = r29_121
	Mem142[r31_112 + 4:word32] = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040355C:
	r25Out = r25
	r26Out = r26
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r31Out = <invalid>
	return r2_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004034A4:
	r25Out = r25
	r26Out = r26
	r27Out = <invalid>
	r28Out = <invalid>
	r29Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403450_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403574(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut:
// Trashed: cr1 ctr r11 r12 r2 r29 r3 r30 r31 r4 r5
// Preserved: lr r1
fn00403574_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403574:
	fn004024F0(r2, r3, 0, 0, r29, r30, r31, out r29_33, out r31_34)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403574_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004035A0(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, ptr32 & r29Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r31
// Trashed: cr1 ctr r11 r12 r2 r29 r3 r30 r31 r4 r5
// Preserved: lr r1
fn004035A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004035A0:
	word32 r29_19
	word32 r31_22
	word32 r2_18 = fn004024F0(r2, r3, 1, 0, r29, r30, r31, out r29_19, out r31_22)
	r29Out = r29_19
	r31Out = r31_22
	return r2_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004035A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004035CC(word32 r2, word32 r29, word32 r30, word32 r31, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r30 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn004035CC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004035CC:
	word32 r29_21
	word32 r30_23
	word32 r31_24
	word32 r2_20 = fn00403618(r2, 252, r29, r30, r31, out r29_21, out r30_23, out r31_24)
	branch Mem7[Mem7[r2_20 + 232:word32]:word32] == 0x00000000 l00403600
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004035F0:
	r2_20 = Mem7[fn00403F10(r2_20, Mem7[Mem7[r2_20 + 232:word32]:word32]) + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403600:
	word32 r29_54
	word32 r30_56
	word32 r31_57
	word32 r2_53 = fn00403618(r2_20, 255, r29_21, r30_23, r31_24, out r29_54, out r30_56, out r31_57)
	r29Out = r29_54
	r30Out = r30_56
	r31Out = r31_57
	return r2_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004035CC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403618(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r30 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: cr0 lr r1
fn00403618_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403618:
	word32 r8_7 = Mem0[r2 + 236:word32]
	word32 r10_13 = 0
	word32 r11_14 = r8_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403638:
	branch Mem10[r11_14:word32] == r3 l00403654
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403644:
	r11_14 = r11_14 + 8
	r10_13 = r10_13 + 1
	branch r11_14 < r8_7 + 88 l00403638
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403654:
	word32 r11_26 = r10_13 << 0x03
	branch Mem10[r8_7 + r11_26:word32] != r3 l004036A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403664:
	word32 r4_34 = Mem10[r8_7 + 4 + r11_26:word32]
	word32 r5_40 = 0
	branch (word32) (byte) (word32) Mem10[r4_34:byte] == 0x00000000 l00403694
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403684:
	r5_40 = r5_40 + 1
	branch (word32) Mem38[r4_34 + r5_40:byte] != 0x00000000 l00403684
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403694:
	r2 = fn00402248(r2, 2, r4_34, r5_40, r29, r30, r31, out r3_145, out r29, out r30, out r31)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004036A0:
	r29Out = r29
	r30Out = r30
	r31Out = r31
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403618_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004036B0(word32 r2, word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r3
// Trashed: cr1 r10 r11 r3 r5 r9
// Preserved: r1
fn004036B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004036B0:
	word32 r10_5 = Mem0[r2 + 104:word32]
	word32 r11_6 = Mem0[r10_5:word32]
	branch r11_6 != r10_5 + 12 l004036CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004036CC:
	branch (Mem0[r11_6 + 4:word32] & -4) <= r3 l004036E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004036E8:
	branch (Mem0[r10_5 + 16:word32] & -4) > r3 l00403700
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403700:
	word32 r10_17 = r11_6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403704:
	word32 r11_20 = Mem0[r10_17:word32]
	branch (Mem0[r11_20 + 4:word32] & -4) > r3 l00403720
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403720:
	Mem27[r4:word32] = r10_17
	word32 r11_29 = 0
	branch (Mem27[r10_17 + 4:word32] & -4) == r3 l0040373C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403738:
	r11_29 = 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040373C:
	return r11_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403718:
	r10_17 = r11_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004036F8:
	return -2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004036E0:
	return -1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004036C4:
	return -3
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004036B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403744(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, ptr32 & r3Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5 r8 r9
// Preserved: lr r1
fn00403744_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403744:
	word32 r4_9 = (int32) (int8) (word32) Mem0[r3:byte]
	Mem16[v9:word32] = r29
	Mem19[v9 + 4:word32] = r30
	Mem22[v9 + 8:word32] = r31
	branch r4_9 == 0x00000000 l00403880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403760:
	word32 r11_25 = 0
	branch (word32) Mem22[r3:byte] == 0x00000000 l00403780
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403770:
	r11_25 = r11_25 + 1
	branch (word32) Mem22[r3 + r11_25:byte] != 0x00000000 l00403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403780:
	branch r11_25 >= 0x00000100 l00403880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403880:
	Mem47[Mem22[r2 + 124:word32]:word32] = 2
	r3Out = -1
	r29Out = r29
	r30Out = r30
	r31Out = r31
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403788:
	word32 r11_50 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403790:
	word32 r4_54 = (word32) Mem53[r3 + r11_50:byte]
	Mem57[fp + -352 + r11_50:byte] = (byte) r4_54
	r11_50 = r11_50 + 1
	branch r4_54 != 0x00000000 l00403790
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004037A4:
	fn004032AC(fp + -352)
	word32 r11_72 = 0
	word32 ctr_74 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004037C4:
	Mem79[fp + -96 + r11_72:word32] = 0
	word32 r11_80 = r11_72 + 4
	Mem81[fp + -96 + r11_80:word32] = 0
	Mem83[fp + -96 + (r11_80 + 4):word32] = 0
	Mem85[fp + -96 + (r11_80 + 8):word32] = 0
	r11_72 = r11_80 + 12
	ctr_74 = ctr_74 - 0x00000001
	branch ctr_74 != 0x00000000 l004037C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004037E8:
	word32 r2_126 = Mem91[fn00403F54(r2) + 20:word32]
	branch fp != 0xFFFFFFA0 l00403840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403800:
	word32 r11_101 = 0
	word32 ctr_103 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040380C:
	Mem107[fp + -96 + r11_101:word32] = 0
	word32 r11_108 = r11_101 + 4
	Mem109[fp + -96 + r11_108:word32] = 0
	Mem111[fp + -96 + (r11_108 + 4):word32] = 0
	Mem113[fp + -96 + (r11_108 + 8):word32] = 0
	r11_101 = r11_108 + 12
	ctr_103 = ctr_103 - 0x00000001
	branch ctr_103 != 0x00000000 l0040380C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403830:
	r2_126 = Mem119[fn00403F6C(r2_126) + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403840:
	branch fp == 0xFFFFFFA0 l00403868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403868:
	r3Out = 0
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2_126
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403848:
	fn00403104(r2_126, fp + -96)
	r3Out = -1
	r29Out = dwLoc10
	r30Out = dwLoc0C
	r31Out = dwLoc08
	return r2_126
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403744_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403898(word32 r2, word32 r3, word32 r28, word32 r29, word32 r30, word32 r31, ptr32 & r3Out, ptr32 & r28Out, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r28:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r28 r29 r3 r30 r31
// Trashed: cr0 ctr r0 r10 r11 r12 r2 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1
fn00403898_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403898:
	word32 r4_8 = Mem6[Mem0[r2 + 116:word32]:word32]
	Mem11[v5:word32] = r28
	Mem14[v5 + 4:word32] = r29
	Mem17[v5 + 8:word32] = r30
	Mem20[v5 + 12:word32] = r31
	word32 r3_131 = 0
	branch r4_8 <= r3 l004039E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004038C4:
	word32 r28_30 = Mem29[r2 + 120:word32]
	word32 r28_32 = r3 + r28_30
	word32 r11_34 = (int32) (int8) (word32) Mem29[r28_30 + r3:byte]
	branch (r11_34 & 0x00000001) == 0x00000000 l004039E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004039E4:
	word32 r5_40 = Mem29[r2 + 164:word32]
	Mem53[Mem29[r2 + 124:word32]:word32] = 9
	Mem55[r5_40:word32] = 0
	r3Out = -1
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004038DC:
	branch (r11_34 & 0x00000040) != 0x00000000 l0040399C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040399C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004038E4:
	word32 r10_60 = Mem29[r2 + 156:word32]
	branch Mem29[r10_60 + (r3 << 0x02):word32] != -1 l00403904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403904:
	fn00403F24(r2)
	branch fp == 0xFFFFFFA0 l0040394C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040394C:
	word32 r11_78 = 0
	word32 ctr_80 = 5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403958:
	Mem84[fp + -96 + r11_78:word32] = 0
	word32 r11_85 = r11_78 + 4
	Mem86[fp + -96 + r11_85:word32] = 0
	Mem88[fp + -96 + (r11_85 + 4):word32] = 0
	Mem90[fp + -96 + (r11_85 + 8):word32] = 0
	r11_78 = r11_85 + 12
	ctr_80 = ctr_80 - 0x00000001
	branch ctr_80 != 0x00000000 l00403958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040397C:
	r3_131 = fp + -96
	r2 = Mem100[fn00403F3C(dwLoc84) + 20:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040392C:
	fn00403104(dwLoc84, fp + -96)
	r3Out = -1
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return dwLoc84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004038F8:
	Mem130[r10_60 + (r3 << 0x02):word32] = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004039A0:
	Mem136[r28_32:byte] = 0x00
	branch r3_131 == 0x00000000 l004039CC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004039CC:
	r3Out = 0
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004039AC:
	fn00403104(r2, r3_131)
	r3Out = -1
	r28Out = <invalid>
	r29Out = <invalid>
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403898_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403A0C(word32 r2, word32 r3, word32 r29, word32 r30, ptr32 & r29Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31]
// LiveOut: r2 r29 r30
// Trashed: cr0 ctr r10 r11 r12 r2 r29 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: cr1 lr r0 r1 r31
fn00403A0C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403A0C:
	word32 r11_9 = Mem6[r3 + 12:word32]
	branch (r11_9 & 0x00000083) == 0x00000000 l00403A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403A2C:
	branch (r11_9 & 0x00000008) == 0x00000000 l00403A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403A34:
	word32 r31_23
	r2 = fn00402BA0(r2, Mem14[r3 + 8:word32], r29, r30, r3, out r29, out r30, out r31_23)
	word32 r4_39 = Mem14[r31_23 + 12:word32]
	Mem41[r31_23:word32] = 0
	Mem42[r31_23 + 8:word32] = 0
	Mem43[r31_23 + 4:word32] = 0
	Mem46[r31_23 + 12:word32] = r4_39 & -9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403A60:
	r29Out = r29
	r30Out = r30
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403A0C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403B08(word32 r2, word32 r3, word32 r29, word32 r30, word32 r31, word32 lr, ptr32 & r29Out, ptr32 & r30Out, ptr32 & r31Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r2:[0..31] r29:[0..31] r3:[0..31] r30:[0..31] r31:[0..31]
// LiveOut: r2 r29 r30 r31
// Trashed: cr1 ctr r0 r10 r11 r12 r2 r29 r3 r30 r31 r4 r5
// Preserved: lr r1
fn00403B08_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403B08:
	Mem7[v3:word32] = r29
	Mem10[v3 + 4:word32] = r30
	Mem13[v3 + 8:word32] = r31
	branch r3 >= 0x00000017 l00403B94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403B94:
	r29Out = r29
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403B28:
	fn00403B84(r3 + -2 << 0x02, lr)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403BAC:
	word32 r3_37 = fn00403C20(r2, r3)
	word32 r29_41 = r3_37
	word32 r31_42 = Mem21[r3_37 + 8:word32]
	branch r31_42 != 0x00000001 l00403BDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403BDC:
	branch r31_42 != 0x00000000 l00403BF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403BE4:
	r2 = fn004035A0(r2, 3, r3_37, r3, r31_42, out r29_41, out r31_42)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403BF0:
	Mem64[r29_41 + 8:word32] = 0
	fn00403F10(r2, r31_42)
	r29Out = dwLoc10
	r30Out = <invalid>
	r31Out = <invalid>
	return dwLoc34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403BC4:
	r29Out = dwLoc10
	r30Out = <invalid>
	r31Out = <invalid>
	return r2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403B08_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403B84(word32 r11, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r11:[0..31]
// LiveOut:
// Trashed: lr r0
// Preserved: r1
fn00403B84_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403B84:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403B84_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403C20(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31]
// LiveOut: r3
// Trashed: cr1 r10 r11 r3 r4
// Preserved: r1
fn00403C20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403C20:
	word32 r10_6 = Mem0[r2 + 244:word32]
	word32 r11_11 = r10_6
	word32 r10_10 = Mem0[Mem0[r2 + 240:word32]:word32] * 12 + r10_6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403C38:
	branch Mem0[r11_11 + 4:word32] == r3 l00403C50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403C44:
	r11_11 = r11_11 + 12
	branch r10_10 > r11_11 l00403C38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403C50:
	word32 r10_22 = r11_11
	branch Mem0[r11_11 + 4:word32] == r3 l00403C64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403C60:
	r10_22 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403C64:
	return r10_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403C20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void Win32CrtStartup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r13:[0..31] r14:[0..31] r15:[0..31] r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r31:[0..31]
// LiveOut:
// Trashed:
// Preserved:
Win32CrtStartup_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403C6C:
	Mem13[Mem7[r2 + 340:word32]:word32] = fn00403DD8()
	fn00403CA0(r2, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, lr)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

Win32CrtStartup_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403CA0(word32 r2, word32 r13, word32 r14, word32 r15, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r24, word32 r25, word32 r26, word32 r27, word32 r28, word32 r29, word32 r30, word32 r31, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r13:[0..31] r14:[0..31] r15:[0..31] r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r24:[0..31] r25:[0..31] r26:[0..31] r27:[0..31] r28:[0..31] r29:[0..31] r30:[0..31] r31:[0..31]
// LiveOut:
// Trashed: cr0 ctr r10 r11 r12 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r3 r30 r31 r4 r5 r6 r7 r8 r9
// Preserved: lr r1 r13
fn00403CA0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403CA0:
	word32 r4_8 = Mem6[Mem0[r2 + 212:word32]:word32]
	Mem11[v5:word32] = r29
	Mem14[v5 + 4:word32] = r30
	Mem17[v5 + 8:word32] = r31
	word32 r29_22 = Mem17[r2 + 344:word32]
	Mem27[r29_22:word32] = 0
	branch r4_8 != 0x00000000 l00403D38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403CD0:
	Mem30[Mem27[r2 + 348:word32]:word32] = 1
	r13 = Mem45[0x0000092C:word32]
	fn00403D7C(fp + -56)
	Mem58[Mem47[r2 + 352:word32]:word32] = fp + -24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403D38:
	word32 r31_62 = Mem60[r2 + 352:word32]
	word32 r29_68
	word32 r30_70
	word32 r29_131
	word32 r3_132
	word32 r30_133
	word32 r31_134
	fn00403574(fn00400220(fn00402404(r2, r29_22, Mem60[r2 + 348:word32], r31_62, out r29_68, out r30_70), r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29_68, r30_70, r31_62, lr, out r3_132, out r29_131, out r30_133, out r31_134), r3_132, r29_131, r30_133, r31_134)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403CA0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403D7C(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: cr1 r10 r11 r4 r8 r9
// Preserved: r1
fn00403D7C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403D7C:
	branch r3 == 0x00000000 l00403DCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403D84:
	word32 r8_6 = (word32) Mem0[r3:byte]
	branch r8_6 == 0x00000000 l00403DCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403D90:
	word32 r11_14 = r8_6
	word32 r10_11 = r3
	branch r8_6 == 0x00000000 l00403DC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403DA4:
	word32 r10_12 = r3 + -1 + 1
	word32 r9_13 = r3 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403DAC:
	Mem22[r10_12 + 0:byte] = (byte) (word32) Mem18[r9_13 + 0:byte]
	r11_14 = r11_14 + -1
	r9_13 = r9_13 + 1
	r10_12 = r10_12 + 1
	branch r11_14 != 0x00000000 l00403DAC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403DC0:
	r10_11 = r10_12 + 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403DC4:
	Mem27[r10_11:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403DCC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403D7C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403DD8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r3
// Trashed: r3
// Preserved: r1
fn00403DD8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403DD8:
	return fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403DD8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403ED4(word32 r2, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r3:[0..31]
// LiveOut:
// Trashed: r5
// Preserved: r1
fn00403ED4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403ED4:
	Mem7[Mem0[r2 + 356:word32] + 4:word32] = r3
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403ED4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403F10(word32 r2, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31] r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403F10_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403F10:
	word32 r0_5 = Mem0[r12:word32]
	word32 r1_10
	call r0_5 (retsize: 0;)
		uses: ctr:r0_5,r0:r0_5,r1:fp,r12:r12,r2:Mem7[r12 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403F10_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403F24(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut:
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403F24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403F24:
	word32 r12_5 = Mem0[r2 + 336:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403F24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403F3C(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403F3C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403F3C:
	word32 r12_5 = Mem0[r2 + 284:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403F3C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403F54(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403F54_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403F54:
	word32 r12_5 = Mem0[r2 + 332:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403F54_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403F6C(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403F6C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403F6C:
	word32 r12_5 = Mem0[r2 + 328:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403F6C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00403F84(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut:
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403F84_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403F84:
	word32 r12_5 = Mem0[r2 + 260:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403F84_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403F9C(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403F9C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403F9C:
	word32 r12_5 = Mem0[r2 + 296:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403F9C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403FB4(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403FB4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403FB4:
	word32 r12_5 = Mem0[r2 + 324:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403FB4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403FCC(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403FCC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403FCC:
	word32 r12_5 = Mem0[r2 + 320:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403FCC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403FE4(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403FE4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403FE4:
	word32 r12_5 = Mem0[r2 + 316:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403FE4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00403FFC(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00403FFC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00403FFC:
	word32 r12_5 = Mem0[r2 + 312:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00403FFC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00404014(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00404014_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00404014:
	word32 r12_5 = Mem0[r2 + 308:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00404014_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0040402C(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn0040402C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040402C:
	word32 r12_5 = Mem0[r2 + 304:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040402C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00404044(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00404044_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00404044:
	word32 r12_5 = Mem0[r2 + 300:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00404044_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0040405C(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn0040405C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040405C:
	word32 r12_5 = Mem0[r2 + 292:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040405C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00404074(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut:
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00404074_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00404074:
	word32 r12_5 = Mem0[r2 + 288:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00404074_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0040408C(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn0040408C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040408C:
	word32 r12_5 = Mem0[r2 + 276:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040408C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn004040A4(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut:
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn004040A4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004040A4:
	word32 r12_5 = Mem0[r2 + 264:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004040A4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004040BC(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn004040BC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004040BC:
	word32 r12_5 = Mem0[r2 + 256:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004040BC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004040D4(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn004040D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004040D4:
	word32 r12_5 = Mem0[r2 + 272:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004040D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn004040EC(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn004040EC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l004040EC:
	word32 r12_5 = Mem0[r2 + 268:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn004040EC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00404104(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut:
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00404104_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00404104:
	word32 r12_5 = Mem0[r2 + 252:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00404104_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0040411C(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut:
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn0040411C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0040411C:
	word32 r12_5 = Mem0[r2 + 280:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0040411C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00404134(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31]
// LiveOut: r1
// Trashed: ctr r0 r1 r12 r2
// Preserved:
fn00404134_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00404134:
	word32 r12_5 = Mem0[r2 + 248:word32]
	word32 r0_6 = Mem0[r12_5:word32]
	word32 r1_10
	call r0_6 (retsize: 0;)
		uses: ctr:r0_6,r0:r0_6,r1:fp,r12:r12_5,r2:Mem7[r12_5 + 4:word32],Stack +0014:r2
		defs: r1:r1_10
	return r1_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00404134_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



