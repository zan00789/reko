byte fn0800_0150(ptr16 & dxOut, ptr16 & bxOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ah bx dx es
// Trashed: SCZO ah bx dx es Top
// Preserved: di si sp
fn0800_0150_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0150:
	selector es_5 = Mem0[0x0800:0x025A:selector]
	word16 bx_16
	word16 dx_17
	byte ah_15 = fn0800_01E6(0x2714, 0x2714, es_5, out dx_17, out bx_16)
	dxOut = dx_17
	bxOut = bx_16
	esOut = es_5
	return ah_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0150_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0163()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_0163_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0163:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0163_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0164(byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0800_0164_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0164_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0164:
	msdos_terminate(bArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0176(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15]
// LiveOut:
// Trashed: ax bx dx es Top
// Preserved: ds sp
fn0800_0176_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0176:
	word32 es_bx_10 = msdos_get_interrupt_vector(0x00)
	Mem12[ds:0x005B:word16] = (word16) es_bx_10
	Mem14[ds:0x005D:word16] = SLICE(es_bx_10, selector, 16)
	word32 es_bx_17 = msdos_get_interrupt_vector(0x04)
	Mem19[ds:0x005F:word16] = (word16) es_bx_17
	Mem21[ds:0x0061:word16] = SLICE(es_bx_17, selector, 16)
	word32 es_bx_24 = msdos_get_interrupt_vector(0x05)
	Mem26[ds:0x0063:word16] = (word16) es_bx_24
	Mem28[ds:0x0065:word16] = SLICE(es_bx_24, selector, 16)
	word32 es_bx_31 = msdos_get_interrupt_vector(0x06)
	Mem33[ds:0x0067:word16] = (word16) es_bx_31
	Mem35[ds:0x0069:word16] = SLICE(es_bx_31, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x016D))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0176_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_01B9(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: ax dx
// Trashed: ax dx Top
// Preserved: ds sp
fn0800_01B9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01B9:
	msdos_set_interrupt_vector(0x00, Mem7[ds:0x005B:segptr32])
	msdos_set_interrupt_vector(0x04, Mem16[ds:0x005F:segptr32])
	msdos_set_interrupt_vector(0x05, Mem25[ds:0x0063:segptr32])
	ptr32 ds_dx_36 = Mem34[ds:0x0067:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_36)
	dxOut = (word16) ds_dx_36
	return 0x2506
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01B9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_01E6(word16 si, word16 di, selector es, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15] si:[0..15]
// LiveOut: ah bx dx
// Trashed: SCZO ah bx dx Top
// Preserved: es sp
fn0800_01E6_entry:
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01E6:
	byte ah_35
	branch si == 0x26FC l0800_01F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F0:
	ah_35 = 0xFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01EC:
	ah_35 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F2:
	word16 dx_13 = di
	word16 bx_15 = si
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01F6:
	branch bx_15 == di l0800_021D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_021D:
	branch dx_13 == di l0800_023C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_023C:
	dxOut = dx_13
	bxOut = bx_15
	return ah_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_01E6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0221:
	Mem27[es:dx_13:byte] = 0xFF
	branch Mem80[es:dx_13:byte] == 0x00 l0800_0235
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0235:
	call SEQ(0x0800, Mem31[es:dx_13 + 0x0002:word16]) (retsize: 2;)
		uses: ah:ah_35,bx:dx_20,dx:dx_20,sp:fp - 2,Stack +0002:es,Top:Top_98
		defs: Top:Top_40
	Mem80 = Mem31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_022E:
	call Mem31[es:dx_13 + 0x0002:ptr32] (retsize: 4;)
		uses: ah:ah_35,bx:dx_20,dx:dx_20,sp:fp - 2,Stack +0004:es,Top:Top_98
		defs: Top:Top_48
	Mem80 = Mem31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_01FA:
	branch Mem80[es:bx_15:byte] == 0xFF l0800_0218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0200:
	byte CZ_58
	branch si == 0x26FC l0800_020C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_020C:
	CZ_58 = SLICE(cond(Mem80[es:bx_15 + 0x0001:byte] - ah_35), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0206:
	CZ_58 = SLICE(cond(ah_35 - Mem80[es:bx_15 + 0x0001:byte]), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0210:
	branch CZ_58 l0800_0218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0212:
	ah_35 = Mem80[es:bx_15 + 0x0001:byte]
	dx_13 = bx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0218:
	bx_15 = bx_15 + 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_023D(word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15]
// LiveOut:
// Trashed: C ax bx Top
// Preserved: sp
fn0800_023D_entry:
	char * ds_dx_9 = SEQ(ds, dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_023D:
	word16 ax_10
	msdos_write_file(0x0002, cx, ds_dx_9, out ax_10)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_023D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void main(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved: P
main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_025E:
	Mem15[ds:0x2A27:word16] = 0x0001
	Mem16[ds:0x2E4D:word16] = 0x0000
	Mem17[ds:0x2A1F:word16] = 0x0000
	Mem18[ds:0x2E4F:word16] = 0x0000
	Mem19[ds:0x2A1D:word16] = 0x0000
	Mem20[ds:0x2A17:word16] = 0x0000
	Mem21[ds:0x2A1B:word16] = 0x0000
	Mem22[ds:0x2A11:word16] = 0x0000
	Mem23[ds:0x2A0F:word16] = 0x0000
	Mem24[ds:0x2A0D:word16] = 0x0000
	Mem25[ds:0x2A0B:word16] = 0x3000
	Mem26[ds:0x2E31:word16] = 0x8000
	Mem27[ds:0x2E2F:word16] = 0x1000
	Mem28[ds:0x2A21:word16] = 0x0001
	Mem29[ds:0x29F5:word16] = 0x0000
	Mem30[ds:0x29F3:word16] = 0x0000
	Mem31[ds:0x29F1:word16] = 0x0000
	Mem32[ds:0x29EF:word16] = 0x0000
	Mem33[ds:0x2A13:word16] = 0x0000
	Mem34[ds:0x2A23:word16] = 0x0001
	word16 bx_36
	word16 dx_38
	word16 cx_37 = fn0800_2C9A(ds, out dx_38, out bx_36)
	word16 di_54
	fn0800_B2EF(cx_37, dx_38, bx_36, ds, 0x07E8, ds, out si_464, out di_54)
	selector ds_133 = fn0800_0541(fn0800_0402(cx_37, dx_38, bx_36, ds), di_54, ds)
	word16 sp_83 = <invalid>
	Mem90[ss:sp_83 - 2:word16] = 0x0001
	Mem92[ss:sp_83 - 4:word16] = 0x0001
	fn0800_2DBF(ds_133, Mem92[ss:sp_83 - 4:word16], Mem92[ss:sp_83 - 2:word16])
	Mem99[ss:sp_83 - 2:word16] = 0x0000
	Mem101[ss:sp_83 - 4:word16] = 0x0000
	word16 bp_103
	word16 cx_105
	word16 dx_107
	word16 ax_102 = fn0800_9764(ds_133, out cx_105, out dx_107, out bp_103)
	Mem117[ss:bp_103 - 0x0002:word16] = dx_107
	Mem118[ss:bp_103 - 0x0004:word16] = ax_102
	word16 sp_110 = <invalid>
	word16 sp_116 = sp_110 + 0x0004
	word16 bx_119 = Mem118[ds_133:0x2A25:word16]
	branch bx_119 >u 0x0008 l0800_0338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_031A:
	switch (bx_119 << 0x0001) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0335:
	ds_133 = fn0800_19EE(cx_105, dx_107, ds_133)
	sp_116 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_032B:
	ds_133 = fn0800_18D9(cx_105, dx_107, ds_133)
	sp_116 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0326:
	ds_133 = fn0800_12E2(cx_105, dx_107, ds_133)
	sp_116 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0330:
	ds_133 = fn0800_112D(cx_105, dx_107, ds_133)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0321:
	ds_133 = fn0800_0DE8(cx_105, dx_107, ds_133)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0338:
	word16 sp_221 = sp_116 - 2
	Mem223[ss:sp_221:word16] = 0x0000
	Mem225[ss:sp_221 - 2:word16] = 0x0000
	word16 bp_228
	word16 dx_232
	word32 dx_ax_451 = SEQ(dx_232, fn0800_9764(ds_133, out cx_465, out dx_232, out bp_228)) - SEQ(Mem225[ss:bp_228 - 0x0002:word16], Mem225[ss:bp_228 - 0x0004:word16])
	Mem247[ss:bp_228 - 0x0002:word16] = SLICE(dx_ax_451, word16, 16)
	Mem248[ss:bp_228 - 0x0004:word16] = (word16) dx_ax_451
	word16 sp_235 = <invalid>
	Mem251[ss:sp_235 + 0x0002:word16] = Mem248[ds_133:0x29F1:word16]
	Mem254[ss:sp_235:word16] = Mem251[ds_133:0x29EF:word16]
	Mem257[ss:sp_235 - 2:word16] = Mem254[ds_133:0x29F5:word16]
	Mem260[ss:sp_235 - 4:word16] = Mem257[ds_133:0x29F3:word16]
	word16 ax_261 = fn0800_0B79(Mem260[ss:sp_235 - 4:word16], Mem260[ss:sp_235 - 2:word16], Mem260[ss:sp_235:word16], Mem260[ss:sp_235 + 2:word16])
	Mem276[ss:sp_235 + 0x0002:word16] = 0x0000
	Mem278[ss:sp_235:word16] = 0x003C
	Mem281[ss:sp_235 - 2:word16] = Mem278[ss:bp_228 - 0x0002:word16]
	Mem284[ss:sp_235 - 4:word16] = Mem281[ss:bp_228 - 0x0004:word16]
	word16 dx_288
	word16 ax_285 = fn0800_8BCA(Mem284[ss:sp_235 - 4:word16], Mem284[ss:sp_235 - 2:word16], Mem284[ss:sp_235:word16], Mem284[ss:sp_235 + 2:word16], out dx_288)
	word16 sp_289 = <invalid>
	Mem295[ss:sp_289 - 2:word16] = dx_288
	Mem297[ss:sp_289 - 4:word16] = ax_285
	Mem303[ss:sp_289 - 6:word16] = 0x0000
	Mem305[ss:sp_289 - 8:word16] = 0x003C
	Mem308[ss:sp_289 - 10:word16] = 0x0000
	Mem310[ss:sp_289 - 12:word16] = 0x0E10
	Mem313[ss:sp_289 - 14:word16] = Mem310[ss:bp_228 - 0x0002:word16]
	Mem316[ss:sp_289 - 16:word16] = Mem313[ss:bp_228 - 0x0004:word16]
	word16 dx_320
	word16 ax_317 = fn0800_8BCA(Mem316[ss:sp_289 - 16:word16], Mem316[ss:sp_289 - 14:word16], Mem316[ss:sp_289 - 12:word16], Mem316[ss:sp_289 - 10:word16], out dx_320)
	word16 sp_321 = <invalid>
	Mem327[ss:sp_321 - 2:word16] = dx_320
	Mem329[ss:sp_321 - 4:word16] = ax_317
	word16 dx_333
	word16 ax_330 = fn0800_8BBB(Mem329[ss:sp_321 - 4:word16], Mem329[ss:sp_321 - 2:word16], Mem329[ss:sp_321:word16], Mem329[ss:sp_321 + 2:word16], out cx_466, out dx_333, out bx_467)
	word16 sp_334 = <invalid>
	Mem340[ss:sp_334 - 2:word16] = dx_333
	Mem342[ss:sp_334 - 4:word16] = ax_330
	Mem348[ss:sp_334 - 6:word16] = 0x0000
	Mem350[ss:sp_334 - 8:word16] = 0x0E10
	Mem353[ss:sp_334 - 10:word16] = 0x0000
	Mem355[ss:sp_334 - 12:word16] = 0x5180
	Mem358[ss:sp_334 - 14:word16] = Mem355[ss:bp_228 - 0x0002:word16]
	Mem361[ss:sp_334 - 16:word16] = Mem358[ss:bp_228 - 0x0004:word16]
	word16 dx_365
	word16 ax_362 = fn0800_8BCA(Mem361[ss:sp_334 - 16:word16], Mem361[ss:sp_334 - 14:word16], Mem361[ss:sp_334 - 12:word16], Mem361[ss:sp_334 - 10:word16], out dx_365)
	word16 sp_366 = <invalid>
	Mem372[ss:sp_366 - 2:word16] = dx_365
	Mem374[ss:sp_366 - 4:word16] = ax_362
	word16 cx_377
	word16 dx_378
	word16 ax_375 = fn0800_8BBB(Mem374[ss:sp_366 - 4:word16], Mem374[ss:sp_366 - 2:word16], Mem374[ss:sp_366:word16], Mem374[ss:sp_366 + 2:word16], out cx_377, out dx_378, out bx_468)
	word16 sp_379 = <invalid>
	Mem385[ss:sp_379 - 2:word16] = dx_378
	Mem387[ss:sp_379 - 4:word16] = ax_375
	Mem396[ss:sp_379 - 6:word16] = (uint16) ((uint32) (uint16) ax_261 % 0x0064)
	word32 dx_ax_399 = (uint32) (uint16) ax_261
	Mem405[ss:sp_379 - 8:word16] = (uint16) (dx_ax_399 /u 0x0064)
	Mem408[ss:sp_379 - 10:word16] = Mem405[ds_133:0x29F1:word16]
	Mem411[ss:sp_379 - 12:word16] = Mem408[ds_133:0x29EF:word16]
	Mem414[ss:sp_379 - 14:word16] = Mem411[ds_133:0x29F5:word16]
	Mem417[ss:sp_379 - 16:word16] = Mem414[ds_133:0x29F3:word16]
	Mem419[ss:sp_379 - 18:word16] = ds_133
	Mem422[ss:sp_379 - 20:word16] = 0x05DC
	Mem425[ss:sp_379 - 22:word16] = 0x0008
	Mem428[ss:sp_379 - 24:word16] = Mem425[ds_133:0x2A13:word16]
	Mem430[ss:sp_379 - 26:word16] = ds_133
	Mem433[ss:sp_379 - 28:word16] = 0x07EB
	fn0800_B2EF(cx_377, (uint16) (dx_ax_399 % 0x0064), 0x0064, ds_133, Mem433[ss:sp_379 - 28:word16], Mem433[ss:sp_379 - 26:word16], out si_469, out di_470)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0402(word16 cx, word16 dx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: cx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di ds si sp
fn0800_0402_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0402:
	branch Mem10[ds:0x2A27:word16] != Mem10[ds:0x269A:word16] l0800_0410
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_040D:
	fn0800_0DCE(cx, dx, bx, ds, out si_616, out di_617)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0410:
	ptr32 es_bx_36 = Mem10[ds:0x269C:segptr32]
	selector es_40 = SLICE(es_bx_36, selector, 16)
	word16 bx_38 = (word16) es_bx_36 + (Mem10[ds:0x2A27:word16] << 0x0002)
	word16 cx_174
	branch fn0800_BFC7(SEQ(Mem10[es_40:bx_38 + 0x0002:word16], Mem45[es_40:bx_38:word16]), out cx_174) <=u 0x0001 l0800_044D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_042F:
	ptr32 es_bx_63 = Mem48[ds:0x269C:segptr32]
	selector es_67 = SLICE(es_bx_63, selector, 16)
	word16 bx_65 = (word16) es_bx_63 + (Mem48[ds:0x2A27:word16] << 0x0002)
	fn0800_0D24(ds, 0x0001, SEQ(Mem48[es_67:bx_65 + 0x0002:word16], Mem70[es_67:bx_65:word16]), out cx_174, out dx_618, out bx_619, out si_620, out di_621, out es_622, out ds, out Top_623)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_044D:
	word16 ax_95 = Mem94[ds:0x2A27:word16]
	byte cl_118
	word16 bx_117
	word16 dx_119
	word16 ax_116 = fn0800_0C29(ds, 0x0829, ds, SLICE(DPB(ax_95 << 0x0002, Mem94[Mem94[ds:(word16) Mem94[ds:0x269C:segptr32] + (ax_95 << 0x0002):segptr32]:byte], 0), byte, 0), out cl_118, out dx_119, out bx_117, out es_120)
	Mem126[ds:0x2A25:word16] = ax_116
	word16 cx_148 = DPB(cx_174, cl_118, 0)
	branch ax_116 < 0x0009 l0800_0492
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0474:
	ptr32 es_bx_132 = Mem126[ds:0x269C:segptr32]
	selector es_136 = SLICE(es_bx_132, selector, 16)
	word16 bx_134 = (word16) es_bx_132 + (Mem126[ds:0x2A27:word16] << 0x0002)
	fn0800_0D24(ds, 0x0001, SEQ(Mem126[es_136:bx_134 + 0x0002:word16], Mem139[es_136:bx_134:word16]), out cx_148, out dx_119, out bx_117, out si_624, out di_625, out es_626, out ds, out Top_627)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0492:
	Mem165[ds:0x2A27:word16] = Mem163[ds:0x2A27:word16] + 0x0001
	branch Mem165[ds:0x2A25:word16] > 0x0002 l0800_04A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04A0:
	branch Mem165[ds:0x2A27:word16] != Mem165[ds:0x269A:word16] l0800_04AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04A9:
	fn0800_0DCE(cx_148, dx_119, bx_117, ds, out si_628, out di_629)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04AC:
	word16 ax_192 = Mem165[ds:0x2A27:word16]
	Mem194[ds:0x2A27:word16] = Mem165[ds:0x2A27:word16] + 0x0001
	ptr32 es_bx_197 = Mem194[ds:0x269C:segptr32]
	selector es_201 = SLICE(es_bx_197, selector, 16)
	word16 bx_199 = (word16) es_bx_197 + (ax_192 << 0x0002)
	fn0800_BF9E(SEQ(ds, 0x4348), SEQ(Mem194[es_201:bx_199 + 0x0002:word16], Mem207[es_201:bx_199:word16]))
	fn0800_0C6C(ds, SEQ(ds, 0x4348))
	word16 di_245 = 0x4348
	word16 cx_249 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E4:
	branch cx_249 == 0x0000 l0800_04E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E4_1:
	di_245 = di_245 + 0x0001
	cx_249 = cx_249 - 0x0001
	branch Mem242[ds:di_245:byte] == 0x00 l0800_04E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04E6:
	word16 di_263 = di_245 - 0x0001
	word16 cx_260 = ~cx_249
	bool Z_274 = SLICE(cond(di_263), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04ED:
	branch cx_260 == 0x0000 l0800_04EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04ED_2:
	Z_274 = SLICE(cond(0x2E - Mem242[ds:di_263:byte]), bool, 2) (alias)
	di_263 = di_263 - 0x0001
	cx_260 = cx_260 - 0x0001
	branch Mem242[ds:di_263:byte] == 0x2E l0800_04ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04EF:
	branch Z_274 l0800_04F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F1:
	di_263 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_04F8:
	word16 di_285 = di_263 + 0x0001
	word16 di_311 = 0x4348
	word16 cx_315 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0507:
	branch cx_315 == 0x0000 l0800_0509
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0507_1:
	di_311 = di_311 + 0x0001
	cx_315 = cx_315 - 0x0001
	branch Mem310[ds:di_311:byte] == 0x00 l0800_0507
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0509:
	cx_148 = ~cx_315
	word16 di_329 = di_311 - cx_148
	bool Z_339 = SLICE(cond(di_329), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0510:
	branch cx_148 == 0x0000 l0800_0512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0510_2:
	Z_339 = SLICE(cond(0x5C - Mem310[ds:di_329:byte]), bool, 2) (alias)
	di_329 = di_329 + 0x0001
	cx_148 = cx_148 - 0x0001
	branch Mem310[ds:di_329:byte] == 0x5C l0800_0510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0512:
	branch Z_339 l0800_051B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0514:
	di_329 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_051B:
	branch di_285 >u di_329 - 0x0001 l0800_0538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0523:
	word16 di_376 = 0x4348
	word16 si_377 = 0x0833
	word16 cx_378 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0530:
	branch cx_378 == 0x0000 l0800_0532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0530_1:
	di_376 = di_376 + 0x0001
	cx_378 = cx_378 - 0x0001
	branch Mem373[ds:di_376:byte] == 0x00 l0800_0530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0532:
	word16 di_392 = di_376 - 0x0001
	cx_148 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0536:
	branch cx_148 == 0x0000 l0800_0538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0538:
	Mem398[ds:0x2A19:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0536_2:
	Mem404[ds:di_392:byte] = Mem400[ds:si_377:byte]
	si_377 = si_377 + 0x0001
	di_392 = di_392 + 0x0001
	cx_148 = cx_148 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_049D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_053E:
	return cx_148
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0402_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_0541(byte ch, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[8..15] di:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: ds sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_0541_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0541:
	word16 ax_17 = Mem15[ds:0x2A27:word16]
	branch ax_17 != Mem15[ds:0x269A:word16] l0800_0555
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0555:
	branch Mem15[Mem15[ds:(word16) Mem15[ds:0x269C:segptr32] + (ax_17 << 0x0002):segptr32]:byte] != 0x2D l0800_056B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_056B:
	branch Mem15[Mem15[ds:(word16) Mem15[ds:0x269C:segptr32] + (Mem15[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0584:
	return ds
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0581:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0568:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_086D:
	branch Mem48[Mem48[ds:(word16) Mem48[ds:0x269C:segptr32] + (Mem48[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2D l0800_0886
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0886:
	branch Mem48[Mem48[ds:(word16) Mem48[ds:0x269C:segptr32] + (Mem48[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_089F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_089F:
	word16 ax_71 = Mem48[ds:0x2A21:word16]
	branch ax_71 == 0x0001 l0800_08AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08AE:
	word16 di_1745 = 0x4271
	word16 si_107 = 0x085B
	word16 cx_82 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BB:
	branch cx_82 == 0x0000 l0800_08BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BB_1:
	di_1745 = di_1745 + 0x0001
	cx_82 = cx_82 - 0x0001
	branch Mem77[ds:di_1745:byte] == 0x00 l0800_08BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08BD:
	word16 di_110 = di_1745 - 0x0001
	word16 cx_114 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C1:
	branch cx_114 == 0x0000 l0800_08C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C3:
	branch Mem101[ds:0x2E31:word16] <=u 0x8000 l0800_08D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08CB:
	Mem104[ds:0x2E31:word16] = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08D1:
	Mem106[ds:0x2E2F:word16] = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08C1_2:
	Mem111[ds:di_110:byte] = Mem101[ds:si_107:byte]
	si_107 = si_107 + 0x0001
	di_110 = di_110 + 0x0001
	cx_114 = cx_114 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08A7:
	branch ax_71 == 0x0002 l0800_08D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08D9:
	word16 di_121 = 0x4271
	word16 si_122 = 0x085D
	word16 cx_123 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E6:
	branch cx_123 == 0x0000 l0800_08E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E6_1:
	di_121 = di_121 + 0x0001
	cx_123 = cx_123 - 0x0001
	branch Mem118[ds:di_121:byte] == 0x00 l0800_08E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08E8:
	word16 di_137 = di_121 - 0x0001
	word16 cx_139 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EC:
	branch cx_139 == 0x0000 l0800_08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EE:
	branch Mem142[ds:0x2E31:word16] <=u 0x1000 l0800_08FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08F6:
	Mem145[ds:0x2E31:word16] = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08FC:
	Mem147[ds:0x2E2F:word16] = 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08EC_2:
	Mem152[ds:di_137:byte] = Mem142[ds:si_122:byte]
	si_122 = si_122 + 0x0001
	di_137 = di_137 + 0x0001
	cx_139 = cx_139 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_08AC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0902:
	branch Mem157[ds:0x2A23:word16] != 0x0002 l0800_0911
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0909:
	Mem163[ds:0x2A1D:word16] = 0x0000
	Mem164[ds:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0911:
	branch Mem166[ds:0x2E4F:word16] == 0x0000 l0800_092D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0918:
	word16 di_1747 = 0x4271
	word16 si_194 = 0x0653
	word16 cx_195 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0925:
	branch cx_195 == 0x0000 l0800_0927
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0925_1:
	di_1747 = di_1747 + 0x0001
	cx_195 = cx_195 - 0x0001
	branch Mem190[ds:di_1747:byte] == 0x00 l0800_0925
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0927:
	word16 di_209 = di_1747 - 0x0001
	word16 cx_211 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092B:
	branch cx_211 == 0x0000 l0800_092D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092D:
	branch Mem215[ds:0x2A1D:word16] == 0x0000 l0800_0949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0934:
	word16 di_1748 = 0x4271
	word16 si_228 = 0x085F
	word16 cx_229 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0941:
	branch cx_229 == 0x0000 l0800_0943
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0941_1:
	di_1748 = di_1748 + 0x0001
	cx_229 = cx_229 - 0x0001
	branch Mem224[ds:di_1748:byte] == 0x00 l0800_0941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0943:
	word16 di_243 = di_1748 - 0x0001
	word16 cx_245 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0947:
	branch cx_245 == 0x0000 l0800_0949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0949:
	word16 di_1749 = 0x4271
	word16 si_258 = 0x0861
	word16 cx_259 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0956:
	branch cx_259 == 0x0000 l0800_0958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0956_1:
	di_1749 = di_1749 + 0x0001
	cx_259 = cx_259 - 0x0001
	branch Mem254[ds:di_1749:byte] == 0x00 l0800_0956
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0958:
	word16 di_273 = di_1749 - 0x0001
	word16 cx_275 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095C:
	branch cx_275 == 0x0000 l0800_095E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095E:
	branch Mem278[ds:0x2A25:word16] != 0x0000 l0800_0987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0965:
	branch Mem278[Mem278[ds:(Mem278[ds:0x2A23:word16] << 0x0002) + 0x0545:segptr32]:byte] == 0x00 l0800_0987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0977:
	fn0800_09A3(out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_095C_2:
	Mem323[ds:di_273:byte] = Mem278[ds:si_258:byte]
	si_258 = si_258 + 0x0001
	di_273 = di_273 + 0x0001
	cx_275 = cx_275 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0947_2:
	Mem332[ds:di_243:byte] = Mem328[ds:si_228:byte]
	si_228 = si_228 + 0x0001
	di_243 = di_243 + 0x0001
	cx_245 = cx_245 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_092B_2:
	Mem340[ds:di_209:byte] = Mem216[ds:si_194:byte]
	si_194 = si_194 + 0x0001
	di_209 = di_209 + 0x0001
	cx_211 = cx_211 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_089C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0883:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_058A:
	word16 ax_346 = Mem48[ds:0x2A27:word16]
	byte cl_369
	selector es_371
	word16 dx_370
	word16 ax_367 = fn0800_0C29(ds, 0x0838, ds, SLICE(DPB(ax_346 << 0x0002, Mem48[Mem48[ds:(word16) Mem48[ds:0x269C:segptr32] + (ax_346 << 0x0002):segptr32] + 0x0001:byte], 0), byte, 0), out cl_369, out dx_370, out bx_1717, out es_371)
	cx = DPB(cx, cl_369, 0) (alias)
	word16 si_377 = ax_367
	branch ax_367 < 0x000B l0800_05CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05B1:
	ptr32 es_bx_383 = Mem366[ds:0x269C:segptr32]
	selector es_387 = SLICE(es_bx_383, selector, 16)
	word16 bx_385 = (word16) es_bx_383 + (Mem366[ds:0x2A27:word16] << 0x0002)
	fn0800_0D24(ds, 0x0002, SEQ(Mem366[es_387:bx_385 + 0x0002:word16], Mem390[es_387:bx_385:word16]), out cx, out dx_370, out bx_1718, out si_377, out di, out es_371, out ds, out Top_1719)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05CF:
	branch si_377 < 0x0006 l0800_05D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05D7:
	segptr32 ptrLoc06_1363
	ptr32 es_bx_421 = Mem417[ds:0x269C:segptr32]
	selector es_425 = SLICE(es_bx_421, selector, 16)
	word16 bx_423 = (word16) es_bx_421 + (Mem417[ds:0x2A27:word16] << 0x0002)
	branch fn0800_BFC7(SEQ(Mem417[es_425:bx_423 + 0x0002:word16], Mem430[es_425:bx_423:word16]), out cx) != 0x0002 l0800_0622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0622:
	ptr32 es_bx_448 = Mem433[ds:0x269C:segptr32]
	selector es_451 = SLICE(es_bx_448, selector, 16)
	word16 bx_450 = (word16) es_bx_448 + (Mem433[ds:0x2A27:word16] << 0x0002)
	word16 dx_453 = Mem433[es_451:bx_450:word16]
	dx_370 = dx_453 + 0x0002
	ptrLoc06_1363 = SEQ(Mem433[es_451:bx_450 + 0x0002:word16], dx_453 + 0x0002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05F6:
	Mem462[ds:0x2A27:word16] = Mem433[ds:0x2A27:word16] + 0x0001
	branch Mem462[ds:0x2A27:word16] != Mem462[ds:0x269A:word16] l0800_0606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0603:
	cx = fn0800_0DCE(cx, dx_370, bx_423, ds, out si_377, out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0606:
	ptr32 es_bx_485 = Mem462[ds:0x269C:segptr32]
	selector es_489 = SLICE(es_bx_485, selector, 16)
	word16 bx_487 = (word16) es_bx_485 + (Mem462[ds:0x2A27:word16] << 0x0002)
	dx_370 = Mem462[es_489:bx_487:word16]
	ptrLoc06_1363 = SEQ(Mem462[es_489:bx_487 + 0x0002:word16], dx_370)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_063F:
	wLoc04 = SLICE(ptrLoc06_1363, word16, 16) (alias)
	wLoc06 = SLICE(ptrLoc06_1363, word16, 0) (alias)
	es_371 = SLICE(ptrLoc06_1363, selector, 16) (alias)
	branch (int16) Mem498[ptrLoc06_1363:byte] != 0x0000 l0800_0659
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_064A:
	fn0800_0D24(ds, 0x0002, SEQ(ds, 0x05DC), out cx, out dx_370, out bx_1743, out si_377, out di, out es_371, out ds, out Top_1744)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_05D4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0659:
	branch si_377 <=u 0x000A l0800_0663
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0663:
	word16 bx_541 = si_377 << 0x0001
	switch (bx_541) { l0800_069D l0800_0716 l0800_0765 l0800_080A l0800_07A9 l0800_074C l0800_066A l0800_0682 l0800_0679 l0800_068B l0800_0694 }
	segptr32 ptrLoc06_1434 = SEQ(wLoc04, wLoc06)
	wLoc04 = SLICE(ptrLoc06_1434, word16, 16) (alias)
	wLoc06 = SLICE(ptrLoc06_1434, word16, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0694:
	Mem544[ds:0x2A15:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_068B:
	Mem545[ds:0x2A17:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0679:
	Mem546[ds:0x2A1D:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0682:
	Mem547[ds:0x2A1B:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_066A:
	Mem548[ds:0x2A1F:word16] = 0x0001
	Mem549[ds:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_074C:
	cx = (word16) fn0800_BF18(cx, dx_370, bx_541, si_377, di, es_371, ds, 0x0853, ds, out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07A9:
	word16 di_1750 = wLoc06
	word16 cx_615 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BB:
	branch cx_615 == 0x0000 l0800_07BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BB_1:
	di_1750 = di_1750 + 0x0001
	cx_615 = cx_615 - 0x0001
	branch Mem610[wLoc04:di_1750:byte] == 0x00 l0800_07BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07BD:
	word16 cx_626 = ~cx_615
	word16 cx_629 = cx_626 >>u 0x0001
	word16 si_631 = di_1750 - cx_626
	word16 di_637 = 0x42E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CC:
	branch cx_629 == 0x0000 l0800_07CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CE:
	word16 cx_650 = cx_629 * 0x0002 + (cx_626 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D0:
	branch cx_650 == 0x0000 l0800_07D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D2:
	fn0800_0C6C(ds, SEQ(ds, 0x42E3))
	di = 0x42E3
	word16 cx_680 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07E8:
	branch cx_680 == 0x0000 l0800_07EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07E8_1:
	di = di + 0x0001
	cx_680 = cx_680 - 0x0001
	branch Mem673[ds:di:byte] == 0x00 l0800_07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07EA:
	word16 cx_691 = ~cx_680
	cx = cx_691 - 0x0002
	branch Mem673[ds:cx_691 + 0x42E1:byte] == 0x5C l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07F7:
	word16 di_1752 = 0x42E3
	word16 si_701 = 0x0859
	word16 cx_702 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0800:
	branch cx_702 == 0x0000 l0800_0802
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0800_2:
	di_1752 = di_1752 + 0x0001
	cx_702 = cx_702 - 0x0001
	branch Mem673[ds:di_1752:byte] == 0x00 l0800_0800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0802:
	di = di_1752 - 0x0001
	cx = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0806:
	branch cx == 0x0000 l0800_0808
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0808:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0806_3:
	Mem723[ds:di:byte] = Mem719[ds:si_701:byte]
	si_701 = si_701 + 0x0001
	di = di + 0x0001
	cx = cx - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07D0_1:
	Mem732[ds:di_637:byte] = Mem655[wLoc04:si_631:byte]
	si_631 = si_631 + 0x0001
	di_637 = di_637 + 0x0001
	cx_650 = cx_650 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_07CC_2:
	Mem742[ds:di_637:word16] = Mem738[wLoc04:si_631:word16]
	si_631 = si_631 + 0x0002
	di_637 = di_637 + 0x0002
	cx_629 = cx_629 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_080A:
	word16 di_1753 = wLoc06
	word16 cx_760 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081C:
	branch cx_760 == 0x0000 l0800_081E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081C_1:
	di_1753 = di_1753 + 0x0001
	cx_760 = cx_760 - 0x0001
	branch Mem755[wLoc04:di_1753:byte] == 0x00 l0800_081C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_081E:
	word16 cx_771 = ~cx_760
	word16 cx_774 = cx_771 >>u 0x0001
	word16 si_776 = di_1753 - cx_771
	word16 di_782 = 0x427E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082D:
	branch cx_774 == 0x0000 l0800_082F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082F:
	word16 cx_795 = cx_774 * 0x0002 + (cx_771 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0831:
	branch cx_795 == 0x0000 l0800_0833
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0833:
	fn0800_0C6C(ds, SEQ(ds, 0x427E))
	di = 0x427E
	word16 cx_825 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0849:
	branch cx_825 == 0x0000 l0800_084B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0849_1:
	di = di + 0x0001
	cx_825 = cx_825 - 0x0001
	branch Mem818[ds:di:byte] == 0x00 l0800_0849
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_084B:
	word16 cx_836 = ~cx_825
	cx = cx_836 - 0x0002
	branch Mem818[ds:cx_836 + 0x427C:byte] == 0x5C l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0858:
	word16 di_1755 = 0x427E
	word16 si_846 = 0x0859
	word16 cx_847 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0861:
	branch cx_847 == 0x0000 l0800_0863
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0861_2:
	di_1755 = di_1755 + 0x0001
	cx_847 = cx_847 - 0x0001
	branch Mem818[ds:di_1755:byte] == 0x00 l0800_0861
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0863:
	di = di_1755 - 0x0001
	cx = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0867:
	branch cx == 0x0000 l0800_0869
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0867_3:
	Mem868[ds:di:byte] = Mem864[ds:si_846:byte]
	si_846 = si_846 + 0x0001
	di = di + 0x0001
	cx = cx - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0831_1:
	Mem877[ds:di_782:byte] = Mem800[wLoc04:si_776:byte]
	si_776 = si_776 + 0x0001
	di_782 = di_782 + 0x0001
	cx_795 = cx_795 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_082D_2:
	Mem887[ds:di_782:word16] = Mem883[wLoc04:si_776:word16]
	si_776 = si_776 + 0x0002
	di_782 = di_782 + 0x0002
	cx_774 = cx_774 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0765:
	cx = (word16) fn0800_BF18(cx, dx_370, bx_541, si_377, di, es_371, ds, 0x0856, ds, out di)
	branch Mem906[ds:0x2A21:word16] > 0x0002 l0800_0796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0782:
	branch Mem906[ds:0x2A21:word16] == 0x0000 l0800_078C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_078C:
	branch Mem906[ds:0x2A25:word16] == 0x0000 l0800_0796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0796:
	fn0800_0D24(ds, 0x0005, SEQ(wLoc04, wLoc06), out cx, out dx_1720, out bx_1721, out si_1722, out di, out es_1723, out ds, out Top_1724)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0793:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0789:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0716:
	cx = (word16) fn0800_BF18(cx, dx_370, bx_541, si_377, di, es_371, ds, 0x084F, ds, out di)
	branch Mem972[ds:0x2E4F:word16] != 0x0000 l0800_0743
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0733:
	fn0800_0D24(ds, 0x0004, SEQ(wLoc04, wLoc06), out cx, out dx_1725, out bx_1726, out si_1727, out di, out es_1728, out ds, out Top_1729)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0743:
	Mem1015[ds:0x2A1F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_069D:
	branch Mem1016[ds:0x2A19:word16] == 0x0000 l0800_06A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06A7:
	selector es_1334 = SLICE(ptrLoc06_1434, selector, 16)
	word16 di_1027 = (word16) ptrLoc06_1434
	word16 ax_1020 = 0x0000
	word16 cx_1023 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06AF:
	ax_1020 = DPB(ax_1020, 0x00, 0) (alias)
	ax_1020 = DPB(ax_1020, 0x00, 0) (alias)
	branch cx_1023 == 0x0000 l0800_06B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06AF_1:
	di_1027 = di_1756 + 0x0001
	cx_1023 = cx_1023 - 0x0001
	di_1756 = di_1027
	branch Mem1016[es_1334:di_1756:byte] == 0x00 l0800_06AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B1:
	word16 cx_1034 = ~cx_1023
	word16 cx_1035 = cx_1034 - 0x0001
	branch cx_1034 <=u 0x0002 l0800_06C9
	segptr32 ptrLoc06_1445 = SEQ(wLoc04, wLoc06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06B9:
	ax_1020 = fn0800_0D24(ds, 0x0003, SEQ(wLoc04, wLoc06), out cx_1035, out dx_1732, out bx_1733, out si_1734, out di_1735, out es_1736, out ds, out Top_1737)
	ptrLoc06_1445 = SEQ(wLoc04, wLoc06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06C9:
	byte cl_1096
	word16 dx_1097
	word16 ax_1094 = fn0800_0C29(ds, 0x0844, ds, SLICE(DPB(ax_1020, Mem1074[ptrLoc06_1445:byte], 0), byte, 0), out cl_1096, out dx_1097, out bx_1730, out es_1731)
	Mem1104[ds:0x2A23:word16] = ax_1094
	wLoc04 = SLICE(ptrLoc06_1445, word16, 16) (alias)
	wLoc06 = SLICE(ptrLoc06_1445, word16, 0) (alias)
	cx = DPB(cx_1035, cl_1096, 0) (alias)
	branch ax_1094 < 0x0006 l0800_06F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06E3:
	fn0800_0D24(ds, 0x0003, SEQ(wLoc04, wLoc06), out cx, out dx_1097, out bx_1738, out si_1739, out di_1740, out es_1741, out ds, out Top_1742)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06F3:
	fn0800_BEA2(cx, dx_1097, ds, SEQ(ds, 0x4271), 0x084B, ds, out di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_06A4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0660:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0869:
	Mem1175[ds:0x2A27:word16] = Mem1173[ds:0x2A27:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0552:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0987:
	return ds
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0541_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_09A3(ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut: bp ds sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_09A3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09A3:
	word16 bp_55
	selector ds_59
	word16 dx_60
	word16 ax_54 = fn0800_4311(out dx_60, out bp_55, out si_431, out di_432, out ds_59)
	Mem71[ss:bp_55 - 0x0002:word16] = dx_60
	Mem72[ss:bp_55 - 0x0004:word16] = ax_54
	Mem73[ss:bp_55 - 0x0006:word16] = dx_60
	Mem74[ss:bp_55 - 0x0008:word16] = ax_54
	word16 sp_63 = <invalid>
	Mem77[ss:sp_63 + 0x0002:word16] = Mem74[ss:bp_55 - 0x0002:word16]
	Mem79[ss:sp_63:word16] = ax_54
	Mem81[ss:sp_63 - 2:word16] = ds_59
	Mem84[ss:sp_63 - 4:word16] = 0x0A6E
	selector ds_108
	word16 bp_86 = fn0800_867A(Mem84[ss:sp_63 - 4:word16], Mem84[ss:sp_63 - 2:selector], Mem84[ss:sp_63:word16], Mem84[ss:sp_63 + 2:selector], out ds_108)
	word16 sp_94 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A4F:
	word16 dx_272
	word16 si_105 = Mem104[ss:bp_86 + 0x0004:word16]
	Mem109[ss:sp_94 + 0x0006:word16] = ds_108
	ptr32 es_di_111 = Mem109[ss:bp_86 - 0x0008:segptr32]
	selector ds_110 = Mem109[ss:bp_86 + 0x0006:selector]
	selector es_390 = SLICE(es_di_111, selector, 16)
	word16 di_119 = (word16) es_di_111
	word16 ax_112 = 0x0000
	word16 cx_115 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5E:
	ax_112 = DPB(ax_112, 0x00, 0) (alias)
	ax_112 = DPB(ax_112, 0x00, 0) (alias)
	branch cx_115 == 0x0000 l0800_0A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A5E_1:
	di_119 = di_119 + 0x0001
	cx_115 = cx_115 - 0x0001
	branch Mem109[es_390:di_119:byte] == 0x00 l0800_0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A60:
	word16 cx_126 = ~cx_115
	word16 di_128 = di_119 - cx_126
	bool Z_140 = SLICE(cond(di_128), bool, 2)
	di_135 = di_128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A64:
	word16 di_135
	branch cx_126 == 0x0000 l0800_0A66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A64_2:
	Z_140 = SLICE(cond(Mem109[ds_110:si_437:byte] - Mem109[es_390:di_438:byte]), bool, 2) (alias)
	si_105 = si_437 + 0x0001
	di_135 = di_438 + 0x0001
	cx_126 = cx_126 - 0x0001
	si_437 = si_105
	di_438 = di_135
	branch Mem109[ds_110:si_437:byte] != Mem109[es_390:di_438:byte] l0800_0A64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A66:
	branch Z_140 l0800_0A6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A68:
	word16 ax_148 = 0x0000 - (di_128 <u 0x0000)
	ax_112 = ax_148 - 0xFFFF - (ax_148 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A6D:
	ds_108 = Mem109[ss:sp_94 + 0x0006:selector]
	branch ax_112 != 0x0000 l0800_09FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_09FF:
	ptr32 es_di_183 = Mem109[ss:bp_86 - 0x0008:segptr32]
	selector es_399 = SLICE(es_di_183, selector, 16)
	word16 di_191 = (word16) es_di_183
	word16 cx_187 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A07:
	branch cx_187 == 0x0000 l0800_0A09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A07_1:
	di_191 = di_439 + 0x0001
	cx_187 = cx_187 - 0x0001
	di_439 = di_191
	branch Mem109[es_399:di_439:byte] == 0x00 l0800_0A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A09:
	word16 di_213 = Mem109[ss:bp_86 - 0x0008:word16]
	Mem217[ss:sp_94 + 0x0006:word16] = (int16) Mem109[es_399:Mem109[ss:bp_86 - 0x0008:word16] + (~cx_187 - 0x0001) + 0x0001:byte] << 0x08
	word16 cx_221 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A25:
	branch cx_221 == 0x0000 l0800_0A27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A25_2:
	di_213 = di_440 + 0x0001
	cx_221 = cx_221 - 0x0001
	di_440 = di_213
	branch Mem217[es_399:di_440:byte] == 0x00 l0800_0A25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A27:
	word16 ax_240 = Mem217[ss:bp_86 - 0x0008:word16] + (~cx_221 - 0x0001)
	word16 dx_251 = Mem217[ss:sp_94 + 0x0006:word16] + DPB(DPB(ax_240, Mem217[es_399:ax_240 + 0x0002:byte], 0), 0x00, 8)
	word16 di_252 = Mem217[ss:bp_86 - 0x0008:word16]
	word16 cx_256 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A42:
	branch cx_256 == 0x0000 l0800_0A44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A42_3:
	di_252 = di_441 + 0x0001
	cx_256 = cx_256 - 0x0001
	di_441 = di_252
	branch Mem217[es_399:di_441:byte] == 0x00 l0800_0A42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A44:
	word16 dx_271 = dx_251 + (~cx_256 - 0x0001)
	Mem279[ss:bp_86 - 0x0008:word16] = Mem217[ss:bp_86 - 0x0008:word16] + (dx_271 + 0x0003)
	dx_272 = dx_271 + 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A72:
	ptr32 es_di_281 = Mem109[ss:bp_86 - 0x0008:segptr32]
	selector es_404 = SLICE(es_di_281, selector, 16)
	word16 di_289 = (word16) es_di_281
	word16 cx_285 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7A:
	branch cx_285 == 0x0000 l0800_0A7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7A_1:
	di_289 = di_442 + 0x0001
	cx_285 = cx_285 - 0x0001
	di_442 = di_289
	branch Mem109[es_404:di_442:byte] == 0x00 l0800_0A7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0A7C:
	Mem305[ss:bp_86 - 0x0008:word16] = Mem109[ss:bp_86 - 0x0008:word16] + ~cx_285
	ptr32 es_bx_306 = Mem305[ss:bp_86 - 0x0008:segptr32]
	Mem331[ss:sp_94 + 0x0006:word16] = ((int16) Mem305[es_bx_306:byte] << 0x08) + DPB(DPB(dx_272, Mem305[es_bx_306 + 0x0001:byte], 0), 0x00, 8) + 0x0002
	Mem334[ss:sp_94 + 0x0004:word16] = Mem331[ss:bp_86 - 0x0006:word16]
	Mem336[ss:sp_94 + 0x0002:word16] = (word16) es_bx_306
	Mem339[ss:sp_94:word16] = Mem336[ss:bp_86 + 0x000A:word16]
	Mem342[ss:sp_94 - 0x0002:word16] = Mem339[ss:bp_86 + 0x0008:word16]
	fn0800_B0F3(Mem342[ss:sp_94 - 0x0002:word16], Mem342[ss:sp_94:word16], Mem342[ss:sp_94 + 0x0002:word16], Mem342[ss:sp_94 + 0x0004:word16], Mem342[ss:sp_94 + 0x0006:word16])
	Mem357[ss:sp_94 + 0x0006:word16] = Mem342[ss:bp_86 - 0x0002:word16]
	Mem360[ss:sp_94 + 0x0004:word16] = Mem357[ss:bp_86 - 0x0004:word16]
	selector ds_366
	fn0800_4346(ds_108, Mem360[ss:sp_94 + 0x0006:word16], out cx_433, out dx_434, out bx_435, out ds_366)
	word16 bp_379 = Mem360[ss:bp_86:word16]
	dsOut = ds_366
	return bp_379
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_09A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0ABC(word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: cx di dx
// Trashed: SCZDO ax bx cx di dx es Top
// Preserved: bp si sp
fn0800_0ABC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ABC:
	fn0800_35A3(wArg02, di, fp - 0x0010, ss, wArg04, wArg06)
	word16 ax_52 = fn0800_0B79(Mem48[ds:0x2A07:word16], Mem45[ds:0x2A09:word16], Mem42[ds:0x2A03:word16], Mem25[ds:0x2A05:word16])
	word16 dx_74 = (uint16) ((uint32) (uint16) ax_52 % 0x0064)
	word16 si_108
	fn0800_B2EF(ax_52, dx_74, 0x0064, ds, 0x0866, ds, out si_108, out di_260)
	word16 bx_124 = 0x0064
	branch Mem105[ds:0x2A25:word16] == 0x0002 l0800_0B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B2A:
	branch si_108 == 0x0000 l0800_0B47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B2E:
	fn0800_B2EF(ax_52, dx_74, si_108 << 0x0002, ds, 0x0889, ds, out si_261, out di_262)
	bx_124 = si_108 << 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B47:
	word16 di_165
	fn0800_B2EF(ax_52, dx_74, bx_124, ds, 0x0827, ds, out si_263, out di_165)
	word16 ax_173 = Mem160[ds:0x2A09:word16]
	word16 dx_174 = Mem160[ds:0x2A07:word16]
	Mem176[ds:0x29F3:word16] = v30_175
	ui32 v31_v30_200 = SEQ(Mem176[ds:0x29F5:word16], Mem160[ds:0x29F3:word16]) + SEQ(ax_173, dx_174)
	Mem180[ds:0x29F5:word16] = SLICE(v31_v30_200, word16, 16)
	word16 ax_181 = Mem180[ds:0x2A05:word16]
	word16 dx_182 = Mem180[ds:0x2A03:word16]
	Mem184[ds:0x29EF:word16] = v32_183
	ui32 v33_v32_202 = SEQ(Mem184[ds:0x29F1:word16], Mem180[ds:0x29EF:word16]) + SEQ(ax_181, dx_182)
	Mem188[ds:0x29F1:word16] = SLICE(v33_v32_202, word16, 16)
	Mem191[ds:0x2A13:word16] = Mem188[ds:0x2A13:word16] + 0x0001
	dxOut = dx_182
	diOut = di_165
	word16 v30_175 = (word16) v31_v30_200
	word16 v32_183 = (word16) v33_v32_202
	return ax_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0ABC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0B79(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0B79_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B79:
	word16 sp_4 = fp - 2
	branch (wArg02 | wArg04) == 0x0000 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B84:
	branch (wArg06 | wArg08) == 0x0000 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B8C:
	branch wArg04 >u wArg08 l0800_0BCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B99:
	branch wArg02 >u wArg06 l0800_0BCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BCE:
	ui32 dwArg06_160 = SEQ(wArg08, wArg06)
	ui32 ax_dx_148 = SEQ(wArg04, wArg02) - dwArg06_160
	word16 wArg08_166 = SLICE(dwArg06_160, word16, 16)
	word16 wArg06_168 = SLICE(dwArg06_160, word16, 0)
	word16 dx_31 = (word16) ax_dx_148
	word16 ax_34 = SLICE(ax_dx_148, word16, 16)
	branch ax_34 >u 0x0006 l0800_0BA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BDF:
	branch ax_34 != 0x0006 l0800_0BE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BE1:
	branch dx_31 >u 0x8DB8 l0800_0BA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BA2:
	word16 sp_46 = sp_4 - 2
	Mem48[ss:sp_46:word16] = 0x0000
	Mem50[ss:sp_46 - 2:word16] = 0x000A
	Mem54[ss:sp_46 - 4:word16] = wArg04
	Mem57[ss:sp_46 - 6:word16] = wArg02
	word16 sp_62 = <invalid>
	word16 dx_61
	wArg02 = fn0800_8BC2(Mem57[ss:sp_46 - 6:word16], Mem57[ss:sp_46 - 4:word16], Mem57[ss:sp_46 - 2:word16], Mem57[ss:sp_46:word16], out cx_204, out dx_61, out bx_205)
	Mem75[ss:sp_62 + 0x0006:word16] = 0x0000
	Mem77[ss:sp_62 + 0x0004:word16] = 0x000A
	Mem80[ss:sp_62 + 0x0002:word16] = wArg08_166
	Mem83[ss:sp_62:word16] = wArg06_168
	word16 sp_88 = <invalid>
	wArg04 = dx_61
	sp_4 = sp_88 + 0x0008
	wArg08 = dx_87
	word16 dx_87
	wArg06 = fn0800_8BC2(Mem83[ss:sp_62:word16], Mem83[ss:sp_62 + 2:word16], Mem83[ss:sp_62 + 4:word16], Mem83[ss:sp_62 + 6:word16], out cx_206, out dx_87, out bx_207)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0BE7:
	word16 sp_101 = sp_4 - 2
	Mem102[ss:sp_101:word16] = wArg04
	Mem105[ss:sp_101 - 2:word16] = wArg02
	ui32 cx_bx_150 = SEQ(wArg04, wArg02) - SEQ(wArg08_166, wArg06_168)
	word16 dx_117
	word16 ax_116 = fn0800_8F18(0x2710, SLICE(cx_bx_150, word16, 16), 0x0000, (word16) cx_bx_150, out ch_208, out dx_117)
	Mem124[ss:sp_101 - 4:word16] = dx_117
	Mem126[ss:sp_101 - 6:word16] = ax_116
	return fn0800_8BC2(Mem126[ss:sp_101 - 6:word16], Mem126[ss:sp_101 - 4:word16], Mem126[ss:sp_101 - 2:word16], Mem126[ss:sp_101:word16], out cx_209, out dx_210, out bx_211)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0B9E:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0B79_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C08(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_0C08_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C08:
	word16 si_12 = wArg02
	word16 cx_13 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C15:
	word16 ax_21 = (uint16) ((uint32) (uint16) si_12 /u 0x0002)
	si_12 = ax_21
	branch ax_21 != 0x0000 l0800_0C14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C14:
	cx_13 = cx_13 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C24:
	return cx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C08_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C29(selector ds, word16 wArg02, word16 wArg04, byte bArg06, ptr16 & clOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..7]
// LiveOut: ax bx cl dx es
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp sp
fn0800_0C29_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C29:
	byte al_26 = (byte) (word16) fn0800_97CC(ds, (int16) bArg06)
	segptr32 ptrLoc06_66 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C4F:
	word16 wLoc06_67 = SLICE(ptrLoc06_66, word16, 0)
	word16 wLoc04_75 = SLICE(ptrLoc06_66, word16, 16)
	selector es_36 = SLICE(ptrLoc06_66, selector, 16)
	word16 bx_37 = (word16) ptrLoc06_66
	branch Mem34[ptrLoc06_66:byte] == 0x00 l0800_0C5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C58:
	branch Mem34[ptrLoc06_66:byte] != al_26 l0800_0C4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C4C:
	ptrLoc06_66 = SEQ(wLoc04_75, wLoc06_67 + 0x0001)
	Mem34 = Mem44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C5D:
	clOut = al_26
	word16 ax_51 = wLoc06_67 - wArg02
	dxOut = 0x0000 - (ax_51 <u 0x0000)
	bxOut = bx_37
	esOut = es_36
	return ax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C29_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp sp
fn0800_0C6C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C6C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C88:
	word16 wArg02_49 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_53 = SLICE(ptrArg02, word16, 16)
	branch Mem11[ptrArg02:byte] != 0x00 l0800_0C71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C71:
	Mem39[ptrArg02:byte] = (byte) (word16) fn0800_97CC(ds, (int16) Mem11[ptrArg02:byte])
	ptrArg02 = SEQ(wArg04_53, wArg02_49 + 0x0001)
	Mem11 = Mem41
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C91:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C6C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0C93(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_0C93_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0C93:
	word16 bx_29
	word16 dx_162 = fn0800_3509(si, di, fp - 0x0068, ss, wArg02, wArg04, out bx_29)
	word16 si_39 = 0x2714
	word16 di_398 = fp - 0x0068
	word16 ax_45 = 0x0000
	word16 cx_48 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB9:
	ax_45 = DPB(ax_45, 0x00, 0) (alias)
	ax_45 = DPB(ax_45, 0x00, 0) (alias)
	branch cx_48 == 0x0000 l0800_0CBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CB9_1:
	di_398 = di_398 + 0x0001
	cx_48 = cx_48 - 0x0001
	branch Mem41[ss:di_398:byte] == 0x00 l0800_0CB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBB:
	word16 cx_130 = ~cx_48
	word16 di_61 = di_398 - cx_130
	bool Z_73 = SLICE(cond(di_61), bool, 2)
	di_68 = di_61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBF:
	word16 di_68
	branch cx_130 == 0x0000 l0800_0CC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CBF_2:
	Z_73 = SLICE(cond(Mem41[ds:si_399:byte] - Mem41[ss:di_400:byte]), bool, 2) (alias)
	si_39 = si_399 + 0x0001
	di_68 = di_400 + 0x0001
	cx_130 = cx_130 - 0x0001
	si_399 = si_39
	di_400 = di_68
	branch Mem41[ds:si_399:byte] != Mem41[ss:di_400:byte] l0800_0CBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC1:
	branch Z_73 l0800_0CC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC3:
	word16 ax_81 = 0x0000 - (di_61 <u 0x0000)
	ax_45 = ax_81 - 0xFFFF - (ax_81 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CC8:
	branch ax_45 == 0x0000 l0800_0D0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CCC:
	fn0800_B2EF(cx_130, dx_162, bx_29, ds, 0x088F, ds, out si_396, out di_397)
	word16 di_160 = fp - 0x0068
	dx_162 = ds
	word16 cx_172 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF5:
	branch cx_172 == 0x0000 l0800_0CF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF5_1:
	di_160 = di_160 + 0x0001
	cx_172 = cx_172 - 0x0001
	branch Mem168[ss:di_160:byte] == 0x00 l0800_0CF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0CF7:
	word16 cx_183 = ~cx_172
	word16 cx_186 = cx_183 >>u 0x0001
	word16 si_188 = di_160 - cx_183
	word16 di_194 = 0x2714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D06:
	branch cx_186 == 0x0000 l0800_0D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D08:
	cx_130 = cx_186 * 0x0002 + (cx_183 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0A:
	branch cx_130 == 0x0000 l0800_0D0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0D:
	word16 ax_239 = fn0800_B2EF(cx_130, dx_162, bx_29, ds, 0x089E, ds, out si_394, out di_395)
	dxOut = dx_162
	return ax_239
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0C93_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D0A_1:
	Mem260[ds:di_194:byte] = Mem212[ss:si_188:byte]
	si_188 = si_188 + 0x0001
	di_194 = di_194 + 0x0001
	cx_130 = cx_130 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D06_2:
	Mem270[ds:di_194:word16] = Mem266[ss:si_188:word16]
	si_188 = si_188 + 0x0002
	di_194 = di_194 + 0x0002
	cx_186 = cx_186 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0D24(selector ds, word16 wArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..31]
// LiveOut: ax bx cx di ds dx es si Top
// Trashed: SCZDO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_0D24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D24:
	selector ds_25
	fn0800_0DA9(ds, Mem17[ds:0x29DB:word16], Mem14[ds:0x29DD:word16], out dx_212, out ds_25)
	selector ds_50
	fn0800_0DA9(ds_25, Mem42[ds_25:0x29D7:word16], Mem39[ds_25:0x29D9:word16], out dx_213, out ds_50)
	selector ds_75
	word16 dx_76
	word16 cx_73 = fn0800_0DA9(ds_50, Mem67[ds_50:0x29D3:word16], Mem64[ds_50:0x29D5:word16], out dx_76, out ds_75)
	fn0800_B2EF(cx_73, dx_76, wArg02 << 0x0002, ds_75, 0x08A2, ds_75, out si_214, out di_215)
	word16 bx_110 = (word16) ptrArg04
	branch Mem98[ptrArg04:byte] == 0x00 l0800_0D92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D83:
	fn0800_B2EF(cx_73, dx_76, bx_110, ds_75, 0x08A6, ds_75, out si_216, out di_217)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0D92:
	word16 di_145
	word16 si_146
	fn0800_B2EF(cx_73, dx_76, bx_110, ds_75, 0x0827, ds_75, out si_146, out di_145)
	word16 bx_158
	word16 cx_159
	word16 dx_160
	selector es_161
	word16 si_162
	int8 Top_163
	word16 ax_157 = fn0800_8B5A(cx_73, dx_76, bx_110, si_146, ds_75, 0x0001, out cx_159, out dx_160, out bx_158, out si_162, out es_161, out Top_163)
	cxOut = cx_159
	dxOut = dx_160
	bxOut = bx_158
	siOut = si_162
	diOut = di_145
	esOut = es_161
	dsOut = ds_75
	TopOut = Top_163
	return ax_157
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0D24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0DA9(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: cx ds dx
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_0DA9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DA9:
	branch (wArg02 | wArg04) == 0x0000 l0800_0DCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DB4:
	word16 bp_22
	word16 ax_21 = fn0800_A614(ds, SEQ(wArg04, wArg02), out cx, out dx_90, out bp_22, out si_91, out di_92, out ds)
	word16 sp_25 = <invalid>
	Mem39[ss:sp_25 + 0x0002:word16] = Mem19[ss:bp_22 + 0x000A:word16]
	Mem42[ss:sp_25:word16] = Mem39[ss:bp_22 + 0x0008:word16]
	dx = fn0800_8F7F(ax_21, ds, Mem42[ss:sp_25:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DCC:
	dxOut = dx
	dsOut = ds
	return cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DA9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_0DCE(word16 cx, word16 dx, word16 bx, selector ds, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: cx di si
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: sp
fn0800_0DCE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DCE:
	word16 di_20
	word16 si_21
	fn0800_B2EF(cx, dx, bx, ds, 0x07E8, ds, out si_21, out di_20)
	word16 cx_35
	word16 si_38
	fn0800_8B5A(cx, dx, bx, si_21, ds, 0x0000, out cx_35, out dx_57, out bx_58, out si_38, out es_59, out Top_60)
	siOut = si_38
	diOut = di_20
	return cx_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DCE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_0DE8(word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZDOP ax bp bx cx di ds dx es Top
// Preserved: si sp
fn0800_0DE8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0DE8:
	word16 bx_18 = Mem17[ds:0x2A25:word16]
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, 0x08AC, ds, out si_984, out di_985)
	branch Mem32[ds:0x2E4F:word16] == 0x0000 l0800_0E2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E1B:
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, 0x08BA, ds, out si_986, out di_987)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E2A:
	branch Mem65[ds:0x2A1F:word16] == 0x0000 l0800_0E3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E31:
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, 0x08CF, ds, out si_992, out di_993)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E3C:
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, 0x08DC, ds, out si_988, out di_989)
	selector ds_117
	word16 dx_118
	word16 di_140
	word16 di_164
	word16 cx_163
	word16 dx_166
	selector ds_165
	word16 si_168
	word16 ax_160 = fn0800_4234(fn0800_37BE(fn0800_3678(ds, 0x427E, ds, out dx_118, out si_990, out ds_117), dx_118, ds_117, 0x4477, ds_117, out di_140), di_140, ds_117, 0x4477, ds_117, 0x08EC, ds_117, out cx_163, out dx_166, out bp_991, out si_168, out di_164, out ds_165)
	Mem177[ds_165:0x29DD:word16] = dx_166
	Mem178[ds_165:0x29DB:word16] = ax_160
	word16 sp_169 = <invalid>
	word16 sp_175 = sp_169 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10F4:
	word16 sp_180 = sp_175 - 2
	Mem183[ss:sp_180:word16] = ds_165
	Mem186[ss:sp_180 - 2:word16] = 0x4541
	word16 sp_201 = <invalid>
	word16 di_198
	selector ds_199
	word16 si_200
	branch fn0800_2DE2(cx_163, dx_166, si_168, di_164, ds_165, Mem186[ss:sp_180 - 2:segptr32], out ch_994, out bp_995, out si_200, out di_198, out ds_199) == 0x0000 l0800_1106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1106:
	Mem215[ss:sp_201 + 0x0002:word16] = Mem186[ds_199:0x29DD:word16]
	Mem218[ss:sp_201:word16] = Mem215[ds_199:0x29DB:word16]
	selector ds_228
	fn0800_A614(ds_199, Mem218[ss:sp_201:segptr32], out cx_996, out dx_997, out bp_998, out si_999, out di_1000, out ds_228)
	fn0800_8F7F(0x4477, ds_228, SEQ(ds_228, 0x4477))
	return ds_228
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_0DE8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1103:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E7C:
	fn0800_3764(si_200, di_198, ds_199)
	sp_175 = <invalid>
	branch fn0800_388C(si_200, di_198, ds_199, out cx_163, out dx_166, out bp_1001, out si_168, out di_164, out ds_165) != 0x0000 l0800_0E89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E89:
	word16 si_343
	Mem282[ss:sp_175 - 2:word16] = ds_165
	Mem285[ss:sp_175 - 4:word16] = 0x4541
	word16 dx_289
	word16 ax_286 = fn0800_0C93(si_168, di_164, ds_165, Mem285[ss:sp_175 - 4:word16], Mem285[ss:sp_175 - 2:word16], out dx_289)
	Mem301[ss:sp_175 - 2:word16] = Mem285[ds_165:0x29E5:word16]
	Mem304[ss:sp_175 - 4:word16] = Mem301[ds_165:0x29E3:word16]
	fn0800_4194(ds_165, Mem304[ss:sp_175 - 4:word16], Mem304[ss:sp_175 - 2:word16])
	Mem313[ds_165:0x2A09:word16] = dx_289
	Mem314[ds_165:0x2A07:word16] = ax_286
	Mem315[ds_165:0x2A05:word16] = dx_289
	Mem316[ds_165:0x2A03:word16] = ax_286
	word16 sp_312 = sp_175
	branch Mem316[ds_165:0x2A09:word16] >u 0x0000 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EB9:
	branch Mem316[ds_165:0x2A09:word16] != 0x0000 l0800_0EC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EBB:
	branch Mem316[ds_165:0x2A07:word16] >u 0x0012 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EC2:
	branch Mem316[ds_165:0x2A15:word16] != 0x0000 l0800_0ECF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ECF:
	word16 bp_336
	word16 dx_341
	word16 ax_334 = fn0800_3992(0x0000, di_164, ds_165, out dx_341, out bp_336, out si_343, out ds_165)
	sp_312 = <invalid>
	word16 ax_349 = ax_334
	branch ax_334 == 0x0000 l0800_0EDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EDC:
	word16 bx_354 = Mem316[ds_165:0x2A23:word16]
	branch bx_354 <=u 0x0005 l0800_0EE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EE8:
	switch (bx_354 << 0x0001) { l0800_0FF4 l0800_0EEF l0800_1002 l0800_0FFB l0800_0FCC l0800_0FED }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FED:
	ax_349 = fn0800_67BF(ds_165, out dx_341, out ds_165)
	sp_312 = <invalid>
	si_343 = ax_349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FCC:
	Mem377[ss:sp_312 - 2:word16] = Mem316[ds_165:0x29E5:word16]
	Mem380[ss:sp_312 - 4:word16] = Mem377[ds_165:0x29E3:word16]
	selector ds_385
	branch fn0800_3F0A(ds_165, Mem380[ss:sp_312 - 4:word16], Mem380[ss:sp_312 - 2:word16], out dx_1012, out ds_385) != 0x4D5A l0800_0FE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FE6:
	ax_349 = fn0800_669C(ds_385, out dx_341, out ds_165)
	sp_312 = <invalid>
	si_343 = ax_349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FDF:
	ax_349 = fn0800_5E64(ds_385, out dx_341, out ds_165)
	sp_312 = <invalid>
	si_343 = ax_349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FFB:
	ax_349 = fn0800_73AC(ds_165, out dx_341, out ds_165)
	si_343 = ax_349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1002:
	ax_349 = fn0800_741D(ds_165, out dx_341)
	si_343 = ax_349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EEF:
	branch Mem316[ds_165:0x2A09:word16] <u 0x0000 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EF6:
	branch Mem316[ds_165:0x2A09:word16] != 0x0000 l0800_0EFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EF8:
	branch Mem316[ds_165:0x2A07:word16] <u 0x0012 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EFF:
	Mem465[ss:sp_312 - 2:word16] = Mem316[ds_165:0x29E5:word16]
	Mem468[ss:sp_312 - 4:word16] = Mem465[ds_165:0x29E3:word16]
	ax_349 = fn0800_8CAA(ax_334, 0x08, fn0800_3F58(ds_165, Mem468[ss:sp_312 - 4:word16], Mem468[ss:sp_312 - 2:word16], out di_1013, out ds_165), out dx_341)
	sp_312 = <invalid>
	branch dx_341 != 0x0052 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F17:
	branch ax_349 != 0x4E43 l0800_0F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F1C:
	si_343 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F1F:
	branch si_343 == 0x0000 l0800_0F26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F26:
	word16 sp_508 = sp_312 - 2
	Mem510[ss:sp_508:word16] = Mem505[ds_165:0x2A09:word16]
	Mem513[ss:sp_508 - 2:word16] = Mem510[ds_165:0x2A07:word16]
	Mem516[ss:sp_508 - 4:word16] = Mem513[ds_165:0x2A09:word16]
	Mem519[ss:sp_508 - 6:word16] = Mem516[ds_165:0x2A07:word16]
	fn0800_75EA(ds_165, Mem519[ss:sp_508 - 6:word16], Mem519[ss:sp_508 - 4:word16], Mem519[ss:sp_508 - 2:word16], Mem519[ss:sp_508:word16], out bp_1014, out si_343, out ds_165)
	word16 sp_529 = <invalid>
	sp_312 = sp_529 + 0x0008
	ax_349 = Mem519[ds_165:0x2A05:word16]
	dx_341 = Mem519[ds_165:0x2A03:word16]
	branch ax_349 >=u Mem519[ds_165:0x2A09:word16] l0800_0F4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F4C:
	branch ax_349 != Mem519[ds_165:0x2A09:word16] l0800_0F57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F4E:
	branch dx_341 >=u Mem519[ds_165:0x2A07:word16] l0800_0F57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F57:
	branch Mem519[ds_165:0x2A15:word16] != 0x0000 l0800_0F61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F61:
	Mem551[ss:sp_529 + 0x0006:word16] = Mem519[ds_165:0x29E5:word16]
	Mem554[ss:sp_529 + 0x0004:word16] = Mem551[ds_165:0x29E3:word16]
	fn0800_BA67(ds_165, Mem554[ss:sp_529 + 0x0004:word16], Mem554[ss:sp_529 + 0x0006:word16])
	Mem567[ss:sp_529 + 0x0006:word16] = Mem554[ds_165:0x29E1:word16]
	Mem570[ss:sp_529 + 0x0004:word16] = Mem567[ds_165:0x29DF:word16]
	fn0800_BA67(ds_165, Mem570[ss:sp_529 + 0x0004:word16], Mem570[ss:sp_529 + 0x0006:word16])
	Mem583[ss:sp_529 + 0x0006:word16] = Mem570[ds_165:0x29E1:word16]
	Mem586[ss:sp_529 + 0x0004:word16] = Mem583[ds_165:0x29DF:word16]
	Mem590[ss:sp_529 + 0x0002:word16] = 0x524E
	Mem592[ss:sp_529:word16] = 0x4300
	selector ds_597
	fn0800_409C(ds_165, Mem592[ss:sp_529:word16], Mem592[ss:sp_529 + 2:word16], Mem592[ss:sp_529 + 4:word16], Mem592[ss:sp_529 + 6:word16], out dx_1015, out ds_597, out Top_1016)
	Mem609[ss:sp_529 + 0x0006:word16] = Mem592[ds_597:0x29E1:word16]
	Mem612[ss:sp_529 + 0x0004:word16] = Mem609[ds_597:0x29DF:word16]
	Mem615[ss:sp_529 + 0x0002:word16] = Mem612[ds_597:0x2A09:word16]
	Mem618[ss:sp_529:word16] = Mem615[ds_597:0x2A07:word16]
	selector ds_623
	fn0800_409C(ds_597, Mem618[ss:sp_529:word16], Mem618[ss:sp_529 + 2:word16], Mem618[ss:sp_529 + 4:word16], Mem618[ss:sp_529 + 6:word16], out dx_1017, out ds_623, out Top_1018)
	Mem635[ss:sp_529 + 0x0006:word16] = Mem618[ds_623:0x2A09:word16]
	Mem638[ss:sp_529 + 0x0004:word16] = Mem635[ds_623:0x2A07:word16]
	Mem641[ss:sp_529 + 0x0002:word16] = Mem638[ds_623:0x29E1:word16]
	Mem644[ss:sp_529:word16] = Mem641[ds_623:0x29DF:word16]
	Mem647[ss:sp_529 - 2:word16] = Mem644[ds_623:0x29E5:word16]
	Mem650[ss:sp_529 - 4:word16] = Mem647[ds_623:0x29E3:word16]
	word16 sp_660 = <invalid>
	ax_349 = fn0800_3B0A(Mem650[ss:sp_529 + 4:word16], Mem650[ss:sp_529 + 6:word16], out dx_341, out bp_1019, out ds_165)
	sp_312 = sp_660 + 0x000C
	si_343 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F5E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F54:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F49:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0F23:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0FF4:
	ax_349 = fn0800_6AD4(bp_336, si_343, ds_165, out dx_341, out ds_165)
	sp_312 = <invalid>
	si_343 = ax_349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EE5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1007:
	word16 sp_689 = sp_312 - 2
	Mem691[ss:sp_689:word16] = Mem686[ds_165:0x29E1:word16]
	Mem694[ss:sp_689 - 2:word16] = Mem691[ds_165:0x29DF:word16]
	fn0800_4194(ds_165, Mem694[ss:sp_689 - 2:word16], Mem694[ss:sp_689:word16])
	Mem706[ds_165:0x2A05:word16] = dx_341
	Mem710[ds_165:0x2A03:word16] = ax_349
	sp_312 = sp_689 + 0x0002
	word16 ax_711 = Mem710[ds_165:0x2A05:word16]
	word16 dx_712 = Mem710[ds_165:0x2A03:word16]
	branch ax_711 <u Mem710[ds_165:0x2A09:word16] l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1029:
	branch ax_711 != Mem710[ds_165:0x2A09:word16] l0800_1031
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_102B:
	branch dx_712 <u Mem710[ds_165:0x2A07:word16] l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1031:
	branch Mem710[ds_165:0x2A15:word16] != 0x0000 l0800_1049
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1038:
	word16 dx_723 = Mem710[ds_165:0x2A07:word16]
	Mem724[ds_165:0x2A05:word16] = Mem710[ds_165:0x2A09:word16]
	Mem725[ds_165:0x2A03:word16] = dx_723
	si_343 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1049:
	branch si_343 != 0x0004 l0800_105C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_104E:
	word16 dx_736 = Mem734[ds_165:0x2A07:word16]
	Mem737[ds_165:0x2A05:word16] = Mem734[ds_165:0x2A09:word16]
	Mem738[ds_165:0x2A03:word16] = dx_736
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0ED6:
	si_343 = 0x000E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0EC9:
	si_343 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_105C:
	branch Mem742[ds_165:0x427E:byte] == 0x00 l0800_10B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1063:
	branch si_343 == 0x0003 l0800_106D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1068:
	branch si_343 != 0x0004 l0800_10B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_106D:
	word16 dx_753 = Mem742[ds_165:0x2A07:word16]
	Mem754[ds_165:0x2A05:word16] = Mem742[ds_165:0x2A09:word16]
	Mem755[ds_165:0x2A03:word16] = dx_753
	word16 sp_762 = sp_312 - 2
	Mem767[ss:sp_762:word16] = Mem755[ds_165:0x29E5:word16]
	Mem770[ss:sp_762 - 2:word16] = Mem767[ds_165:0x29E3:word16]
	fn0800_BA67(ds_165, Mem770[ss:sp_762 - 2:word16], Mem770[ss:sp_762:word16])
	Mem783[ss:sp_762:word16] = Mem770[ds_165:0x29E1:word16]
	Mem786[ss:sp_762 - 2:word16] = Mem783[ds_165:0x29DF:word16]
	fn0800_BA67(ds_165, Mem786[ss:sp_762 - 2:word16], Mem786[ss:sp_762:word16])
	Mem799[ss:sp_762:word16] = Mem786[ds_165:0x2A09:word16]
	Mem802[ss:sp_762 - 2:word16] = Mem799[ds_165:0x2A07:word16]
	Mem805[ss:sp_762 - 4:word16] = Mem802[ds_165:0x29E1:word16]
	Mem808[ss:sp_762 - 6:word16] = Mem805[ds_165:0x29DF:word16]
	Mem811[ss:sp_762 - 8:word16] = Mem808[ds_165:0x29E5:word16]
	Mem814[ss:sp_762 - 10:word16] = Mem811[ds_165:0x29E3:word16]
	fn0800_3B0A(Mem814[ss:sp_762 - 2:word16], Mem814[ss:sp_762:word16], out dx_1010, out bp_1011, out ds_165)
	word16 sp_824 = <invalid>
	sp_312 = sp_824 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10B7:
	word16 sp_892
	word16 sp_838 = sp_312 - 2
	Mem840[ss:sp_838:word16] = Mem835[ds_165:0x29E5:word16]
	Mem843[ss:sp_838 - 2:word16] = Mem840[ds_165:0x29E3:word16]
	selector ds_853
	fn0800_A614(ds_165, Mem843[ss:sp_838 - 2:segptr32], out cx_1002, out dx_1003, out bp_1004, out si_1005, out di_1006, out ds_853)
	word16 sp_848 = <invalid>
	Mem862[ss:sp_848 + 0x0002:word16] = Mem843[ds_853:0x29E1:word16]
	Mem865[ss:sp_848:word16] = Mem862[ds_853:0x29DF:word16]
	word16 di_872
	fn0800_A614(ds_853, Mem865[ss:sp_848:segptr32], out cx_1007, out dx_1008, out bp_1009, out si_168, out di_872, out ds_165)
	word16 sp_870 = <invalid>
	branch si_168 <= 0x0002 l0800_10E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E5:
	si_168 = fn0800_37DF(si_168, di_872, ds_165, out di_872, out ds_165)
	sp_892 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10D8:
	Mem900[ss:sp_870 + 0x0002:word16] = ds_165
	Mem903[ss:sp_870:word16] = 0x44DC
	fn0800_8F7F(0x44DC, ds_165, Mem903[ss:sp_870:segptr32])
	sp_892 = sp_870 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_10E8:
	word16 sp_913 = sp_892 - 2
	Mem916[ss:sp_913:word16] = ds_165
	Mem919[ss:sp_913 - 2:word16] = 0x4541
	Mem922[ss:sp_913 - 4:word16] = si_168
	cx_163 = fn0800_0ABC(di_872, ds_165, Mem922[ss:sp_913 - 4:word16], Mem922[ss:sp_913 - 2:word16], Mem922[ss:sp_913:word16], out dx_166, out di_164)
	sp_175 = sp_913 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_0E86:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_112D(word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZDOP bp bx cx di ds dx es Top
// Preserved: si sp
fn0800_112D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_112D:
	word16 bx_18 = Mem17[ds:0x2A25:word16]
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, 0x08F0, ds, out si_591, out di_592)
	branch Mem32[ds:0x2E4F:word16] == 0x0000 l0800_116F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1160:
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, 0x08FE, ds, out si_593, out di_594)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_116F:
	word16 di_114
	word16 si_113
	fn0800_B2EF(cx, dx, bx_18 << 0x0002, ds, 0x0913, ds, out si_113, out di_114)
	word16 sp_103 = fp - 0x0002
	branch Mem71[ds:0x2A25:word16] == 0x0001 l0800_1184
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1184:
	cx = fn0800_3678(ds, 0x427E, ds, out dx, out si_113, out ds)
	sp_103 = fp - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1181:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12C2:
	word16 sp_106 = sp_103 - 2
	Mem109[ss:sp_106:word16] = ds
	Mem112[ss:sp_106 - 2:word16] = 0x4541
	word16 di_124
	selector ds_125
	word16 si_126
	branch fn0800_2DE2(cx, dx, si_113, di_114, ds, Mem112[ss:sp_106 - 2:segptr32], out ch_595, out bp_596, out si_126, out di_124, out ds_125) == 0x0000 l0800_12D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D4:
	return ds_125
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_112D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12D1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1192:
	fn0800_3764(si_126, di_124, ds_125)
	sp_103 = <invalid>
	word16 bp_152
	branch fn0800_388C(si_126, di_124, ds_125, out cx, out dx, out bp_152, out si_113, out di_114, out ds) != 0x0000 l0800_119F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_119F:
	Mem173[ss:sp_103 - 2:word16] = ds
	Mem176[ss:sp_103 - 4:word16] = 0x4541
	word16 dx_180
	word16 ax_177 = fn0800_0C93(si_113, di_114, ds, Mem176[ss:sp_103 - 4:word16], Mem176[ss:sp_103 - 2:word16], out dx_180)
	Mem192[ss:sp_103 - 2:word16] = Mem176[ds:0x29E5:word16]
	Mem195[ss:sp_103 - 4:word16] = Mem192[ds:0x29E3:word16]
	fn0800_4194(ds, Mem195[ss:sp_103 - 4:word16], Mem195[ss:sp_103 - 2:word16])
	Mem204[ds:0x2A05:word16] = dx_180
	Mem205[ds:0x2A03:word16] = ax_177
	word16 sp_203 = sp_103
	word16 dx_206 = dx_180
	branch dx_180 >u 0x0000 l0800_11CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11C3:
	branch Test(ULT,false) l0800_11CA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11C5:
	branch ax_177 >=u 0x0012 l0800_11CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11CF:
	word16 bx_215 = Mem205[ds:0x2A23:word16]
	branch bx_215 >u 0x0005 l0800_1243
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11D8:
	switch (bx_215 << 0x0001) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1229:
	ax_177 = fn0800_4BB1(ax_177, dx_180, ds, out dx_206, out ds)
	sp_203 = <invalid>
	si_113 = ax_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1208:
	Mem242[ss:sp_103 - 2:word16] = Mem205[ds:0x29E5:word16]
	Mem245[ss:sp_103 - 4:word16] = Mem242[ds:0x29E3:word16]
	selector ds_250
	word16 dx_251
	word16 ax_246 = fn0800_3F0A(ds, Mem245[ss:sp_103 - 4:word16], Mem245[ss:sp_103 - 2:word16], out dx_251, out ds_250)
	branch ax_246 != 0x4D5A l0800_1222
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1222:
	ax_177 = fn0800_4B97(ax_246, dx_251, ds_250, out dx_206, out ds)
	sp_203 = <invalid>
	si_113 = ax_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_121B:
	ax_177 = fn0800_46FE(ds_250, out dx_206, out ds)
	sp_203 = <invalid>
	si_113 = ax_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1237:
	ax_177 = fn0800_518F(ax_177, dx_180, ds, out dx_206, out ds)
	sp_203 = <invalid>
	si_113 = ax_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_123E:
	ax_177 = fn0800_51A9(ds, out dx_206, out ds)
	sp_203 = <invalid>
	si_113 = ax_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11DF:
	Mem327[ss:sp_103 - 2:word16] = Mem205[ds:0x29E5:word16]
	Mem330[ss:sp_103 - 4:word16] = Mem327[ds:0x29E3:word16]
	ax_177 = fn0800_8CAA(ax_177, 0x08, fn0800_3F58(ds, Mem330[ss:sp_103 - 4:word16], Mem330[ss:sp_103 - 2:word16], out di_597, out ds), out dx_206)
	sp_203 = <invalid>
	branch dx_206 != 0x0052 l0800_1203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11F7:
	branch ax_177 != 0x4E43 l0800_1203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1203:
	si_113 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11FC:
	ax_177 = fn0800_5374(ds, out dx_206, out bp_606, out ds)
	sp_203 = <invalid>
	si_113 = ax_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1230:
	ax_177 = fn0800_4C55(ax_177, bp_152, ds, out dx_206, out ds)
	sp_203 = <invalid>
	si_113 = ax_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_11CA:
	si_113 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1243:
	word16 sp_402 = sp_203 - 2
	Mem406[ss:sp_402:word16] = Mem395[ds:0x29E1:word16]
	Mem409[ss:sp_402 - 2:word16] = Mem406[ds:0x29DF:word16]
	fn0800_4194(ds, Mem409[ss:sp_402 - 2:word16], Mem409[ss:sp_402:word16])
	Mem422[ds:0x2A09:word16] = dx_206
	Mem426[ds:0x2A07:word16] = ax_177
	Mem429[ss:sp_402:word16] = Mem426[ds:0x29E5:word16]
	Mem432[ss:sp_402 - 2:word16] = Mem429[ds:0x29E3:word16]
	fn0800_4194(ds, Mem432[ss:sp_402 - 2:word16], Mem432[ss:sp_402:word16])
	Mem441[ds:0x2A05:word16] = dx_206
	Mem442[ds:0x2A03:word16] = ax_177
	branch si_113 == 0x0000 l0800_127F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1271:
	word16 dx_450 = Mem442[ds:0x2A03:word16]
	Mem451[ds:0x2A09:word16] = Mem442[ds:0x2A05:word16]
	Mem452[ds:0x2A07:word16] = dx_450
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_127F:
	word16 sp_515
	Mem459[ss:sp_402:word16] = Mem454[ds:0x29E5:word16]
	Mem462[ss:sp_402 - 2:word16] = Mem459[ds:0x29E3:word16]
	selector ds_472
	fn0800_A614(ds, Mem462[ss:sp_402 - 2:segptr32], out cx_598, out dx_599, out bp_600, out si_601, out di_602, out ds_472)
	word16 sp_467 = <invalid>
	Mem481[ss:sp_467 + 0x0002:word16] = Mem462[ds_472:0x29E1:word16]
	Mem484[ss:sp_467:word16] = Mem481[ds_472:0x29DF:word16]
	word16 si_493
	word16 di_491
	fn0800_A614(ds_472, Mem484[ss:sp_467:segptr32], out cx_603, out dx_604, out bp_605, out si_493, out di_491, out ds)
	word16 sp_489 = <invalid>
	branch Mem484[ds:0x2A25:word16] == 0x0002 l0800_12A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12A2:
	branch si_493 == 0x0000 l0800_12B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12B3:
	si_113 = fn0800_37DF(si_493, di_491, ds, out di_491, out ds)
	sp_515 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12A6:
	Mem526[ss:sp_489 + 0x0002:word16] = ds
	Mem529[ss:sp_489:word16] = 0x44DC
	fn0800_8F7F(0x44DC, ds, Mem529[ss:sp_489:segptr32])
	si_113 = si_493
	sp_515 = sp_489 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12B6:
	word16 sp_539 = sp_515 - 2
	Mem542[ss:sp_539:word16] = ds
	Mem545[ss:sp_539 - 2:word16] = 0x4541
	Mem549[ss:sp_539 - 4:word16] = si_113
	cx = fn0800_0ABC(di_491, ds, Mem549[ss:sp_539 - 4:word16], Mem549[ss:sp_539 - 2:word16], Mem549[ss:sp_539:word16], out dx, out di_114)
	sp_103 = sp_539 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_119C:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_12E2(word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_12E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_12E2:
	word16 bx_22 = Mem21[ds:0x2A25:word16]
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, 0x0916, ds, out si_1935, out di_1936)
	branch Mem36[ds:0x2E4F:word16] == 0x0000 l0800_1321
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1312:
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, 0x0925, ds, out si_1938, out di_1939)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1321:
	word16 di_80
	word16 si_81
	fn0800_B2EF(cx, dx, bx_22 << 0x0002, ds, 0x093A, ds, out si_81, out di_80)
	word16 sp_108 = <invalid>
	word16 dx_105
	word16 si_107
	word16 di_103
	word16 bp_100
	selector ds_104
	word16 ax_99 = fn0800_AA7E(si_81, di_80, ds, 0x4348, ds, 0x093D, ds, out cx_1937, out dx_105, out bp_100, out si_107, out di_103, out ds_104)
	Mem114[ds_104:0x29D1:word16] = dx_105
	Mem115[ds_104:0x29CF:word16] = ax_99
	word16 sp_113 = sp_108 + 0x0008
	word16 ax_116 = Mem115[ds_104:0x2A25:word16]
	branch ax_116 == 0x0003 l0800_1353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1353:
	branch (Mem115[ds_104:0x29CF:word16] | Mem115[ds_104:0x29D1:word16]) == 0x0000 l0800_135F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_135F:
	Mem125[ss:sp_108 + 0x0006:word16] = ds_104
	Mem128[ss:sp_108 + 0x0004:word16] = 0x4348
	Mem131[ss:sp_108 + 0x0002:word16] = 0x0007
	fn0800_0D24(ds_104, Mem131[ss:sp_108 + 0x0002:word16], Mem131[ss:sp_108 + 0x0004:segptr32], out cx_1942, out dx_1943, out bx_1944, out si_1945, out di_1946, out es_1947, out ds_104, out Top_1948)
	sp_113 = sp_108 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_135C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_134B:
	branch ax_116 == 0x0004 l0800_1371
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1371:
	branch (Mem115[ds_104:0x29CF:word16] | Mem115[ds_104:0x29D1:word16]) == 0x0000 l0800_13C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_137A:
	Mem157[ss:sp_108 + 0x0006:word16] = Mem115[ds_104:0x29D1:word16]
	Mem160[ss:sp_108 + 0x0004:word16] = Mem157[ds_104:0x29CF:word16]
	branch fn0800_3E27(ds_104, Mem160[ss:sp_108 + 0x0004:word16], Mem160[ss:sp_108 + 0x0006:word16], out cx_1949, out dx_1950, out di_103, out ds_104, out Top_1951) != 0x4D5A l0800_13BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13BA:
	Mem176[ds_104:0x29D1:word16] = 0x0000
	Mem177[ds_104:0x29CF:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_138D:
	Mem180[ss:sp_108 + 0x0006:word16] = 0x0002
	Mem185[ss:sp_108 + 0x0004:word16] = 0x0000
	Mem187[ss:sp_108 + 0x0002:word16] = 0x0000
	Mem190[ss:sp_108:word16] = Mem187[ds_104:0x29D1:word16]
	Mem193[ss:sp_108 - 2:word16] = Mem190[ds_104:0x29CF:word16]
	fn0800_ACB3(ds_104, Mem193[ss:sp_108 - 2:word16], Mem193[ss:sp_108:word16], Mem193[ss:sp_108 + 6:word16], out cx_1952, out dx_1953, out bx_1954)
	Mem207[ss:sp_108 + 0x0006:word16] = Mem193[ds_104:0x29D1:word16]
	Mem210[ss:sp_108 + 0x0004:word16] = Mem207[ds_104:0x29CF:word16]
	word16 dx_214
	word16 ax_211 = fn0800_AD2F(ds_104, Mem210[ss:sp_108 + 0x0004:segptr32], out dx_214)
	Mem222[ds_104:0x29ED:word16] = dx_214
	Mem223[ds_104:0x29EB:word16] = ax_211
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13C6:
	word16 sp_231 = sp_108 + 0x0008
	branch (Mem225[ds_104:0x29CF:word16] | Mem225[ds_104:0x29D1:word16]) != 0x0000 l0800_13F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13CF:
	Mem234[ss:sp_108 + 0x0006:word16] = ds_104
	Mem237[ss:sp_108 + 0x0004:word16] = 0x0941
	Mem239[ss:sp_108 + 0x0002:word16] = ds_104
	Mem242[ss:sp_108:word16] = 0x4348
	word16 sp_254 = <invalid>
	word16 dx_251
	word16 ax_245 = fn0800_4234(si_107, di_103, ds_104, Mem242[ss:sp_108:word16], Mem242[ss:sp_108 + 0x0002:word16], Mem242[ss:sp_108 + 0x0004:word16], Mem242[ss:sp_108 + 0x0006:word16], out cx_1963, out dx_251, out bp_100, out si_1964, out di_1965, out ds_104)
	Mem262[ds_104:0x29D1:word16] = dx_251
	Mem263[ds_104:0x29CF:word16] = ax_245
	Mem264[ds_104:0x29ED:word16] = 0x0000
	Mem265[ds_104:0x29EB:word16] = 0x0000
	sp_231 = sp_254 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_13F2:
	Mem269[ss:bp_100 - 0x006E:byte] = 0x52
	Mem270[ss:bp_100 - 0x006D:byte] = 0x4E
	Mem271[ss:bp_100 - 0x006C:byte] = 0x43
	Mem272[ss:bp_100 - 0x006B:byte] = 0x41
	Mem273[ss:bp_100 - 0x006A:byte] = 0x00
	Mem274[ss:bp_100 - 0x0069:byte] = 0x0C
	Mem275[ss:bp_100 - 0x0066:byte] = 0x00
	Mem276[ss:bp_100 - 0x0065:byte] = 0x0C
	Mem277[ss:bp_100 - 0x0064:byte] = 0x00
	Mem278[ss:bp_100 - 0x0063:byte] = 0x00
	word16 sp_283 = sp_231 - 2
	Mem284[ss:sp_283:word16] = 0x0000
	Mem287[ss:sp_283 - 2:word16] = 0x0004
	Mem289[ss:sp_283 - 4:word16] = ss
	Mem292[ss:sp_283 - 6:word16] = bp_100 - 0x0066
	Mem307[ss:bp_100 - 0x0068:byte] = (byte) (fn0800_2CCF(ds_104, Mem292[ss:sp_283 - 6:segptr32], Mem292[ss:sp_283 - 2:word16], Mem292[ss:sp_283:byte], out cl_1957, out dx_1958) >>u 0x08)
	Mem312[ss:sp_283:word16] = 0x0000
	Mem315[ss:sp_283 - 2:word16] = 0x0004
	Mem317[ss:sp_283 - 4:word16] = ss
	Mem320[ss:sp_283 - 6:word16] = bp_100 - 0x0066
	Mem332[ss:bp_100 - 0x0067:byte] = (byte) fn0800_2CCF(ds_104, Mem320[ss:sp_283 - 6:segptr32], Mem320[ss:sp_283 - 2:word16], Mem320[ss:sp_283:byte], out cl_1959, out dx_1960)
	Mem335[ss:sp_283:word16] = Mem332[ds_104:0x29D1:word16]
	Mem338[ss:sp_283 - 2:word16] = Mem335[ds_104:0x29CF:word16]
	Mem344[ss:sp_283 - 4:word16] = 0x0000
	Mem346[ss:sp_283 - 6:word16] = 0x000C
	Mem348[ss:sp_283 - 8:word16] = ss
	Mem351[ss:sp_283 - 10:word16] = bp_100 - 0x006E
	selector ds_356
	fn0800_4152(ds_104, Mem351[ss:sp_283 - 10:word16], Mem351[ss:sp_283 - 8:word16], Mem351[ss:sp_283 - 6:word16], Mem351[ss:sp_283 - 2:word16], Mem351[ss:sp_283:word16], out ds_356)
	Mem369[ss:sp_283:word16] = Mem351[ds_356:0x29D1:word16]
	Mem372[ss:sp_283 - 2:word16] = Mem369[ds_356:0x29CF:word16]
	Mem375[ss:sp_283 - 4:word16] = Mem372[ds_356:0x29ED:word16]
	Mem378[ss:sp_283 - 6:word16] = Mem375[ds_356:0x29EB:word16]
	fn0800_409C(ds_356, Mem378[ss:sp_283 - 6:word16], Mem378[ss:sp_283 - 4:word16], Mem378[ss:sp_283 - 2:word16], Mem378[ss:sp_283:word16], out dx_1961, out ds_104, out Top_1962)
	sp_113 = sp_283 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1350:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1478:
	word16 sp_397 = sp_113 - 2
	Mem399[ss:sp_397:word16] = 0x0000
	word16 sp_410 = <invalid>
	word16 dx_407
	selector ds_406
	word16 di_1824
	word16 cx_1827 = fn0800_1CF6(ds_104, Mem399[ss:sp_397:word16], out dx_407, out bp_1940, out si_1941, out di_1824, out ds_406)
	word16 sp_1795 = sp_410 + 0x0002
	word16 si_417 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1527:
	word16 sp_421 = sp_1795 - 2
	Mem424[ss:sp_421:word16] = ds_406
	Mem427[ss:sp_421 - 2:word16] = 0x4541
	word16 sp_442 = <invalid>
	sp_1795 = sp_442 + 0x0004
	word16 bp_438
	branch fn0800_2DE2(cx_1827, dx_407, si_417, di_1824, ds_406, Mem427[ss:sp_421 - 2:segptr32], out ch_1955, out bp_438, out si_417, out di_1824, out ds_406) == 0x0000 l0800_1539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1536:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1486:
	Mem455[ss:sp_442 + 0x0002:word16] = ds_406
	Mem458[ss:sp_442:word16] = 0x4541
	Mem460[ss:sp_442 - 2:word16] = ss
	Mem463[ss:sp_442 - 4:word16] = bp_438 - 0x006E
	fn0800_3509(si_417, di_1824, Mem463[ss:sp_442 - 4:word16], Mem463[ss:sp_442 - 2:selector], Mem463[ss:sp_442:word16], Mem463[ss:sp_442 + 2:word16], out bx_1956)
	Mem477[ss:sp_442 + 0x0002:word16] = ds_406
	Mem480[ss:sp_442:word16] = 0x4541
	Mem482[ss:sp_442 - 2:word16] = ss
	Mem485[ss:sp_442 - 4:word16] = bp_438 - 0x0084
	fn0800_35A3(si_417, di_1824, Mem485[ss:sp_442 - 4:word16], Mem485[ss:sp_442 - 2:selector], Mem485[ss:sp_442:word16], Mem485[ss:sp_442 + 2:word16])
	Mem499[ss:sp_442 + 0x0002:word16] = ss
	Mem502[ss:sp_442:word16] = bp_438 - 0x006E
	word16 dx_506
	word16 ax_503 = fn0800_283D(ds_406, Mem502[ss:sp_442:segptr32], out dx_506)
	Mem513[ss:bp_438 - 0x0002:word16] = dx_506
	Mem514[ss:bp_438 - 0x0004:word16] = ax_503
	branch (ax_503 | dx_506) != 0x0000 l0800_14CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14BC:
	Mem520[ss:sp_442 + 0x0002:word16] = ss
	Mem523[ss:sp_442:word16] = bp_438 - 0x006E
	word16 dx_529
	word16 ax_524 = fn0800_1F5C(ds_406, Mem523[ss:sp_442:segptr32], out dx_529, out di_1824, out ds_406)
	Mem538[ss:bp_438 - 0x0002:word16] = dx_529
	Mem539[ss:bp_438 - 0x0004:word16] = ax_524
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14CD:
	word16 cx_1826
	Mem546[ss:sp_442 + 0x0002:word16] = Mem542[ss:bp_438 - 0x0002:word16]
	Mem549[ss:sp_442:word16] = Mem546[ss:bp_438 - 0x0004:word16]
	Mem551[ss:sp_442 - 0x0002:word16] = ss
	Mem554[ss:sp_442 - 0x0004:word16] = bp_438 - 0x0084
	word16 dx_558
	word16 ax_555 = fn0800_2931(Mem554[ss:sp_442 - 0x0004:segptr32], Mem554[ss:sp_442:segptr32], out dx_558)
	Mem565[ss:bp_438 - 0x0006:word16] = dx_558
	Mem566[ss:bp_438 - 0x0008:word16] = ax_555
	branch (ax_555 | dx_558) != 0x0000 l0800_14FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14FD:
	Mem573[ss:sp_442 + 0x0002:word16] = Mem566[ss:bp_438 - 0x0006:word16]
	Mem576[ss:sp_442:word16] = Mem573[ss:bp_438 - 0x0008:word16]
	word16 sp_587 = <invalid>
	cx_1826 = (word16) fn0800_23EC(ds_406, Mem576[ss:sp_442:word16], Mem576[ss:sp_442 + 0x0002:word16], out bp_1966, out si_1967, out di_1824, out ds_406)
	sp_1795 = sp_587 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_14E9:
	Mem598[ss:sp_442 + 0x0002:word16] = Mem566[ss:bp_438 - 0x0002:word16]
	Mem601[ss:sp_442:word16] = Mem598[ss:bp_438 - 0x0004:word16]
	Mem603[ss:sp_442 - 0x0002:word16] = ss
	Mem606[ss:sp_442 - 0x0004:word16] = bp_438 - 0x0084
	cx_1826 = (word16) fn0800_2085(ds_406, Mem606[ss:sp_442 - 0x0004:segptr32], Mem606[ss:sp_442:segptr32])
	sp_1795 = sp_442 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1509:
	word16 dx_584
	word16 ax_578
	ptr32 es_bx_622 = Mem621[ds_406:0x2E51:segptr32]
	dx_407 = DPB(DPB(dx_584, Mem621[es_bx_622 + 0x0005:byte], 0), 0x00, 8) (alias)
	si_417 = 0x0001
	cx_1827 = DPB(cx_1826, 0x08, 0) (alias)
	branch (DPB(DPB(ax_578, Mem621[es_bx_622 + 0x0004:byte], 0), 0x00, 8) << 0x08) + dx_407 >=u 0xFF8C l0800_1539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1539:
	branch si_417 != 0x0000 l0800_1551
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1551:
	selector ds_652 = fn0800_1E5E(ds_406)
	word16 sp_656 = <invalid>
	Mem665[ss:sp_656 - 2:word16] = 0x0001
	selector ds_671
	word16 cx_669 = fn0800_1CF6(ds_652, Mem665[ss:sp_656 - 2:word16], out dx_1968, out bp_1969, out si_1970, out di_1971, out ds_671)
	word16 sp_675 = <invalid>
	Mem684[ss:sp_675:word16] = 0x0001
	Mem689[ss:sp_675 - 2:word16] = 0x0000
	fn0800_2DBF(ds_671, Mem689[ss:sp_675 - 2:word16], Mem689[ss:sp_675:word16])
	word16 dx_694 = Mem689[ds_671:0x29CF:word16]
	Mem695[ds_671:0x29E1:word16] = Mem689[ds_671:0x29D1:word16]
	Mem696[ds_671:0x29DF:word16] = dx_694
	Mem698[ss:sp_675:word16] = ds_671
	Mem701[ss:sp_675 - 2:word16] = 0x0945
	Mem703[ss:sp_675 - 4:word16] = ds_671
	Mem706[ss:sp_675 - 6:word16] = 0x4477
	word16 di_709
	word16 si_711 = fn0800_37BE(cx_669, dx_694, ds_671, Mem706[ss:sp_675 - 6:word16], Mem706[ss:sp_675 - 4:word16], out di_709)
	Mem720[ss:sp_675:word16] = ds_671
	Mem723[ss:sp_675 - 2:word16] = 0x0941
	Mem725[ss:sp_675 - 4:word16] = ds_671
	Mem728[ss:sp_675 - 6:word16] = 0x4477
	word16 si_1651
	word16 di_1669
	word16 cx_1700
	word16 dx_1691
	selector ds_1652
	word16 ax_729 = fn0800_4234(si_711, di_709, ds_671, Mem728[ss:sp_675 - 6:word16], Mem728[ss:sp_675 - 4:word16], Mem728[ss:sp_675 - 2:word16], Mem728[ss:sp_675:word16], out cx_1700, out dx_1691, out bp_1972, out si_1651, out di_1669, out ds_1652)
	Mem746[ds_1652:0x29DD:word16] = dx_1691
	Mem747[ds_1652:0x29DB:word16] = ax_729
	word16 sp_738 = <invalid>
	word16 sp_1678 = sp_738 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1897:
	word16 sp_749 = sp_1678 - 2
	Mem752[ss:sp_749:word16] = ds_1652
	Mem755[ss:sp_749 - 2:word16] = 0x4541
	word16 sp_770 = <invalid>
	word16 sp_1709 = sp_770 + 0x0004
	word16 di_767
	word16 si_769
	branch fn0800_2DE2(cx_1700, dx_1691, si_1651, di_1669, ds_1652, Mem755[ss:sp_749 - 2:segptr32], out ch_1977, out bp_1978, out si_769, out di_767, out ds_1652) == 0x0000 l0800_18A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_15A3:
	Mem783[ss:sp_770 + 0x0002:word16] = ds_1652
	Mem786[ss:sp_770:word16] = 0x093D
	Mem788[ss:sp_770 - 2:word16] = ds_1652
	Mem791[ss:sp_770 - 4:word16] = 0x4541
	word16 bp_793
	word16 di_796
	word16 dx_798
	word16 si_800
	selector ds_1322
	word16 ax_792 = fn0800_4234(si_769, di_767, ds_1652, Mem791[ss:sp_770 - 4:word16], Mem791[ss:sp_770 - 2:word16], Mem791[ss:sp_770:word16], Mem791[ss:sp_770 + 2:word16], out cx_1988, out dx_798, out bp_793, out si_800, out di_796, out ds_1322)
	Mem809[ds_1322:0x29E5:word16] = dx_798
	Mem810[ds_1322:0x29E3:word16] = ax_792
	word16 sp_801 = <invalid>
	Mem812[ss:sp_801 + 0x0006:word16] = ds_1322
	Mem815[ss:sp_801 + 0x0004:word16] = 0x4541
	Mem817[ss:sp_801 + 0x0002:word16] = ss
	Mem820[ss:sp_801:word16] = bp_793 - 0x006E
	fn0800_3509(si_800, di_796, Mem820[ss:sp_801:word16], Mem820[ss:sp_801 + 2:selector], Mem820[ss:sp_801 + 4:word16], Mem820[ss:sp_801 + 6:word16], out bx_1989)
	Mem834[ss:sp_801 + 0x0006:word16] = ds_1322
	Mem837[ss:sp_801 + 0x0004:word16] = 0x4541
	Mem839[ss:sp_801 + 0x0002:word16] = ss
	Mem842[ss:sp_801:word16] = bp_793 - 0x0084
	fn0800_35A3(si_800, di_796, Mem842[ss:sp_801:word16], Mem842[ss:sp_801 + 2:selector], Mem842[ss:sp_801 + 4:word16], Mem842[ss:sp_801 + 6:word16])
	Mem856[ss:sp_801 + 0x0006:word16] = ds_1322
	Mem859[ss:sp_801 + 0x0004:word16] = 0x4541
	fn0800_0C93(si_800, di_796, ds_1322, Mem859[ss:sp_801 + 0x0004:word16], Mem859[ss:sp_801 + 0x0006:word16], out dx_1990)
	Mem874[ss:sp_801 + 0x0006:word16] = ss
	Mem877[ss:sp_801 + 0x0004:word16] = bp_793 - 0x006E
	word16 dx_881
	word16 ax_878 = fn0800_283D(ds_1322, Mem877[ss:sp_801 + 0x0004:segptr32], out dx_881)
	Mem890[ss:sp_801 + 0x0006:word16] = dx_881
	Mem892[ss:sp_801 + 0x0004:word16] = ax_878
	Mem894[ss:sp_801 + 0x0002:word16] = ss
	Mem897[ss:sp_801:word16] = bp_793 - 0x0084
	word16 dx_901
	word16 ax_898 = fn0800_2931(Mem897[ss:sp_801:segptr32], Mem897[ss:sp_801 + 4:segptr32], out dx_901)
	Mem909[ss:bp_793 - 0x0006:word16] = dx_901
	Mem910[ss:bp_793 - 0x0008:word16] = ax_898
	Mem913[ss:sp_801 + 0x0006:word16] = Mem910[ds_1322:0x29D1:word16]
	Mem916[ss:sp_801 + 0x0004:word16] = Mem913[ds_1322:0x29CF:word16]
	fn0800_4194(ds_1322, Mem916[ss:sp_801 + 0x0004:word16], Mem916[ss:sp_801 + 0x0006:word16])
	Mem930[ds_1322:0x29E9:word16] = dx_901 - (ax_898 <u 0x0004)
	Mem931[ds_1322:0x29E7:word16] = ax_898 - 0x0004
	int32 dx_ax_933 = (int32) Mem931[ds_1322:0x29E9:word16]
	word16 ax_937 = fn0800_8C8A((word16) dx_ax_933, 0x08, SLICE(dx_ax_933, word16, 16), out cl_1991, out dx_1992)
	ptr32 es_di_946 = Mem931[ss:bp_793 - 0x0008:segptr32]
	word16 sp_941 = <invalid>
	Mem948[ss:sp_941 - 2:word16] = ax_937
	selector es_1829 = SLICE(es_di_946, selector, 16)
	word16 di_1830 = (word16) es_di_946
	word16 cx_952 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1632:
	branch cx_952 == 0x0000 l0800_1634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1632_1:
	di_1830 = di_1830 + 0x0001
	cx_952 = cx_952 - 0x0001
	branch Mem948[es_1829:di_1830:byte] == 0x00 l0800_1632
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1634:
	word16 cx_963 = ~cx_952
	word16 di_2017 = di_1830 - cx_963
	bool Z_976 = SLICE(cond(di_2017), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163A:
	branch cx_963 == 0x0000 l0800_163C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163A_2:
	Z_976 = SLICE(cond(0x00 - Mem948[es_1829:di_2017:byte]), bool, 2) (alias)
	di_2017 = di_2017 + 0x0001
	cx_963 = cx_963 - 0x0001
	branch Mem948[es_1829:di_2017:byte] == 0x00 l0800_163A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163C:
	branch Z_976 l0800_1645
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_163E:
	di_2017 = 0x0001
	es_1829 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1645:
	Mem1007[es_1829:di_2017:byte] = (byte) Mem948[ss:sp_941 - 2:word16]
	ptr32 es_di_1020 = Mem1007[ss:bp_793 - 0x0008:segptr32]
	Mem1023[ss:sp_941 - 2:word16] = (word16) (int32) Mem1007[ds_1322:0x29E9:word16]
	selector es_1059 = SLICE(es_di_1020, selector, 16)
	word16 di_1031 = (word16) es_di_1020
	word16 cx_1027 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165C:
	branch cx_1027 == 0x0000 l0800_165E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165C_1:
	di_1031 = di_1031 + 0x0001
	cx_1027 = cx_1027 - 0x0001
	branch Mem1023[es_1059:di_1031:byte] == 0x00 l0800_165C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_165E:
	word16 cx_1038 = ~cx_1027
	word16 di_1041 = di_1031 - cx_1038
	bool Z_1051 = SLICE(cond(di_1041), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1664:
	branch cx_1038 == 0x0000 l0800_1666
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1664_2:
	Z_1051 = SLICE(cond(0x00 - Mem1023[es_1059:di_1041:byte]), bool, 2) (alias)
	di_1041 = di_1041 + 0x0001
	cx_1038 = cx_1038 - 0x0001
	branch Mem1023[es_1059:di_1041:byte] == 0x00 l0800_1664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1666:
	branch Z_1051 l0800_166F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1668:
	di_1041 = 0x0001
	es_1059 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_166F:
	Mem1083[es_1059:di_1041 + 0x0001:byte] = (byte) Mem1023[ss:sp_941 - 2:word16]
	word16 dx_1095
	word16 ax_1092 = fn0800_8C8A(Mem1083[ds_1322:0x29E7:word16], 0x08, Mem1083[ds_1322:0x29E9:word16], out cl_1993, out dx_1095)
	ptr32 es_di_1106 = Mem1083[ss:bp_793 - 0x0008:segptr32]
	word16 sp_1096 = <invalid>
	Mem1108[ss:sp_1096 - 2:word16] = ax_1092
	selector es_1144 = SLICE(es_di_1106, selector, 16)
	word16 di_1116 = (word16) es_di_1106
	word16 cx_1112 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_168E:
	branch cx_1112 == 0x0000 l0800_1690
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_168E_1:
	di_1116 = di_1116 + 0x0001
	cx_1112 = cx_1112 - 0x0001
	branch Mem1108[es_1144:di_1116:byte] == 0x00 l0800_168E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1690:
	word16 cx_1123 = ~cx_1112
	word16 di_1126 = di_1116 - cx_1123
	bool Z_1136 = SLICE(cond(di_1126), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1696:
	branch cx_1123 == 0x0000 l0800_1698
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1696_2:
	Z_1136 = SLICE(cond(0x00 - Mem1108[es_1144:di_1126:byte]), bool, 2) (alias)
	di_1126 = di_1126 + 0x0001
	cx_1123 = cx_1123 - 0x0001
	branch Mem1108[es_1144:di_1126:byte] == 0x00 l0800_1696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1698:
	branch Z_1136 l0800_16A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_169A:
	di_1126 = 0x0001
	es_1144 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16A1:
	Mem1167[es_1144:di_1126 + 0x0002:byte] = (byte) Mem1108[ss:sp_1096 - 2:word16]
	ptr32 es_di_1173 = Mem1167[ss:bp_793 - 0x0008:segptr32]
	selector es_1209 = SLICE(es_di_1173, selector, 16)
	word16 di_1181 = (word16) es_di_1173
	word16 cx_1177 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B3:
	branch cx_1177 == 0x0000 l0800_16B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B3_1:
	di_1181 = di_1181 + 0x0001
	cx_1177 = cx_1177 - 0x0001
	branch Mem1167[es_1209:di_1181:byte] == 0x00 l0800_16B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16B5:
	word16 cx_1188 = ~cx_1177
	word16 di_1191 = di_1181 - cx_1188
	bool Z_1201 = SLICE(cond(di_1191), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BB:
	branch cx_1188 == 0x0000 l0800_16BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BB_2:
	Z_1201 = SLICE(cond(0x00 - Mem1167[es_1209:di_1191:byte]), bool, 2) (alias)
	di_1191 = di_1191 + 0x0001
	cx_1188 = cx_1188 - 0x0001
	branch Mem1167[es_1209:di_1191:byte] == 0x00 l0800_16BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BD:
	branch Z_1201 l0800_16C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16BF:
	di_1191 = 0x0001
	es_1209 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_16C6:
	byte dl_1228 = Mem1167[ds_1322:0x29E7:byte]
	Mem1230[es_1209:di_1191 + 0x0003:byte] = dl_1228
	Mem1235[ds_1322:0x2A05:word16] = 0x0000
	Mem1236[ds_1322:0x2A03:word16] = 0x0000
	Mem1250[ss:sp_1096 - 2:word16] = Mem1236[ds_1322:0x29E5:word16]
	Mem1253[ss:sp_1096 - 4:word16] = Mem1250[ds_1322:0x29E3:word16]
	fn0800_4194(ds_1322, Mem1253[ss:sp_1096 - 4:word16], Mem1253[ss:sp_1096 - 2:word16])
	Mem1273[ds_1322:0x2A09:word16] = DPB(dx_1095, dl_1228, 0)
	Mem1274[ds_1322:0x2A07:word16] = 0x0000
	Mem1279[ss:sp_1096 - 2:word16] = 0x0000
	Mem1282[ss:sp_1096 - 4:word16] = Mem1279[ds_1322:0x29E9:word16]
	Mem1285[ss:sp_1096 - 6:word16] = Mem1282[ds_1322:0x29E7:word16]
	Mem1288[ss:sp_1096 - 8:word16] = Mem1285[ds_1322:0x29E1:word16]
	Mem1291[ss:sp_1096 - 10:word16] = Mem1288[ds_1322:0x29DF:word16]
	word16 di_1231 = 0x0001
	word16 ax_1292 = fn0800_ACB3(ds_1322, Mem1291[ss:sp_1096 - 10:word16], Mem1291[ss:sp_1096 - 8:word16], Mem1291[ss:sp_1096 - 2:word16], out cx_1994, out dx_1995, out bx_1996)
	word16 sp_1301 = sp_1096
	branch Mem1291[ds_1322:0x2A09:word16] >=u 0x0000 l0800_171B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_171B:
	branch Mem1291[ds_1322:0x2A09:word16] >u 0x0000 l0800_1724
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_171D:
	branch Mem1291[ds_1322:0x2A07:word16] <=u 0x0012 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1724:
	branch Mem1291[ds_1322:0x2A21:word16] == 0x0000 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_172B:
	Mem1315[ss:sp_1096 - 2:word16] = Mem1291[ds_1322:0x29E5:word16]
	Mem1318[ss:sp_1096 - 4:word16] = Mem1315[ds_1322:0x29E3:word16]
	word16 dx_1337
	word16 ax_1334 = fn0800_8CAA(ax_1292, 0x08, fn0800_3F58(ds_1322, Mem1318[ss:sp_1096 - 4:word16], Mem1318[ss:sp_1096 - 2:word16], out di_1231, out ds_1322), out dx_1337)
	sp_1301 = <invalid>
	branch dx_1337 != 0x0052 l0800_1748
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1743:
	branch ax_1334 == 0x4E43 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1748:
	word16 ax_1386
	Mem1353[ss:sp_1301 - 2:word16] = Mem1318[ds_1322:0x2A09:word16]
	Mem1356[ss:sp_1301 - 4:word16] = Mem1353[ds_1322:0x2A07:word16]
	Mem1359[ss:sp_1301 - 6:word16] = Mem1356[ds_1322:0x2A09:word16]
	Mem1362[ss:sp_1301 - 8:word16] = Mem1359[ds_1322:0x2A07:word16]
	fn0800_75EA(ds_1322, Mem1362[ss:sp_1301 - 8:word16], Mem1362[ss:sp_1301 - 6:word16], Mem1362[ss:sp_1301 - 4:word16], Mem1362[ss:sp_1301 - 2:word16], out bp_2002, out si_2003, out ds_1322)
	word16 sp_1372 = <invalid>
	sp_1301 = sp_1372 + 0x0008
	word16 ax_1379 = Mem1362[ds_1322:0x2A05:word16]
	word16 dx_1380 = Mem1362[ds_1322:0x2A03:word16]
	branch ax_1379 <u Mem1362[ds_1322:0x2A09:word16] l0800_1778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_176B:
	branch ax_1379 != Mem1362[ds_1322:0x2A09:word16] l0800_1773
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_176D:
	branch dx_1380 <u Mem1362[ds_1322:0x2A07:word16] l0800_1778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1778:
	ax_1386 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1773:
	ax_1386 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_177A:
	di_1231 = ax_1386
	branch ax_1386 == 0x0000 l0800_17A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1780:
	Mem1404[ss:sp_1372 + 0x0006:word16] = 0x0001
	word16 dx_1411 = -Mem1404[ds_1322:0x2A03:word16]
	Mem1416[ss:sp_1372 + 0x0004:word16] = -Mem1404[ds_1322:0x2A05:word16] - (dx_1411 == 0x0000)
	Mem1418[ss:sp_1372 + 0x0002:word16] = dx_1411
	Mem1421[ss:sp_1372:word16] = Mem1418[ds_1322:0x29E1:word16]
	Mem1424[ss:sp_1372 - 2:word16] = Mem1421[ds_1322:0x29DF:word16]
	fn0800_ACB3(ds_1322, Mem1424[ss:sp_1372 - 2:word16], Mem1424[ss:sp_1372:word16], Mem1424[ss:sp_1372 + 6:word16], out cx_2006, out dx_2007, out bx_2008)
	sp_1301 = sp_1372 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1718:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A2:
	branch di_1231 != 0x0000 l0800_17A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A9:
	word16 ax_1447 = Mem1443[ds_1322:0x2A09:word16]
	word16 dx_1448 = Mem1443[ds_1322:0x2A07:word16]
	Mem1449[ds_1322:0x2A05:word16] = ax_1447
	Mem1450[ds_1322:0x2A03:word16] = dx_1448
	word16 sp_1453 = sp_1301 - 2
	Mem1455[ss:sp_1453:word16] = Mem1450[ds_1322:0x29E5:word16]
	Mem1458[ss:sp_1453 - 2:word16] = Mem1455[ds_1322:0x29E3:word16]
	fn0800_BA67(ds_1322, Mem1458[ss:sp_1453 - 2:word16], Mem1458[ss:sp_1453:word16])
	word16 sp_1467 = sp_1453 + 0x0002
	branch Mem1458[ds_1322:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17CC:
	branch Mem1458[ds_1322:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17CE:
	branch Mem1458[ds_1322:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17D5:
	Mem1479[ss:sp_1453:word16] = Mem1458[ds_1322:0x29E5:word16]
	Mem1482[ss:sp_1453 - 2:word16] = Mem1479[ds_1322:0x29E3:word16]
	word16 dx_1501
	word16 ax_1498 = fn0800_8CAA(ax_1447, 0x08, fn0800_3F58(ds_1322, Mem1482[ss:sp_1453 - 2:word16], Mem1482[ss:sp_1453:word16], out di_2013, out ds_1322), out dx_1501)
	sp_1467 = <invalid>
	branch dx_1501 != 0x0052 l0800_17F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17ED:
	branch ax_1498 == 0x4E43 l0800_181E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17F2:
	word16 sp_1515 = sp_1467 - 2
	Mem1517[ss:sp_1515:word16] = Mem1512[ds_1322:0x29D1:word16]
	Mem1520[ss:sp_1515 - 2:word16] = Mem1517[ds_1322:0x29CF:word16]
	Mem1524[ss:sp_1515 - 4:word16] = 0x524E
	Mem1526[ss:sp_1515 - 6:word16] = 0x4300
	selector ds_1531
	fn0800_409C(ds_1322, Mem1526[ss:sp_1515 - 6:word16], Mem1526[ss:sp_1515 - 4:word16], Mem1526[ss:sp_1515 - 2:word16], Mem1526[ss:sp_1515:word16], out dx_2009, out ds_1531, out Top_2010)
	Mem1543[ss:sp_1515:word16] = Mem1526[ds_1531:0x29D1:word16]
	Mem1546[ss:sp_1515 - 2:word16] = Mem1543[ds_1531:0x29CF:word16]
	Mem1549[ss:sp_1515 - 4:word16] = Mem1546[ds_1531:0x2A09:word16]
	Mem1552[ss:sp_1515 - 6:word16] = Mem1549[ds_1531:0x2A07:word16]
	fn0800_409C(ds_1531, Mem1552[ss:sp_1515 - 6:word16], Mem1552[ss:sp_1515 - 4:word16], Mem1552[ss:sp_1515 - 2:word16], Mem1552[ss:sp_1515:word16], out dx_2011, out ds_1322, out Top_2012)
	sp_1467 = sp_1515 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_181E:
	word16 sp_1571 = sp_1467 - 2
	Mem1573[ss:sp_1571:word16] = Mem1568[ds_1322:0x2A09:word16]
	Mem1576[ss:sp_1571 - 2:word16] = Mem1573[ds_1322:0x2A07:word16]
	Mem1579[ss:sp_1571 - 4:word16] = Mem1576[ds_1322:0x29D1:word16]
	Mem1582[ss:sp_1571 - 6:word16] = Mem1579[ds_1322:0x29CF:word16]
	Mem1585[ss:sp_1571 - 8:word16] = Mem1582[ds_1322:0x29E5:word16]
	Mem1588[ss:sp_1571 - 10:word16] = Mem1585[ds_1322:0x29E3:word16]
	fn0800_3B0A(Mem1588[ss:sp_1571 - 2:word16], Mem1588[ss:sp_1571:word16], out dx_2014, out bp_2015, out ds_1322)
	word16 sp_1598 = <invalid>
	sp_1301 = sp_1598 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_17A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_183F:
	word16 sp_1611 = sp_1301 - 2
	Mem1613[ss:sp_1611:word16] = Mem1608[ds_1322:0x29D1:word16]
	Mem1616[ss:sp_1611 - 2:word16] = Mem1613[ds_1322:0x29CF:word16]
	Mem1619[ss:sp_1611 - 4:word16] = Mem1616[ds_1322:0x29ED:word16]
	Mem1622[ss:sp_1611 - 6:word16] = Mem1619[ds_1322:0x29EB:word16]
	selector ds_1627
	fn0800_409C(ds_1322, Mem1622[ss:sp_1611 - 6:word16], Mem1622[ss:sp_1611 - 4:word16], Mem1622[ss:sp_1611 - 2:word16], Mem1622[ss:sp_1611:word16], out dx_1997, out ds_1627, out Top_1998)
	Mem1639[ss:sp_1611:word16] = Mem1622[ds_1627:0x29E5:word16]
	Mem1642[ss:sp_1611 - 2:word16] = Mem1639[ds_1627:0x29E3:word16]
	word16 di_1649
	fn0800_A614(ds_1627, Mem1642[ss:sp_1611 - 2:segptr32], out cx_1999, out dx_2000, out bp_2001, out si_1651, out di_1649, out ds_1652)
	word16 sp_1647 = <invalid>
	Mem1660[ss:sp_1647 + 0x0002:word16] = ds_1652
	Mem1663[ss:sp_1647:word16] = 0x4541
	Mem1665[ss:sp_1647 - 2:word16] = si_1651
	word16 dx_1670
	word16 cx_1668 = fn0800_0ABC(di_1649, ds_1652, Mem1665[ss:sp_1647 - 2:word16], Mem1665[ss:sp_1647:word16], Mem1665[ss:sp_1647 + 2:word16], out dx_1670, out di_1669)
	ptr32 es_bx_1679 = Mem1665[ds_1652:0x2E51:segptr32]
	dx_1691 = DPB(DPB(dx_1670, Mem1665[es_bx_1679 + 0x0005:byte], 0), 0x00, 8) (alias)
	sp_1678 = sp_1647 + 0x0004
	word16 bx_1681 = (word16) es_bx_1679
	cx_1700 = DPB(cx_1668, 0x08, 0) (alias)
	branch (DPB(DPB(ax_1666, Mem1665[es_bx_1679 + 0x0004:byte], 0), 0x00, 8) << 0x08) + dx_1691 <u 0xFF8C l0800_1897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_188A:
	Mem1696[ss:sp_1647 + 0x0002:word16] = ds_1652
	Mem1699[ss:sp_1647:word16] = 0x0952
	fn0800_B2EF(cx_1700, dx_1691, bx_1681, ds_1652, Mem1699[ss:sp_1647:word16], Mem1699[ss:sp_1647 + 2:word16], out si_2004, out di_2005)
	sp_1709 = sp_1647 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18A9:
	word16 sp_1715 = sp_1709 - 2
	Mem1717[ss:sp_1715:word16] = Mem1712[ds_1652:0x29DD:word16]
	Mem1720[ss:sp_1715 - 2:word16] = Mem1717[ds_1652:0x29DB:word16]
	selector ds_1730
	fn0800_A614(ds_1652, Mem1720[ss:sp_1715 - 2:segptr32], out cx_1979, out dx_1980, out bp_1981, out si_1982, out di_1983, out ds_1730)
	word16 sp_1725 = <invalid>
	Mem1738[ss:sp_1725 + 0x0002:word16] = ds_1730
	Mem1741[ss:sp_1725:word16] = 0x4477
	fn0800_8F7F(0x4477, ds_1730, Mem1741[ss:sp_1725:segptr32])
	selector ds_1754 = fn0800_1E5E(ds_1730)
	word16 sp_1758 = <invalid>
	Mem1767[ss:sp_1758 - 2:word16] = Mem1741[ds_1754:0x29D1:word16]
	Mem1770[ss:sp_1758 - 4:word16] = Mem1767[ds_1754:0x29CF:word16]
	selector ds_1780
	fn0800_A614(ds_1754, Mem1770[ss:sp_1758 - 4:segptr32], out cx_1984, out dx_1985, out bp_1772, out si_1986, out di_1987, out ds_1780)
	return ds_1780
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_153D:
	word16 sp_1797 = sp_1795 - 2
	Mem1798[ss:sp_1797:word16] = Mem1793[ds_406:0x29D1:word16]
	Mem1801[ss:sp_1797 - 2:word16] = Mem1798[ds_406:0x29CF:word16]
	selector ds_1811
	fn0800_A614(ds_406, Mem1801[ss:sp_1797 - 2:segptr32], out cx_1973, out dx_1974, out bp_1803, out si_1975, out di_1976, out ds_1811)
	return ds_1811
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_12E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_18D9(word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_18D9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_18D9:
	word16 di_37
	word16 si_38
	fn0800_B2EF(cx, dx, Mem18[ds:0x2A25:word16] << 0x0002, ds, 0x096C, ds, out si_38, out di_37)
	word16 dx_62
	selector ds_106
	word16 ax_56 = fn0800_AA7E(si_38, di_37, ds, 0x4348, ds, 0x097D, ds, out cx_434, out dx_62, out bp_435, out si_436, out di_437, out ds_106)
	Mem71[ds_106:0x29D1:word16] = dx_62
	Mem72[ds_106:0x29CF:word16] = ax_56
	word16 sp_65 = <invalid>
	branch (ax_56 | dx_62) != 0x0000 l0800_192A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_191B:
	Mem78[ss:sp_65 + 0x0006:word16] = ds_106
	Mem81[ss:sp_65 + 0x0004:word16] = 0x4348
	Mem84[ss:sp_65 + 0x0002:word16] = 0x0007
	fn0800_0D24(ds_106, Mem84[ss:sp_65 + 0x0002:word16], Mem84[ss:sp_65 + 0x0004:segptr32], out cx_438, out dx_439, out bx_440, out si_441, out di_442, out es_443, out ds_106, out Top_444)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_192A:
	Mem105[ss:sp_65 + 0x0006:word16] = 0x0001
	word16 bp_108
	word16 si_115
	word16 di_111
	selector ds_112
	word16 dx_113
	word16 cx_110 = fn0800_1CF6(ds_106, Mem105[ss:sp_65 + 0x0006:word16], out dx_113, out bp_108, out si_115, out di_111, out ds_112)
	word16 sp_116 = <invalid>
	Mem127[ss:sp_116:word16] = 0x0000
	Mem129[ss:sp_116 - 2:word16] = 0x0000
	fn0800_2DBF(ds_112, Mem129[ss:sp_116 - 2:word16], Mem129[ss:sp_116:word16])
	word16 sp_131 = sp_116 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19BC:
	word16 sp_134 = sp_131 - 2
	Mem136[ss:sp_134:word16] = ss
	Mem140[ss:sp_134 - 2:word16] = bp_108 - 0x006E
	Mem142[ss:sp_134 - 4:word16] = ss
	Mem145[ss:sp_134 - 6:word16] = bp_108 - 0x0008
	Mem147[ss:sp_134 - 8:word16] = ss
	Mem150[ss:sp_134 - 10:word16] = bp_108 - 0x0004
	word16 sp_166 = <invalid>
	word16 di_159
	word16 si_162
	selector ds_164
	word16 bp_165
	branch fn0800_29C5(cx_110, dx_113, si_115, di_111, ds_112, out bp_165, out si_162, out di_159, out ds_164) == 0x0000 l0800_19D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D8:
	selector ds_182 = fn0800_1E5E(ds_164)
	word16 sp_186 = <invalid>
	Mem195[ss:sp_186 - 2:word16] = Mem150[ds_182:0x29D1:word16]
	Mem198[ss:sp_186 - 4:word16] = Mem195[ds_182:0x29CF:word16]
	selector ds_208
	fn0800_A614(ds_182, Mem198[ss:sp_186 - 4:segptr32], out cx_445, out dx_446, out bp_200, out si_447, out di_448, out ds_208)
	return ds_208
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_18D9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19D5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1940:
	Mem220[ss:sp_166 + 0x000A:word16] = ss
	Mem223[ss:sp_166 + 0x0008:word16] = bp_165 - 0x006E
	fn0800_0C93(si_162, di_159, ds_164, Mem223[ss:sp_166 + 0x0008:word16], Mem223[ss:sp_166 + 0x000A:word16], out dx_449)
	Mem239[ss:sp_166 + 0x000A:word16] = Mem223[ss:bp_165 - 0x0006:word16]
	Mem242[ss:sp_166 + 0x0008:word16] = Mem239[ss:bp_165 - 0x0008:word16]
	fn0800_23EC(ds_164, Mem242[ss:sp_166 + 0x0008:word16], Mem242[ss:sp_166 + 0x000A:word16], out bp_108, out si_115, out di_450, out ds_112)
	word16 sp_252 = <invalid>
	Mem263[ss:sp_252 + 0x0002:word16] = Mem242[ss:bp_108 - 0x0006:word16]
	Mem266[ss:sp_252:word16] = Mem263[ss:bp_108 - 0x0008:word16]
	fn0800_22FE(ds_112, Mem266[ss:sp_252:segptr32])
	ptr32 es_di_278 = Mem266[ss:bp_108 - 0x0004:segptr32]
	selector es_316 = SLICE(es_di_278, selector, 16)
	word16 di_280 = (word16) es_di_278 + 0x0002
	word16 cx_284 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196E:
	branch cx_284 == 0x0000 l0800_1970
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_196E_1:
	di_280 = di_280 + 0x0001
	cx_284 = cx_284 - 0x0001
	branch Mem266[es_316:di_280:byte] == 0x00 l0800_196E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1970:
	word16 cx_295 = ~cx_284
	word16 di_298 = di_280 - cx_295
	bool Z_308 = SLICE(cond(di_298), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1976:
	branch cx_295 == 0x0000 l0800_1978
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1976_2:
	Z_308 = SLICE(cond(0x00 - Mem266[es_316:di_298:byte]), bool, 2) (alias)
	di_298 = di_298 + 0x0001
	cx_295 = cx_295 - 0x0001
	branch Mem266[es_316:di_298:byte] == 0x00 l0800_1976
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1978:
	branch Z_308 l0800_1981
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_197A:
	di_298 = 0x0001
	es_316 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1981:
	word16 di_319 = di_298 - 0x0001
	branch Mem266[es_316:di_319 + 0x0001:byte] != 0x00 l0800_19AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_198D:
	word16 dx_334 = Mem266[ds_112:0x2E51:word16]
	branch Mem266[ds_112:0x2E53:word16] != Mem266[ss:bp_108 - 0x0002:word16] l0800_19A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_199C:
	branch dx_334 + 0x0008 == Mem266[ss:bp_108 - 0x0004:word16] l0800_19AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19A1:
	Mem361[ss:sp_252 + 0x0002:word16] = Mem266[ss:bp_108 - 0x0002:word16]
	Mem364[ss:sp_252:word16] = Mem361[ss:bp_108 - 0x0004:word16]
	fn0800_2201(ds_112, Mem364[ss:sp_252:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19AD:
	Mem381[ss:sp_252 + 0x0002:word16] = ss
	Mem385[ss:sp_252:word16] = bp_108 - 0x006E
	Mem388[ss:sp_252 - 0x0002:word16] = 0x000D
	cx_110 = fn0800_0ABC(di_319, ds_112, Mem388[ss:sp_252 - 0x0002:word16], Mem388[ss:sp_252:word16], Mem388[ss:sp_252 + 0x0002:word16], out dx_113, out di_111)
	sp_131 = sp_252 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_19EE(word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_19EE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_19EE:
	word16 di_40
	word16 si_41
	fn0800_B2EF(cx, dx, Mem21[ds:0x2A25:word16] << 0x0002, ds, 0x0986, ds, out si_41, out di_40)
	word16 bp_60
	word16 dx_65
	selector ds_104
	word16 ax_59 = fn0800_AA7E(si_41, di_40, ds, 0x4348, ds, 0x0997, ds, out cx_1241, out dx_65, out bp_60, out si_1242, out di_1243, out ds_104)
	Mem74[ds_104:0x29D1:word16] = dx_65
	Mem75[ds_104:0x29CF:word16] = ax_59
	word16 sp_68 = <invalid>
	branch (ax_59 | dx_65) != 0x0000 l0800_1A40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A31:
	Mem81[ss:sp_68 + 0x0006:word16] = ds_104
	Mem84[ss:sp_68 + 0x0004:word16] = 0x4348
	Mem87[ss:sp_68 + 0x0002:word16] = 0x0007
	fn0800_0D24(ds_104, Mem87[ss:sp_68 + 0x0002:word16], Mem87[ss:sp_68 + 0x0004:segptr32], out cx_1244, out dx_1245, out bx_1246, out si_1247, out di_1248, out es_1249, out ds_104, out Top_1250)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A40:
	branch Mem105[ds_104:0x2A27:word16] != Mem105[ds_104:0x269A:word16] l0800_1A7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A49:
	word16 dx_110 = Mem105[ds_104:0x0982:word16]
	Mem113[ss:bp_60 - 0x000A:word16] = Mem105[ds_104:0x0984:word16]
	Mem114[ss:bp_60 - 0x000C:word16] = dx_110
	ptr32 es_bx_117 = Mem114[ds_104:0x269C:segptr32]
	Mem121[es_bx_117 + 0x0006:word16] = ss
	Mem122[es_bx_117 + 0x0004:word16] = bp_60 - 0x000C
	Mem123[ds_104:0x2A27:word16] = 0x0001
	Mem124[ds_104:0x269A:word16] = 0x0002
	Mem125[ds_104:0x2A1B:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A7D:
	Mem133[ss:sp_68 + 0x0006:word16] = 0x0000
	Mem136[ss:sp_68 + 0x0004:word16] = 0x0001
	fn0800_2DBF(ds_104, Mem136[ss:sp_68 + 0x0004:word16], Mem136[ss:sp_68 + 0x0006:word16])
	Mem143[ss:sp_68 + 0x0006:word16] = 0x0001
	word16 sp_153 = <invalid>
	word16 bp_1102
	word16 si_1116
	word16 di_1149
	selector ds_1110
	word16 dx_1150
	word16 cx_1148 = fn0800_1CF6(ds_104, Mem143[ss:sp_68 + 0x0006:word16], out dx_1150, out bp_1102, out si_1116, out di_1149, out ds_1110)
	word16 sp_1158 = sp_153 + 0x0002
	branch Mem143[ds_1110:0x2A25:word16] == 0x0007 l0800_1A9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A9E:
	Mem163[ss:sp_153:word16] = ds_1110
	Mem166[ss:sp_153 - 2:word16] = 0x099B
	Mem168[ss:sp_153 - 4:word16] = ds_1110
	Mem171[ss:sp_153 - 6:word16] = 0x44DC
	si_1116 = fn0800_37BE(cx_1148, dx_1150, ds_1110, Mem171[ss:sp_153 - 6:word16], Mem171[ss:sp_153 - 4:word16], out di_1149)
	sp_1158 = sp_153 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1A9B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CB4:
	word16 sp_185 = sp_1158 - 2
	Mem187[ss:sp_185:word16] = ss
	Mem191[ss:sp_185 - 2:word16] = bp_1102 - 0x0072
	Mem193[ss:sp_185 - 4:word16] = ss
	Mem196[ss:sp_185 - 6:word16] = bp_1102 - 0x0008
	Mem198[ss:sp_185 - 8:word16] = ss
	Mem201[ss:sp_185 - 10:word16] = bp_1102 - 0x0004
	word16 sp_217 = <invalid>
	word16 di_210
	word16 si_213
	selector ds_215
	word16 bp_216
	branch fn0800_29C5(cx_1148, dx_1150, si_1116, di_1149, ds_1110, out bp_216, out si_213, out di_210, out ds_215) == 0x0000 l0800_1CD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CD0:
	Mem231[ss:sp_217 + 0x000A:word16] = Mem201[ds_215:0x29D1:word16]
	Mem234[ss:sp_217 + 0x0008:word16] = Mem231[ds_215:0x29CF:word16]
	selector ds_244
	fn0800_A614(ds_215, Mem234[ss:sp_217 + 0x0008:segptr32], out cx_1251, out dx_242, out bp_236, out si_1252, out di_1253, out ds_244)
	word16 sp_239 = <invalid>
	branch Mem234[ds_244:0x2A25:word16] != 0x0007 l0800_1CF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CE5:
	Mem253[ss:sp_239 + 0x0002:word16] = ds_244
	Mem256[ss:sp_239:word16] = 0x44DC
	fn0800_8F7F(0x44DC, ds_244, Mem256[ss:sp_239:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CF0:
	return ds_244
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_19EE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CCD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AB1:
	Mem276[ss:sp_217 + 0x000A:word16] = ss
	Mem279[ss:sp_217 + 0x0008:word16] = bp_216 - 0x0072
	fn0800_0C93(si_213, di_210, ds_215, Mem279[ss:sp_217 + 0x0008:word16], Mem279[ss:sp_217 + 0x000A:word16], out dx_1254)
	Mem295[ss:sp_217 + 0x000A:word16] = Mem279[ss:bp_216 - 0x0006:word16]
	Mem298[ss:sp_217 + 0x0008:word16] = Mem295[ss:bp_216 - 0x0008:word16]
	selector ds_1018
	word16 si_1034 = fn0800_24FE(ds_215, Mem298[ss:sp_217 + 0x0008:segptr32], out ds_1018)
	Mem317[ss:sp_217 + 0x000A:word16] = 0x0000
	ptr32 es_di_318 = Mem317[ss:bp_216 - 0x0008:segptr32]
	selector es_1161 = SLICE(es_di_318, selector, 16)
	word16 di_1162 = (word16) es_di_318
	word16 cx_319 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD1:
	branch cx_319 == 0x0000 l0800_1AD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD1_1:
	di_1162 = di_1162 + 0x0001
	cx_319 = cx_319 - 0x0001
	branch Mem317[es_1161:di_1162:byte] == 0x00 l0800_1AD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD3:
	word16 cx_330 = ~cx_319
	word16 di_1270 = di_1162 - cx_330
	bool Z_343 = SLICE(cond(di_1270), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD9:
	branch cx_330 == 0x0000 l0800_1ADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AD9_2:
	Z_343 = SLICE(cond(0x00 - Mem317[es_1161:di_1270:byte]), bool, 2) (alias)
	di_1270 = di_1270 + 0x0001
	cx_330 = cx_330 - 0x0001
	branch Mem317[es_1161:di_1270:byte] == 0x00 l0800_1AD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADB:
	branch Z_343 l0800_1AE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ADD:
	di_1270 = 0x0001
	es_1161 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AE4:
	ptr32 es_di_375 = Mem317[ss:bp_216 - 0x0008:segptr32]
	Mem382[ss:sp_217 + 0x0008:word16] = (int16) Mem317[es_1161:di_1270:byte] << 0x08
	selector es_1167 = SLICE(es_di_375, selector, 16)
	word16 di_1168 = (word16) es_di_375
	word16 cx_386 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFB:
	branch cx_386 == 0x0000 l0800_1AFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFB_1:
	di_1168 = di_1168 + 0x0001
	cx_386 = cx_386 - 0x0001
	branch Mem382[es_1167:di_1168:byte] == 0x00 l0800_1AFB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1AFD:
	word16 cx_397 = ~cx_386
	word16 di_1272 = di_1168 - cx_397
	bool Z_410 = SLICE(cond(di_1272), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B03:
	branch cx_397 == 0x0000 l0800_1B05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B03_2:
	Z_410 = SLICE(cond(0x00 - Mem382[es_1167:di_1272:byte]), bool, 2) (alias)
	di_1272 = di_1272 + 0x0001
	cx_397 = cx_397 - 0x0001
	branch Mem382[es_1167:di_1272:byte] == 0x00 l0800_1B03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B05:
	branch Z_410 l0800_1B0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B07:
	di_1272 = 0x0001
	es_1167 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B0E:
	ptr32 es_di_453 = Mem382[ss:bp_216 - 0x0008:segptr32]
	Mem455[ss:sp_217 + 0x0008:word16] = Mem382[ss:sp_217 + 0x0008:word16] + DPB(DPB(es_1167, Mem382[es_1167:di_1272 + 0x0001:byte], 0), 0x00, 8)
	Mem457[ss:sp_217 + 0x0006:word16] = 0x0000
	selector es_1173 = SLICE(es_di_453, selector, 16)
	word16 di_1174 = (word16) es_di_453
	word16 cx_458 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B26:
	branch cx_458 == 0x0000 l0800_1B28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B26_1:
	di_1174 = di_1174 + 0x0001
	cx_458 = cx_458 - 0x0001
	branch Mem457[es_1173:di_1174:byte] == 0x00 l0800_1B26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B28:
	word16 cx_469 = ~cx_458
	word16 di_1274 = di_1174 - cx_469
	bool Z_482 = SLICE(cond(di_1274), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2E:
	branch cx_469 == 0x0000 l0800_1B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B2E_2:
	Z_482 = SLICE(cond(0x00 - Mem457[es_1173:di_1274:byte]), bool, 2) (alias)
	di_1274 = di_1274 + 0x0001
	cx_469 = cx_469 - 0x0001
	branch Mem457[es_1173:di_1274:byte] == 0x00 l0800_1B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B30:
	branch Z_482 l0800_1B39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B32:
	di_1274 = 0x0001
	es_1173 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B39:
	ptr32 es_di_514 = Mem457[ss:bp_216 - 0x0008:segptr32]
	Mem521[ss:sp_217 + 0x0004:word16] = (int16) Mem457[es_1173:di_1274 + 0x0002:byte] << 0x08
	selector es_1179 = SLICE(es_di_514, selector, 16)
	word16 di_1180 = (word16) es_di_514
	word16 cx_525 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B50:
	branch cx_525 == 0x0000 l0800_1B52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B50_1:
	di_1180 = di_1180 + 0x0001
	cx_525 = cx_525 - 0x0001
	branch Mem521[es_1179:di_1180:byte] == 0x00 l0800_1B50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B52:
	word16 cx_536 = ~cx_525
	word16 di_1276 = di_1180 - cx_536
	bool Z_549 = SLICE(cond(di_1276), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B58:
	branch cx_536 == 0x0000 l0800_1B5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B58_2:
	Z_549 = SLICE(cond(0x00 - Mem521[es_1179:di_1276:byte]), bool, 2) (alias)
	di_1276 = di_1276 + 0x0001
	cx_536 = cx_536 - 0x0001
	branch Mem521[es_1179:di_1276:byte] == 0x00 l0800_1B58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B5A:
	branch Z_549 l0800_1B63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B5C:
	di_1276 = 0x0001
	es_1179 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B63:
	word16 di_1055 = di_1276 - 0x0001
	word16 ax_586 = Mem521[ss:sp_217 + 0x0006:word16] + (Mem521[ss:sp_217 + 0x0004:word16] + DPB(DPB(es_1179, Mem521[es_1179:di_1055 + 0x0004:byte], 0), 0x00, 8))
	Mem594[ss:sp_217 + 0x0008:word16] = Mem521[ss:sp_217 + 0x0008:word16] + (ax_586 <u 0x0000)
	Mem596[ss:sp_217 + 0x0006:word16] = ax_586
	Mem619[ss:sp_217 + 0x0004:word16] = Mem596[ds_1018:0x29D1:word16]
	Mem622[ss:sp_217 + 0x0002:word16] = Mem619[ds_1018:0x29CF:word16]
	fn0800_ACB3(ds_1018, Mem622[ss:sp_217 + 0x0002:word16], Mem622[ss:sp_217 + 0x0004:word16], Mem622[ss:sp_217 + 0x000A:word16], out cx_1255, out dx_1256, out bx_1257)
	branch Mem622[ds_1018:0x2A25:word16] != 0x0007 l0800_1B92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B92:
	Mem636[ss:sp_217 + 0x000A:word16] = ds_1018
	selector es_637 = Mem636[ss:sp_217 + 0x000A:selector]
	Mem641[ss:sp_217 + 0x000A:word16] = es_637
	Mem643[ss:sp_217 + 0x0008:word16] = 0x44DC
	word16 di_1277 = 0x427E
	word16 cx_648 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA1:
	branch cx_648 == 0x0000 l0800_1BA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA1_1:
	di_1277 = di_1277 + 0x0001
	cx_648 = cx_648 - 0x0001
	branch Mem643[es_637:di_1277:byte] == 0x00 l0800_1BA1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BA3:
	word16 di_1001 = Mem643[ss:sp_217 + 0x0008:word16]
	selector es_674 = Mem643[ss:sp_217 + 0x000A:selector]
	Mem679[ss:sp_217 + 0x000A:word16] = ds_1018
	word16 cx_659 = ~cx_648
	word16 cx_1015 = cx_659 >>u 0x0001
	word16 si_1003 = di_1277 - cx_659
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB2:
	branch cx_1015 == 0x0000 l0800_1BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB4:
	word16 cx_1005 = cx_1015 * 0x0002 + (cx_659 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB6:
	branch cx_1005 == 0x0000 l0800_1BB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB8:
	selector ds_689 = Mem688[ss:sp_217 + 0x000A:selector]
	branch Mem688[ds_689:0x2A25:word16] != 0x0008 l0800_1C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC0:
	branch Mem688[ds_689:0x427E:byte] == 0x00 l0800_1BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BC7:
	branch Mem688[ss:bp_216 - 0x0072:byte] != 0x5C l0800_1BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BFC:
	Mem701[ss:sp_217 + 0x000A:word16] = ss
	Mem705[ss:sp_217 + 0x0008:word16] = bp_216 - 0x0072
	Mem708[ss:sp_217 + 0x0006:word16] = ds_689
	selector es_709 = Mem708[ss:sp_217 + 0x0006:selector]
	word16 di_1278 = 0x44DC
	word16 cx_715 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0B:
	branch cx_715 == 0x0000 l0800_1C0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0B_1:
	di_1278 = di_1278 + 0x0001
	cx_715 = cx_715 - 0x0001
	branch Mem708[es_709:di_1278:byte] == 0x00 l0800_1C0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C0D:
	word16 cx_726 = ~cx_715
	word16 di_1279 = di_1278 - cx_726
	bool Z_739 = SLICE(cond(di_1279), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C13:
	branch cx_726 == 0x0000 l0800_1C15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C13_2:
	Z_739 = SLICE(cond(0x00 - Mem708[es_709:di_1279:byte]), bool, 2) (alias)
	di_1279 = di_1279 + 0x0001
	cx_726 = cx_726 - 0x0001
	branch Mem708[es_709:di_1279:byte] == 0x00 l0800_1C13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C15:
	branch Z_739 l0800_1C1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C17:
	di_1279 = 0x0001
	es_709 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C1E:
	Mem766[ss:sp_217 + 0x0006:word16] = es_709
	word16 di_750 = di_1279 - 0x0001
	Mem768[ss:sp_217 + 0x0004:word16] = di_750
	fn0800_3509(si_1003, di_750, Mem768[ss:sp_217 + 0x0004:word16], Mem768[ss:sp_217 + 0x0006:selector], Mem768[ss:sp_217 + 0x0008:word16], Mem768[ss:sp_217 + 0x000A:word16], out bx_1268)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BCD:
	Mem789[ss:sp_217 + 0x000A:word16] = ss
	Mem792[ss:sp_217 + 0x0008:word16] = bp_216 - 0x0071
	Mem794[ss:sp_217 + 0x0006:word16] = ds_689
	selector es_795 = Mem794[ss:sp_217 + 0x0006:selector]
	word16 di_1280 = 0x44DC
	word16 cx_801 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDC:
	branch cx_801 == 0x0000 l0800_1BDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDC_1:
	di_1280 = di_1280 + 0x0001
	cx_801 = cx_801 - 0x0001
	branch Mem794[es_795:di_1280:byte] == 0x00 l0800_1BDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BDE:
	word16 cx_812 = ~cx_801
	word16 di_1281 = di_1280 - cx_812
	bool Z_825 = SLICE(cond(di_1281), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE4:
	branch cx_812 == 0x0000 l0800_1BE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE4_2:
	Z_825 = SLICE(cond(0x00 - Mem794[es_795:di_1281:byte]), bool, 2) (alias)
	di_1281 = di_1281 + 0x0001
	cx_812 = cx_812 - 0x0001
	branch Mem794[es_795:di_1281:byte] == 0x00 l0800_1BE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE6:
	branch Z_825 l0800_1BEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BE8:
	di_1281 = 0x0001
	es_795 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BEF:
	Mem852[ss:sp_217 + 0x0006:word16] = es_795
	word16 di_836 = di_1281 - 0x0001
	Mem854[ss:sp_217 + 0x0004:word16] = di_836
	fn0800_3509(si_1003, di_836, Mem854[ss:sp_217 + 0x0004:word16], Mem854[ss:sp_217 + 0x0006:selector], Mem854[ss:sp_217 + 0x0008:word16], Mem854[ss:sp_217 + 0x000A:word16], out bx_1267)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C29:
	Mem886[ss:sp_217 + 0x000A:word16] = ds_689
	Mem889[ss:sp_217 + 0x0008:word16] = 0x44DC
	fn0800_3678(ds_689, Mem889[ss:sp_217 + 0x0008:word16], Mem889[ss:sp_217 + 0x000A:word16], out dx_1266, out si_1034, out ds_1018)
	Mem904[ss:sp_217 + 0x000A:word16] = ss
	Mem918[ss:sp_217 + 0x0008:word16] = bp_216 - 0x0072
	Mem920[ss:sp_217 + 0x0006:word16] = ds_1018
	selector es_921 = Mem920[ss:sp_217 + 0x0006:selector]
	word16 di_1282 = 0x44DC
	word16 cx_927 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C43:
	branch cx_927 == 0x0000 l0800_1C45
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C43_1:
	di_1282 = di_1282 + 0x0001
	cx_927 = cx_927 - 0x0001
	branch Mem920[es_921:di_1282:byte] == 0x00 l0800_1C43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C45:
	word16 cx_938 = ~cx_927
	word16 di_1283 = di_1282 - cx_938
	bool Z_951 = SLICE(cond(di_1283), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4B:
	branch cx_938 == 0x0000 l0800_1C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4B_2:
	Z_951 = SLICE(cond(0x00 - Mem920[es_921:di_1283:byte]), bool, 2) (alias)
	di_1283 = di_1283 + 0x0001
	cx_938 = cx_938 - 0x0001
	branch Mem920[es_921:di_1283:byte] == 0x00 l0800_1C4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4D:
	branch Z_951 l0800_1C56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C4F:
	di_1283 = 0x0001
	es_921 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C56:
	Mem978[ss:sp_217 + 0x0006:word16] = es_921
	di_1055 = di_1283 - 0x0001
	Mem980[ss:sp_217 + 0x0004:word16] = di_1055
	fn0800_35A3(si_1034, di_1055, Mem980[ss:sp_217 + 0x0004:word16], Mem980[ss:sp_217 + 0x0006:selector], Mem980[ss:sp_217 + 0x0008:word16], Mem980[ss:sp_217 + 0x000A:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB6_1:
	Mem1002[es_674:di_1001:byte] = Mem688[es_637:si_1003:byte]
	si_1003 = si_1003 + 0x0001
	di_1001 = di_1001 + 0x0001
	cx_1005 = cx_1005 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1BB2_2:
	Mem1012[es_674:di_1001:word16] = Mem1008[es_637:si_1003:word16]
	si_1003 = si_1003 + 0x0002
	di_1001 = di_1001 + 0x0002
	cx_1015 = cx_1015 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1B8F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C61:
	Mem1025[ss:sp_217 + 0x000A:word16] = ds_1018
	Mem1028[ss:sp_217 + 0x0008:word16] = 0x09A8
	Mem1030[ss:sp_217 + 0x0006:word16] = ds_1018
	Mem1033[ss:sp_217 + 0x0004:word16] = 0x44DC
	selector ds_1061
	word16 dx_1062
	word16 ax_1056 = fn0800_4234(si_1034, di_1055, ds_1018, Mem1033[ss:sp_217 + 0x0004:word16], Mem1033[ss:sp_217 + 0x0006:word16], Mem1033[ss:sp_217 + 0x0008:word16], Mem1033[ss:sp_217 + 0x000A:word16], out cx_1258, out dx_1062, out bp_1259, out si_1260, out di_1261, out ds_1061)
	Mem1073[ds_1061:0x29E1:word16] = dx_1062
	Mem1074[ds_1061:0x29DF:word16] = ax_1056
	word16 dx_1076 = Mem1074[ds_1061:0x29CF:word16]
	Mem1077[ds_1061:0x29E5:word16] = Mem1074[ds_1061:0x29D1:word16]
	Mem1078[ds_1061:0x29E3:word16] = dx_1076
	selector ds_1084
	fn0800_5374(ds_1061, out dx_1262, out bp_1263, out ds_1084)
	word16 sp_1088 = <invalid>
	Mem1097[ss:sp_1088 - 2:word16] = Mem1078[ds_1084:0x29E1:word16]
	Mem1100[ss:sp_1088 - 4:word16] = Mem1097[ds_1084:0x29DF:word16]
	word16 di_1107
	word16 si_1109
	fn0800_A614(ds_1084, Mem1100[ss:sp_1088 - 4:segptr32], out cx_1264, out dx_1265, out bp_1102, out si_1109, out di_1107, out ds_1110)
	word16 sp_1105 = <invalid>
	si_1116 = si_1109
	branch si_1109 == 0x0000 l0800_1CA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1C9D:
	Mem1121[ss:sp_1105 + 0x0002:word16] = ds_1110
	Mem1124[ss:sp_1105:word16] = 0x44DC
	fn0800_8F7F(0x44DC, ds_1110, Mem1124[ss:sp_1105:segptr32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CA8:
	Mem1136[ss:sp_1105 + 0x0002:word16] = ss
	Mem1140[ss:sp_1105:word16] = bp_1102 - 0x0072
	Mem1143[ss:sp_1105 - 0x0002:word16] = si_1109
	cx_1148 = fn0800_0ABC(di_1107, ds_1110, Mem1143[ss:sp_1105 - 0x0002:word16], Mem1143[ss:sp_1105:word16], Mem1143[ss:sp_1105 + 0x0002:word16], out dx_1150, out di_1149)
	sp_1158 = sp_1105 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1CF6(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: bp cx di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_1CF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1CF6:
	Mem18[ds:0x45A8:word16] = 0x0000
	Mem19[ds:0x45A6:word16] = 0x0000
	Mem20[ds:0x29ED:word16] = 0x0000
	Mem21[ds:0x29EB:word16] = 0x0000
	word16 ax_37 = fn0800_ACB3(ds, Mem33[ds:0x29CF:word16], Mem30[ds:0x29D1:word16], 0x0002, out cx_493, out dx_494, out bx_495)
	selector ds_103
	word16 dx_58 = fn0800_3E5D(ds, Mem50[ds:0x29CF:word16], Mem36[ds:0x29D1:word16], out ds_103, out Top_496)
	Mem67[ds_103:0x29ED:word16] = dx_58
	Mem68[ds_103:0x29EB:word16] = ax_37
	fn0800_4194(ds_103, Mem71[ds_103:0x29CF:word16], Mem68[ds_103:0x29D1:word16])
	branch dx_58 >u Mem74[ds_103:0x29ED:word16] l0800_1D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D52:
	branch dx_58 <u Mem74[ds_103:0x29ED:word16] l0800_1D5A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D54:
	branch ax_37 >=u Mem74[ds_103:0x29EB:word16] l0800_1D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D5A:
	fn0800_0D24(ds_103, 0x000B, SEQ(ds_103, 0x4348), out cx_501, out dx_502, out bx_503, out si_504, out di_505, out es_506, out ds_103, out Top_507)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D69:
	word16 ax_135 = fn0800_ACB3(ds_103, Mem131[ds_103:0x29CF:word16], Mem128[ds_103:0x29D1:word16], 0x0000, out cx_497, out dx_498, out bx_499)
	selector ds_155
	branch fn0800_3E5D(ds_103, Mem148[ds_103:0x29CF:word16], Mem134[ds_103:0x29D1:word16], out ds_155, out Top_500) != 0x524E l0800_1D9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D96:
	branch ax_135 == 0x4341 l0800_1DAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1D9B:
	fn0800_0D24(ds_155, 0x000B, SEQ(ds_155, 0x4348), out cx_508, out dx_509, out bx_510, out si_511, out di_512, out es_513, out ds_155, out Top_514)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DAA:
	word16 bp_255
	word16 si_262
	selector ds_259
	word16 sp_269
	selector ds_209
	fn0800_3E27(ds_155, Mem201[ds_155:0x29CF:word16], Mem196[ds_155:0x29D1:word16], out cx_515, out dx_516, out di_517, out ds_209, out Top_518)
	fn0800_3E27(ds_209, Mem222[ds_209:0x29CF:word16], Mem204[ds_209:0x29D1:word16], out cx_519, out dx_520, out di_521, out ds_522, out Top_523)
	branch wArg02 == 0x0000 l0800_1DE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DE4:
	word16 sp_263 = <invalid>
	word16 dx_260
	word16 ax_254 = fn0800_4311(out dx_260, out bp_255, out si_262, out di_524, out ds_259)
	Mem271[ds_259:0x2E53:word16] = dx_260
	Mem272[ds_259:0x2E51:word16] = ax_254
	sp_269 = sp_263 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DD1:
	word16 sp_289 = <invalid>
	word16 dx_286
	word16 ax_280 = fn0800_4311(out dx_286, out bp_255, out si_262, out di_525, out ds_259)
	Mem297[ds_259:0x2E53:word16] = dx_286
	Mem298[ds_259:0x2E51:word16] = ax_280
	sp_269 = sp_289 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1DF8:
	word16 sp_303 = sp_269 - 2
	Mem305[ss:sp_303:word16] = 0x0000
	Mem309[ss:sp_303 - 2:word16] = Mem305[ds_259:0x29ED:word16]
	Mem312[ss:sp_303 - 4:word16] = Mem309[ds_259:0x29EB:word16]
	Mem315[ss:sp_303 - 6:word16] = Mem312[ds_259:0x29D1:word16]
	Mem318[ss:sp_303 - 8:word16] = Mem315[ds_259:0x29CF:word16]
	fn0800_ACB3(ds_259, Mem318[ss:sp_303 - 8:word16], Mem318[ss:sp_303 - 6:word16], Mem318[ss:sp_303:word16], out cx_526, out dx_527, out bx_528)
	Mem331[ss:sp_303:word16] = Mem318[ds_259:0x29D1:word16]
	Mem334[ss:sp_303 - 2:word16] = Mem331[ds_259:0x29CF:word16]
	Mem339[ss:sp_303 - 4:word16] = 0x0000
	Mem342[ss:sp_303 - 6:word16] = si_262
	Mem345[ss:sp_303 - 8:word16] = Mem342[ds_259:0x2E53:word16]
	Mem348[ss:sp_303 - 10:word16] = Mem345[ds_259:0x2E51:word16]
	word16 si_356
	word16 di_352
	selector ds_353
	word16 cx_351 = (word16) fn0800_4110(ds_259, Mem348[ss:sp_303 - 10:word16], Mem348[ss:sp_303 - 8:word16], Mem348[ss:sp_303 - 6:word16], Mem348[ss:sp_303 - 4:word16], Mem348[ss:sp_303 - 2:word16], Mem348[ss:sp_303:word16], out si_356, out di_352, out ds_353)
	Mem365[ss:sp_303:word16] = 0x0000
	Mem369[ss:sp_303 - 2:word16] = si_356 - 0x0008
	word16 ax_370 = Mem369[ds_353:0x2E51:word16]
	Mem375[ss:sp_303 - 4:word16] = Mem369[ds_353:0x2E53:word16]
	Mem377[ss:sp_303 - 6:word16] = ax_370 + 0x0008
	word16 cx_401 = DPB(cx_351, cl_380, 0)
	byte cl_380
	word16 dx_381
	branch fn0800_2CCF(ds_353, Mem377[ss:sp_303 - 6:segptr32], Mem377[ss:sp_303 - 2:word16], Mem377[ss:sp_303:byte], out cl_380, out dx_381) == Mem377[ss:bp_255 - 0x0002:word16] l0800_1E59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E4A:
	Mem392[ss:sp_303:word16] = ds_353
	Mem395[ss:sp_303 - 2:word16] = 0x4348
	Mem398[ss:sp_303 - 4:word16] = 0x000D
	fn0800_0D24(ds_353, Mem398[ss:sp_303 - 4:word16], Mem398[ss:sp_303 - 2:segptr32], out cx_401, out dx_381, out bx_529, out si_530, out di_352, out es_531, out ds_353, out Top_532)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E59:
	word16 si_418 = Mem417[ss:sp_269:word16]
	word16 bp_421 = Mem417[ss:bp_255:word16]
	dxOut = dx_381
	bpOut = bp_421
	siOut = si_418
	diOut = di_352
	dsOut = ds_353
	return cx_401
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1CF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_1E5E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_1E5E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1E5E:
	ptr32 es_bx_9 = Mem7[ds:0x2E51:segptr32]
	word16 ax_24 = (DPB(DPB(ax, Mem7[es_bx_9 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem7[es_bx_9 + 0x0005:byte], 0), 0x00, 8)
	word16 ax_41 = fn0800_2CCF(ds, SEQ(Mem32[ds:0x2E53:word16], Mem32[ds:0x2E51:word16] + 0x0008), ax_24 - 0x0008, 0x00, out cl_313, out dx_314)
	ptr32 es_bx_54 = Mem40[ds:0x2E51:segptr32]
	Mem58[es_bx_54 + 0x0006:byte] = (byte) (ax_41 >>u 0x08)
	Mem60[es_bx_54 + 0x0007:byte] = (byte) ax_41
	fn0800_ACB3(ds, Mem77[ds:0x29CF:word16], Mem74[ds:0x29D1:word16], 0x0000, out cx_315, out dx_316, out bx_317)
	word16 si_145 = ax_24
	word16 cx_100
	word16 di_101
	selector ds_102
	word16 ax_98 = fn0800_3E27(ds, Mem94[ds:0x29CF:word16], Mem80[ds:0x29D1:word16], out cx_100, out dx_318, out di_101, out ds_102, out Top_319)
	word16 sp_110 = fp - 0x0002
	branch ax_24 <=u ax_98 l0800_1EF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1EF7:
	branch ax_24 >=u ax_98 l0800_1F19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1EFB:
	fn0800_3C99(ax_24, di_101, ds_102, out bp_326, out si_145, out ds_102)
	word16 sp_146 = <invalid>
	sp_110 = sp_146 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1ED7:
	word16 sp_185 = <invalid>
	si_145 = fn0800_3BC3(cx_100, 0x0000, ds_102, out ds_102)
	sp_110 = sp_185 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F19:
	word16 sp_198 = sp_110 - 2
	Mem200[ss:sp_198:word16] = 0x0000
	Mem204[ss:sp_198 - 2:word16] = Mem200[ds_102:0x29ED:word16]
	Mem207[ss:sp_198 - 4:word16] = Mem204[ds_102:0x29EB:word16]
	Mem210[ss:sp_198 - 6:word16] = Mem207[ds_102:0x29D1:word16]
	Mem213[ss:sp_198 - 8:word16] = Mem210[ds_102:0x29CF:word16]
	fn0800_ACB3(ds_102, Mem213[ss:sp_198 - 8:word16], Mem213[ss:sp_198 - 6:word16], Mem213[ss:sp_198:word16], out cx_320, out dx_321, out bx_322)
	Mem226[ss:sp_198:word16] = Mem213[ds_102:0x29D1:word16]
	Mem229[ss:sp_198 - 2:word16] = Mem226[ds_102:0x29CF:word16]
	Mem234[ss:sp_198 - 4:word16] = 0x0000
	Mem237[ss:sp_198 - 6:word16] = si_145
	Mem240[ss:sp_198 - 8:word16] = Mem237[ds_102:0x2E53:word16]
	Mem243[ss:sp_198 - 10:word16] = Mem240[ds_102:0x2E51:word16]
	selector ds_248
	fn0800_4152(ds_102, Mem243[ss:sp_198 - 10:word16], Mem243[ss:sp_198 - 8:word16], Mem243[ss:sp_198 - 6:word16], Mem243[ss:sp_198 - 2:word16], Mem243[ss:sp_198:word16], out ds_248)
	Mem261[ss:sp_198:word16] = Mem243[ds_248:0x2E53:word16]
	Mem264[ss:sp_198 - 2:word16] = Mem261[ds_248:0x2E51:word16]
	selector ds_268
	fn0800_4346(ds_248, Mem264[ss:sp_198:word16], out cx_323, out dx_324, out bx_325, out ds_268)
	return ds_268
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1E5E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_1F5C(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_1F5C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F5C:
	selector es_362 = SLICE(ptrArg02, selector, 16)
	word16 di_24 = (word16) ptrArg02
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6C:
	branch cx_20 == 0x0000 l0800_1F6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6C_1:
	di_24 = di_24 + 0x0001
	cx_20 = cx_20 - 0x0001
	branch Mem15[es_362:di_24:byte] == 0x00 l0800_1F6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F6E:
	word16 cx_31 = ~cx_20
	word16 di_34 = di_24 - cx_31
	bool Z_44 = SLICE(cond(di_34), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F75:
	branch cx_31 == 0x0000 l0800_1F77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F75_2:
	Z_44 = SLICE(cond(0x3A - Mem15[es_362:di_34:byte]), bool, 2) (alias)
	di_34 = di_34 + 0x0001
	cx_31 = cx_31 - 0x0001
	branch Mem15[es_362:di_34:byte] == 0x3A l0800_1F75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F77:
	branch Z_44 l0800_1F80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F79:
	di_34 = 0x0001
	es_362 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F80:
	word16 ax_117 = es_362
	branch (di_34 - 0x0001 | es_362) == 0x0000 l0800_1FAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F87:
	selector es_111 = SLICE(ptrArg02, selector, 16)
	word16 di_369 = (word16) ptrArg02
	word16 cx_79 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F8F:
	branch cx_79 == 0x0000 l0800_1F91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F8F_1:
	di_369 = di_369 + 0x0001
	cx_79 = cx_79 - 0x0001
	branch Mem15[es_111:di_369:byte] == 0x00 l0800_1F8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F91:
	word16 cx_102 = ~cx_79
	word16 di_101 = di_369 - cx_102
	bool Z_103 = SLICE(cond(di_101), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F98:
	branch cx_102 == 0x0000 l0800_1F9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F98_2:
	Z_103 = SLICE(cond(0x3A - Mem15[es_111:di_101:byte]), bool, 2) (alias)
	di_101 = di_101 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem15[es_111:di_101:byte] == 0x3A l0800_1F98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F9A:
	branch Z_103 l0800_1FA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1F9C:
	di_101 = 0x0001
	es_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FA3:
	ax_117 = es_111
	ptrArg02 = SEQ(es_111, di_101)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FAD:
	ptr32 es_bx_145 = Mem144[ds:0x2E51:segptr32]
	word16 ax_171 = (DPB(DPB(ax_117, Mem144[es_bx_145 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem144[es_bx_145 + 0x0005:byte], 0), 0x00, 8)
	word16 wArg04_413 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_416 = SLICE(ptrArg02, word16, 0)
	word16 dx_177 = Mem174[ds:0x2E51:word16] + ax_171
	segptr32 ptrLoc06_405 = Mem174[ds:0x2E53:word16]
	selector es_374 = SLICE(ptrArg02, selector, 16)
	word16 di_188 = (word16) ptrArg02
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FDE:
	ptrLoc06_405 = SLICE(ptrLoc06_405, word16, 16) (alias)
	branch cx_184 == 0x0000 l0800_1FE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FDE_1:
	di_188 = di_485 + 0x0001
	cx_184 = cx_184 - 0x0001
	di_485 = di_188
	branch Mem179[es_374:di_485:byte] == 0x00 l0800_1FDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_1FE0:
	word16 cx_195 = ~cx_184
	word16 ax_207 = dx_177 - Mem202[ds:0x2E51:word16]
	word16 wLoc04_408 = SLICE(ptrLoc06_405, word16, 16)
	word16 ax_211 = ax_207 + (cx_195 + 0x0003)
	segptr32 ptrLoc06_409 = SEQ(wLoc04_408, dx_177)
	Mem230[ptrLoc06_409:byte] = (byte) fn0800_8C8A(ax_211, 0x08, 0x0000 - (ax_207 <u 0x0000) + (ax_211 <u 0x0000), out cl_479, out dx_480)
	Mem239[ptrLoc06_409 + 0x0001:byte] = (byte) (dx_177 - Mem230[ds:0x2E51:word16]) + SLICE(cx_195 + 0x0003, byte, 0)
	word16 sp_221 = <invalid>
	Mem243[ss:sp_221 - 2:word16] = SLICE(ptrLoc06_409, selector, 16)
	Mem246[ss:sp_221 - 4:word16] = dx_177 + 0x0002
	word16 bx_229 = (word16) ptrLoc06_409
	word16 di_247 = wArg02_416
	word16 cx_251 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202C:
	branch cx_251 == 0x0000 l0800_202E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202C_2:
	di_247 = di_247 + 0x0001
	cx_251 = cx_251 - 0x0001
	branch Mem246[wArg04_413:di_247:byte] == 0x00 l0800_202C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_202E:
	word16 di_273 = Mem246[ss:sp_221 - 4:word16]
	selector es_277 = Mem246[ss:sp_221 - 2:selector]
	Mem282[ss:sp_221 - 2:word16] = ds
	word16 cx_262 = ~cx_251
	word16 cx_265 = cx_262 >>u 0x0001
	word16 si_267 = di_247 - cx_262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203D:
	branch cx_265 == 0x0000 l0800_203F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203F:
	word16 cx_286 = cx_265 * 0x0002 + (cx_262 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2041:
	byte bLoc08_420 = SLICE(ax_171, byte, 0)
	byte bLoc0A_421 = SLICE(cx_195 + 0x0003, byte, 0)
	branch cx_286 == 0x0000 l0800_2043
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2043:
	selector ds_292 = Mem291[ss:sp_221 - 2:selector]
	Mem298[wLoc04_408:bx_229 + (cx_195 + 0x0003) - 0x0001:byte] = 0x00
	ptr32 es_bx_303 = Mem298[ds_292:0x2E51:segptr32]
	Mem307[es_bx_303 + 0x0004:byte] = (byte) (ax_171 + (cx_195 + 0x0003) >>u 0x08)
	Mem310[es_bx_303 + 0x0005:byte] = bLoc08_420 + bLoc0A_421
	Mem315[ss:sp_221 - 2:word16] = 0x0000
	Mem317[ss:sp_221 - 4:word16] = 0x0000
	Mem319[ss:sp_221 - 6:word16] = 0x0000
	Mem322[ss:sp_221 - 8:word16] = cx_195 + 0x0003
	fn0800_2688(ds_292, Mem322[ss:sp_221 - 8:word16], Mem322[ss:sp_221 - 6:word16], Mem322[ss:sp_221 - 4:word16], Mem322[ss:sp_221 - 2:word16])
	word16 di_336 = Mem322[ss:sp_221:word16]
	dxOut = wLoc04_408
	diOut = di_336
	dsOut = ds_292
	return dx_177
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_1F5C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2041_1:
	Mem347[es_277:di_273:byte] = Mem291[wArg04_413:si_267:byte]
	si_267 = si_267 + 0x0001
	di_273 = di_273 + 0x0001
	cx_286 = cx_286 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_203D_3:
	Mem357[es_277:di_273:word16] = Mem353[wArg04_413:si_267:word16]
	si_267 = si_267 + 0x0002
	di_273 = di_273 + 0x0002
	cx_265 = cx_265 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_2085(selector ds, word16 wArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0006:[0..31]
// LiveOut: cx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_2085_entry:
	selector psegArg04_554 = SLICE(ptrArg02, selector, 16)
	word16 wArg02_558 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2085:
	ptr32 es_bx_17 = Mem15[ds:0x2E51:segptr32]
	word16 ax_32 = (DPB(DPB(ax, Mem15[es_bx_17 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem15[es_bx_17 + 0x0005:byte], 0), 0x00, 8)
	word16 dx_36 = Mem33[ds:0x2E51:word16] + ax_32
	selector es_497 = SLICE(ptrArg02, selector, 16)
	word16 di_47 = (word16) ptrArg02
	word16 cx_43 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20BE:
	branch cx_43 == 0x0000 l0800_20C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20BE_1:
	di_47 = di_789 + 0x0001
	cx_43 = cx_43 - 0x0001
	di_789 = di_47
	branch Mem38[es_497:di_789:byte] == 0x00 l0800_20BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_20C0:
	word16 bx_80 = Mem61[ds:0x2E51:word16] + (((int16) Mem61[ptrArg06:byte] << 0x08) + DPB(DPB(dx_36, Mem61[ptrArg06 + 0x0001:byte], 0), 0x00, 8))
	word16 cx_54 = ~cx_43
	word16 dx_78 = Mem61[ds:0x2E53:word16]
	fn0800_B0F3(bx_80 - 0x0001 + (cx_54 + 0x0004), Mem98[ds:0x2E53:word16], bx_80 - 0x0001, Mem93[ds:0x2E53:word16], dx_36 - (bx_80 - 0x0001))
	segptr32 ptrLoc06_550 = SEQ(dx_78, bx_80 - 0x0001)
	selector es_120 = SLICE(ptrLoc06_550, selector, 16)
	word16 di_124 = (word16) ptrLoc06_550
	word16 di_126 = wArg02_558
	word16 cx_130 = 0xFFFF
	segptr32 ptrLoc06_708 = SEQ(dx_78, bx_80 - 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_211F:
	branch cx_130 == 0x0000 l0800_2121
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_211F_2:
	di_126 = di_126 + 0x0001
	cx_130 = cx_130 - 0x0001
	branch Mem125[psegArg04_554:di_126:byte] == 0x00 l0800_211F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2121:
	word16 cx_141 = ~cx_130
	word16 cx_144 = cx_141 >>u 0x0001
	word16 si_146 = di_126 - cx_141
	word16 di_152 = di_124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2130:
	branch cx_144 == 0x0000 l0800_2132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2132:
	word16 cx_165 = cx_144 * 0x0002 + (cx_141 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2134:
	byte bLoc0E_624 = SLICE(cx_54 + 0x0004, byte, 0)
	byte bLoc0C_623 = SLICE(ax_32, byte, 0)
	branch cx_165 == 0x0000 l0800_2136
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2136:
	selector es_210 = SLICE(ptrLoc06_708, selector, 16)
	word16 di_182 = (word16) ptrLoc06_708
	word16 cx_178 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_213F:
	branch cx_178 == 0x0000 l0800_2141
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_213F_1:
	di_182 = di_182 + 0x0001
	cx_178 = cx_178 - 0x0001
	branch Mem170[es_210:di_182:byte] == 0x00 l0800_213F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2141:
	word16 cx_189 = ~cx_178
	word16 di_192 = di_182 - cx_189
	bool Z_202 = SLICE(cond(di_192), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2147:
	branch cx_189 == 0x0000 l0800_2149
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2147_2:
	Z_202 = SLICE(cond(0x00 - Mem170[es_210:di_192:byte]), bool, 2) (alias)
	di_192 = di_192 + 0x0001
	cx_189 = cx_189 - 0x0001
	branch Mem170[es_210:di_192:byte] == 0x00 l0800_2147
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2149:
	branch Z_202 l0800_2152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_214B:
	di_192 = 0x0001
	es_210 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2152:
	Mem218[es_210:di_192:byte] = 0x00
	selector es_265 = SLICE(ptrLoc06_708, selector, 16)
	word16 di_237 = (word16) ptrLoc06_708
	word16 cx_233 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2164:
	branch cx_233 == 0x0000 l0800_2166
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2164_1:
	di_237 = di_237 + 0x0001
	cx_233 = cx_233 - 0x0001
	branch Mem218[es_265:di_237:byte] == 0x00 l0800_2164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2166:
	word16 cx_244 = ~cx_233
	word16 di_247 = di_237 - cx_244
	bool Z_257 = SLICE(cond(di_247), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216C:
	branch cx_244 == 0x0000 l0800_216E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216C_2:
	Z_257 = SLICE(cond(0x00 - Mem218[es_265:di_247:byte]), bool, 2) (alias)
	di_247 = di_247 + 0x0001
	cx_244 = cx_244 - 0x0001
	branch Mem218[es_265:di_247:byte] == 0x00 l0800_216C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_216E:
	branch Z_257 l0800_2177
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2170:
	di_247 = 0x0001
	es_265 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2177:
	Mem273[es_265:di_247 + 0x0001:byte] = 0x00
	selector es_320 = SLICE(ptrLoc06_708, selector, 16)
	word16 di_292 = (word16) ptrLoc06_708
	word16 cx_288 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2189:
	branch cx_288 == 0x0000 l0800_218B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2189_1:
	di_292 = di_292 + 0x0001
	cx_288 = cx_288 - 0x0001
	branch Mem273[es_320:di_292:byte] == 0x00 l0800_2189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_218B:
	word16 cx_299 = ~cx_288
	word16 di_302 = di_292 - cx_299
	bool Z_312 = SLICE(cond(di_302), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2191:
	branch cx_299 == 0x0000 l0800_2193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2191_2:
	Z_312 = SLICE(cond(0x00 - Mem273[es_320:di_302:byte]), bool, 2) (alias)
	di_302 = di_302 + 0x0001
	cx_299 = cx_299 - 0x0001
	branch Mem273[es_320:di_302:byte] == 0x00 l0800_2191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2193:
	branch Z_312 l0800_219C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2195:
	di_302 = 0x0001
	es_320 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_219C:
	Mem328[es_320:di_302 + 0x0002:byte] = 0x00
	selector es_375 = SLICE(ptrLoc06_708, selector, 16)
	word16 di_347 = (word16) ptrLoc06_708
	word16 cx_343 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21AE:
	branch cx_343 == 0x0000 l0800_21B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21AE_1:
	di_347 = di_347 + 0x0001
	cx_343 = cx_343 - 0x0001
	branch Mem328[es_375:di_347:byte] == 0x00 l0800_21AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B0:
	word16 cx_354 = ~cx_343
	word16 di_357 = di_347 - cx_354
	bool Z_367 = SLICE(cond(di_357), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B6:
	branch cx_354 == 0x0000 l0800_21B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B6_2:
	Z_367 = SLICE(cond(0x00 - Mem328[es_375:di_357:byte]), bool, 2) (alias)
	di_357 = di_357 + 0x0001
	cx_354 = cx_354 - 0x0001
	branch Mem328[es_375:di_357:byte] == 0x00 l0800_21B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21B8:
	branch Z_367 l0800_21C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21BA:
	di_357 = 0x0001
	es_375 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_21C1:
	Mem383[es_375:di_357 + 0x0003:byte] = 0x00
	ptr32 es_bx_418 = Mem383[ds:0x2E51:segptr32]
	Mem422[es_bx_418 + 0x0004:byte] = (byte) (ax_32 + (cx_54 + 0x0004) >>u 0x08)
	Mem425[es_bx_418 + 0x0005:byte] = bLoc0C_623 + bLoc0E_624
	return (byte) DPB(cx_354, fn0800_2688(ds, cx_54 + 0x0004, 0x0000, 0x0000, 0x0000), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2085_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2134_1:
	Mem482[es_120:di_152:byte] = Mem170[psegArg04_554:si_146:byte]
	si_146 = si_146 + 0x0001
	di_152 = di_152 + 0x0001
	cx_165 = cx_165 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2130_3:
	Mem492[es_120:di_152:word16] = Mem488[psegArg04_554:si_146:word16]
	si_146 = si_146 + 0x0002
	di_152 = di_152 + 0x0002
	cx_144 = cx_144 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_2201(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_2201_entry:
	word16 wArg02_237 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_241 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2201:
	ptr32 es_bx_14 = Mem12[ds:0x2E51:segptr32]
	word16 ax_29 = (DPB(DPB(ax, Mem12[es_bx_14 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem12[es_bx_14 + 0x0005:byte], 0), 0x00, 8)
	word16 dx_33 = Mem30[ds:0x2E51:word16] + ax_29
	word16 dx_50 = Mem35[ds:0x2E51:word16] + (((int16) Mem35[ptrArg02:byte] << 0x08) + DPB(DPB(dx_33, Mem35[ptrArg02 + 0x0001:byte], 0), 0x00, 8)) - wArg02_237
	word16 ax_56 = wArg02_237 + dx_50
	fn0800_B0F3(wArg02_237, wArg04_241, ax_56, wArg04_241, dx_33 - ax_56)
	ptr32 es_bx_93 = Mem77[ds:0x2E51:segptr32]
	Mem97[es_bx_93 + 0x0004:byte] = (byte) (ax_29 - dx_50 >>u 0x08)
	Mem100[es_bx_93 + 0x0005:byte] = SLICE(ax_29, byte, 0) - SLICE(dx_50, byte, 0)
	word16 ax_109 = -dx_50
	fn0800_2688(ds, ax_109, -0x0000 - (ax_109 == 0x0000), 0x0000, 0x0000)
	word16 dx_128 = Mem116[ds:0x45AE:word16]
	branch Mem116[ds:0x45B0:word16] != wArg04_241 l0800_22EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22B7:
	branch dx_128 != wArg02_237 l0800_22EA
	segptr32 ptrArg02_258 = SEQ(wArg04_241, wArg02_237)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22EA:
	branch Mem116[ds:0x45AE:word16] <=u wArg02_237 l0800_22F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22F2:
	Mem142[ds:0x45AA:word16] = Mem116[ds:0x45AA:word16] - dx_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22F9:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22BC:
	selector es_191 = SLICE(ptrArg02_258, selector, 16)
	word16 di_155 = (word16) ptrArg02_258 + 0x0002
	word16 cx_159 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C7:
	branch cx_159 == 0x0000 l0800_22C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C7_1:
	di_155 = di_155 + 0x0001
	cx_159 = cx_159 - 0x0001
	branch Mem116[es_191:di_155:byte] == 0x00 l0800_22C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22C9:
	word16 cx_170 = ~cx_159
	word16 di_173 = di_155 - cx_170
	bool Z_183 = SLICE(cond(di_173), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22CF:
	branch cx_170 == 0x0000 l0800_22D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22CF_2:
	Z_183 = SLICE(cond(0x00 - Mem116[es_191:di_173:byte]), bool, 2) (alias)
	di_173 = di_173 + 0x0001
	cx_170 = cx_170 - 0x0001
	branch Mem116[es_191:di_173:byte] == 0x00 l0800_22CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22D1:
	branch Z_183 l0800_22DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22D3:
	di_173 = 0x0001
	es_191 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22DA:
	Mem205[ds:0x45AC:word16] = es_191
	Mem206[ds:0x45AA:word16] = di_173
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2201_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_22FE(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_22FE_entry:
	word16 wArg02_229 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_243 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_22FE:
	ptr32 es_bx_14 = Mem12[ds:0x2E51:segptr32]
	word16 ax_29 = (DPB(DPB(ax, Mem12[es_bx_14 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem12[es_bx_14 + 0x0005:byte], 0), 0x00, 8)
	byte bLoc08_253 = SLICE(ax_29, byte, 0)
	word16 dx_33 = Mem30[ds:0x2E51:word16] + ax_29
	selector es_213 = SLICE(ptrArg02, selector, 16)
	word16 di_214 = (word16) ptrArg02
	word16 cx_40 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2336:
	branch cx_40 == 0x0000 l0800_2338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2336_1:
	di_214 = di_214 + 0x0001
	cx_40 = cx_40 - 0x0001
	branch Mem35[es_213:di_214:byte] == 0x00 l0800_2336
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2338:
	word16 cx_51 = ~cx_40
	word16 di_313 = di_214 - cx_51
	bool Z_64 = SLICE(cond(di_313), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_233E:
	branch cx_51 == 0x0000 l0800_2340
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_233E_2:
	Z_64 = SLICE(cond(0x00 - Mem35[es_213:di_313:byte]), bool, 2) (alias)
	di_313 = di_313 + 0x0001
	cx_51 = cx_51 - 0x0001
	branch Mem35[es_213:di_313:byte] == 0x00 l0800_233E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2340:
	branch Z_64 l0800_2349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2342:
	di_313 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2349:
	word16 di_93 = di_313 + 0x0004 - wArg02_229
	word16 ax_99 = wArg02_229 + di_93
	fn0800_B0F3(wArg02_229, wArg04_243, ax_99, wArg04_243, dx_33 - ax_99)
	ptr32 es_bx_146 = Mem125[ds:0x2E51:segptr32]
	Mem150[es_bx_146 + 0x0004:byte] = (byte) (ax_29 - di_93 >>u 0x08)
	Mem153[es_bx_146 + 0x0005:byte] = bLoc08_253 - SLICE(di_93, byte, 0)
	word16 ax_162 = -di_93
	fn0800_2688(ds, ax_162, -0x0000 - (ax_162 == 0x0000), 0x0000, 0x0000)
	Mem183[ds:0x45AC:word16] = wArg04_243
	word16 dx_182 = wArg02_229 + di_93
	Mem184[ds:0x45AA:word16] = dx_182
	branch (dx_182 | wArg04_243) == 0x0000 l0800_23D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23D8:
	branch Mem184[ds:0x45AA:word16] <=u wArg02_229 l0800_23E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23E0:
	Mem194[ds:0x45AA:word16] = Mem184[ds:0x45AA:word16] - di_93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23E7:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23C6:
	Mem206[ds:0x45AC:word16] = wArg04_243
	Mem207[ds:0x45AA:word16] = wArg02_229
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_22FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_23EC(selector ds, word16 wArg02, word16 wArg04, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: bp cx di ds si sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_23EC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_23EC:
	segptr32 ptrArg02_468 = SEQ(wArg04, wArg02)
	selector ds_24
	word16 si_26 = fn0800_24FE(ds, SEQ(wArg04, wArg02), out ds_24)
	selector es_434 = SLICE(ptrArg02_468, selector, 16)
	word16 di_435 = (word16) ptrArg02_468
	word16 cx_41 = 0xFFFF
	segptr32 ptrArg02_474 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240D:
	branch cx_41 == 0x0000 l0800_240F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240D_1:
	di_435 = di_435 + 0x0001
	cx_41 = cx_41 - 0x0001
	branch Mem36[es_434:di_435:byte] == 0x00 l0800_240D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_240F:
	word16 cx_52 = ~cx_41
	word16 di_55 = di_435 - cx_52
	bool Z_65 = SLICE(cond(di_55), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2415:
	branch cx_52 == 0x0000 l0800_2417
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2415_2:
	Z_65 = SLICE(cond(0x00 - Mem36[es_434:di_577:byte]), bool, 2) (alias)
	di_55 = di_577 + 0x0001
	cx_52 = cx_52 - 0x0001
	di_577 = di_55
	branch Mem36[es_434:di_577:byte] == 0x00 l0800_2415
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2417:
	branch Z_65 l0800_2420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2419:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2420:
	selector es_440 = SLICE(ptrArg02_474, selector, 16)
	word16 di_112 = (word16) ptrArg02_474
	word16 cx_108 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2437:
	branch cx_108 == 0x0000 l0800_2439
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2437_1:
	di_112 = di_112 + 0x0001
	cx_108 = cx_108 - 0x0001
	branch Mem104[es_440:di_112:byte] == 0x00 l0800_2437
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2439:
	word16 cx_119 = ~cx_108
	word16 di_122 = di_112 - cx_119
	bool Z_132 = SLICE(cond(di_122), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_243F:
	branch cx_119 == 0x0000 l0800_2441
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_243F_2:
	Z_132 = SLICE(cond(0x00 - Mem104[es_440:di_579:byte]), bool, 2) (alias)
	di_122 = di_579 + 0x0001
	cx_119 = cx_119 - 0x0001
	di_579 = di_122
	branch Mem104[es_440:di_579:byte] == 0x00 l0800_243F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2441:
	branch Z_132 l0800_244A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2443:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_244A:
	selector es_446 = SLICE(ptrArg02_474, selector, 16)
	word16 di_184 = (word16) ptrArg02_474
	word16 cx_180 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2462:
	branch cx_180 == 0x0000 l0800_2464
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2462_1:
	di_184 = di_184 + 0x0001
	cx_180 = cx_180 - 0x0001
	branch Mem179[es_446:di_184:byte] == 0x00 l0800_2462
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2464:
	word16 cx_191 = ~cx_180
	word16 di_194 = di_184 - cx_191
	bool Z_204 = SLICE(cond(di_194), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246A:
	branch cx_191 == 0x0000 l0800_246C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246A_2:
	Z_204 = SLICE(cond(0x00 - Mem179[es_446:di_581:byte]), bool, 2) (alias)
	di_194 = di_581 + 0x0001
	cx_191 = cx_191 - 0x0001
	di_581 = di_194
	branch Mem179[es_446:di_581:byte] == 0x00 l0800_246A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246C:
	branch Z_204 l0800_2475
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_246E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2475:
	selector es_452 = SLICE(ptrArg02_474, selector, 16)
	word16 di_251 = (word16) ptrArg02_474
	word16 cx_247 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248C:
	branch cx_247 == 0x0000 l0800_248E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248C_1:
	di_251 = di_251 + 0x0001
	cx_247 = cx_247 - 0x0001
	branch Mem243[es_452:di_251:byte] == 0x00 l0800_248C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_248E:
	word16 cx_258 = ~cx_247
	word16 di_261 = di_251 - cx_258
	bool Z_271 = SLICE(cond(di_261), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2494:
	branch cx_258 == 0x0000 l0800_2496
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2494_2:
	Z_271 = SLICE(cond(0x00 - Mem243[es_452:di_261:byte]), bool, 2) (alias)
	di_261 = di_261 + 0x0001
	cx_258 = cx_258 - 0x0001
	branch Mem243[es_452:di_261:byte] == 0x00 l0800_2494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2496:
	branch Z_271 l0800_249F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2498:
	di_261 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_249F:
	word16 bp_385
	selector ds_389
	word16 si_392
	word16 cx_387 = (word16) fn0800_3C99(si_26, di_261 - 0x0001, ds_24, out bp_385, out si_392, out ds_389)
	word16 sp_393 = <invalid>
	Mem403[ss:sp_393 + 0x000A:word16] = Mem363[ss:bp_385 - 0x0002:word16]
	Mem406[ss:sp_393 + 0x0008:word16] = Mem403[ss:bp_385 - 0x0004:word16]
	word16 dx_410 = -Mem406[ss:bp_385 - 0x0008:word16]
	Mem415[ss:sp_393 + 0x0006:word16] = -Mem406[ss:bp_385 - 0x0006:word16] - (dx_410 == 0x0000)
	Mem417[ss:sp_393 + 0x0004:word16] = dx_410
	fn0800_2688(ds_389, Mem417[ss:sp_393 + 0x0004:word16], Mem417[ss:sp_393 + 0x0006:word16], Mem417[ss:sp_393 + 0x0008:word16], Mem417[ss:sp_393 + 0x000A:word16])
	word16 di_429 = Mem417[ss:sp_393 + 0x000C:word16]
	bpOut = Mem417[ss:bp_385:word16]
	siOut = si_392
	diOut = di_429
	dsOut = ds_389
	return fn0800_2688(ds_389, Mem417[ss:sp_393 + 0x0004:word16], Mem417[ss:sp_393 + 0x0006:word16], Mem417[ss:sp_393 + 0x0008:word16], Mem417[ss:sp_393 + 0x000A:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_23EC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_24FE(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_24FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_24FE:
	selector es_514 = SLICE(ptrArg02, selector, 16)
	word16 di_21 = (word16) ptrArg02
	word16 cx_17 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250D:
	branch cx_17 == 0x0000 l0800_250F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250D_1:
	di_21 = di_21 + 0x0001
	cx_17 = cx_17 - 0x0001
	branch Mem12[es_514:di_21:byte] == 0x00 l0800_250D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_250F:
	word16 cx_28 = ~cx_17
	word16 di_31 = di_21 - cx_28
	bool Z_41 = SLICE(cond(di_31), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2515:
	branch cx_28 == 0x0000 l0800_2517
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2515_2:
	Z_41 = SLICE(cond(0x00 - Mem12[es_514:di_710:byte]), bool, 2) (alias)
	di_31 = di_710 + 0x0001
	cx_28 = cx_28 - 0x0001
	di_710 = di_31
	branch Mem12[es_514:di_710:byte] == 0x00 l0800_2515
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2517:
	branch Z_41 l0800_2520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2519:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2520:
	selector es_520 = SLICE(ptrArg02, selector, 16)
	word16 di_521 = (word16) ptrArg02
	word16 cx_84 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2537:
	branch cx_84 == 0x0000 l0800_2539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2537_1:
	di_521 = di_521 + 0x0001
	cx_84 = cx_84 - 0x0001
	branch Mem80[es_520:di_521:byte] == 0x00 l0800_2537
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2539:
	word16 cx_100 = ~cx_84
	word16 di_103 = di_521 - cx_100
	bool Z_108 = SLICE(cond(di_103), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_253F:
	branch cx_100 == 0x0000 l0800_2541
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_253F_2:
	Z_108 = SLICE(cond(0x00 - Mem80[es_520:di_712:byte]), bool, 2) (alias)
	di_103 = di_712 + 0x0001
	cx_100 = cx_100 - 0x0001
	di_712 = di_103
	branch Mem80[es_520:di_712:byte] == 0x00 l0800_253F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2541:
	branch Z_108 l0800_254A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2543:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_254A:
	selector es_526 = SLICE(ptrArg02, selector, 16)
	word16 di_160 = (word16) ptrArg02
	word16 cx_156 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2562:
	branch cx_156 == 0x0000 l0800_2564
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2562_1:
	di_160 = di_160 + 0x0001
	cx_156 = cx_156 - 0x0001
	branch Mem155[es_526:di_160:byte] == 0x00 l0800_2562
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2564:
	word16 cx_167 = ~cx_156
	word16 di_170 = di_160 - cx_167
	bool Z_180 = SLICE(cond(di_170), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256A:
	branch cx_167 == 0x0000 l0800_256C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256A_2:
	Z_180 = SLICE(cond(0x00 - Mem155[es_526:di_714:byte]), bool, 2) (alias)
	di_170 = di_714 + 0x0001
	cx_167 = cx_167 - 0x0001
	di_714 = di_170
	branch Mem155[es_526:di_714:byte] == 0x00 l0800_256A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256C:
	branch Z_180 l0800_2575
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_256E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2575:
	selector es_532 = SLICE(ptrArg02, selector, 16)
	word16 di_227 = (word16) ptrArg02
	word16 cx_223 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258C:
	branch cx_223 == 0x0000 l0800_258E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258C_1:
	di_227 = di_227 + 0x0001
	cx_223 = cx_223 - 0x0001
	branch Mem219[es_532:di_227:byte] == 0x00 l0800_258C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_258E:
	word16 cx_234 = ~cx_223
	word16 di_237 = di_227 - cx_234
	bool Z_247 = SLICE(cond(di_237), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2594:
	branch cx_234 == 0x0000 l0800_2596
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2594_2:
	Z_247 = SLICE(cond(0x00 - Mem219[es_532:di_716:byte]), bool, 2) (alias)
	di_237 = di_716 + 0x0001
	cx_234 = cx_234 - 0x0001
	di_716 = di_237
	branch Mem219[es_532:di_716:byte] == 0x00 l0800_2594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2596:
	branch Z_247 l0800_259F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2598:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_259F:
	word16 ax_339 = fn0800_ACB3(ds, Mem335[ds:0x29CF:word16], Mem332[ds:0x29D1:word16], 0x0000, out cx_697, out dx_698, out bx_699)
	word16 dx_375
	selector ds_359
	word16 ax_372 = fn0800_8C8A(ax_339, 0x08, fn0800_3E5D(ds, Mem352[ds:0x29CF:word16], Mem338[ds:0x29D1:word16], out ds_359, out Top_700), out cl_701, out dx_375)
	word16 sp_376 = <invalid>
	branch dx_375 != 0x0052 l0800_25FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_25F7:
	branch ax_372 == 0x4E43 l0800_260B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_25FC:
	Mem389[ss:sp_376 - 2:word16] = ds_359
	Mem392[ss:sp_376 - 4:word16] = 0x4348
	Mem395[ss:sp_376 - 6:word16] = 0x000C
	fn0800_0D24(ds_359, Mem395[ss:sp_376 - 6:word16], Mem395[ss:sp_376 - 4:segptr32], out cx_702, out dx_703, out bx_704, out si, out di_705, out es_706, out ds_359, out Top_707)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_260B:
	selector ds_433
	branch (ax_339 & 0x00FF) == 0x0000 l0800_2655
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2655:
	Mem426[ss:sp_376 - 2:word16] = Mem415[ds_359:0x29D1:word16]
	Mem429[ss:sp_376 - 4:word16] = Mem426[ds_359:0x29CF:word16]
	word16 dx_434 = fn0800_3E5D(ds_359, Mem429[ss:sp_376 - 4:word16], Mem429[ss:sp_376 - 2:word16], out ds_433, out Top_436)
	Mem442[ds_433:0x2A05:word16] = dx_434
	Mem443[ds_433:0x2A03:word16] = ax_339 & 0x00FF
	Mem444[ds_433:0x2A09:word16] = dx_434
	Mem445[ds_433:0x2A07:word16] = ax_339 & 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2616:
	Mem455[ss:sp_376 - 2:word16] = Mem415[ds_359:0x29D1:word16]
	Mem458[ss:sp_376 - 4:word16] = Mem455[ds_359:0x29CF:word16]
	selector ds_462
	Mem472[ds_462:0x2A09:word16] = fn0800_3E5D(ds_359, Mem458[ss:sp_376 - 4:word16], Mem458[ss:sp_376 - 2:word16], out ds_462, out Top_708)
	Mem473[ds_462:0x2A07:word16] = ax_339 & 0x00FF
	Mem476[ss:sp_376 - 2:word16] = Mem473[ds_462:0x29D1:word16]
	Mem479[ss:sp_376 - 4:word16] = Mem476[ds_462:0x29CF:word16]
	Mem492[ds_433:0x2A05:word16] = fn0800_3E5D(ds_462, Mem479[ss:sp_376 - 4:word16], Mem479[ss:sp_376 - 2:word16], out ds_433, out Top_486)
	Mem493[ds_433:0x2A03:word16] = ax_339 & 0x00FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_267D:
	dsOut = ds_433
	return si
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_24FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_2688(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: cl
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp sp
fn0800_2688_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2688:
	ptr32 es_bx_11 = Mem7[ds:0x2E51:segptr32]
	word16 sp_110 = fp - 0x0012
	byte cl_108 = 0x08
	word16 dx_27 = Mem7[ds:0x2E53:word16]
	word16 bx_28 = (word16) es_bx_11 + ((DPB(DPB(ax, Mem7[es_bx_11 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem7[es_bx_11 + 0x0005:byte], 0), 0x00, 8))
	word16 wLoc04_272 = Mem30[ds:0x2E53:word16]
	word16 wLoc06_273 = Mem30[ds:0x2E51:word16] + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27B3:
	branch wLoc04_272 == dx_27 l0800_27C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C1:
	branch wLoc06_273 == bx_28 l0800_27C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C9:
	branch (wArg06 | wArg08) != 0x0000 l0800_27DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27D1:
	Mem55[ds:0x45A6:word16] = v22_54
	ui32 v23_v22_262 = SEQ(Mem55[ds:0x45A8:word16], Mem39[ds:0x45A6:word16]) + SEQ(wArg04, wArg02)
	Mem59[ds:0x45A8:word16] = SLICE(v23_v22_262, word16, 16)
	word16 v22_54 = (word16) v23_v22_262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27DF:
	return cl_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2688_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27C6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_27BE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26C3:
	word16 dx_149 = wLoc06_273
	segptr32 ptrLoc06_289 = SEQ(wLoc04_272, wLoc06_273 + 0x0002)
	segptr32 ptrLoc0E_359 = SEQ(wLoc04_272, wLoc06_273)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26D3:
	ptrLoc06_353 = SEQ(wLoc04_352, wLoc06_290 + 0x0001)
	word16 wLoc06_290 = SLICE(ptrLoc06_289, word16, 0)
	word16 wLoc04_352 = SLICE(ptrLoc06_289, word16, 16)
	branch Mem82[ptrLoc06_289:byte] != 0x00 l0800_26D3
	segptr32 ptrLoc06_292 = SEQ(wLoc04_352, wLoc06_290 + 0x0001)
	ptrLoc06_289 = ptrLoc06_353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_277D:
	word16 wLoc06_293 = SLICE(ptrLoc06_292, word16, 0)
	wLoc04_272 = SLICE(ptrLoc06_292, word16, 16) (alias)
	branch Mem89[ptrLoc06_292:byte] == 0x00 l0800_2789
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2789:
	word16 ax_100 = wLoc06_293 + 0x0001 - Mem96[ds:0x2E51:word16]
	Mem119[ptrLoc0E_359:byte] = (byte) fn0800_8C8A(ax_100, 0x08, 0x0000 - (ax_100 <u 0x0000), out cl_108, out dx_424)
	Mem128[ptrLoc0E_359 + 0x0001:byte] = (byte) (wLoc06_293 + 0x0001 - Mem119[ds:0x2E51:word16])
	wLoc06_273 = wLoc06_293 + 0x0001
	sp_110 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2786:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26E2:
	ptrLoc06_363 = SEQ(wLoc04_299, wLoc06_297 + 0x0001)
	word16 wLoc06_297 = SLICE(ptrLoc06_292, word16, 0)
	word16 wLoc04_299 = SLICE(ptrLoc06_292, word16, 16)
	branch Mem134[ptrLoc06_292:byte] != 0x00 l0800_26E2
	segptr32 ptrLoc06_300 = SEQ(wLoc04_299, wLoc06_297 + 0x0001)
	word16 wLoc06_326 = SLICE(ptrLoc06_300, word16, 0)
	word16 wLoc04_356 = SLICE(ptrLoc06_300, word16, 16)
	ptrLoc06_292 = ptrLoc06_363
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_26EE:
	word16 sp_156 = sp_110 - 2
	Mem157[ss:sp_156:word16] = ((int16) Mem134[ptrLoc06_300:byte] << 0x08) + DPB(DPB(dx_149, Mem134[ptrLoc06_300 + 0x0001:byte], 0), 0x00, 8)
	word16 ax_166 = ((int16) Mem157[ptrLoc06_300 + 0x0002:byte] << 0x08) + DPB(DPB((word16) ptrLoc06_300, Mem157[ptrLoc06_300 + 0x0003:byte], 0), 0x00, 8)
	dx_149 = ax_166
	sp_110 = sp_156 + 2
	word16 ax_172 = Mem157[ss:sp_156:word16] + (ax_166 <u 0x0000)
	byte bLoc12_323 = SLICE(ax_166, byte, 0)
	branch ax_172 < wArg08 l0800_2779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2727:
	branch ax_172 != wArg08 l0800_272E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2729:
	branch ax_166 <u wArg06 l0800_2779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_272E:
	ui32 dwArg02_315 = SEQ(wArg04, wArg02)
	int32 dx_ax_191 = (int32) SLICE(SEQ(ax_172, ax_166) + dwArg02_315, word16, 16)
	Mem208[ptrLoc06_300:byte] = (byte) fn0800_8C8A((word16) dx_ax_191, 0x08, SLICE(dx_ax_191, word16, 16), out cl_425, out dx_426)
	ui32 dwArg02_319 = SEQ(SLICE(dwArg02_315, word16, 16), SLICE(dwArg02_315, word16, 0))
	Mem217[ptrLoc06_300 + 0x0001:byte] = (byte) (int32) SLICE(SEQ(ax_172, ax_166) + dwArg02_319, word16, 16)
	ui32 dwArg02_322 = SEQ(SLICE(dwArg02_319, word16, 16), SLICE(dwArg02_319, word16, 0))
	int32 dx_ax_268 = SEQ(ax_172, ax_166) + dwArg02_322
	Mem239[ptrLoc06_300 + 0x0002:byte] = (byte) fn0800_8C8A((word16) dx_ax_268, 0x08, SLICE(dx_ax_268, word16, 16), out cl_427, out dx_149)
	Mem243[ptrLoc06_300 + 0x0003:byte] = bLoc12_323 + SLICE(dwArg02_322, byte, 0)
	wArg04 = SLICE(dwArg02_322, word16, 16) (alias)
	wArg02 = SLICE(dwArg02_322, word16, 0) (alias)
	sp_110 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2779:
	ptrLoc06_292 = SEQ(wLoc04_356, wLoc06_326 + 0x0004)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_283D(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_283D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_283D:
	selector es_320 = SLICE(ptrArg02, selector, 16)
	word16 di_24 = (word16) ptrArg02
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284D:
	branch cx_20 == 0x0000 l0800_284F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284D_1:
	di_24 = di_24 + 0x0001
	cx_20 = cx_20 - 0x0001
	branch Mem15[es_320:di_24:byte] == 0x00 l0800_284D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_284F:
	word16 cx_31 = ~cx_20
	word16 di_34 = di_24 - cx_31
	bool Z_44 = SLICE(cond(di_34), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2856:
	branch cx_31 == 0x0000 l0800_2858
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2856_2:
	Z_44 = SLICE(cond(0x3A - Mem15[es_320:di_34:byte]), bool, 2) (alias)
	di_34 = di_34 + 0x0001
	cx_31 = cx_31 - 0x0001
	branch Mem15[es_320:di_34:byte] == 0x3A l0800_2856
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2858:
	branch Z_44 l0800_2861
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_285A:
	di_34 = 0x0001
	es_320 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2861:
	word16 ax_117 = es_320
	branch (di_34 - 0x0001 | es_320) == 0x0000 l0800_288E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2868:
	selector es_111 = SLICE(ptrArg02, selector, 16)
	word16 di_327 = (word16) ptrArg02
	word16 cx_79 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2870:
	branch cx_79 == 0x0000 l0800_2872
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2870_1:
	di_327 = di_327 + 0x0001
	cx_79 = cx_79 - 0x0001
	branch Mem15[es_111:di_327:byte] == 0x00 l0800_2870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2872:
	word16 cx_102 = ~cx_79
	word16 di_101 = di_327 - cx_102
	bool Z_103 = SLICE(cond(di_101), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2879:
	branch cx_102 == 0x0000 l0800_287B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2879_2:
	Z_103 = SLICE(cond(0x3A - Mem15[es_111:di_101:byte]), bool, 2) (alias)
	di_101 = di_101 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem15[es_111:di_101:byte] == 0x3A l0800_2879
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_287B:
	branch Z_103 l0800_2884
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_287D:
	di_101 = 0x0001
	es_111 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2884:
	ax_117 = es_111
	ptrArg02 = SEQ(es_111, di_101)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_288E:
	ptr32 es_bx_145 = Mem144[ds:0x2E51:segptr32]
	word16 dx_172 = Mem144[ds:0x2E53:word16]
	word16 bx_173 = (word16) es_bx_145 + ((DPB(DPB(ax_117, Mem144[es_bx_145 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem144[es_bx_145 + 0x0005:byte], 0), 0x00, 8))
	word16 wLoc08_364 = Mem177[ds:0x2E53:word16]
	word16 wLoc0A_365 = Mem177[ds:0x2E51:word16] + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2917:
	branch wLoc08_364 != dx_172 l0800_28C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2922:
	branch wLoc0A_365 != bx_173 l0800_28C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28C2:
	segptr32 ptrLoc0A_385 = SEQ(wLoc08_364, wLoc0A_365)
	word16 si_197 = wLoc0A_365 + 0x0002
	selector es_343 = SLICE(ptrArg02, selector, 16)
	word16 di_213 = (word16) ptrArg02
	word16 ax_206 = 0x0000
	word16 cx_209 = 0xFFFF
	wLoc08_364 = SLICE(ptrLoc0A_385, word16, 16) (alias)
	word16 wLoc0A_389 = SLICE(ptrLoc0A_385, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D4:
	ax_206 = DPB(ax_206, 0x00, 0) (alias)
	ax_206 = DPB(ax_206, 0x00, 0) (alias)
	branch cx_209 == 0x0000 l0800_28D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D4_1:
	di_213 = di_213 + 0x0001
	cx_209 = cx_209 - 0x0001
	branch Mem203[es_343:di_213:byte] == 0x00 l0800_28D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28D6:
	word16 cx_220 = ~cx_209
	word16 di_222 = di_213 - cx_220
	bool Z_234 = SLICE(cond(di_222), bool, 2)
	di_229 = di_222
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DA:
	word16 di_229
	branch cx_220 == 0x0000 l0800_28DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DA_2:
	Z_234 = SLICE(cond(Mem203[wLoc08_364:si_527:byte] - Mem203[es_343:di_528:byte]), bool, 2) (alias)
	si_197 = si_527 + 0x0001
	di_229 = di_528 + 0x0001
	cx_220 = cx_220 - 0x0001
	si_527 = si_197
	di_528 = di_229
	branch Mem203[wLoc08_364:si_527:byte] != Mem203[es_343:di_528:byte] l0800_28DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DC:
	branch Z_234 l0800_28E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28DE:
	word16 ax_242 = 0x0000 - (di_222 <u 0x0000)
	ax_206 = ax_242 - 0xFFFF - (ax_242 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28E3:
	branch ax_206 != 0x0000 l0800_28F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28F4:
	wLoc0A_365 = Mem203[ds:0x2E51:word16] + (((int16) Mem203[ptrLoc0A_385:byte] << 0x08) + DPB(DPB(wLoc0A_365, Mem203[ptrLoc0A_385 + 0x0001:byte], 0), 0x00, 8))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_28E8:
	dxOut = wLoc08_364
	return wLoc0A_389
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2927:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_283D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2931(word16 wArg02, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0006:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_2931_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2931:
	selector es_236 = SLICE(ptrArg06, selector, 16)
	word16 di_17 = (word16) ptrArg06 + 0x0002
	word16 cx_21 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2941:
	branch cx_21 == 0x0000 l0800_2943
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2941_1:
	di_17 = di_17 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch Mem14[es_236:di_17:byte] == 0x00 l0800_2941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2943:
	word16 cx_32 = ~cx_21
	word16 di_35 = di_17 - cx_32
	bool Z_45 = SLICE(cond(di_35), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2949:
	branch cx_32 == 0x0000 l0800_294B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2949_2:
	Z_45 = SLICE(cond(0x00 - Mem14[es_236:di_35:byte]), bool, 2) (alias)
	di_35 = di_35 + 0x0001
	cx_32 = cx_32 - 0x0001
	branch Mem14[es_236:di_35:byte] == 0x00 l0800_2949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_294B:
	branch Z_45 l0800_2954
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_294D:
	di_35 = 0x0001
	es_236 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2954:
	segptr32 ptrArg06_282 = SEQ(es_236, di_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29B4:
	word16 wArg06_283 = SLICE(ptrArg06_282, word16, 0)
	word16 wArg08_285 = SLICE(ptrArg06_282, word16, 16)
	branch Mem76[ptrArg06_282:byte] != 0x00 l0800_2960
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2960:
	segptr32 ptrArg06_297 = SEQ(wArg08_285, wArg06_283)
	word16 si_109 = wArg06_283
	selector es_262 = SLICE(ptrArg02, selector, 16)
	word16 di_104 = (word16) ptrArg02
	word16 ax_128 = 0x0000
	word16 cx_100 = 0xFFFF
	word16 wArg08_300 = SLICE(ptrArg06_297, word16, 16)
	word16 wArg06_301 = SLICE(ptrArg06_297, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_296F:
	ax_128 = DPB(ax_128, 0x00, 0) (alias)
	ax_128 = DPB(ax_128, 0x00, 0) (alias)
	branch cx_100 == 0x0000 l0800_2971
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_296F_1:
	di_104 = di_104 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch Mem86[es_262:di_104:byte] == 0x00 l0800_296F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2971:
	word16 cx_103 = ~cx_100
	word16 di_105 = di_104 - cx_103
	bool Z_117 = SLICE(cond(di_105), bool, 2)
	di_112 = di_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2975:
	word16 di_112
	branch cx_103 == 0x0000 l0800_2977
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2975_2:
	Z_117 = SLICE(cond(Mem86[wArg08_285:si_422:byte] - Mem86[es_262:di_423:byte]), bool, 2) (alias)
	si_109 = si_422 + 0x0001
	di_112 = di_423 + 0x0001
	cx_103 = cx_103 - 0x0001
	si_422 = si_109
	di_423 = di_112
	branch Mem86[wArg08_285:si_422:byte] != Mem86[es_262:di_423:byte] l0800_2975
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2977:
	branch Z_117 l0800_297E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2979:
	word16 ax_125 = 0x0000 - (di_105 <u 0x0000)
	ax_128 = ax_125 - 0xFFFF - (ax_125 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_297E:
	branch ax_128 != 0x0000 l0800_298D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_298D:
	selector es_196 = SLICE(ptrArg06_297, selector, 16)
	word16 di_168 = (word16) ptrArg06_297
	word16 cx_164 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2995:
	branch cx_164 == 0x0000 l0800_2997
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2995_1:
	di_168 = di_168 + 0x0001
	cx_164 = cx_164 - 0x0001
	branch Mem86[es_196:di_168:byte] == 0x00 l0800_2995
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2997:
	word16 cx_175 = ~cx_164
	word16 di_178 = di_168 - cx_175
	bool Z_188 = SLICE(cond(di_178), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299D:
	branch cx_175 == 0x0000 l0800_299F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299D_2:
	Z_188 = SLICE(cond(0x00 - Mem86[es_196:di_178:byte]), bool, 2) (alias)
	di_178 = di_178 + 0x0001
	cx_175 = cx_175 - 0x0001
	branch Mem86[es_196:di_178:byte] == 0x00 l0800_299D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_299F:
	branch Z_188 l0800_29A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29A1:
	di_178 = 0x0001
	es_196 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29A8:
	ptrArg06_282 = SEQ(es_196, di_178 + 0x0004)
	Mem76 = Mem216
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2983:
	dxOut = wArg08_300
	return wArg06_301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29BD:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2931_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_29C5(word16 cx, word16 dx, word16 si, word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bp di ds si sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_29C5_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29C5:
	word16 bp_40 = fp - 2
	word16 sp_13 = fp - 0x007E
	branch (Mem15[ds:0x45AE:word16] | Mem15[ds:0x45B0:word16]) != 0x0000 l0800_2A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29D6:
	branch (Mem15[ds:0x45AA:word16] | Mem15[ds:0x45AC:word16]) != 0x0000 l0800_2A07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29DF:
	word16 sp_44 = <invalid>
	cx = <invalid>
	sp_13 = sp_44 + 0x0004
	branch fn0800_2DE2(cx, dx, si, di, ds, SEQ(ds, 0x4541), out ch_1254, out bp_40, out si, out di, out ds) != 0x0000 l0800_29F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29F6:
	word16 dx_57 = Mem31[ds:0x2E51:word16]
	Mem60[ds:0x45B0:word16] = Mem31[ds:0x2E53:word16]
	Mem61[ds:0x45AE:word16] = dx_57 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A07:
	word16 sp_63 = sp_13 - 2
	Mem66[ss:sp_63:word16] = ds
	Mem69[ss:sp_63 - 2:word16] = 0x4541
	Mem71[ss:sp_63 - 4:word16] = ss
	Mem75[ss:sp_63 - 6:word16] = bp_40 - 0x006A
	fn0800_3509(si, di, Mem75[ss:sp_63 - 6:word16], Mem75[ss:sp_63 - 4:selector], Mem75[ss:sp_63 - 2:word16], Mem75[ss:sp_63:word16], out bx_1253)
	Mem91[ss:sp_63:word16] = ds
	Mem94[ss:sp_63 - 2:word16] = 0x4541
	Mem96[ss:sp_63 - 4:word16] = ss
	Mem99[ss:sp_63 - 6:word16] = bp_40 - 0x0078
	fn0800_35A3(si, di, Mem99[ss:sp_63 - 6:word16], Mem99[ss:sp_63 - 4:selector], Mem99[ss:sp_63 - 2:word16], Mem99[ss:sp_63:word16])
	ptr32 es_bx_111 = Mem99[ds:0x2E51:segptr32]
	word16 bx_126 = (word16) es_bx_111 + ((DPB(DPB(ax_100, Mem99[es_bx_111 + 0x0004:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_102, Mem99[es_bx_111 + 0x0005:byte], 0), 0x00, 8))
	Mem128[ss:bp_40 - 0x0002:word16] = Mem99[ds:0x2E53:word16]
	Mem129[ss:bp_40 - 0x0004:word16] = bx_126
	word16 cx_174 = DPB(cx, 0x08, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C53:
	word16 dx_133 = Mem131[ds:0x45AE:word16]
	branch Mem131[ds:0x45B0:word16] == Mem131[ss:bp_40 - 0x0002:word16] l0800_2C62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C62:
	branch dx_133 == Mem131[ss:bp_40 - 0x0004:word16] l0800_2C6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C6A:
	Mem144[ds:0x45AC:word16] = 0x0000
	Mem145[ds:0x45AA:word16] = 0x0000
	Mem146[ds:0x45B0:word16] = 0x0000
	Mem147[ds:0x45AE:word16] = 0x0000
	word16 sp_150 = sp_13 - 2
	Mem151[ss:sp_150:word16] = Mem147[ss:bp_40 + 0x000E:word16]
	Mem154[ss:sp_150 - 2:word16] = Mem151[ss:bp_40 + 0x000C:word16]
	Mem157[ss:sp_150 - 4:word16] = Mem154[ss:bp_40 + 0x000A:word16]
	Mem160[ss:sp_150 - 6:word16] = Mem157[ss:bp_40 + 0x0008:word16]
	Mem163[ss:sp_150 - 8:word16] = Mem160[ss:bp_40 + 0x0006:word16]
	Mem166[ss:sp_150 - 10:word16] = Mem163[ss:bp_40 + 0x0004:word16]
	word16 ax_170 = fn0800_29C5(cx_174, 0x0000, si, di, ds, out bp_1255, out si_1256, out di_1257, out ds_1258)
	word16 sp_167 = <invalid>
	word16 di_182 = Mem166[ss:sp_167 + 0x000C:word16]
	word16 si_184 = Mem166[ss:sp_167 + 0x000E:word16]
	bpOut = Mem166[ss:bp_40:word16]
	siOut = si_184
	diOut = di_182
	dsOut = ds
	return ax_170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C67:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C5F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A4C:
	branch (Mem131[ds:0x45AA:word16] | Mem131[ds:0x45AC:word16]) != 0x0000 l0800_2A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A58:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B54:
	branch Mem196[Mem196[ds:0x45AA:segptr32]:byte] == 0x00 l0800_2B61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B61:
	ptr32 es_bx_202 = Mem196[ds:0x45AE:segptr32]
	word16 bx_217 = Mem196[ds:0x2E51:word16] + (((int16) Mem196[es_bx_202:byte] << 0x08) + DPB(DPB(dx_133, Mem196[es_bx_202 + 0x0001:byte], 0), 0x00, 8))
	Mem219[ds:0x45B0:word16] = Mem196[ds:0x2E53:word16]
	Mem220[ds:0x45AE:word16] = bx_217
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B5E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A5B:
	word16 sp_222 = sp_13 - 2
	Mem224[ss:sp_222:word16] = ss
	Mem228[ss:sp_222 - 2:word16] = bp_40 - 0x0078
	Mem231[ss:sp_222 - 4:word16] = Mem228[ds:0x45AC:word16]
	Mem234[ss:sp_222 - 6:word16] = Mem231[ds:0x45AA:word16]
	dx_133 = DPB(dx_133, dl_237, 0) (alias)
	branch fn0800_4357(Mem234[ss:sp_222 - 6:segptr32], Mem234[ss:sp_222 - 2:segptr32]) != 0x0000 l0800_2A75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A75:
	ptr32 es_bx_248 = Mem234[ss:bp_40 + 0x0004:segptr32]
	word16 dx_250 = Mem234[ds:0x45AE:word16]
	Mem253[es_bx_248 + 0x0002:word16] = Mem234[ds:0x45B0:word16]
	Mem254[es_bx_248:word16] = dx_250
	ptr32 es_bx_255 = Mem254[ss:bp_40 + 0x0008:segptr32]
	word16 dx_257 = Mem254[ds:0x45AA:word16]
	Mem260[es_bx_255 + 0x0002:word16] = Mem254[ds:0x45AC:word16]
	Mem261[es_bx_255:word16] = dx_257
	ptr32 es_di_262 = Mem261[ds:0x45AE:segptr32]
	Mem267[ss:sp_222:word16] = SLICE(es_di_262, selector, 16)
	selector es_268 = Mem267[ss:bp_40 + 0x000E:selector]
	Mem270[ss:sp_222 - 2:word16] = (word16) es_di_262 + 0x0002
	word16 di_271 = Mem270[ss:bp_40 + 0x000C:word16]
	word16 di_1259 = Mem270[ss:sp_222 - 2:word16]
	selector es_276 = Mem270[ss:sp_222:selector]
	Mem279[ss:sp_222:word16] = es_268
	Mem281[ss:sp_222 - 2:word16] = di_271
	word16 cx_285 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB3:
	branch cx_285 == 0x0000 l0800_2AB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB3_1:
	di_1259 = di_1259 + 0x0001
	cx_285 = cx_285 - 0x0001
	branch Mem281[es_276:di_1259:byte] == 0x00 l0800_2AB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AB5:
	word16 di_307 = Mem281[ss:sp_222 - 2:word16]
	selector es_311 = Mem281[ss:sp_222:selector]
	Mem316[ss:sp_222:word16] = ds
	word16 cx_296 = ~cx_285
	word16 cx_299 = cx_296 >>u 0x0001
	word16 si_301 = di_1259 - cx_296
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC4:
	branch cx_299 == 0x0000 l0800_2AC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC6:
	word16 cx_320 = cx_299 * 0x0002 + (cx_296 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC8:
	branch cx_320 == 0x0000 l0800_2ACA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ACA:
	ptr32 es_di_329 = Mem325[ss:bp_40 + 0x000C:segptr32]
	selector ds_326 = Mem325[ss:sp_222:selector]
	Mem332[ss:sp_222:word16] = SLICE(es_di_329, selector, 16)
	selector es_333 = Mem332[ds_326:0x45AC:selector]
	Mem336[ss:sp_222 - 2:word16] = (word16) es_di_329
	word16 di_1260 = Mem336[ds_326:0x45AA:word16]
	word16 cx_341 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADD:
	branch cx_341 == 0x0000 l0800_2ADF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADD_1:
	di_1260 = di_1260 + 0x0001
	cx_341 = cx_341 - 0x0001
	branch Mem336[es_333:di_1260:byte] == 0x00 l0800_2ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ADF:
	word16 cx_352 = ~cx_341
	word16 di_1261 = Mem336[ss:sp_222 - 2:word16]
	selector es_365 = Mem336[ss:sp_222:selector]
	Mem372[ss:sp_222:word16] = cx_352
	word16 si_355 = di_1260 - cx_352
	word16 cx_373 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF3:
	branch cx_373 == 0x0000 l0800_2AF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF3_2:
	di_1261 = di_1261 + 0x0001
	cx_373 = cx_373 - 0x0001
	branch Mem372[es_365:di_1261:byte] == 0x00 l0800_2AF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF5:
	word16 di_387 = di_1261 - 0x0001
	word16 cx_394 = Mem372[ss:sp_222:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF7:
	branch cx_394 == 0x0000 l0800_2AF9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF9:
	ptr32 es_di_400 = Mem399[ds_326:0x45AA:segptr32]
	selector es_433 = SLICE(es_di_400, selector, 16)
	word16 di_1262 = (word16) es_di_400
	word16 cx_401 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B02:
	branch cx_401 == 0x0000 l0800_2B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B02_1:
	di_1262 = di_1262 + 0x0001
	cx_401 = cx_401 - 0x0001
	branch Mem399[es_433:di_1262:byte] == 0x00 l0800_2B02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B04:
	word16 cx_412 = ~cx_401
	word16 di_1263 = di_1262 - cx_412
	bool Z_425 = SLICE(cond(di_1263), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0A:
	branch cx_412 == 0x0000 l0800_2B0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0A_2:
	Z_425 = SLICE(cond(0x00 - Mem399[es_433:di_1263:byte]), bool, 2) (alias)
	di_1263 = di_1263 + 0x0001
	cx_412 = cx_412 - 0x0001
	branch Mem399[es_433:di_1263:byte] == 0x00 l0800_2B0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0C:
	branch Z_425 l0800_2B15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B0E:
	di_1263 = 0x0001
	es_433 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B15:
	Mem447[ds_326:0x45AC:word16] = es_433
	Mem448[ds_326:0x45AA:word16] = di_1263 + 0x0004
	word16 di_462 = Mem448[ss:sp_222 + 2:word16]
	word16 si_464 = Mem448[ss:sp_222 + 4:word16]
	bpOut = Mem448[ss:bp_40:word16]
	siOut = si_464
	diOut = di_462
	dsOut = ds_326
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AF7_3:
	Mem479[es_365:di_387:byte] = Mem399[es_333:si_355:byte]
	si_355 = si_355 + 0x0001
	di_387 = di_387 + 0x0001
	cx_394 = cx_394 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC8_1:
	Mem488[es_311:di_307:byte] = Mem325[es_276:si_301:byte]
	si_301 = si_301 + 0x0001
	di_307 = di_307 + 0x0001
	cx_320 = cx_320 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2AC4_2:
	Mem498[es_311:di_307:word16] = Mem494[es_276:si_301:word16]
	si_301 = si_301 + 0x0002
	di_307 = di_307 + 0x0002
	cx_299 = cx_299 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A72:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B2B:
	ptr32 es_di_502 = Mem234[ds:0x45AA:segptr32]
	selector es_538 = SLICE(es_di_502, selector, 16)
	word16 di_1264 = (word16) es_di_502
	word16 cx_506 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B34:
	branch cx_506 == 0x0000 l0800_2B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B34_1:
	di_1264 = di_1264 + 0x0001
	cx_506 = cx_506 - 0x0001
	branch Mem234[es_538:di_1264:byte] == 0x00 l0800_2B34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B36:
	word16 cx_517 = ~cx_506
	word16 di_1265 = di_1264 - cx_517
	bool Z_530 = SLICE(cond(di_1265), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3C:
	branch cx_517 == 0x0000 l0800_2B3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3C_2:
	Z_530 = SLICE(cond(0x00 - Mem234[es_538:di_1265:byte]), bool, 2) (alias)
	di_1265 = di_1265 + 0x0001
	cx_517 = cx_517 - 0x0001
	branch Mem234[es_538:di_1265:byte] == 0x00 l0800_2B3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B3E:
	branch Z_530 l0800_2B47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B40:
	di_1265 = 0x0001
	es_538 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B47:
	Mem552[ds:0x45AC:word16] = es_538
	Mem553[ds:0x45AA:word16] = di_1265 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2A55:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C12:
	word16 dx_557 = Mem555[ds:0x45AE:word16]
	branch Mem555[ds:0x45B0:word16] == Mem555[ss:bp_40 - 0x0002:word16] l0800_2C21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C21:
	branch dx_557 == Mem555[ss:bp_40 - 0x0004:word16] l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C26:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C1E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B8A:
	branch Mem555[ds:0x2A1B:word16] == 0x0000 l0800_2BBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B91:
	word16 sp_570 = sp_13 - 2
	Mem572[ss:sp_570:word16] = ss
	selector es_573 = Mem572[ss:sp_570:selector]
	word16 di_576 = bp_40 - 0x006A
	word16 cx_580 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9B:
	branch cx_580 == 0x0000 l0800_2B9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9B_1:
	di_576 = di_1266 + 0x0001
	cx_580 = cx_580 - 0x0001
	di_1266 = di_576
	branch Mem572[es_573:di_1266:byte] == 0x00 l0800_2B9B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2B9D:
	Mem598[ss:sp_570:word16] = ~cx_580 - 0x0001
	Mem600[ss:sp_570 - 2:word16] = ss
	Mem605[ss:sp_570 - 4:word16] = bp_40 - 0x006A
	word16 ax_608 = Mem605[ds:0x45AE:word16]
	Mem613[ss:sp_570 - 6:word16] = Mem605[ds:0x45B0:word16]
	Mem615[ss:sp_570 - 8:word16] = ax_608 + 0x0002
	branch fn0800_BFE6(Mem615[ss:sp_570 - 8:segptr32], Mem615[ss:sp_570 - 4:segptr32], Mem615[ss:sp_570:word16]) == 0x0000 l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BBB:
	branch Mem632[ds:0x2A1B:word16] != 0x0000 l0800_2BEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BC2:
	si = Mem632[ds:0x45AE:word16] + 0x0002
	word16 sp_638 = sp_13 - 2
	Mem640[ss:sp_638:word16] = ds
	selector ds_641 = Mem640[ds:0x45B0:selector]
	Mem643[ss:sp_638 - 2:word16] = ss
	selector es_644 = Mem643[ss:sp_638 - 2:selector]
	word16 di_1267 = bp_40 - 0x006A
	word16 ax_648 = 0x0000
	word16 cx_651 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BD8:
	ax_648 = DPB(ax_648, 0x00, 0) (alias)
	ax_648 = DPB(ax_648, 0x00, 0) (alias)
	branch cx_651 == 0x0000 l0800_2BDA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BD8_2:
	di_1267 = di_1267 + 0x0001
	cx_651 = cx_651 - 0x0001
	branch Mem643[es_644:di_1267:byte] == 0x00 l0800_2BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDA:
	word16 cx_662 = ~cx_651
	word16 di_664 = di_1267 - cx_662
	bool Z_676 = SLICE(cond(di_664), bool, 2)
	di_671 = di_664
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDE:
	word16 di_671
	branch cx_662 == 0x0000 l0800_2BE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BDE_3:
	Z_676 = SLICE(cond(Mem643[ds_641:si:byte] - Mem643[es_644:di_1269:byte]), bool, 2) (alias)
	si = si + 0x0001
	di_671 = di_1269 + 0x0001
	cx_662 = cx_662 - 0x0001
	di_1269 = di_671
	branch Mem643[ds_641:si:byte] != Mem643[es_644:di_1269:byte] l0800_2BDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE0:
	branch Z_676 l0800_2BE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE2:
	word16 ax_684 = 0x0000 - (di_664 <u 0x0000)
	ax_648 = ax_684 - 0xFFFF - (ax_684 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BE7:
	ds = Mem643[ss:sp_638:selector]
	branch ax_648 == 0x0000 l0800_2C29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C29:
	ptr32 es_di_716 = Mem715[ds:0x45AE:segptr32]
	selector es_754 = SLICE(es_di_716, selector, 16)
	word16 di_1270 = (word16) es_di_716 + 0x0002
	word16 cx_722 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C35:
	branch cx_722 == 0x0000 l0800_2C37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C35_1:
	di_1270 = di_1270 + 0x0001
	cx_722 = cx_722 - 0x0001
	branch Mem715[es_754:di_1270:byte] == 0x00 l0800_2C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C37:
	cx_174 = ~cx_722
	word16 di_1271 = di_1270 - cx_174
	bool Z_746 = SLICE(cond(di_1271), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3D:
	branch cx_174 == 0x0000 l0800_2C3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3D_2:
	Z_746 = SLICE(cond(0x00 - Mem715[es_754:di_1271:byte]), bool, 2) (alias)
	di_1271 = di_1271 + 0x0001
	cx_174 = cx_174 - 0x0001
	branch Mem715[es_754:di_1271:byte] == 0x00 l0800_2C3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C3F:
	branch Z_746 l0800_2C48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C41:
	di_1271 = 0x0001
	es_754 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C48:
	word16 di_757 = di_1271 - 0x0001
	Mem768[ds:0x45AC:word16] = es_754
	Mem769[ds:0x45AA:word16] = di_757 + 0x0001
	di = di_757 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2BEC:
	ptr32 es_bx_772 = Mem771[ds:0x45AE:segptr32]
	word16 bx_794 = Mem771[ds:0x2E51:word16] + (((int16) Mem771[es_bx_772:byte] << 0x08) + DPB(DPB(dx_557, Mem771[es_bx_772 + 0x0001:byte], 0), 0x00, 8))
	Mem796[ds:0x45B0:word16] = Mem771[ds:0x2E53:word16]
	Mem797[ds:0x45AE:word16] = bx_794
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_29EE:
	word16 di_801 = Mem31[ss:sp_44 + 0x0004:word16]
	word16 si_803 = Mem31[ss:sp_44 + 0x0006:word16]
	bpOut = Mem31[ss:bp_40:word16]
	siOut = si_803
	diOut = di_801
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_29C5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2C9A(selector ds, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: si sp
fn0800_2C9A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2C9A:
	word16 cx_12 = 0x0000
	word16 si_11 = 0x2A29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CA0:
	word16 dx_13 = cx_12
	word16 bx_14 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CBD:
	branch bx_14 != 0x0000 l0800_2CA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CA7:
	word16 ax_25
	branch (dx_13 & 0x0001) == 0x0000 l0800_2CB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CB6:
	ax_25 = dx_13 >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CAD:
	ax_25 = dx_13 >>u 0x0001 ^ 0xA001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CBA:
	dx_13 = ax_25
	bx_14 = bx_14 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CC1:
	Mem43[ds:si_11:word16] = dx_13
	si_11 = si_11 + 0x0002
	cx_12 = cx_12 + 0x0001
	branch cx_12 <u 0x0100 l0800_2CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CCD:
	dxOut = dx_13
	bxOut = bx_14
	return cx_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2C9A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, byte bArg08, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..7]
// LiveOut: ax cl dx
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp si sp
fn0800_2CCF_entry:
	byte bArg09_72 = SLICE(wArg08, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CCF:
	word16 si_12 = wArg06
	byte bArg09_74 = SEQ(bArg09_72, bArg08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CFD:
	byte bArg09_58 = SLICE(bArg09_74, byte, 8)
	word16 wArg02_61 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_67 = SLICE(ptrArg02, word16, 16)
	si_12 = si_12 - 0x0001
	branch si_12 != 0x0000 l0800_2CD8
	word16 wArg08_63 = SEQ(bArg09_58, bArg08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2CD8:
	word16 wArg08_59 = SEQ(bArg09_58, bArg08)
	word16 ax_39 = Mem22[ds:((DPB(DPB(si_12, bArg08 ^ Mem22[ptrArg02:byte], 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ wArg08_59 >>u 0x08
	cl = 0x08
	dx = wArg08_59 >>u 0x08
	bArg08 = SLICE(ax_39, byte, 0) (alias)
	bArg09_74 = SLICE(ax_39, byte, 8) (alias)
	ptrArg02 = SEQ(wArg04_67, wArg02_61 + 0x0001)
	Mem22 = Mem43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D04:
	clOut = cl
	dxOut = dx
	return wArg08_63
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2CCF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2D0A(ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_2D0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D0A:
	word16 bp_22
	word16 dx_27
	selector ds_114
	word16 ax_21 = fn0800_4311(out dx_27, out bp_22, out si_239, out di_25, out ds_114)
	Mem38[ss:bp_22 - 0x0002:word16] = dx_27
	Mem39[ss:bp_22 - 0x0004:word16] = ax_21
	word16 sp_30 = <invalid>
	Mem42[ss:sp_30 + 0x0002:word16] = Mem39[ss:bp_22 + 0x0006:word16]
	Mem45[ss:sp_30:word16] = Mem42[ss:bp_22 + 0x0004:word16]
	word16 dx_49
	word16 ax_46 = fn0800_AD2F(ds_114, Mem45[ss:sp_30:segptr32], out dx_49)
	Mem56[ss:bp_22 - 0x000A:word16] = dx_49
	Mem57[ss:bp_22 - 0x000C:word16] = ax_46
	word16 si_152 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D8F:
	branch (Mem63[ss:bp_22 + 0x0008:word16] | Mem63[ss:bp_22 + 0x000A:word16]) != 0x0000 l0800_2D3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D3A:
	word16 ax_78
	word16 dx_77
	branch Mem63[ss:bp_22 + 0x000A:word16] <u 0x0000 l0800_2D4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D40:
	branch Mem63[ss:bp_22 + 0x000A:word16] >u 0x0000 l0800_2D48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D42:
	branch Mem63[ss:bp_22 + 0x0008:word16] <=u 0xFFF0 l0800_2D4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D4F:
	dx_77 = Mem63[ss:bp_22 + 0x000A:word16]
	ax_78 = Mem63[ss:bp_22 + 0x0008:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D48:
	dx_77 = 0x0000
	ax_78 = 0xFFF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D55:
	Mem88[ss:bp_22 - 0x0006:word16] = dx_77
	Mem90[ss:bp_22 - 0x0008:word16] = ax_78
	Mem97[ss:sp_30 + 0x0002:word16] = Mem90[ss:bp_22 + 0x0006:word16]
	Mem100[ss:sp_30:word16] = Mem97[ss:bp_22 + 0x0004:word16]
	Mem103[ss:sp_30 - 0x0002:word16] = Mem100[ss:bp_22 - 0x0006:word16]
	Mem105[ss:sp_30 - 0x0004:word16] = ax_78
	Mem108[ss:sp_30 - 0x0006:word16] = Mem105[ss:bp_22 - 0x0002:word16]
	Mem111[ss:sp_30 - 0x0008:word16] = Mem108[ss:bp_22 - 0x0004:word16]
	word16 si_123
	fn0800_4110(ds_114, Mem111[ss:sp_30 - 0x0008:word16], Mem111[ss:sp_30 - 0x0006:word16], Mem111[ss:sp_30 - 0x0004:word16], Mem111[ss:sp_30 - 0x0002:word16], Mem111[ss:sp_30:word16], Mem111[ss:sp_30 + 0x0002:word16], out si_123, out di_245, out ds_114)
	Mem132[ss:sp_30 + 0x0002:word16] = si_123
	Mem135[ss:sp_30:word16] = Mem132[ss:bp_22 - 0x0008:word16]
	Mem138[ss:sp_30 - 0x0002:word16] = Mem135[ss:bp_22 - 0x0002:word16]
	Mem141[ss:sp_30 - 0x0004:word16] = Mem138[ss:bp_22 - 0x0004:word16]
	si_152 = fn0800_2CCF(ds_114, Mem141[ss:sp_30 - 0x0004:segptr32], Mem141[ss:sp_30:word16], Mem141[ss:sp_30 + 0x0002:byte], out cl_246, out dx_247)
	word16 ax_153 = Mem141[ss:bp_22 - 0x0006:word16]
	word16 dx_154 = Mem141[ss:bp_22 - 0x0008:word16]
	Mem156[ss:bp_22 + 0x0008:word16] = v29_155
	Mem141[ss:bp_22 + 0x0008:ui32] = SEQ(Mem156[ss:bp_22 + 0x000A:word16], Mem141[ss:bp_22 + 0x0008:word16])
	ui32 v30_v29_215 = Mem141[ss:bp_22 + 0x0008:ui32] - SEQ(ax_153, dx_154)
	Mem160[ss:bp_22 + 0x000A:word16] = SLICE(v30_v29_215, word16, 16)
	word16 v29_155 = (word16) v30_v29_215
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2D97:
	Mem166[ss:sp_30 + 0x0002:word16] = 0x0000
	Mem169[ss:sp_30:word16] = Mem166[ss:bp_22 - 0x000A:word16]
	Mem172[ss:sp_30 - 0x0002:word16] = Mem169[ss:bp_22 - 0x000C:word16]
	Mem175[ss:sp_30 - 0x0004:word16] = Mem172[ss:bp_22 + 0x0006:word16]
	Mem178[ss:sp_30 - 0x0006:word16] = Mem175[ss:bp_22 + 0x0004:word16]
	fn0800_ACB3(ds_114, Mem178[ss:sp_30 - 0x0006:word16], Mem178[ss:sp_30 - 0x0004:word16], Mem178[ss:sp_30 + 0x0002:word16], out cx_240, out dx_241, out bx_242)
	Mem192[ss:sp_30 + 0x0002:word16] = Mem178[ss:bp_22 - 0x0002:word16]
	Mem195[ss:sp_30:word16] = Mem192[ss:bp_22 - 0x0004:word16]
	selector ds_199
	word16 dx_200
	fn0800_4346(ds_114, Mem195[ss:sp_30 + 0x0002:word16], out cx_243, out dx_200, out bx_244, out ds_199)
	word16 bp_212 = Mem195[ss:bp_22:word16]
	dxOut = dx_200
	bpOut = bp_212
	dsOut = ds_199
	return si_152
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2D0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: ax Top
// Preserved: bp sp
fn0800_2DBF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DBF:
	Mem10[ds:0x4656:word16] = 0xFFFF
	Mem11[ds:0x4654:word16] = 0x0000
	Mem13[ds:0x4652:word16] = Mem11[ds:0x2A27:word16]
	Mem15[ds:0x4650:word16] = wArg02
	Mem17[ds:0x464E:word16] = wArg04
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2DBF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_2DE2(word16 cx, word16 dx, word16 si, word16 di, selector ds, word16 wArg02, ptr16 & chOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax bp cx di ds si sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_2DE2_entry:
	word16 wArg04_1524 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_1526 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DE2:
	word16 si_313
	si_313 = si
	branch Mem15[ds:0x4654:word16] != 0x0000 l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DF1:
	si_313 = si
	branch Mem15[ds:0x4652:word16] != Mem15[ds:0x4656:word16] l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2DFA:
	si_313 = si
	branch Mem15[ds:0x464E:word16] == 0x0000 l0800_2E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E01:
	si_313 = fn0800_3479(ds, fp - 0x0012, ss, 0x0000, out cx, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E11:
	word16 di_2159
	branch Mem49[ds:0x4654:word16] != 0x0000 l0800_2E1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E1B:
	Mem52[ds:0x4617:word16] = 0x0000
	word16 dx_72
	branch (fn0800_A77D(ds, 0x45B2, ds, 0x0065, SEQ(Mem52[ds:0x461D:word16], Mem57[ds:0x461B:word16]), out dx_72) | dx_72) != 0x0000 l0800_2E3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E3F:
	selector es_123 = ds
	word16 di_104 = 0x45B2
	word16 cx_101 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E49:
	branch cx_101 == 0x0000 l0800_2E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E49_1:
	di_104 = di_104 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch Mem84[ds:di_104:byte] == 0x00 l0800_2E49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E4B:
	word16 cx_102 = ~cx_101
	word16 di_105 = di_104 - cx_102
	bool Z_115 = SLICE(cond(di_105), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E52:
	branch cx_102 == 0x0000 l0800_2E54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E52_2:
	Z_115 = SLICE(cond(0x0D - Mem84[ds:di_105:byte]), bool, 2) (alias)
	di_105 = di_105 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem84[ds:di_105:byte] == 0x0D l0800_2E52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E54:
	branch Z_115 l0800_2E5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E56:
	di_105 = 0x0001
	es_123 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E5D:
	word16 di_130 = di_105 - 0x0001 | es_123
	branch di_130 == 0x0000 l0800_2E8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E64:
	selector es_151 = ds
	word16 di_153 = 0x45B2
	word16 cx_157 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E6E:
	branch cx_157 == 0x0000 l0800_2E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E6E_1:
	di_153 = di_153 + 0x0001
	cx_157 = cx_157 - 0x0001
	branch Mem150[ds:di_153:byte] == 0x00 l0800_2E6E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E70:
	cx_102 = ~cx_157
	word16 di_171 = di_153 - cx_102
	bool Z_181 = SLICE(cond(di_171), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E77:
	branch cx_102 == 0x0000 l0800_2E79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E77_2:
	Z_181 = SLICE(cond(0x0D - Mem150[ds:di_171:byte]), bool, 2) (alias)
	di_171 = di_171 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch Mem150[ds:di_171:byte] == 0x0D l0800_2E77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E79:
	branch Z_181 l0800_2E82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E7B:
	di_171 = 0x0001
	es_151 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E82:
	di_130 = di_171 - 0x0001
	Mem198[es_151:di_130:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E8B:
	branch (int16) Mem205[ds:0x45B2:byte] != 0x0000 l0800_2EA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EA5:
	di_2159 = 0x45B2
	word16 cx_234 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EAF:
	branch cx_234 == 0x0000 l0800_2EB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EAF_1:
	di_2159 = di_2159 + 0x0001
	cx_234 = cx_234 - 0x0001
	branch Mem227[ds:di_2159:byte] == 0x00 l0800_2EAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EB1:
	Mem250[ds:0x4619:word16] = ~cx_234 - 0x0001
	fn0800_0C6C(ds, SEQ(ds, 0x45B2))
	branch Mem259[ds:0x464E:word16] != 0x0000 l0800_2EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EFE:
	si_313 = fn0800_33CD(ds, fp - 0x0012, ss, 0x0000, 0x45B2, ds, out cx, out dx)
	Mem314[ds:0x4654:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ECA:
	selector es_317 = SLICE(ptrArg02, selector, 16)
	word16 di_324 = (word16) ptrArg02
	word16 di_2160 = 0x45B2
	word16 cx_330 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ED9:
	branch cx_330 == 0x0000 l0800_2EDB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2ED9_2:
	di_2160 = di_2160 + 0x0001
	cx_330 = cx_330 - 0x0001
	branch Mem325[ds:di_2160:byte] == 0x00 l0800_2ED9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EDB:
	word16 cx_341 = ~cx_330
	word16 cx_344 = cx_341 >>u 0x0001
	word16 si_346 = di_2160 - cx_341
	word16 di_352 = di_324
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEA:
	branch cx_344 == 0x0000 l0800_2EEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEC:
	word16 cx_365 = cx_344 * 0x0002 + (cx_341 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEE:
	branch cx_365 == 0x0000 l0800_2EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EF0:
	Mem374[ds:0x4617:word16] = Mem370[ds:0x4617:word16] + 0x0001
	chOut = <invalid>
	bpOut = bp
	siOut = si
	diOut = di
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEE_1:
	Mem389[es_317:di_352:byte] = Mem370[ds:si_346:byte]
	si_346 = si_346 + 0x0001
	di_352 = di_352 + 0x0001
	cx_365 = cx_365 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2EEA_3:
	Mem399[es_317:di_352:word16] = Mem395[ds:si_346:word16]
	si_346 = si_346 + 0x0002
	di_352 = di_352 + 0x0002
	cx_344 = cx_344 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E93:
	word16 ax_423 = fn0800_2DE2(cx_102, dx_72, si_313, di_130, ds, wArg02_1526, out ch_2144, out bp_2145, out si_2146, out di_2147, out ds_2148)
	chOut = <invalid>
	bpOut = bp
	siOut = si
	diOut = di
	dsOut = ds
	return ax_423
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E3C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F1B:
	word16 bp_484
	word16 cx_488
	word16 di_489
	word16 dx_490
	word16 si_491
	selector ds_492
	fn0800_A614(ds, SEQ(Mem68[ds:0x461D:word16], Mem479[ds:0x461B:word16]), out cx_488, out dx_490, out bp_484, out si_491, out di_489, out ds_492)
	Mem499[ds_492:0x4654:word16] = 0x0000
	Mem500[ds_492:0x461D:word16] = 0x0000
	Mem501[ds_492:0x461B:word16] = 0x0000
	Mem503[ds_492:0x4652:word16] = Mem501[ds_492:0x4652:word16] + 0x0001
	word16 sp_487 = <invalid>
	Mem507[ss:sp_487 + 0x0002:word16] = Mem503[ss:bp_484 + 0x0006:word16]
	Mem510[ss:sp_487:word16] = Mem507[ss:bp_484 + 0x0004:word16]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	word16 ax_512 = fn0800_2DE2(cx_488, dx_490, si_491, di_489, ds_492, stackArg2, out ch_2128, out bp_2129, out si_2130, out di_2131, out ds_2132)
	word16 di_520 = Mem510[ss:sp_487 + 0x0004:word16]
	word16 si_522 = Mem510[ss:sp_487 + 0x0006:word16]
	word16 bp_524 = Mem510[ss:bp_484:word16]
	chOut = <invalid>
	bpOut = bp_524
	siOut = si_522
	diOut = di_520
	dsOut = ds_492
	return ax_512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2E18:
	di_2159 = di
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F51:
	word16 ax_528 = Mem527[ds:0x4652:word16]
	branch ax_528 != Mem527[ds:0x4656:word16] l0800_2F5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F5D:
	branch ax_528 != Mem527[ds:0x269A:word16] l0800_2F6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F6B:
	ptr32 es_bx_536 = Mem527[ds:0x269C:segptr32]
	selector es_540 = SLICE(es_bx_536, selector, 16)
	word16 bx_538 = (word16) es_bx_536 + (Mem527[ds:0x4652:word16] << 0x0002)
	fn0800_BF9E(SEQ(ds, 0x45B2), SEQ(Mem527[es_540:bx_538 + 0x0002:word16], Mem545[es_540:bx_538:word16]))
	di_2159 = 0x45B2
	word16 cx_572 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F94:
	branch cx_572 == 0x0000 l0800_2F96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F94_1:
	di_2159 = di_2159 + 0x0001
	cx_572 = cx_572 - 0x0001
	branch Mem565[ds:di_2159:byte] == 0x00 l0800_2F94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F96:
	Mem588[ds:0x4619:word16] = ~cx_572 - 0x0001
	fn0800_0C6C(ds, SEQ(ds, 0x45B2))
	word16 ax_607 = Mem597[ds:0x4652:word16]
	Mem608[ds:0x4656:word16] = ax_607
	Mem609[ds:0x4617:word16] = 0x0000
	branch Mem609[Mem609[ds:(word16) Mem609[ds:0x269C:segptr32] + (ax_607 << 0x0002):segptr32]:byte] != 0x40 l0800_3007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3007:
	fn0800_335C(si_313, di_2159, ds, 0x45B2, ds)
	branch Mem624[ds:0x464E:word16] != 0x0000 l0800_3051
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3051:
	si_313 = fn0800_33CD(ds, fp - 0x0012, ss, 0x0000, 0x45B2, ds, out cx, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3019:
	selector es_678 = SLICE(ptrArg02, selector, 16)
	word16 di_685 = (word16) ptrArg02
	word16 di_2162 = 0x45B2
	word16 cx_691 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3028:
	branch cx_691 == 0x0000 l0800_302A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3028_1:
	di_2162 = di_2162 + 0x0001
	cx_691 = cx_691 - 0x0001
	branch Mem686[ds:di_2162:byte] == 0x00 l0800_3028
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_302A:
	word16 cx_702 = ~cx_691
	word16 cx_705 = cx_702 >>u 0x0001
	word16 si_707 = di_2162 - cx_702
	word16 di_713 = di_685
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3039:
	branch cx_705 == 0x0000 l0800_303B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303B:
	word16 cx_726 = cx_705 * 0x0002 + (cx_702 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303D:
	branch cx_726 == 0x0000 l0800_303F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303F:
	Mem735[ds:0x4617:word16] = Mem731[ds:0x4617:word16] + 0x0001
	Mem737[ds:0x4652:word16] = Mem735[ds:0x4652:word16] + 0x0001
	chOut = <invalid>
	bpOut = bp
	siOut = si
	diOut = di
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_303D_1:
	Mem752[es_678:di_713:byte] = Mem731[ds:si_707:byte]
	si_707 = si_707 + 0x0001
	di_713 = di_713 + 0x0001
	cx_726 = cx_726 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3039_2:
	Mem762[es_678:di_713:word16] = Mem758[ds:si_707:word16]
	si_707 = si_707 + 0x0002
	di_713 = di_713 + 0x0002
	cx_705 = cx_705 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2FC7:
	ptr32 es_bx_774 = Mem770[ds:0x269C:segptr32]
	selector es_778 = SLICE(es_bx_774, selector, 16)
	word16 bx_776 = (word16) es_bx_774 + (Mem770[ds:0x4652:word16] << 0x0002)
	word16 bp_788
	word16 cx_790
	word16 di_791
	selector ds_792
	word16 dx_793
	word16 si_795
	word16 ax_787 = fn0800_4234(si_313, di_2159, ds, Mem770[es_778:bx_776:word16] + 0x0001, Mem770[es_778:bx_776 + 0x0002:word16], 0x0A13, ds, out cx_790, out dx_793, out bp_788, out si_795, out di_791, out ds_792)
	Mem804[ds_792:0x461D:word16] = dx_793
	Mem805[ds_792:0x461B:word16] = ax_787
	Mem806[ds_792:0x4654:word16] = 0x0001
	word16 sp_796 = <invalid>
	Mem809[ss:sp_796 + 0x0006:word16] = Mem806[ss:bp_788 + 0x0006:word16]
	Mem812[ss:sp_796 + 0x0004:word16] = Mem809[ss:bp_788 + 0x0004:word16]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	word16 ax_814 = fn0800_2DE2(cx_790, dx_793, si_795, di_791, ds_792, stackArg2, out ch_2150, out bp_2151, out si_2152, out di_2153, out ds_2154)
	word16 di_822 = Mem812[ss:sp_796 + 0x0008:word16]
	word16 si_824 = Mem812[ss:sp_796 + 0x000A:word16]
	word16 bp_826 = Mem812[ss:bp_788:word16]
	chOut = <invalid>
	bpOut = bp_826
	siOut = si_824
	diOut = di_822
	dsOut = ds_792
	return ax_814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F63:
	chOut = <invalid>
	bpOut = bp
	siOut = si
	diOut = di
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_2F5A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3066:
	word16 si_1046 = si_313
	branch si_313 != 0x0000 l0800_306D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_306D:
	branch Mem843[ds:0x2A1B:word16] == 0x0000 l0800_309E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3074:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_309A:
	branch si_1046 != 0x0000 l0800_3076
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3076:
	branch fn0800_31B4(si_1046, di_2159, ds, 0x45B2, ds, out cx, out dx) == 0x0000 l0800_309E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3085:
	si_1046 = fn0800_33CD(ds, fp - 0x0012, ss, 0x0000, 0x45B2, ds, out cx, out dx)
	Mem914 = Mem892
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_309E:
	branch si_1046 == 0x0000 l0800_30F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30A2:
	word16 bx_915 = Mem913[ds:0x4619:word16]
	Mem916[ds:bx_915 + 0x45B2:byte] = 0x00
	branch Mem916[ds:0x4617:word16] != 0x0000 l0800_30C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30B2:
	branch Mem916[ds:0x4650:word16] == 0x0000 l0800_30C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30B9:
	fn0800_B2EF(cx, dx, bx_915, ds, 0x0A17, ds, out si_1046, out di_2159)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30C9:
	branch (Mem958[ds:0x461B:word16] | Mem958[ds:0x461D:word16]) == 0x0000 l0800_30DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30DA:
	Mem965[ds:0x4652:word16] = Mem958[ds:0x4652:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30D2:
	Mem967[ds:0x4654:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30DE:
	word16 ax_995 = fn0800_2DE2(cx, dx, si_1046, di_2159, ds, wArg02_1526, out ch_2134, out bp_2135, out si_2136, out di_2137, out ds_2138)
	chOut = <invalid>
	bpOut = bp
	siOut = si
	diOut = di
	dsOut = ds
	return ax_995
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_306A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_30F0:
	fn0800_3509(si_1046, di_2159, wArg02_1526, wArg04_1524, 0x45B2, ds, out bx_2133)
	word16 di_1071 = fp - 0x0012
	word16 cx_1083 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311B:
	branch cx_1083 == 0x0000 l0800_311D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311B_1:
	di_1071 = di_1071 + 0x0001
	cx_1083 = cx_1083 - 0x0001
	branch Mem1079[ss:di_1071:byte] == 0x00 l0800_311B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_311D:
	word16 cx_1094 = ~cx_1083
	word16 si_1097 = di_1071 - cx_1094
	word16 di_1103 = wArg02_1526
	word16 cx_1117 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3132:
	branch cx_1117 == 0x0000 l0800_3134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3132_2:
	di_1103 = di_1103 + 0x0001
	cx_1117 = cx_1117 - 0x0001
	branch Mem1116[wArg04_1524:di_1103:byte] == 0x00 l0800_3132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3134:
	word16 di_1131 = di_1103 - 0x0001
	word16 cx_1138 = cx_1094
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3136:
	branch cx_1138 == 0x0000 l0800_3138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3138:
	fn0800_0C6C(ds, SEQ(wArg04_1524, wArg02_1526))
	word16 si_1161 = wArg02_1526
	word16 di_1167 = 0x4348
	word16 ax_1171 = 0x0000
	word16 cx_1174 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315A:
	ax_1171 = DPB(ax_1171, 0x00, 0) (alias)
	ax_1171 = DPB(ax_1171, 0x00, 0) (alias)
	branch cx_1174 == 0x0000 l0800_315C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315A_1:
	di_1167 = di_1167 + 0x0001
	cx_1174 = cx_1174 - 0x0001
	branch Mem1169[ds:di_1167:byte] == 0x00 l0800_315A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_315C:
	word16 cx_1185 = ~cx_1174
	word16 di_1187 = di_1167 - cx_1185
	bool Z_1199 = SLICE(cond(di_1187), bool, 2)
	di_1194 = di_1187
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3160:
	word16 di_1194
	branch cx_1185 == 0x0000 l0800_3162
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3160_2:
	Z_1199 = SLICE(cond(Mem1169[wArg04_1524:si_1161:byte] - Mem1169[ds:di_1194:byte]), bool, 2) (alias)
	si_1161 = si_1161 + 0x0001
	di_1194 = di_1194 + 0x0001
	cx_1185 = cx_1185 - 0x0001
	branch Mem1169[wArg04_1524:si_1161:byte] != Mem1169[ds:di_1194:byte] l0800_3160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3162:
	branch Z_1199 l0800_3169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3164:
	word16 ax_1207 = 0x0000 - (di_1187 <u 0x0000)
	ax_1171 = ax_1207 - 0xFFFF - (ax_1207 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3169:
	branch ax_1171 == 0x0000 l0800_3195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_316E:
	si_1161 = wArg02_1526
	word16 di_1248 = 0x4477
	word16 ax_1252 = 0x0000
	word16 cx_1255 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3181:
	ax_1252 = DPB(ax_1252, 0x00, 0) (alias)
	ax_1252 = DPB(ax_1252, 0x00, 0) (alias)
	branch cx_1255 == 0x0000 l0800_3183
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3181_1:
	di_1248 = di_1248 + 0x0001
	cx_1255 = cx_1255 - 0x0001
	branch Mem1250[ds:di_1248:byte] == 0x00 l0800_3181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3183:
	cx_1185 = ~cx_1255
	word16 di_1268 = di_1248 - cx_1185
	bool Z_1280 = SLICE(cond(di_1268), bool, 2)
	di_1194 = di_1268
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3187:
	branch cx_1185 == 0x0000 l0800_3189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3187_2:
	Z_1280 = SLICE(cond(Mem1250[wArg04_1524:si_1161:byte] - Mem1250[ds:di_1194:byte]), bool, 2) (alias)
	si_1161 = si_1161 + 0x0001
	di_1194 = di_1194 + 0x0001
	cx_1185 = cx_1185 - 0x0001
	branch Mem1250[wArg04_1524:si_1161:byte] != Mem1250[ds:di_1194:byte] l0800_3187
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3189:
	branch Z_1280 l0800_3190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_318B:
	word16 ax_1288 = 0x0000 - (di_1268 <u 0x0000)
	ax_1252 = ax_1288 - 0xFFFF - (ax_1288 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3190:
	branch ax_1252 != 0x0000 l0800_31A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31A7:
	Mem1319[ds:0x4617:word16] = Mem1250[ds:0x4617:word16] + 0x0001
	chOut = <invalid>
	bpOut = bp
	siOut = si
	diOut = di
	dsOut = ds
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3195:
	word16 ax_1356 = fn0800_2DE2(cx_1185, dx_1154, si_1161, di_1194, ds, wArg02_1526, out ch_2139, out bp_2140, out si_2141, out di_2142, out ds_2143)
	chOut = <invalid>
	bpOut = bp
	siOut = si
	diOut = di
	dsOut = ds
	return ax_1356
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_2DE2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3136_3:
	Mem1419[wArg04_1524:di_1131:byte] = Mem1143[ss:si_1097:byte]
	si_1097 = si_1097 + 0x0001
	di_1131 = di_1131 + 0x0001
	cx_1138 = cx_1138 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_31B4(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_31B4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31B4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31BD:
	fn0800_3509(si, di, fp - 0x0084, ss, wArg02, wArg04, out bx_461)
	fn0800_35A3(si, di, fp - 0x0010, ss, wArg02, wArg04)
	word16 cx_87
	word16 dx_88
	branch fn0800_32CD(ds, fp - 0x001E, ss, fp - 0x0084, ss, Mem56[ds:(Mem56[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16], out cx_87, out dx_88) != 0x0000 l0800_323E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_323E:
	branch Mem84[ds:0x09AC:word16] != 0x0000 l0800_3253
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3253:
	word16 di_107 = fp - 0x0084
	word16 cx_111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_325E:
	branch cx_111 == 0x0000 l0800_3260
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_325E_1:
	di_107 = di_107 + 0x0001
	cx_111 = cx_111 - 0x0001
	branch Mem104[ss:di_107:byte] == 0x00 l0800_325E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3260:
	Mem133[ss:~cx_111 - 0x0002 + (fp - 0x0084):byte] = 0x00
	fn0800_3509(si, di_107, wArg02, wArg04, fp - 0x0084, ss, out bx_460)
	word16 di_172 = fp - 0x0010
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3298:
	branch cx_184 == 0x0000 l0800_329A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3298_2:
	di_172 = di_172 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem180[ss:di_172:byte] == 0x00 l0800_3298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_329A:
	word16 cx_195 = ~cx_184
	si = di_172 - cx_195
	word16 di_204 = wArg02
	word16 cx_218 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32AE:
	branch cx_218 == 0x0000 l0800_32B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32AE_3:
	di_204 = di_204 + 0x0001
	cx_218 = cx_218 - 0x0001
	branch Mem217[wArg04:di_204:byte] == 0x00 l0800_32AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B0:
	di = di_204 - 0x0001
	word16 cx_239 = cx_195
	Mem244 = Mem217
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B2:
	branch cx_239 == 0x0000 l0800_32B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B4:
	Mem246[ds:0x09AC:word16] = Mem244[ds:0x09AC:word16] - 0x0001
	word16 bx_247 = Mem246[ds:0x09AC:word16]
	Mem251[ds:(bx_247 << 0x0001) + 0x09AE:word16] = Mem246[ds:(bx_247 << 0x0001) + 0x09AE:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32B2_4:
	Mem258[wArg04:di:byte] = Mem244[ss:si:byte]
	si = si + 0x0001
	di = di + 0x0001
	cx_239 = cx_239 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3245:
	Mem262[ds:0x09AE:word16] = 0x0000
	cxOut = <invalid>
	dxOut = <invalid>
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_31FF:
	fn0800_BEA2(cx_87, dx_88, ds, SEQ(wArg04, wArg02), 0x0A27, ds, out di_459)
	Mem315[ds:0x09AC:word16] = Mem302[ds:0x09AC:word16] + 0x0001
	Mem319[ds:(Mem315[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16] = 0x0000
	cxOut = <invalid>
	dxOut = <invalid>
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_31B4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_32CD(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, selector psegArg08, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_32CD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32CD:
	word16 di_26 = wArg06
	word16 cx_30 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E7:
	branch cx_30 == 0x0000 l0800_32E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E7_1:
	di_26 = di_26 + 0x0001
	cx_30 = cx_30 - 0x0001
	branch Mem25[psegArg08:di_26:byte] == 0x00 l0800_32E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32E9:
	word16 cx_41 = ~cx_30
	word16 cx_213 = cx_41 >>u 0x0001
	word16 si_196 = di_26 - cx_41
	word16 di_199 = fp - 0x0068
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32F8:
	branch cx_213 == 0x0000 l0800_32FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FA:
	word16 cx_203 = cx_213 * 0x0002 + (cx_41 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FC:
	branch cx_203 == 0x0000 l0800_32FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FE:
	word16 di_367 = fp - 0x0068
	word16 si_186 = 0x0A32
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330C:
	branch cx_81 == 0x0000 l0800_330E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330C_1:
	di_367 = di_367 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem75[ss:di_367:byte] == 0x00 l0800_330C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_330E:
	word16 di_190 = di_367 - 0x0001
	word16 cx_194 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3312:
	branch cx_194 == 0x0000 l0800_3314
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3314:
	word16 dx_120
	word16 cx_119
	branch fn0800_33CD(ds, wArg02, wArg04, 0x0010, fp - 0x0068, ss, out cx_119, out dx_120) == 0x0000 l0800_334D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_334D:
	branch wArg0A != 0x0000 l0800_3336
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3336:
	branch fn0800_3479(ds, wArg02, wArg04, 0x0010, out cx_119, out dx_120) != 0x0000 l0800_3353
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_334A:
	wArg0A = wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3353:
	cxOut = cx_119
	dxOut = dx_120
	return wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_332D:
	cxOut = cx_119
	dxOut = dx_120
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_32CD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3312_2:
	Mem191[ss:di_190:byte] = Mem187[ds:si_186:byte]
	si_186 = si_186 + 0x0001
	di_190 = di_190 + 0x0001
	cx_194 = cx_194 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32FC_1:
	Mem200[ss:di_199:byte] = Mem71[psegArg08:si_196:byte]
	si_196 = si_196 + 0x0001
	di_199 = di_199 + 0x0001
	cx_203 = cx_203 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_32F8_2:
	Mem210[ss:di_199:word16] = Mem206[psegArg08:si_196:word16]
	si_196 = si_196 + 0x0002
	di_199 = di_199 + 0x0002
	cx_213 = cx_213 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_335C(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_335C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_335C:
	branch fn0800_33CD(ds, fp - 0x0010, ss, 0x0010, wArg02, wArg04, out cx_34, out dx_35) != 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_337D:
	fn0800_35A3(si, di, fp - 0x001E, ss, wArg02, wArg04)
	word16 si_100 = fp - 0x0010
	word16 di_346 = fp - 0x001E
	word16 ax_119 = 0x0000
	word16 cx_83 = 0xFFFF
	segptr32 ptrArg02_242 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A0:
	ax_119 = DPB(ax_119, 0x00, 0) (alias)
	ax_119 = DPB(ax_119, 0x00, 0) (alias)
	branch cx_83 == 0x0000 l0800_33A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A0_1:
	di_346 = di_346 + 0x0001
	cx_83 = cx_83 - 0x0001
	branch Mem76[ss:di_346:byte] == 0x00 l0800_33A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A2:
	word16 cx_107 = ~cx_83
	word16 di_96 = di_346 - cx_107
	bool Z_108 = SLICE(cond(di_96), bool, 2)
	di_103 = di_96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A6:
	word16 di_103
	branch cx_107 == 0x0000 l0800_33A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A6_2:
	Z_108 = SLICE(cond(Mem76[ss:si_347:byte] - Mem76[ss:di_348:byte]), bool, 2) (alias)
	si_100 = si_347 + 0x0001
	di_103 = di_348 + 0x0001
	cx_107 = cx_107 - 0x0001
	si_347 = si_100
	di_348 = di_103
	branch Mem76[ss:si_347:byte] != Mem76[ss:di_348:byte] l0800_33A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33A8:
	branch Z_108 l0800_33AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33AA:
	word16 ax_116 = 0x0000 - (di_96 <u 0x0000)
	ax_119 = ax_116 - 0xFFFF - (ax_116 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33AF:
	branch ax_119 != 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33B4:
	selector es_202 = SLICE(ptrArg02_242, selector, 16)
	word16 di_160 = (word16) ptrArg02_242
	word16 si_152 = 0x0A36
	word16 cx_153 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33BF:
	branch cx_153 == 0x0000 l0800_33C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33BF_1:
	di_160 = di_160 + 0x0001
	cx_153 = cx_153 - 0x0001
	branch Mem76[es_202:di_160:byte] == 0x00 l0800_33BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C1:
	word16 di_167 = di_160 - 0x0001
	word16 cx_169 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C5:
	branch cx_169 == 0x0000 l0800_33C7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C7:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_335C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33C5_2:
	Mem190[es_202:di_167:byte] = Mem176[ds:si_152:byte]
	si_152 = si_152 + 0x0001
	di_167 = di_167 + 0x0001
	cx_169 = cx_169 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_33CD(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_33CD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33CD:
	word16 cx_32
	word16 dx_33
	branch fn0800_A817(0x4623, ds, SEQ(wArg0A, wArg08), SEQ(ds, 0x4623), wArg06, out cx_32, out dx_33) == 0x0000 l0800_33F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33F1:
	word16 di_50 = 0x0A3B
	word16 si_51 = 0x4641
	word16 cx_52 = 0x0002
	word16 ax_53 = 0x0000
	bool Z_66 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33FE:
	branch cx_52 == 0x0000 l0800_3400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33FE_1:
	Z_66 = SLICE(cond(Mem47[ds:si_472:byte] - Mem47[ds:di_473:byte]), bool, 2) (alias)
	si_51 = si_472 + 0x0001
	di_50 = di_473 + 0x0001
	cx_52 = cx_52 - 0x0001
	si_472 = si_51
	di_473 = di_50
	branch Mem47[ds:si_472:byte] != Mem47[ds:di_473:byte] l0800_33FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3400:
	branch Z_66 l0800_3407
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3402:
	ax_53 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3407:
	branch ax_53 == 0x0000 l0800_3431
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_340B:
	word16 di_108 = 0x0A3D
	word16 si_105 = 0x4641
	word16 cx_103 = 0x0003
	word16 ax_100 = 0x0000
	bool Z_113 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3418:
	branch cx_103 == 0x0000 l0800_341A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3418_1:
	Z_113 = SLICE(cond(Mem94[ds:si_474:byte] - Mem94[ds:di_475:byte]), bool, 2) (alias)
	si_105 = si_474 + 0x0001
	di_108 = di_475 + 0x0001
	cx_103 = cx_103 - 0x0001
	si_474 = si_105
	di_475 = di_108
	branch Mem94[ds:si_474:byte] != Mem94[ds:di_475:byte] l0800_3418
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_341A:
	branch Z_113 l0800_3421
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_341C:
	ax_100 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3421:
	branch ax_100 == 0x0000 l0800_3431
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3425:
	branch ((int16) Mem94[ds:0x4638:byte] & wArg06) == wArg06 l0800_3444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3444:
	branch (wArg02 | wArg04) == 0x0000 l0800_3473
	segptr32 ptrArg02_328 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_344C:
	selector es_160 = SLICE(ptrArg02_328, selector, 16)
	word16 di_167 = (word16) ptrArg02_328
	word16 di_169 = 0x4641
	word16 cx_173 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345B:
	branch cx_173 == 0x0000 l0800_345D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345B_1:
	di_169 = di_169 + 0x0001
	cx_173 = cx_173 - 0x0001
	branch Mem168[ds:di_169:byte] == 0x00 l0800_345B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_345D:
	word16 cx_184 = ~cx_173
	word16 cx_187 = cx_184 >>u 0x0001
	word16 si_189 = di_169 - cx_184
	word16 di_195 = di_167
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346C:
	branch cx_187 == 0x0000 l0800_346E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346E:
	cx_103 = cx_187 * 0x0002 + (cx_184 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3470:
	branch cx_103 == 0x0000 l0800_3472
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3472:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3473:
	cxOut = cx_103
	dxOut = dx_33
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3470_1:
	Mem233[es_160:di_195:byte] = Mem213[ds:si_189:byte]
	si_189 = si_189 + 0x0001
	di_195 = di_195 + 0x0001
	cx_103 = cx_103 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_346C_2:
	Mem243[es_160:di_195:word16] = Mem239[ds:si_189:word16]
	si_189 = si_189 + 0x0002
	di_195 = di_195 + 0x0002
	cx_187 = cx_187 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3431:
	word16 cx_265
	word16 dx_266
	word16 ax_263 = fn0800_3479(ds, wArg02, wArg04, wArg06, out cx_265, out dx_266)
	cxOut = cx_265
	dxOut = dx_266
	return ax_263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_33EA:
	cxOut = cx_32
	dxOut = dx_33
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_33CD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3479(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_3479_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3479:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_347E:
	word16 cx_25
	branch fn0800_A84A(0x4623, ds, SEQ(ds, 0x4623), out cx_25, out dx_26) == 0x0000 l0800_3494
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3494:
	word16 di_43 = 0x0A3B
	word16 si_44 = 0x4641
	word16 cx_45 = 0x0002
	word16 ax_46 = 0x0000
	bool Z_59 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A1:
	branch cx_45 == 0x0000 l0800_34A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A1_1:
	Z_59 = SLICE(cond(Mem40[ds:si_419:byte] - Mem40[ds:di_420:byte]), bool, 2) (alias)
	si_44 = si_419 + 0x0001
	di_43 = di_420 + 0x0001
	cx_45 = cx_45 - 0x0001
	si_419 = si_44
	di_420 = di_43
	branch Mem40[ds:si_419:byte] != Mem40[ds:di_420:byte] l0800_34A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A3:
	branch Z_59 l0800_34AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34A5:
	ax_46 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34AA:
	branch ax_46 == 0x0000 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34AE:
	word16 di_101 = 0x0A3D
	word16 si_103 = 0x4641
	word16 cx_105 = 0x0003
	word16 ax_116 = 0x0000
	bool Z_106 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BB:
	branch cx_105 == 0x0000 l0800_34BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BB_1:
	Z_106 = SLICE(cond(Mem87[ds:si_421:byte] - Mem87[ds:di_422:byte]), bool, 2) (alias)
	si_103 = si_421 + 0x0001
	di_101 = di_422 + 0x0001
	cx_105 = cx_105 - 0x0001
	si_421 = si_103
	di_422 = di_101
	branch Mem87[ds:si_421:byte] != Mem87[ds:di_422:byte] l0800_34BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BD:
	branch Z_106 l0800_34C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34BF:
	ax_116 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34C4:
	branch ax_116 == 0x0000 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34C8:
	branch ((int16) Mem87[ds:0x4638:byte] & wArg06) != wArg06 l0800_347E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34D4:
	branch (wArg02 | wArg04) == 0x0000 l0800_3503
	segptr32 ptrArg02_284 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34DC:
	selector es_154 = SLICE(ptrArg02_284, selector, 16)
	word16 di_161 = (word16) ptrArg02_284
	word16 di_163 = 0x4641
	word16 cx_167 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34EB:
	branch cx_167 == 0x0000 l0800_34ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34EB_1:
	di_163 = di_163 + 0x0001
	cx_167 = cx_167 - 0x0001
	branch Mem162[ds:di_163:byte] == 0x00 l0800_34EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34ED:
	word16 cx_178 = ~cx_167
	word16 cx_181 = cx_178 >>u 0x0001
	word16 si_183 = di_163 - cx_178
	word16 di_189 = di_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FC:
	branch cx_181 == 0x0000 l0800_34FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FE:
	cx_105 = cx_181 * 0x0002 + (cx_178 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3500:
	branch cx_105 == 0x0000 l0800_3502
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3502:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3503:
	cxOut = cx_105
	dxOut = <invalid>
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3500_1:
	Mem227[es_154:di_189:byte] = Mem207[ds:si_183:byte]
	si_183 = si_183 + 0x0001
	di_189 = di_189 + 0x0001
	cx_105 = cx_105 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_34FC_2:
	Mem237[es_154:di_189:word16] = Mem233[ds:si_183:word16]
	si_183 = si_183 + 0x0002
	di_189 = di_189 + 0x0002
	cx_181 = cx_181 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_348D:
	cxOut = cx_25
	dxOut = <invalid>
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3479_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3509(word16 si, word16 di, word16 wArg02, selector psegArg04, word16 wArg06, word16 wArg08, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bx dx
// Trashed: SCZDO ax bx dx es Top
// Preserved: bp di ds si sp
fn0800_3509_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3509:
	word16 bx_44 = fn0800_BE3B(si, di, wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	word16 di_391 = fp - 0x0006
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354B:
	branch cx_81 == 0x0000 l0800_354D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354B_1:
	di_391 = di_391 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem77[ss:di_391:byte] == 0x00 l0800_354B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_354D:
	word16 cx_92 = ~cx_81
	word16 cx_115 = cx_92 >>u 0x0001
	word16 si_229 = di_391 - cx_92
	word16 di_103 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355C:
	branch cx_115 == 0x0000 l0800_355E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355E:
	word16 cx_117 = cx_115 * 0x0002 + (cx_92 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3560:
	branch cx_117 == 0x0000 l0800_3562
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3562:
	word16 di_138 = fp - 0x005A
	word16 cx_150 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357D:
	branch cx_150 == 0x0000 l0800_357F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357D_1:
	di_138 = di_138 + 0x0001
	cx_150 = cx_150 - 0x0001
	branch Mem146[ss:di_138:byte] == 0x00 l0800_357D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_357F:
	word16 cx_161 = ~cx_150
	word16 si_164 = di_138 - cx_161
	word16 di_170 = wArg02
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3594:
	branch cx_184 == 0x0000 l0800_3596
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3594_2:
	di_170 = di_170 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem183[psegArg04:di_170:byte] == 0x00 l0800_3594
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3596:
	word16 di_198 = di_170 - 0x0001
	word16 cx_205 = cx_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3598:
	branch cx_205 == 0x0000 l0800_359A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_359A:
	bxOut = bx_44
	return psegArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3509_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3598_3:
	Mem224[psegArg04:di_198:byte] = Mem210[ss:si_164:byte]
	si_164 = si_164 + 0x0001
	di_198 = di_198 + 0x0001
	cx_205 = cx_205 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3560_1:
	Mem233[psegArg04:di_103:byte] = Mem122[ss:si_229:byte]
	si_229 = si_229 + 0x0001
	di_103 = di_103 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_355C_2:
	Mem243[psegArg04:di_103:word16] = Mem239[ss:si_229:word16]
	si_229 = si_229 + 0x0002
	di_103 = di_103 + 0x0002
	cx_115 = cx_115 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_35A3(word16 si, word16 di, word16 wArg02, selector psegArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx dx es Top
// Preserved: bp di ds si sp
fn0800_35A3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35A3:
	fn0800_BE3B(si, di, wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	word16 di_390 = fp - 0x0010
	word16 cx_81 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E5:
	branch cx_81 == 0x0000 l0800_35E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E5_1:
	di_390 = di_390 + 0x0001
	cx_81 = cx_81 - 0x0001
	branch Mem77[ss:di_390:byte] == 0x00 l0800_35E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35E7:
	word16 cx_92 = ~cx_81
	word16 cx_115 = cx_92 >>u 0x0001
	word16 si_229 = di_390 - cx_92
	word16 di_103 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F6:
	branch cx_115 == 0x0000 l0800_35F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F8:
	word16 cx_117 = cx_115 * 0x0002 + (cx_92 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FA:
	branch cx_117 == 0x0000 l0800_35FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FC:
	word16 di_138 = fp - 0x0016
	word16 cx_150 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3617:
	branch cx_150 == 0x0000 l0800_3619
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3617_1:
	di_138 = di_138 + 0x0001
	cx_150 = cx_150 - 0x0001
	branch Mem146[ss:di_138:byte] == 0x00 l0800_3617
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3619:
	word16 cx_161 = ~cx_150
	word16 si_164 = di_138 - cx_161
	word16 di_170 = wArg02
	word16 cx_184 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_362E:
	branch cx_184 == 0x0000 l0800_3630
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_362E_2:
	di_170 = di_170 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch Mem183[psegArg04:di_170:byte] == 0x00 l0800_362E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3630:
	word16 di_198 = di_170 - 0x0001
	word16 cx_205 = cx_161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3632:
	branch cx_205 == 0x0000 l0800_3634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3634:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_35A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3632_3:
	Mem224[psegArg04:di_198:byte] = Mem210[ss:si_164:byte]
	si_164 = si_164 + 0x0001
	di_198 = di_198 + 0x0001
	cx_205 = cx_205 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35FA_1:
	Mem233[psegArg04:di_103:byte] = Mem122[ss:si_229:byte]
	si_229 = si_229 + 0x0001
	di_103 = di_103 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_35F6_2:
	Mem243[psegArg04:di_103:word16] = Mem239[ss:si_229:word16]
	si_229 = si_229 + 0x0002
	di_103 = di_103 + 0x0002
	cx_115 = cx_115 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_363D(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp sp
fn0800_363D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_363D:
	branch fn0800_A817(fp - 0x002E, ds, SEQ(wArg08, wArg06), SEQ(ss, fp - 0x002E), 0x0000, out cx_29, out dx_30) == 0x0000 l0800_3662
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3662:
	Mem47[ptrArg02:word16] = wLoc18
	Mem49[ptrArg02 + 0x0002:word16] = wLoc16
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_365B:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_363D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3678(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: cx ds dx si
// Trashed: SCZO ax bx cx ds dx es si Top
// Preserved: DP bp di sp
fn0800_3678_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3678:
	segptr32 ptrArg02_308 = SEQ(wArg04, wArg02)
	selector es_274 = SLICE(ptrArg02_308, selector, 16)
	word16 di_25 = (word16) ptrArg02_308
	word16 cx_21 = 0xFFFF
	segptr32 ptrLoc06_332 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3693:
	branch cx_21 == 0x0000 l0800_3695
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3693_1:
	di_25 = di_25 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch Mem16[es_274:di_25:byte] == 0x00 l0800_3693
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3695:
	word16 cx_32 = ~cx_21
	word16 di_35 = di_25 - cx_32
	bool Z_45 = SLICE(cond(di_35), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369C:
	branch cx_32 == 0x0000 l0800_369E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369C_2:
	Z_45 = SLICE(cond(0x5C - Mem16[es_274:di_35:byte]), bool, 2) (alias)
	di_35 = di_35 + 0x0001
	cx_32 = cx_32 - 0x0001
	branch Mem16[es_274:di_35:byte] == 0x5C l0800_369C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_369E:
	branch Z_45 l0800_36A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36A0:
	di_35 = 0x0001
	es_274 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36A7:
	word16 di_56 = di_35 - 0x0001
	branch (di_56 | es_274) == 0x0000 l0800_3732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36B6:
	branch es_274 != wArg04 l0800_36C6
	ptrLoc0A_321 = SEQ(es_274, di_56)
	segptr32 ptrLoc0A_321 = SEQ(es_274, di_56)
	word16 wLoc08_324 = SLICE(ptrLoc0A_321, word16, 16)
	word16 wLoc0A_327 = SLICE(ptrLoc0A_321, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36C1:
	branch di_56 == wArg02 l0800_36D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36C6:
	wLoc08_324 = SLICE(ptrLoc0A_321, word16, 16) (alias)
	wLoc0A_327 = SLICE(ptrLoc0A_321, word16, 0) (alias)
	branch Mem71[ptrLoc0A_321 - 0x0001:byte] != 0x3A l0800_3732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36D0:
	ptrLoc06_332 = SEQ(wLoc08_324, wLoc0A_327 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3732:
	selector es_139 = SLICE(ptrLoc06_332, selector, 16)
	word16 di_111 = (word16) ptrLoc06_332
	word16 cx_107 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373A:
	branch cx_107 == 0x0000 l0800_373C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373A_1:
	di_111 = di_111 + 0x0001
	cx_107 = cx_107 - 0x0001
	branch Mem102[es_139:di_111:byte] == 0x00 l0800_373A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_373C:
	word16 cx_118 = ~cx_107
	word16 di_121 = di_111 - cx_118
	bool Z_131 = SLICE(cond(di_121), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3743:
	branch cx_118 == 0x0000 l0800_3745
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3743_2:
	Z_131 = SLICE(cond(0x5C - Mem102[es_139:di_121:byte]), bool, 2) (alias)
	di_121 = di_121 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch Mem102[es_139:di_121:byte] == 0x5C l0800_3743
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3745:
	branch Z_131 l0800_374E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3747:
	di_121 = 0x0001
	es_139 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_374E:
	word16 di_142 = di_121 - 0x0001
	word16 dx_159 = di_142 | es_139
	branch dx_159 != 0x0000 l0800_36DF
	segptr32 ptrLoc0A_335 = SEQ(es_139, di_142)
	word16 wLoc08_361 = SLICE(ptrLoc0A_335, word16, 16)
	word16 wLoc0A_362 = SLICE(ptrLoc0A_335, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36DF:
	Mem166[ptrLoc0A_335:byte] = 0x00
	word16 ax_195 = fn0800_33CD(ds, 0x0000, 0x0000, 0x0010, wArg02, wArg04, out cx_488, out dx_489)
	branch ax_195 == 0x0000 l0800_371E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_36FE:
	branch fn0800_8E52(ax_195, ds, SEQ(wArg04, wArg02)) == 0x0000 l0800_371E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_370E:
	fn0800_0D24(ds, 0x000E, SEQ(wArg04, wArg02), out cx_490, out dx_491, out bx_492, out si, out di_493, out es_494, out ds, out Top_495)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_371E:
	Mem259[ptrLoc0A_335:byte] = 0x5C
	ptrLoc06_332 = SEQ(wLoc08_361, wLoc0A_362 + 0x0001)
	Mem102 = Mem265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_375D:
	dxOut = dx_159
	siOut = si
	dsOut = ds
	return cx_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3678_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_3764(word16 si, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D di ds si sp
fn0800_3764_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3764:
	branch Mem10[ds:0x427E:byte] == 0x00 l0800_3796
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3796:
	fn0800_3509(si, di, 0x44DC, ds, 0x4541, ds, out bx_25)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_376D:
	word16 di_252 = 0x427E
	word16 cx_49 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377C:
	branch cx_49 == 0x0000 l0800_377E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377C_1:
	di_252 = di_252 + 0x0001
	cx_49 = cx_49 - 0x0001
	branch Mem44[ds:di_252:byte] == 0x00 l0800_377C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_377E:
	word16 cx_60 = ~cx_49
	word16 cx_153 = cx_60 >>u 0x0001
	word16 si_136 = di_252 - cx_60
	word16 di_139 = 0x44DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378D:
	branch cx_153 == 0x0000 l0800_378F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378F:
	word16 cx_143 = cx_153 * 0x0002 + (cx_60 >>u 0x0001 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3791:
	branch cx_143 == 0x0000 l0800_3793
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3793:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37A6:
	word16 di_108 = 0x44DC
	word16 si_100 = 0x0A40
	word16 cx_101 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B3:
	branch cx_101 == 0x0000 l0800_37B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B3_1:
	di_108 = di_108 + 0x0001
	cx_101 = cx_101 - 0x0001
	branch Mem96[ds:di_108:byte] == 0x00 l0800_37B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B5:
	word16 di_115 = di_108 - 0x0001
	word16 cx_117 = 0x000D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B9:
	branch cx_117 == 0x0000 l0800_37BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37BB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3764_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37B9_2:
	Mem131[ds:di_115:byte] = Mem121[ds:si_100:byte]
	si_100 = si_100 + 0x0001
	di_115 = di_115 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3791_1:
	Mem140[ds:di_139:byte] = Mem89[ds:si_136:byte]
	si_136 = si_136 + 0x0001
	di_139 = di_139 + 0x0001
	cx_143 = cx_143 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_378D_2:
	Mem150[ds:di_139:word16] = Mem146[ds:si_136:word16]
	si_136 = si_136 + 0x0002
	di_139 = di_139 + 0x0002
	cx_153 = cx_153 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_37BE(word16 cx, word16 dx, selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax bx di es si Top
// Preserved: bp sp
fn0800_37BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37BE:
	word16 di_36
	word16 si_38 = fn0800_BEA2(cx, dx, ds, SEQ(wArg04, wArg02), 0x0A2B, ds, out di_36)
	diOut = di_36
	return si_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_37BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_37DF(word16 si, word16 di, selector ds, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: di ds si sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_37DF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_37DF:
	fn0800_3509(si, di, fp - 0x006C, ss, 0x44DC, ds, out bx_326)
	selector es_44 = ss
	word16 di_337 = fp - 0x006C
	word16 cx_50 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3805:
	branch cx_50 == 0x0000 l0800_3807
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3805_1:
	di_337 = di_337 + 0x0001
	cx_50 = cx_50 - 0x0001
	branch Mem43[ss:di_337:byte] == 0x00 l0800_3805
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3807:
	word16 cx_61 = ~cx_50
	word16 di_338 = di_337 - cx_61
	bool Z_74 = SLICE(cond(di_338), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380D:
	branch cx_61 == 0x0000 l0800_380F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380D_2:
	Z_74 = SLICE(cond(0x00 - Mem43[ss:di_338:byte]), bool, 2) (alias)
	di_338 = di_338 + 0x0001
	cx_61 = cx_61 - 0x0001
	branch Mem43[ss:di_338:byte] == 0x00 l0800_380D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_380F:
	branch Z_74 l0800_3818
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3811:
	di_338 = 0x0001
	es_44 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3818:
	word16 di_85 = di_338 - 0x0001
	fn0800_35A3(si, di_85, di_85, es_44, 0x4541, ds)
	word16 dx_147
	word16 si_149
	word16 bp_142
	selector ds_146
	word16 ax_141 = fn0800_AA7E(si, di_85, ds, fp - 0x006C, ss, 0x0A4D, ds, out cx_144, out dx_147, out bp_142, out si_149, out di_327, out ds_146)
	Mem156[ss:bp_142 - 0x0002:word16] = dx_147
	Mem157[ss:bp_142 - 0x0004:word16] = ax_141
	word16 sp_150 = <invalid>
	word16 sp_155 = sp_150 + 0x0008
	branch (ax_141 | dx_147) == 0x0000 l0800_3863
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_383D:
	Mem164[ss:sp_150 + 0x0006:word16] = Mem157[ss:bp_142 - 0x0002:word16]
	Mem167[ss:sp_150 + 0x0004:word16] = Mem164[ss:bp_142 - 0x0004:word16]
	fn0800_A614(ds_146, Mem167[ss:sp_150 + 0x0004:segptr32], out cx_328, out dx_329, out bp_142, out si_149, out di_330, out ds_146)
	word16 sp_172 = <invalid>
	Mem186[ss:sp_172 + 0x0002:word16] = 0x0180
	Mem188[ss:sp_172:word16] = ss
	Mem191[ss:sp_172 - 2:word16] = bp_142 - 0x006A
	fn0800_A4F6(ds_146, Mem191[ss:sp_172 - 2:word16], Mem191[ss:sp_172:word16], Mem191[ss:sp_172 + 2:word16])
	Mem202[ss:sp_172 + 0x0002:word16] = ss
	Mem205[ss:sp_172:word16] = bp_142 - 0x006A
	fn0800_8F7F(bp_142 - 0x006A, ds_146, Mem205[ss:sp_172:segptr32])
	sp_155 = sp_172 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3863:
	word16 sp_215 = sp_155 - 2
	Mem217[ss:sp_215:word16] = ss
	Mem221[ss:sp_215 - 2:word16] = bp_142 - 0x006A
	Mem224[ss:sp_215 - 4:word16] = ds_146
	Mem227[ss:sp_215 - 6:word16] = 0x44DC
	branch fn0800_BA4A(ds_146, Mem227[ss:sp_215 - 6:segptr32], Mem227[ss:sp_215 - 2:segptr32]) != 0xFFFF l0800_3887
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3878:
	Mem239[ss:sp_215:word16] = ds_146
	Mem242[ss:sp_215 - 2:word16] = 0x44DC
	Mem245[ss:sp_215 - 4:word16] = 0x000A
	fn0800_0D24(ds_146, Mem245[ss:sp_215 - 4:word16], Mem245[ss:sp_215 - 2:segptr32], out cx_331, out dx_332, out bx_333, out si_149, out di_334, out es_335, out ds_146, out Top_336)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3887:
	diOut = Mem264[ss:sp_155:word16]
	dsOut = ds_146
	return si_149
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_37DF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_388C(word16 si, word16 di, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bp cx di ds dx si sp
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_388C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_388C:
	word16 di_28
	selector ds_29
	word16 dx_30
	word16 si_32
	word16 ax_24 = fn0800_4234(si, di, ds, 0x4541, ds, 0x0A13, ds, out cx_294, out dx_30, out bp_295, out si_32, out di_28, out ds_29)
	Mem41[ds_29:0x29E5:word16] = dx_30
	Mem42[ds_29:0x29E3:word16] = ax_24
	word16 sp_33 = <invalid>
	Mem44[ss:sp_33 + 0x0006:word16] = ds_29
	Mem47[ss:sp_33 + 0x0004:word16] = 0x0A50
	Mem49[ss:sp_33 + 0x0002:word16] = ds_29
	Mem52[ss:sp_33:word16] = 0x44DC
	word16 bp_54
	word16 di_57
	selector ds_58
	word16 dx_59
	word16 si_61
	word16 ax_53 = fn0800_4234(si_32, di_28, ds_29, Mem52[ss:sp_33:word16], Mem52[ss:sp_33 + 2:word16], Mem52[ss:sp_33 + 4:word16], Mem52[ss:sp_33 + 6:word16], out cx_296, out dx_59, out bp_54, out si_61, out di_57, out ds_58)
	Mem70[ds_58:0x29E1:word16] = dx_59
	Mem71[ds_58:0x29DF:word16] = ax_53
	word16 sp_62 = <invalid>
	Mem73[ss:sp_62 + 0x0006:word16] = ds_58
	Mem76[ss:sp_62 + 0x0004:word16] = 0x44DC
	Mem78[ss:sp_62 + 0x0002:word16] = ss
	Mem81[ss:sp_62:word16] = bp_54 - 0x0004
	word16 dx_85
	word16 cx_84 = fn0800_363D(ds_58, Mem81[ss:sp_62:segptr32], Mem81[ss:sp_62 + 4:word16], Mem81[ss:sp_62 + 6:word16], out dx_85)
	branch Mem81[ds_58:0x0A12:byte] != 0x00 l0800_38EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_38EF:
	Mem97[ss:sp_62 + 0x0006:word16] = ds_58
	Mem100[ss:sp_62 + 0x0004:word16] = 0x4541
	Mem102[ss:sp_62 + 0x0002:word16] = ss
	Mem105[ss:sp_62:word16] = bp_54 - 0x0008
	word16 dx_109
	word16 cx_108 = fn0800_363D(ds_58, Mem105[ss:sp_62:segptr32], Mem105[ss:sp_62 + 4:word16], Mem105[ss:sp_62 + 6:word16], out dx_109)
	Mem120[ss:sp_62 + 0x0006:word16] = ds_58
	Mem123[ss:sp_62 + 0x0004:word16] = 0x461F
	Mem125[ss:sp_62 + 0x0002:word16] = ss
	Mem128[ss:sp_62:word16] = bp_54 - 0x0008
	branch fn0800_395B(Mem128[ss:sp_62:segptr32], Mem128[ss:sp_62 + 4:segptr32]) < 0x0000 l0800_3927
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3913:
	Mem142[ss:sp_62 + 0x0006:word16] = ss
	Mem145[ss:sp_62 + 0x0004:word16] = bp_54 - 0x0004
	Mem147[ss:sp_62 + 0x0002:word16] = ss
	Mem150[ss:sp_62:word16] = bp_54 - 0x0008
	branch fn0800_395B(Mem150[ss:sp_62:segptr32], Mem150[ss:sp_62 + 4:segptr32]) <= 0x0000 l0800_392E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_392E:
	Mem164[ss:sp_62 + 0x0006:word16] = Mem150[ds_58:0x29E5:word16]
	Mem167[ss:sp_62 + 0x0004:word16] = Mem164[ds_58:0x29E3:word16]
	selector ds_177
	fn0800_A614(ds_58, Mem167[ss:sp_62 + 0x0004:segptr32], out cx_297, out dx_298, out bp_299, out si_300, out di_301, out ds_177)
	word16 sp_172 = <invalid>
	Mem186[ss:sp_172 + 0x0002:word16] = Mem167[ds_177:0x29E1:word16]
	Mem189[ss:sp_172:word16] = Mem186[ds_177:0x29DF:word16]
	word16 bp_191
	word16 cx_195
	word16 di_196
	word16 si_198
	selector ds_199
	fn0800_A614(ds_177, Mem189[ss:sp_172:segptr32], out cx_195, out dx_302, out bp_191, out si_198, out di_196, out ds_199)
	word16 sp_194 = <invalid>
	Mem207[ss:sp_194 + 0x0002:word16] = ds_199
	Mem210[ss:sp_194:word16] = 0x44DC
	word16 dx_212 = fn0800_8F7F(0x44DC, ds_199, Mem210[ss:sp_194:segptr32])
	word16 bp_222 = Mem210[ss:bp_191:word16]
	cxOut = cx_195
	dxOut = dx_212
	bpOut = bp_222
	siOut = si_198
	diOut = di_196
	dsOut = ds_199
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3927:
	word16 bp_229 = Mem228[ss:bp_54:word16]
	cxOut = cx_108
	dxOut = dx_109
	bpOut = bp_229
	siOut = si_61
	diOut = di_57
	dsOut = ds_58
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_38D7:
	Mem232[ds_58:0x4621:word16] = Mem81[ss:bp_54 - 0x0002:word16]
	Mem234[ds_58:0x461F:word16] = Mem232[ss:bp_54 - 0x0004:word16]
	Mem235[ds_58:0x0A12:byte] = 0x01
	word16 bp_238 = Mem235[ss:bp_54:word16]
	cxOut = cx_84
	dxOut = dx_85
	bpOut = bp_238
	siOut = si_61
	diOut = di_57
	dsOut = ds_58
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_388C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx es Top
// Preserved: bp sp
fn0800_395B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_395B:
	word16 ax_13 = Mem7[ptrArg02 + 0x0002:word16]
	branch ax_13 != Mem14[ptrArg06 + 0x0002:word16] l0800_3984
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3984:
	return ax_13 - Mem14[ptrArg06 + 0x0002:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3974:
	return Mem14[ptrArg02:word16] - Mem14[ptrArg06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_395B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3992(word16 si, word16 di, selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bp ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: DP
fn0800_3992_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3992:
	branch Mem12[ds:0x427E:byte] == 0x00 l0800_39AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39A0:
	branch Mem12[ds:0x2A23:word16] != 0x0001 l0800_39AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39A7:
	branch Mem12[ds:0x2A17:word16] != 0x0000 l0800_39B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39B5:
	fn0800_3509(si, di, fp - 0x0074, ss, 0x44DC, ds, out bx_619)
	selector es_49 = ss
	word16 di_51 = fp - 0x0074
	word16 cx_55 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D4:
	branch cx_55 == 0x0000 l0800_39D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D4_1:
	di_51 = di_51 + 0x0001
	cx_55 = cx_55 - 0x0001
	branch Mem48[ss:di_51:byte] == 0x00 l0800_39D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39D6:
	word16 cx_66 = ~cx_55
	word16 di_638 = di_51 - cx_66
	bool Z_79 = SLICE(cond(di_638), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DC:
	branch cx_66 == 0x0000 l0800_39DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DC_2:
	Z_79 = SLICE(cond(0x00 - Mem48[ss:di_638:byte]), bool, 2) (alias)
	di_638 = di_638 + 0x0001
	cx_66 = cx_66 - 0x0001
	branch Mem48[ss:di_638:byte] == 0x00 l0800_39DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39DE:
	branch Z_79 l0800_39E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39E0:
	di_638 = 0x0001
	es_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39E7:
	word16 di_90 = di_638 - 0x0001
	fn0800_35A3(si, di_90, di_90, es_49, 0x4541, ds)
	word16 bp_147
	selector ds_151
	word16 dx_152
	word16 si_154
	word16 ax_146 = fn0800_AA7E(si, di_90, ds, fp - 0x0074, ss, 0x0A4D, ds, out cx_620, out dx_152, out bp_147, out si_154, out di_621, out ds_151)
	Mem161[ss:bp_147 - 0x0002:word16] = dx_152
	Mem162[ss:bp_147 - 0x0004:word16] = ax_146
	word16 sp_155 = <invalid>
	word16 ax_163 = ax_146 | dx_152
	branch ax_163 != 0x0000 l0800_3A13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A13:
	Mem169[ss:sp_155 + 0x0006:word16] = Mem162[ss:bp_147 - 0x0002:word16]
	Mem172[ss:sp_155 + 0x0004:word16] = Mem169[ss:bp_147 - 0x0004:word16]
	fn0800_4194(ds_151, Mem172[ss:sp_155 + 0x0004:word16], Mem172[ss:sp_155 + 0x0006:word16])
	branch dx_152 >u 0x0000 l0800_3A3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A23:
	branch dx_152 != 0x0000 l0800_3A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A25:
	branch ax_163 >u 0x0012 l0800_3A3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A3D:
	Mem194[ss:sp_155 + 0x0006:word16] = Mem172[ss:bp_147 - 0x0002:word16]
	Mem197[ss:sp_155 + 0x0004:word16] = Mem194[ss:bp_147 - 0x0004:word16]
	selector ds_202
	word16 dx_217
	word16 ax_214 = fn0800_8CAA(ax_163, 0x08, fn0800_3E5D(ds_151, Mem197[ss:sp_155 + 0x0004:word16], Mem197[ss:sp_155 + 0x0006:word16], out ds_202, out Top_622), out dx_217)
	word16 sp_218 = <invalid>
	branch dx_217 != 0x0052 l0800_3A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A53:
	branch ax_214 == 0x4E43 l0800_3A6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A6B:
	Mem229[ss:sp_218 - 2:word16] = Mem197[ss:bp_147 - 0x0002:word16]
	Mem232[ss:sp_218 - 4:word16] = Mem229[ss:bp_147 - 0x0004:word16]
	selector ds_236
	branch fn0800_3E5D(ds_202, Mem232[ss:sp_218 - 4:word16], Mem232[ss:sp_218 - 2:word16], out ds_236, out Top_627) != Mem232[ds_236:0x2A09:word16] l0800_3A83
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A7D:
	branch ax_214 == Mem232[ds_236:0x2A07:word16] l0800_3A96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A96:
	Mem250[ss:sp_218 - 2:word16] = ss
	Mem253[ss:sp_218 - 4:word16] = bp_147 - 0x0072
	Mem255[ss:sp_218 - 6:word16] = ss
	Mem258[ss:sp_218 - 8:word16] = bp_147 - 0x000C
	fn0800_363D(ds_236, Mem258[ss:sp_218 - 8:segptr32], Mem258[ss:sp_218 - 4:word16], Mem258[ss:sp_218 - 2:word16], out dx_630)
	Mem273[ss:sp_218 - 2:word16] = ds_236
	Mem276[ss:sp_218 - 4:word16] = 0x4541
	Mem278[ss:sp_218 - 6:word16] = ss
	Mem281[ss:sp_218 - 8:word16] = bp_147 - 0x0008
	fn0800_363D(ds_236, Mem281[ss:sp_218 - 8:segptr32], Mem281[ss:sp_218 - 4:word16], Mem281[ss:sp_218 - 2:word16], out dx_631)
	Mem296[ss:sp_218 - 2:word16] = ss
	Mem299[ss:sp_218 - 4:word16] = bp_147 - 0x0008
	Mem301[ss:sp_218 - 6:word16] = ss
	Mem304[ss:sp_218 - 8:word16] = bp_147 - 0x000C
	word16 ax_305 = fn0800_395B(Mem304[ss:sp_218 - 8:segptr32], Mem304[ss:sp_218 - 4:segptr32])
	branch ax_305 >= 0x0000 l0800_3ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ADD:
	Mem319[ss:sp_218 - 2:word16] = Mem304[ss:bp_147 - 0x0002:word16]
	Mem322[ss:sp_218 - 4:word16] = Mem319[ss:bp_147 - 0x0004:word16]
	selector ds_326
	Mem340[ds_326:0x2A05:word16] = fn0800_3E5D(ds_236, Mem322[ss:sp_218 - 4:word16], Mem322[ss:sp_218 - 2:word16], out ds_326, out Top_632) + (ax_305 <u 0x0012)
	Mem341[ds_326:0x2A03:word16] = ax_305 + 0x0012
	Mem344[ss:sp_218 - 2:word16] = Mem341[ss:bp_147 - 0x0002:word16]
	Mem347[ss:sp_218 - 4:word16] = Mem344[ss:bp_147 - 0x0004:word16]
	word16 bp_349
	word16 dx_355
	word16 si_356
	selector ds_357
	fn0800_A614(ds_326, Mem347[ss:sp_218 - 4:segptr32], out cx_633, out dx_355, out bp_349, out si_356, out di_634, out ds_357)
	word16 bp_367 = Mem347[ss:bp_349:word16]
	dxOut = dx_355
	bpOut = bp_367
	siOut = si_356
	dsOut = ds_357
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ACA:
	Mem371[ss:sp_218 - 2:word16] = Mem304[ss:bp_147 - 0x0002:word16]
	Mem374[ss:sp_218 - 4:word16] = Mem371[ss:bp_147 - 0x0004:word16]
	word16 bp_376
	word16 dx_382
	word16 si_383
	selector ds_384
	fn0800_A614(ds_236, Mem374[ss:sp_218 - 4:segptr32], out cx_635, out dx_382, out bp_376, out si_383, out di_636, out ds_384)
	word16 bp_395 = Mem374[ss:bp_376:word16]
	dxOut = dx_382
	bpOut = bp_395
	siOut = si_383
	dsOut = ds_384
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A83:
	Mem403[ss:sp_218 - 2:word16] = Mem232[ss:bp_147 - 0x0002:word16]
	Mem406[ss:sp_218 - 4:word16] = Mem403[ss:bp_147 - 0x0004:word16]
	word16 bp_409
	word16 dx_415
	word16 si_416
	selector ds_417
	fn0800_A614(ds_236, Mem406[ss:sp_218 - 4:segptr32], out cx_628, out dx_415, out bp_409, out si_416, out di_629, out ds_417)
	word16 bp_428 = Mem406[ss:bp_409:word16]
	dxOut = dx_415
	bpOut = bp_428
	siOut = si_416
	dsOut = ds_417
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A58:
	Mem436[ss:sp_218 - 2:word16] = Mem197[ss:bp_147 - 0x0002:word16]
	Mem439[ss:sp_218 - 4:word16] = Mem436[ss:bp_147 - 0x0004:word16]
	word16 bp_442
	word16 dx_448
	word16 si_449
	selector ds_450
	fn0800_A614(ds_202, Mem439[ss:sp_218 - 4:segptr32], out cx_625, out dx_448, out bp_442, out si_449, out di_626, out ds_450)
	word16 bp_461 = Mem439[ss:bp_442:word16]
	dxOut = dx_448
	bpOut = bp_461
	siOut = si_449
	dsOut = ds_450
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A2A:
	Mem469[ss:sp_155 + 0x0006:word16] = Mem172[ss:bp_147 - 0x0002:word16]
	Mem472[ss:sp_155 + 0x0004:word16] = Mem469[ss:bp_147 - 0x0004:word16]
	word16 bp_475
	word16 dx_481
	word16 si_482
	selector ds_483
	fn0800_A614(ds_151, Mem472[ss:sp_155 + 0x0004:segptr32], out cx_623, out dx_481, out bp_475, out si_482, out di_624, out ds_483)
	word16 bp_494 = Mem472[ss:bp_475:word16]
	dxOut = dx_481
	bpOut = bp_494
	siOut = si_482
	dsOut = ds_483
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3A0C:
	word16 bp_501 = Mem162[ss:bp_147:word16]
	dxOut = dx_152
	bpOut = bp_501
	siOut = si_154
	dsOut = ds_151
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_39AE:
	dxOut = dx
	bpOut = bp
	siOut = si
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3992_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3B0A(word16 wArg0A, word16 wArg0C, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3B0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B0A:
	word16 bp_193 = fp - 2
	word16 ax_11 = wArg0A | wArg0C
	branch ax_11 != 0x0000 l0800_3B1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B1B:
	branch wArg0C < 0x0000 l0800_3B31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B21:
	branch wArg0C > 0x0000 l0800_3B2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B23:
	branch wArg0A <=u 0xFDE8 l0800_3B31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B31:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B2A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B37:
	word16 dx_51
	selector ds_117
	word16 ax_45 = fn0800_4311(out dx_51, out bp_193, out si_53, out di_49, out ds_117)
	Mem62[ss:bp_193 - 0x0002:word16] = dx_51
	Mem63[ss:bp_193 - 0x0004:word16] = ax_45
	word16 sp_54 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BAB:
	branch (Mem66[ss:bp_193 + 0x000C:word16] | Mem66[ss:bp_193 + 0x000E:word16]) != 0x0000 l0800_3B4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B4F:
	word16 ax_81
	word16 dx_80
	branch Mem66[ss:bp_193 + 0x000E:word16] < 0x0000 l0800_3B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B55:
	branch Mem66[ss:bp_193 + 0x000E:word16] > 0x0000 l0800_3B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B57:
	branch Mem66[ss:bp_193 + 0x000C:word16] <=u 0xFDE8 l0800_3B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B65:
	dx_80 = Mem66[ss:bp_193 + 0x000E:word16]
	ax_81 = Mem66[ss:bp_193 + 0x000C:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B5E:
	dx_80 = 0x0000
	ax_81 = 0xFDE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B6B:
	Mem91[ss:bp_193 - 0x0006:word16] = dx_80
	Mem93[ss:bp_193 - 0x0008:word16] = ax_81
	Mem100[ss:sp_54 + 0x0002:word16] = Mem93[ss:bp_193 + 0x0006:word16]
	Mem103[ss:sp_54:word16] = Mem100[ss:bp_193 + 0x0004:word16]
	Mem106[ss:sp_54 - 0x0002:word16] = Mem103[ss:bp_193 - 0x0006:word16]
	Mem108[ss:sp_54 - 0x0004:word16] = ax_81
	Mem111[ss:sp_54 - 0x0006:word16] = Mem108[ss:bp_193 - 0x0002:word16]
	Mem114[ss:sp_54 - 0x0008:word16] = Mem111[ss:bp_193 - 0x0004:word16]
	selector ds_123
	fn0800_4110(ds_117, Mem114[ss:sp_54 - 0x0008:word16], Mem114[ss:sp_54 - 0x0006:word16], Mem114[ss:sp_54 - 0x0004:word16], Mem114[ss:sp_54 - 0x0002:word16], Mem114[ss:sp_54:word16], Mem114[ss:sp_54 + 0x0002:word16], out si_262, out di_263, out ds_123)
	Mem136[ss:sp_54 + 0x0002:word16] = Mem114[ss:bp_193 + 0x000A:word16]
	Mem139[ss:sp_54:word16] = Mem136[ss:bp_193 + 0x0008:word16]
	Mem142[ss:sp_54 - 0x0002:word16] = Mem139[ss:bp_193 - 0x0006:word16]
	Mem145[ss:sp_54 - 0x0004:word16] = Mem142[ss:bp_193 - 0x0008:word16]
	Mem148[ss:sp_54 - 0x0006:word16] = Mem145[ss:bp_193 - 0x0002:word16]
	Mem151[ss:sp_54 - 0x0008:word16] = Mem148[ss:bp_193 - 0x0004:word16]
	fn0800_4152(ds_123, Mem151[ss:sp_54 - 0x0008:word16], Mem151[ss:sp_54 - 0x0006:word16], Mem151[ss:sp_54 - 0x0004:word16], Mem151[ss:sp_54:word16], Mem151[ss:sp_54 + 0x0002:word16], out ds_117)
	word16 ax_166 = Mem151[ss:bp_193 - 0x0006:word16]
	word16 dx_167 = Mem151[ss:bp_193 - 0x0008:word16]
	Mem169[ss:bp_193 + 0x000C:word16] = v27_168
	Mem151[ss:bp_193 + 0x000C:ui32] = SEQ(Mem169[ss:bp_193 + 0x000E:word16], Mem151[ss:bp_193 + 0x000C:word16])
	ui32 v28_v27_200 = Mem151[ss:bp_193 + 0x000C:ui32] - SEQ(ax_166, dx_167)
	Mem173[ss:bp_193 + 0x000E:word16] = SLICE(v28_v27_200, word16, 16)
	word16 v27_168 = (word16) v28_v27_200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BB3:
	Mem177[ss:sp_54 + 0x0002:word16] = Mem66[ss:bp_193 - 0x0002:word16]
	Mem180[ss:sp_54:word16] = Mem177[ss:bp_193 - 0x0004:word16]
	ax_11 = fn0800_4346(ds_117, Mem180[ss:sp_54 + 0x0002:word16], out cx_260, out dx, out bx_261, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3B18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BBF:
	word16 bp_197 = Mem196[ss:bp_193:word16]
	dxOut = dx
	bpOut = bp_197
	dsOut = ds
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3B0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3BC3(word16 cx, word16 dx, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ds si sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3BC3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3BC3:
	word16 di_26
	word16 bp_47
	selector ds_51
	word16 dx_52
	word16 ax_46 = fn0800_4234(fn0800_37BE(cx, dx, ds, 0x43AD, ds, out di_26), di_26, ds, 0x43AD, ds, 0x0A61, ds, out cx_285, out dx_52, out bp_47, out si_286, out di_287, out ds_51)
	Mem63[ds_51:0x29D5:word16] = dx_52
	Mem64[ds_51:0x29D3:word16] = ax_46
	word16 sp_55 = <invalid>
	Mem67[ss:sp_55 + 0x0006:word16] = Mem64[ss:bp_47 + 0x0006:word16]
	Mem70[ss:sp_55 + 0x0004:word16] = Mem67[ss:bp_47 + 0x0004:word16]
	fn0800_4194(ds_51, Mem70[ss:sp_55 + 0x0004:word16], Mem70[ss:sp_55 + 0x0006:word16])
	Mem70[ss:bp_47 + 0x0008:ui32] = SEQ(Mem70[ss:bp_47 + 0x000A:word16], Mem70[ss:bp_47 + 0x0008:word16])
	ui32 dx_ax_268 = SEQ(dx_52, ax_46) - Mem70[ss:bp_47 + 0x0008:ui32]
	Mem83[ss:bp_47 - 0x0002:word16] = SLICE(dx_ax_268, word16, 16)
	Mem84[ss:bp_47 - 0x0004:word16] = (word16) dx_ax_268
	Mem89[ss:sp_55 + 0x0006:word16] = 0x0000
	Mem92[ss:sp_55 + 0x0004:word16] = Mem89[ss:bp_47 + 0x000A:word16]
	Mem95[ss:sp_55 + 0x0002:word16] = Mem92[ss:bp_47 + 0x0008:word16]
	Mem98[ss:sp_55:word16] = Mem95[ss:bp_47 + 0x0006:word16]
	Mem101[ss:sp_55 - 2:word16] = Mem98[ss:bp_47 + 0x0004:word16]
	fn0800_ACB3(ds_51, Mem101[ss:sp_55 - 2:word16], Mem101[ss:sp_55:word16], Mem101[ss:sp_55 + 6:word16], out cx_288, out dx_289, out bx_290)
	Mem115[ss:sp_55 + 0x0006:word16] = Mem101[ss:bp_47 - 0x0002:word16]
	Mem118[ss:sp_55 + 0x0004:word16] = Mem115[ss:bp_47 - 0x0004:word16]
	Mem121[ss:sp_55 + 0x0002:word16] = Mem118[ds_51:0x29D5:word16]
	Mem124[ss:sp_55:word16] = Mem121[ds_51:0x29D3:word16]
	Mem127[ss:sp_55 - 2:word16] = Mem124[ss:bp_47 + 0x0006:word16]
	Mem130[ss:sp_55 - 4:word16] = Mem127[ss:bp_47 + 0x0004:word16]
	word16 bp_132
	selector ds_136
	fn0800_3B0A(Mem130[ss:sp_55 + 4:word16], Mem130[ss:sp_55 + 6:word16], out dx_291, out bp_132, out ds_136)
	word16 sp_140 = <invalid>
	Mem150[ss:sp_140 + 0x000A:word16] = Mem130[ds_136:0x29D5:word16]
	Mem153[ss:sp_140 + 0x0008:word16] = Mem150[ds_136:0x29D3:word16]
	fn0800_BA67(ds_136, Mem153[ss:sp_140 + 0x0008:word16], Mem153[ss:sp_140 + 0x000A:word16])
	Mem165[ss:sp_140 + 0x000A:word16] = 0x0000
	ui32 ax_dx_269 = SEQ(Mem165[ss:bp_132 + 0x000A:word16], Mem165[ss:bp_132 + 0x0008:word16])
	Mem165[ss:bp_132 + 0x000C:ui32] = SEQ(Mem165[ss:bp_132 + 0x000E:word16], Mem165[ss:bp_132 + 0x000C:word16])
	ui32 ax_dx_270 = ax_dx_269 + Mem165[ss:bp_132 + 0x000C:ui32]
	Mem174[ss:sp_140 + 0x0008:word16] = SLICE(ax_dx_270, word16, 16)
	Mem176[ss:sp_140 + 0x0006:word16] = (word16) ax_dx_270
	Mem179[ss:sp_140 + 0x0004:word16] = Mem176[ss:bp_132 + 0x0006:word16]
	Mem182[ss:sp_140 + 0x0002:word16] = Mem179[ss:bp_132 + 0x0004:word16]
	fn0800_ACB3(ds_136, Mem182[ss:sp_140 + 0x0002:word16], Mem182[ss:sp_140 + 0x0004:word16], Mem182[ss:sp_140 + 0x000A:word16], out cx_292, out dx_293, out bx_294)
	Mem196[ss:sp_140 + 0x000A:word16] = Mem182[ss:bp_132 - 0x0002:word16]
	Mem199[ss:sp_140 + 0x0008:word16] = Mem196[ss:bp_132 - 0x0004:word16]
	Mem202[ss:sp_140 + 0x0006:word16] = Mem199[ss:bp_132 + 0x0006:word16]
	Mem205[ss:sp_140 + 0x0004:word16] = Mem202[ss:bp_132 + 0x0004:word16]
	Mem208[ss:sp_140 + 0x0002:word16] = Mem205[ds_136:0x29D5:word16]
	Mem211[ss:sp_140:word16] = Mem208[ds_136:0x29D3:word16]
	selector ds_217
	fn0800_3B0A(Mem211[ss:sp_140 + 8:word16], Mem211[ss:sp_140 + 10:word16], out dx_295, out bp_296, out ds_217)
	word16 sp_221 = <invalid>
	Mem231[ss:sp_221 + 0x000A:word16] = Mem211[ds_217:0x29D5:word16]
	Mem234[ss:sp_221 + 0x0008:word16] = Mem231[ds_217:0x29D3:word16]
	word16 si_243
	selector ds_244
	fn0800_A614(ds_217, Mem234[ss:sp_221 + 0x0008:segptr32], out cx_297, out dx_298, out bp_236, out si_243, out di_299, out ds_244)
	word16 sp_239 = <invalid>
	Mem252[ss:sp_239 + 0x0002:word16] = ds_244
	Mem255[ss:sp_239:word16] = 0x43AD
	fn0800_8F7F(0x43AD, ds_244, Mem255[ss:sp_239:segptr32])
	dsOut = ds_244
	return si_243
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3BC3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_3C99(word16 si, word16 di, selector ds, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: bp cx ds si sp
// Trashed: SCZDO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_3C99_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3C99:
	fn0800_3509(si, di, fp - 0x006C, ss, 0x4348, ds, out bx_457)
	word16 di_43 = fp - 0x006C
	word16 si_411 = 0x0A54
	word16 cx_45 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CBE:
	branch cx_45 == 0x0000 l0800_3CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CBE_1:
	di_43 = di_43 + 0x0001
	cx_45 = cx_45 - 0x0001
	branch Mem40[ss:di_43:byte] == 0x00 l0800_3CBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC0:
	word16 di_412 = di_43 - 0x0001
	word16 cx_413 = 0x000D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC4:
	branch cx_413 == 0x0000 l0800_3CC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC6:
	word16 bp_80
	selector ds_84
	word16 dx_85
	word16 ax_79 = fn0800_4234(si_411, di_412, ds, fp - 0x006C, ss, 0x0A61, ds, out cx_458, out dx_85, out bp_80, out si_459, out di_460, out ds_84)
	Mem95[ss:bp_80 - 0x0002:word16] = dx_85
	Mem96[ss:bp_80 - 0x0004:word16] = ax_79
	word16 sp_88 = <invalid>
	Mem101[ss:sp_88 + 0x0006:word16] = 0x0000
	Mem103[ss:sp_88 + 0x0004:word16] = 0x0000
	Mem105[ss:sp_88 + 0x0002:word16] = 0x0000
	Mem108[ss:sp_88:word16] = Mem105[ss:bp_80 + 0x0006:word16]
	Mem111[ss:sp_88 - 2:word16] = Mem108[ss:bp_80 + 0x0004:word16]
	fn0800_ACB3(ds_84, Mem111[ss:sp_88 - 2:word16], Mem111[ss:sp_88:word16], Mem111[ss:sp_88 + 6:word16], out cx_461, out dx_462, out bx_463)
	Mem125[ss:sp_88 + 0x0006:word16] = Mem111[ss:bp_80 + 0x000A:word16]
	Mem128[ss:sp_88 + 0x0004:word16] = Mem125[ss:bp_80 + 0x0008:word16]
	Mem131[ss:sp_88 + 0x0002:word16] = Mem128[ss:bp_80 - 0x0002:word16]
	Mem134[ss:sp_88:word16] = Mem131[ss:bp_80 - 0x0004:word16]
	Mem137[ss:sp_88 - 2:word16] = Mem134[ss:bp_80 + 0x0006:word16]
	Mem140[ss:sp_88 - 4:word16] = Mem137[ss:bp_80 + 0x0004:word16]
	word16 bp_142
	selector ds_146
	fn0800_3B0A(Mem140[ss:sp_88 + 4:word16], Mem140[ss:sp_88 + 6:word16], out dx_464, out bp_142, out ds_146)
	word16 sp_150 = <invalid>
	Mem159[ss:sp_150 + 0x000A:word16] = 0x0000
	ui32 ax_dx_427 = SEQ(Mem159[ss:bp_142 + 0x000A:word16], Mem159[ss:bp_142 + 0x0008:word16])
	Mem159[ss:bp_142 + 0x000C:ui32] = SEQ(Mem159[ss:bp_142 + 0x000E:word16], Mem159[ss:bp_142 + 0x000C:word16])
	ui32 ax_dx_428 = ax_dx_427 + Mem159[ss:bp_142 + 0x000C:ui32]
	Mem168[ss:sp_150 + 0x0008:word16] = SLICE(ax_dx_428, word16, 16)
	Mem170[ss:sp_150 + 0x0006:word16] = (word16) ax_dx_428
	Mem173[ss:sp_150 + 0x0004:word16] = Mem170[ss:bp_142 + 0x0006:word16]
	Mem176[ss:sp_150 + 0x0002:word16] = Mem173[ss:bp_142 + 0x0004:word16]
	word16 dx_180
	word16 ax_177 = fn0800_ACB3(ds_146, Mem176[ss:sp_150 + 0x0002:word16], Mem176[ss:sp_150 + 0x0004:word16], Mem176[ss:sp_150 + 0x000A:word16], out cx_465, out dx_180, out bx_466)
	Mem190[ss:sp_150 + 0x000A:word16] = Mem176[ss:bp_142 + 0x0006:word16]
	Mem193[ss:sp_150 + 0x0008:word16] = Mem190[ss:bp_142 + 0x0004:word16]
	fn0800_4194(ds_146, Mem193[ss:sp_150 + 0x0008:word16], Mem193[ss:sp_150 + 0x000A:word16])
	ui32 bx_cx_429 = SEQ(Mem193[ss:bp_142 + 0x000A:word16], Mem193[ss:bp_142 + 0x0008:word16])
	Mem193[ss:bp_142 + 0x000C:ui32] = SEQ(Mem193[ss:bp_142 + 0x000E:word16], Mem193[ss:bp_142 + 0x000C:word16])
	ui32 dx_ax_433 = SEQ(dx_180, ax_177) - (bx_cx_429 + Mem193[ss:bp_142 + 0x000C:ui32])
	Mem213[ss:bp_142 + 0x000E:word16] = SLICE(dx_ax_433, word16, 16)
	word16 ax_208 = (word16) dx_ax_433
	Mem214[ss:bp_142 + 0x000C:word16] = ax_208
	Mem217[ss:sp_150 + 0x000A:word16] = Mem214[ss:bp_142 + 0x000E:word16]
	Mem219[ss:sp_150 + 0x0008:word16] = ax_208
	Mem222[ss:sp_150 + 0x0006:word16] = Mem219[ss:bp_142 - 0x0002:word16]
	Mem225[ss:sp_150 + 0x0004:word16] = Mem222[ss:bp_142 - 0x0004:word16]
	Mem228[ss:sp_150 + 0x0002:word16] = Mem225[ss:bp_142 + 0x0006:word16]
	Mem231[ss:sp_150:word16] = Mem228[ss:bp_142 + 0x0004:word16]
	word16 bp_233
	selector ds_237
	fn0800_3B0A(Mem231[ss:sp_150 + 8:word16], Mem231[ss:sp_150 + 10:word16], out dx_467, out bp_233, out ds_237)
	word16 sp_241 = <invalid>
	Mem251[ss:sp_241 + 0x000A:word16] = Mem231[ss:bp_233 - 0x0002:word16]
	Mem254[ss:sp_241 + 0x0008:word16] = Mem251[ss:bp_233 - 0x0004:word16]
	selector ds_264
	fn0800_A614(ds_237, Mem254[ss:sp_241 + 0x0008:segptr32], out cx_468, out dx_469, out bp_470, out si_471, out di_472, out ds_264)
	word16 sp_259 = <invalid>
	Mem273[ss:sp_259 + 0x0002:word16] = Mem254[ds_264:0x29D1:word16]
	Mem276[ss:sp_259:word16] = Mem273[ds_264:0x29CF:word16]
	word16 bp_278
	selector ds_286
	word16 si_285
	word16 di_283
	fn0800_A614(ds_264, Mem276[ss:sp_259:segptr32], out cx_473, out dx_474, out bp_278, out si_285, out di_283, out ds_286)
	word16 sp_281 = <invalid>
	Mem295[ss:sp_281 + 0x0002:word16] = 0x0180
	Mem297[ss:sp_281:word16] = ds_286
	Mem300[ss:sp_281 - 2:word16] = 0x4348
	fn0800_A4F6(ds_286, Mem300[ss:sp_281 - 2:word16], Mem300[ss:sp_281:word16], Mem300[ss:sp_281 + 2:word16])
	Mem311[ss:sp_281 + 0x0002:word16] = ds_286
	Mem314[ss:sp_281:word16] = 0x4348
	fn0800_8F7F(0x4348, ds_286, Mem314[ss:sp_281:segptr32])
	Mem324[ss:sp_281 + 0x0002:word16] = ds_286
	Mem327[ss:sp_281:word16] = 0x4348
	Mem329[ss:sp_281 - 2:word16] = ss
	Mem332[ss:sp_281 - 4:word16] = bp_278 - 0x006A
	branch fn0800_BA4A(ds_286, Mem332[ss:sp_281 - 4:segptr32], Mem332[ss:sp_281:segptr32]) != 0xFFFF l0800_3DB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DA3:
	Mem344[ss:sp_281 + 0x0002:word16] = ss
	Mem347[ss:sp_281:word16] = bp_278 - 0x006A
	Mem350[ss:sp_281 - 2:word16] = 0x000A
	fn0800_0D24(ds_286, Mem350[ss:sp_281 - 2:word16], Mem350[ss:sp_281:segptr32], out cx_477, out dx_478, out bx_479, out si_285, out di_283, out es_480, out ds_286, out Top_481)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DB2:
	Mem371[ss:sp_281 + 0x0002:word16] = ds_286
	Mem374[ss:sp_281:word16] = 0x0A65
	Mem376[ss:sp_281 - 0x0002:word16] = ds_286
	Mem379[ss:sp_281 - 0x0004:word16] = 0x4348
	word16 bp_383
	word16 cx_385
	selector ds_387
	word16 dx_388
	word16 ax_382 = fn0800_4234(si_285, di_283, ds_286, Mem379[ss:sp_281 - 0x0004:word16], Mem379[ss:sp_281 - 0x0002:word16], Mem379[ss:sp_281:word16], Mem379[ss:sp_281 + 0x0002:word16], out cx_385, out dx_388, out bp_383, out si_475, out di_476, out ds_387)
	Mem399[ds_387:0x29D1:word16] = dx_388
	Mem400[ds_387:0x29CF:word16] = ax_382
	word16 sp_391 = <invalid>
	word16 si_403 = Mem400[ss:sp_391 + 0x000A:word16]
	bpOut = Mem400[ss:bp_383:word16]
	siOut = si_403
	dsOut = ds_387
	return (byte) cx_385
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3C99_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3CC4_2:
	Mem410[ss:di_412:byte] = Mem407[ds:si_411:byte]
	si_411 = si_411 + 0x0001
	di_412 = di_412 + 0x0001
	cx_413 = cx_413 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3DCF(selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx di ds dx Top
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_3DCF_entry:
	word16 wArg04_107 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_109 = SLICE(ptrArg02, word16, 0)
	int8 Top_155 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DCF:
	word16 ax_127
	word16 v10_17 = Mem13[ptrArg02:word16] - 0x0001
	Mem18[ptrArg02:word16] = v10_17
	branch v10_17 < 0x0000 l0800_3DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DF3:
	ax_127 = fn0800_AEC2(ds, SEQ(wArg04_107, wArg02_109), out ch_164, out dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DDE:
	word16 ax_40 = Mem18[ptrArg02 + 0x000E:word16]
	word16 si_41 = Mem18[ptrArg02 + 0x000C:word16]
	Mem43[ptrArg02 + 0x000C:word16] = Mem18[ptrArg02 + 0x000C:word16] + 0x0001
	ax_127 = DPB(DPB(ax_40, Mem43[ax_40:si_41:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3DFF:
	byte bLoc04_122 = SLICE(ax_127, byte, 0)
	branch ax_127 != 0xFFFF l0800_3E1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E07:
	word16 dx_65
	ax_127 = fn0800_0D24(ds, 0x0008, SEQ(dx_65, fn0800_4271(ds, wArg02_109, wArg04_107, out dx_65)), out cx_81, out dx, out bx_165, out si_166, out di, out es_167, out ds, out Top_155)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E1F:
	chOut = <invalid>
	dxOut = dx
	diOut = di
	dsOut = ds
	TopOut = Top_155
	return DPB(ax_127, bLoc04_122, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3DCF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E27(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax cx di ds dx Top
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3E27_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E27:
	word16 cx_43 = <invalid>
	selector ds_25
	word16 dx_44
	int8 Top_46
	word16 di_47
	selector ds_48
	word16 ax_60 = (DPB(fn0800_3DCF(ds, SEQ(wArg04, wArg02), out ch_86, out dx_87, out di_88, out ds_25, out Top_89), 0x00, 8) << 0x08) + DPB(fn0800_3DCF(ds_25, SEQ(wArg04, wArg02), out ch_90, out dx_44, out di_47, out ds_48, out Top_46), 0x00, 8)
	cxOut = DPB(cx_43, 0x08, 0)
	dxOut = dx_44
	diOut = di_47
	dsOut = ds_48
	TopOut = Top_46
	return ax_60
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E27_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E5D(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ds dx Top
// Trashed: SCZO bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3E5D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E5D:
	selector ds_22
	selector ds_44
	int8 Top_47
	word16 dx_60 = fn0800_3E27(ds, wArg02, wArg04, out cx_82, out dx_83, out di_84, out ds_22, out Top_85) + (fn0800_3E27(ds_22, wArg02, wArg04, out cx_86, out dx_87, out di_88, out ds_44, out Top_47) <u 0x0000)
	dsOut = ds_44
	TopOut = Top_47
	return dx_60
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E5D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3E9A(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_3E9A_entry:
	word16 wArg04_133 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_135 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3E9A:
	word16 ax_28
	word16 v10_17 = Mem13[ptrArg02:word16] - 0x0001
	Mem18[ptrArg02:word16] = v10_17
	branch v10_17 < 0x0000 l0800_3EBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EBE:
	ax_28 = fn0800_AEC2(ds, SEQ(wArg04_133, wArg02_135), out ch_175, out dx_176)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EA9:
	word16 ax_40 = Mem18[ptrArg02 + 0x000E:word16]
	word16 si_41 = Mem18[ptrArg02 + 0x000C:word16]
	Mem43[ptrArg02 + 0x000C:word16] = Mem18[ptrArg02 + 0x000C:word16] + 0x0001
	ax_28 = DPB(DPB(ax_40, Mem43[ax_40:si_41:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ECA:
	byte bLoc04_155 = SLICE(ax_28, byte, 0)
	branch ax_28 != 0xFFFF l0800_3EEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3ED2:
	word16 dx_65
	fn0800_0D24(ds, 0x0008, SEQ(dx_65, fn0800_4271(ds, wArg02_135, wArg04_133, out dx_65)), out cx_179, out dx_180, out bx_181, out si_182, out di_183, out es_184, out ds, out Top_185)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3EEA:
	word16 dx_117
	word16 ax_160 = DPB(fn0800_ACB3(ds, wArg02_135, wArg04_133, 0x0001, out cx_177, out dx_117, out bx_178), bLoc04_155, 0)
	dxOut = dx_117
	dsOut = ds
	return ax_160
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3E9A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3F0A(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3F0A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3F0A:
	selector ds_25
	word16 ax_33 = DPB(fn0800_3DCF(ds, SEQ(wArg04, wArg02), out ch_114, out dx_115, out di_116, out ds_25, out Top_117), 0x00, 8)
	selector ds_48
	word16 ax_56 = DPB(fn0800_3DCF(ds_25, SEQ(wArg04, wArg02), out ch_118, out dx_119, out di_120, out ds_48, out Top_121), 0x00, 8)
	word16 dx_76
	fn0800_ACB3(ds_48, wArg02, wArg04, 0x0001, out cx_75, out dx_76, out bx_122)
	dxOut = dx_76
	dsOut = ds_48
	return (ax_33 << 0x08) + ax_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3F0A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3F58(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: di ds dx
// Trashed: SCZO bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3F58_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3F58:
	selector ds_22
	word16 ax_18 = fn0800_3E27(ds, wArg02, wArg04, out cx_113, out dx_114, out di_115, out ds_22, out Top_116)
	word16 di_43
	selector ds_44
	word16 ax_40 = fn0800_3E27(ds_22, wArg02, wArg04, out cx_117, out dx_118, out di_43, out ds_44, out Top_119)
	fn0800_ACB3(ds_44, wArg02, wArg04, 0x0001, out cx_120, out dx_121, out bx_122)
	diOut = di_43
	dsOut = ds_44
	return ax_18 + (ax_40 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3F58_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_3FAD(selector ds, word16 wArg02, word16 wArg04, ptr16 & chOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax cx di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_3FAD_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_3FAD:
	selector ds_25
	word16 di_47
	selector ds_48
	word16 ax_59 = (DPB(fn0800_3DCF(ds_25, SEQ(wArg04, wArg02), out ch_87, out dx_88, out di_47, out ds_48, out Top_89), 0x00, 8) << 0x08) + DPB(fn0800_3DCF(ds, SEQ(wArg04, wArg02), out ch_83, out dx_84, out di_85, out ds_25, out Top_86), 0x00, 8)
	chOut = <invalid>
	diOut = di_47
	dsOut = ds_48
	return ax_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_3FAD_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_401E(selector ds, byte bArg02, word16 wArg04, word16 wArg06, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax bx cx ds dx Top
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_401E_entry:
	byte bArg02_73 = SLICE(wArg02, byte, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_401E:
	selector ds_29
	word16 bx_47
	word16 cx_48
	word16 dx_49
	int8 Top_51
	selector ds_53
	word16 ax_46 = fn0800_4047(ds_29, SLICE(DPB(fn0800_4047(ds, SLICE(wArg02 >>u 0x08, byte, 0), SEQ(wArg06, wArg04), out cx_86, out dx_87, out bx_88, out di_89, out ds_29, out Top_90), bArg02_73, 0), byte, 0), SEQ(wArg06, wArg04), out cx_48, out dx_49, out bx_47, out di_91, out ds_53, out Top_51)
	cxOut = cx_48
	dxOut = dx_49
	bxOut = bx_47
	dsOut = ds_53
	TopOut = Top_51
	return ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_401E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4047(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx di ds dx Top
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: D bp si sp
fn0800_4047_entry:
	word16 wArg06_111 = SLICE(ptrArg04, word16, 16)
	word16 wArg04_113 = SLICE(ptrArg04, word16, 0)
	int8 Top_158 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4047:
	word16 dx_146
	word16 ax_130
	word16 v10_16 = Mem11[ptrArg04:word16] + 0x0001
	Mem17[ptrArg04:word16] = v10_16
	word16 cx_28 = DPB(cx, bArg02, 0)
	word16 cx_136 = DPB(cx, bArg02, 0)
	word16 bx_131 = (word16) ptrArg04
	branch v10_16 >= 0x0000 l0800_406F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_406F:
	ax_130 = fn0800_B30A(ds, SLICE(cx_28, byte, 0), SEQ(wArg06_111, wArg04_113), out cx_136, out dx_146, out bx_131)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4056:
	word16 ax_43 = Mem17[ptrArg04 + 0x000E:word16]
	word16 si_44 = Mem17[ptrArg04 + 0x000C:word16]
	Mem46[ptrArg04 + 0x000C:word16] = Mem17[ptrArg04 + 0x000C:word16] + 0x0001
	Mem50[ax_43:si_44:byte] = bArg02
	dx_146 = DPB(dx, bArg02, 0) (alias)
	ax_130 = DPB(DPB(ax_43, bArg02, 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_407C:
	branch ax_130 != 0xFFFF l0800_4099
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4081:
	word16 dx_70
	ax_130 = fn0800_0D24(ds, 0x0009, SEQ(dx_70, fn0800_4271(ds, wArg04_113, wArg06_111, out dx_70)), out cx_136, out dx_146, out bx_131, out si_168, out di, out es_169, out ds, out Top_158)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4099:
	cxOut = cx_136
	dxOut = dx_146
	bxOut = bx_131
	diOut = di
	dsOut = ds
	TopOut = Top_158
	return ax_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4047_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_409C(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax ds dx Top
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_409C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_409C:
	selector ds_23
	fn0800_401E(ds, wArg04, wArg06, wArg08, out cx_76, out dx_77, out bx_78, out ds_23, out Top_79)
	selector ds_46
	word16 dx_47
	int8 Top_49
	word16 ax_42 = fn0800_401E(ds_23, wArg02, wArg06, wArg08, out cx_80, out dx_47, out bx_81, out ds_46, out Top_49)
	dxOut = dx_47
	dsOut = ds_46
	TopOut = Top_49
	return ax_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_409C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_40BF(selector ds, byte bArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax di ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_40BF_entry:
	byte bArg03_81 = SLICE(wArg02, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_40BF:
	selector ds_31
	fn0800_4047(ds, SLICE(DPB(ax, bArg02 & 0xFF, 0), byte, 0), SEQ(wArg06, wArg04), out cx_93, out dx_94, out bx_95, out di_96, out ds_31, out Top_97)
	word16 wArg02_82 = SEQ(bArg03_81, bArg02)
	word16 dx_56
	word16 di_59
	selector ds_60
	word16 ax_53 = fn0800_4047(ds_31, SLICE(DPB(wArg02_82 >>u 0x08, (byte) (wArg02_82 >>u 0x08) & 0xFF, 0), byte, 0), SEQ(wArg06, wArg04), out cx_98, out dx_56, out bx_99, out di_59, out ds_60, out Top_100)
	dxOut = dx_56
	diOut = di_59
	dsOut = ds_60
	return ax_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_40BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_4110(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: cx di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4110_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4110:
	word16 di_123
	word16 si_133
	word16 ax_28 = fn0800_ABA3(ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ch_140, out si_133, out di_123)
	word16 cx_120 = <invalid>
	branch wArg08 != 0x0000 l0800_4138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4133:
	branch ax_28 == wArg06 l0800_4150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4138:
	word16 dx_57
	fn0800_0D24(ds, 0x0008, SEQ(dx_57, fn0800_4271(ds, wArg0A, wArg0C, out dx_57)), out cx_120, out dx_76, out bx_72, out si_133, out di_123, out es_77, out ds, out Top_79)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4150:
	siOut = si_133
	diOut = di_123
	dsOut = ds
	return (byte) cx_120
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4110_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_4152(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_4152_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4152:
	word16 bp_33
	word16 ax_106 = fn0800_AD85(ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out bp_33)
	branch Mem26[ss:bp_33 + 0x000A:word16] != 0x0000 l0800_417A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4175:
	branch ax_106 == Mem26[ss:bp_33 + 0x0008:word16] l0800_4192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_417A:
	word16 dx_59
	ax_106 = fn0800_0D24(ds, 0x0009, SEQ(dx_59, fn0800_4271(ds, Mem53[ss:bp_33 + 0x000C:word16], Mem26[ss:bp_33 + 0x000E:word16], out dx_59)), out cx_75, out dx_78, out bx_74, out si_80, out di_76, out es_79, out ds, out Top_81)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4192:
	dsOut = ds
	return (byte) ax_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4152_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4194(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO bx cx es Top
// Preserved: bp sp
fn0800_4194_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4194:
	fn0800_AD2F(ds, SEQ(wArg04, wArg02), out dx_135)
	fn0800_ACB3(ds, wArg02, wArg04, 0x0002, out cx_136, out dx_137, out bx_138)
	fn0800_AD2F(ds, SEQ(wArg04, wArg02), out dx_66)
	fn0800_ACB3(ds, wArg02, wArg04, 0x0000, out cx_139, out dx_140, out bx_141)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4194_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4234(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bp cx di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_4234_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4234:
	word16 bp_27
	word16 dx_32
	word16 cx_29
	word16 di_30
	selector ds_31
	word16 si_104
	word16 ax_26 = fn0800_AA7E(si, di, ds, wArg02, wArg04, wArg06, wArg08, out cx_29, out dx_32, out bp_27, out si_104, out di_30, out ds_31)
	Mem41[ss:bp_27 - 0x0002:word16] = dx_32
	Mem42[ss:bp_27 - 0x0004:word16] = ax_26
	word16 sp_35 = <invalid>
	branch (ax_26 | Mem42[ss:bp_27 - 0x0002:word16]) != 0x0000 l0800_4267
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4257:
	Mem49[ss:sp_35 + 0x0006:word16] = Mem42[ss:bp_27 + 0x0006:word16]
	Mem52[ss:sp_35 + 0x0004:word16] = Mem49[ss:bp_27 + 0x0004:word16]
	Mem55[ss:sp_35 + 0x0002:word16] = 0x0007
	fn0800_0D24(ds_31, Mem55[ss:sp_35 + 0x0002:word16], Mem55[ss:sp_35 + 0x0004:segptr32], out cx_29, out dx_114, out bx_115, out si_104, out di_30, out es_116, out ds_31, out Top_117)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4267:
	word16 dx_75 = Mem74[ss:bp_27 - 0x0002:word16]
	word16 ax_76 = Mem74[ss:bp_27 - 0x0004:word16]
	word16 bp_78 = Mem74[ss:bp_27:word16]
	cxOut = cx_29
	dxOut = dx_75
	bpOut = bp_78
	siOut = si_104
	diOut = di_30
	dsOut = ds_31
	return ax_76
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4234_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4271(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_4271_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4271:
	branch wArg04 != Mem7[ds:0x29E5:word16] l0800_428D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4280:
	branch wArg02 != Mem7[ds:0x29E3:word16] l0800_428D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_428D:
	branch wArg04 != Mem7[ds:0x29E1:word16] l0800_42A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4299:
	branch wArg02 != Mem7[ds:0x29DF:word16] l0800_42A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42A6:
	branch wArg04 != Mem7[ds:0x29D1:word16] l0800_42BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42B2:
	branch wArg02 != Mem7[ds:0x29CF:word16] l0800_42BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42BF:
	branch wArg04 != Mem7[ds:0x29DD:word16] l0800_42D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42CB:
	branch wArg02 != Mem7[ds:0x29DB:word16] l0800_42D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42D8:
	branch wArg04 != Mem7[ds:0x29D9:word16] l0800_42F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42E4:
	branch wArg02 != Mem7[ds:0x29D7:word16] l0800_42F1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42F1:
	branch wArg04 != Mem7[ds:0x29D5:word16] l0800_430A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42FD:
	branch wArg02 != Mem7[ds:0x29D3:word16] l0800_430A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_430A:
	dxOut = <invalid>
	return 0x0A60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4303:
	dxOut = <invalid>
	return 0x43AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42EA:
	dxOut = <invalid>
	return 0x4412
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42D1:
	dxOut = <invalid>
	return 0x4477
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_42B8:
	dxOut = <invalid>
	return 0x4348
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_429F:
	dxOut = <invalid>
	return 0x44DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4286:
	dxOut = <invalid>
	return 0x4541
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4271_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4311(ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_4311_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4311:
	word16 bp_18
	word16 dx_23
	word16 di_21
	selector ds_22
	word16 si_25
	word16 ax_17 = fn0800_9F89(out dx_23, out bp_18, out si_25, out di_21, out ds_22)
	Mem32[ss:bp_18 - 0x0002:word16] = dx_23
	Mem33[ss:bp_18 - 0x0004:word16] = ax_17
	word16 sp_26 = <invalid>
	branch (ax_17 | dx_23) != 0x0000 l0800_433C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_432D:
	Mem39[ss:sp_26 + 0x0002:word16] = ds_22
	Mem42[ss:sp_26:word16] = 0x0A6C
	Mem45[ss:sp_26 - 2:word16] = 0x0006
	fn0800_0D24(ds_22, Mem45[ss:sp_26 - 2:word16], Mem45[ss:sp_26:segptr32], out cx_99, out dx_100, out bx_101, out si_25, out di_21, out es_102, out ds_22, out Top_103)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_433C:
	word16 ax_66 = Mem64[ss:bp_18 - 0x0004:word16]
	word16 bp_68 = Mem64[ss:bp_18:word16]
	dxOut = Mem64[ss:bp_18 - 0x0002:word16]
	bpOut = bp_68
	siOut = si_25
	diOut = di_21
	dsOut = ds_22
	return ax_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4311_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4346(selector ds, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp sp
fn0800_4346_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4346:
	selector ds_16
	word16 dx_17
	word16 bx_19
	word16 cx_21
	word16 ax_18 = fn0800_9E75(ds, wArg04, out cx_21, out dx_17, out bx_19, out ds_16)
	cxOut = cx_21
	dxOut = dx_17
	bxOut = bx_19
	dsOut = ds_16
	return ax_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4346_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4357(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx dl es Top
// Preserved: bp sp
fn0800_4357_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4357:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B9:
	word16 wArg02_104 = SLICE(ptrArg02, word16, 0)
	ptrArg02 = SLICE(ptrArg02, word16, 16) (alias)
	word16 wArg06_109 = SLICE(ptrArg06, word16, 0)
	segptr32 ptrArg06_119 = SLICE(ptrArg06, word16, 16)
	branch Mem11[ptrArg06:byte] != 0x00 l0800_435C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_435C:
	byte al_20 = Mem11[ptrArg06:byte]
	word16 ax_22 = (int16) al_20
	branch ax_22 == 0x002A l0800_4379
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4379:
	ptrArg06_119 = SLICE(ptrArg06_119, word16, 16) (alias)
	word16 wArg02_101 = SLICE(ptrArg02, word16, 0)
	ptrArg02 = SLICE(ptrArg02, word16, 16) (alias)
	branch Mem27[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4382:
	branch Mem27[ptrArg02:byte] != 0x00 l0800_4376
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4376:
	ptrArg02 = SEQ(ptrArg02, wArg02_101 + 0x0001)
	Mem27 = Mem36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4388:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_436A:
	branch ax_22 == 0x002E l0800_439E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_439E:
	branch Mem11[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_436F:
	branch ax_22 == 0x003F l0800_438A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_438A:
	branch Mem11[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4393:
	branch Mem11[ptrArg02:byte] == 0x00 l0800_43B6
	ptrArg02 = SEQ(ptrArg02, wArg02_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4399:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4374:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43A7:
	branch al_20 == Mem11[ptrArg02:byte] l0800_43B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43B6:
	ptrArg06 = SEQ(SLICE(ptrArg06_119, word16, 16), wArg06_109 + 0x0001)
	Mem11 = Mem73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43AF:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43C2:
	word16 ax_133
	branch Mem11[ptrArg02:byte] != 0x00 l0800_43D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D0:
	ax_133 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43CB:
	ax_133 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D2:
	return ax_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4357_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx es Top
// Preserved: bp si sp
fn0800_43D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43D4:
	word16 cx_12 = wArg06
	word16 si_18 = wArg02 + (word16) (wArg06 *s 0x000C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_440F:
	si_18 = si_18 - 0x000C
	cx_12 = cx_12 - 0x0001
	branch cx_12 != 0x0000 l0800_43E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_43E9:
	Mem33[psegArg04:si_18 + 0x0002:word16] = 0x0000
	Mem34[psegArg04:si_18:word16] = 0x0000
	Mem35[psegArg04:si_18 + 0x0004:word16] = 0xFFFF
	Mem36[psegArg04:si_18 + 0x0008:word16] = 0x0000
	Mem37[psegArg04:si_18 + 0x0006:word16] = 0x0000
	Mem38[psegArg04:si_18 + 0x000A:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4419:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_43D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_441C(selector ds, word16 wArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_441C_entry:
	selector psegArg04_264 = SLICE(ptrArg02, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_441C:
	word16 di_16 = 0x0000
	word16 cx_17 = 0x0000
	word16 si_23 = wArg02
	branch wArg06 <=u 0x0000 l0800_4452
	psegArg04_264 = SEQ(psegArg04_264, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4439:
	branch (Mem28[psegArg04_264:si_23:word16] | Mem28[psegArg04_264:si_23 + 0x0002:word16]) == 0x0000 l0800_4449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4445:
	di_16 = di_16 + 0x0001
	wLoc04 = cx_17
	Mem47 = Mem40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4449:
	si_23 = si_23 + 0x000C
	cx_17 = cx_17 + 0x0001
	branch cx_17 <u wArg06 l0800_4439
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4452:
	selector psegArg04_278 = SLICE(psegArg04_264, selector, 16)
	word16 wArg02_280 = SLICE(psegArg04_264, word16, 0)
	branch di_16 != 0x0000 l0800_4459
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4459:
	branch di_16 == 0x0001 l0800_4461
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4461:
	selector es_69 = SLICE(psegArg04_264, selector, 16)
	word16 bx_67 = (word16) (psegArg04_264 + wLoc04 *s 0x000C)
	Mem71[es_69:bx_67 + 0x000A:word16] = Mem60[es_69:bx_67 + 0x000A:word16] + 0x0001
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_445E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4525:
	branch fn0800_463B(ds, wArg02_280, psegArg04_278, wArg06) == 0x0000 l0800_453B
	segptr32 ptrArg02_285 = SEQ(psegArg04_278, wArg02_280)
	word16 wArg02_288 = SLICE(ptrArg02_285, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_453B:
	fn0800_4550(wArg02_280, psegArg04_278, wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4538:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4478:
	word16 ax_133 = (word16) (Mem94[ds:0x4658:word16] *s 0x000C)
	selector es_138 = SLICE(ptrArg02_285, selector, 16)
	word16 bx_137 = (word16) ptrArg02_285 + ax_133
	word16 ax_148 = (word16) (Mem142[ds:0x465A:word16] *s 0x000C)
	word16 ax_139 = Mem94[es_138:bx_137 + 0x0002:word16]
	word16 dx_140 = Mem94[es_138:bx_137:word16]
	word16 bx_151 = wArg02_288 + ax_148
	Mem155[es_138:bx_151:word16] = v23_154
	ui32 v24_v23_248 = SEQ(Mem155[es_138:bx_151 + 0x0002:word16], Mem146[es_138:bx_151:word16]) + SEQ(ax_139, dx_140)
	Mem161[es_138:bx_151 + 0x0002:word16] = SLICE(v24_v23_248, word16, 16)
	word16 bx_163 = wArg02_288 + ax_133
	Mem164[es_138:bx_163 + 0x0002:word16] = 0x0000
	Mem165[es_138:bx_163:word16] = 0x0000
	word16 bx_167 = wArg02_288 + ax_148
	Mem170[es_138:bx_167 + 0x000A:word16] = Mem165[es_138:bx_167 + 0x000A:word16] + 0x0001
	word16 cx_134 = ax_133
	word16 dx_149 = ax_148
	word16 v23_154 = (word16) v24_v23_248
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44DD:
	selector psegArg04_290 = SLICE(ptrArg02_285, selector, 16)
	word16 wArg02_291 = SLICE(ptrArg02_285, word16, 0)
	selector es_180 = SLICE(ptrArg02_285, selector, 16)
	word16 bx_178 = (word16) ptrArg02_285 + dx_149
	branch Mem174[es_180:bx_178 + 0x0004:word16] != 0xFFFF l0800_44C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44C3:
	word16 ax_184 = Mem174[psegArg04_290:bx_178 + 0x0004:word16]
	Mem186[ds:0x465A:word16] = ax_184
	word16 ax_189 = (word16) (ax_184 *s 0x000C)
	word16 bx_192 = wArg02_291 + ax_189
	Mem195[psegArg04_290:bx_192 + 0x000A:word16] = Mem186[psegArg04_290:bx_192 + 0x000A:word16] + 0x0001
	dx_149 = ax_189
	ptrArg02_285 = SEQ(psegArg04_290, wArg02_291)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44EB:
	Mem198[es_180:bx_178 + 0x0004:word16] = Mem174[ds:0x4658:word16]
	word16 bx_201 = wArg02_291 + ax_133
	Mem204[es_180:bx_201 + 0x000A:word16] = Mem198[es_180:bx_201 + 0x000A:word16] + 0x0001
	psegArg04_278 = SEQ(psegArg04_290, wArg02_291)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4517:
	psegArg04_278 = SLICE(psegArg04_278, selector, 16) (alias)
	wArg02_280 = SLICE(psegArg04_278, word16, 0) (alias)
	word16 bx_212 = (word16) psegArg04_278 + cx_134
	branch Mem208[SLICE(psegArg04_278, selector, 16):bx_212 + 0x0004:word16] != 0xFFFF l0800_44FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_44FD:
	word16 ax_218 = Mem208[psegArg04_278:bx_212 + 0x0004:word16]
	Mem220[ds:0x4658:word16] = ax_218
	word16 ax_223 = (word16) (ax_218 *s 0x000C)
	word16 bx_226 = wArg02_280 + ax_223
	Mem229[psegArg04_278:bx_226 + 0x000A:word16] = Mem220[psegArg04_278:bx_226 + 0x000A:word16] + 0x0001
	cx_134 = ax_223
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4456:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_454A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_441C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4550(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_4550_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4550:
	word16 sp_114 = fp - 0x0010
	word16 wLoc04_128 = 0x0000
	word16 wLoc06_129 = 0x0000
	word16 wLoc08_130 = 0x8000
	word16 wLoc0A_131 = 0x0000
	word16 wLoc0C_132 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45D6:
	branch wLoc0C_132 <=u 0x0010 l0800_4573
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4573:
	word16 di_27 = 0x0000
	word16 si_28 = wArg02
	branch wArg06 <=u 0x0000 l0800_45C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_457D:
	branch Mem33[psegArg04:si_28 + 0x000A:word16] != wLoc0C_132 l0800_45BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4589:
	word16 sp_41 = sp_114 - 2
	Mem42[ss:sp_41:word16] = wLoc0C_132
	Mem45[ss:sp_41 - 2:word16] = wLoc08_130
	Mem48[ss:sp_41 - 4:word16] = wLoc0A_131
	Mem51[ss:sp_41 - 6:word16] = wLoc04_128
	Mem54[ss:sp_41 - 8:word16] = wLoc06_129
	word16 dx_58
	word16 ax_55 = fn0800_8BC2(Mem54[ss:sp_41 - 8:word16], Mem54[ss:sp_41 - 6:word16], Mem54[ss:sp_41 - 4:word16], Mem54[ss:sp_41 - 2:word16], out cx_213, out dx_58, out bx_214)
	word16 sp_59 = <invalid>
	Mem66[ss:sp_59 + 0x0006:word16] = dx_58
	Mem68[ss:sp_59 + 0x0004:word16] = ax_55
	word16 dx_71
	word16 ax_69 = fn0800_45E2(Mem68[ss:sp_59 + 0x0004:word16], Mem68[ss:sp_59 + 0x0006:word16], Mem68[ss:sp_59 + 0x0008:word16], out dx_71)
	Mem78[psegArg04:si_28 + 0x0008:word16] = dx_71
	Mem79[psegArg04:si_28 + 0x0006:word16] = ax_69
	ui32 v21_v20_124 = SEQ(wLoc04_128, v20_82) + SEQ(wLoc08_130, wLoc0A_131)
	word16 v20_82 = (word16) v21_v20_124
	sp_114 = sp_59 + 0x000A
	wLoc06_129 = v20_82
	wLoc04_128 = SLICE(v21_v20_124, word16, 16)
	Mem96 = Mem87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45BA:
	si_28 = si_28 + 0x000C
	di_27 = di_27 + 0x0001
	branch di_27 <u wArg06 l0800_457D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45C3:
	wLoc0C_132 = wLoc0C_132 + 0x0001
	wLoc08_130 = wLoc08_130 >>u 0x0001
	wLoc0A_131 = __rcr(wLoc0A_131, 0x01, SLICE(cond(wLoc08_130 >>u 0x0001), bool, 1))
	Mem24 = Mem113
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45DC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4550_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_45E2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45E2:
	word16 bx_11 = wArg06
	word16 wLoc04_67 = 0x0000
	word16 wLoc06_68 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_462A:
	bx_11 = bx_11 - 0x0001
	branch bx_11 != 0x0000 l0800_45F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_45F7:
	word16 ax_30 = __rcl(wLoc04_67, 0x01, SLICE(cond(wLoc06_68 << 0x0001), bool, 1))
	wLoc06_68 = wLoc06_68 << 0x0001
	branch (wArg02 & 0x0001) == 0x0000 l0800_461A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4612:
	wLoc06_68 = wLoc06_68 | 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_461A:
	wLoc04_67 = ax_30
	wArg04 = wArg04 >>u 0x0001
	wArg02 = __rcr(wArg02, 0x01, SLICE(cond(wArg04 >>u 0x0001), bool, 1))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4631:
	dxOut = wLoc04_67
	return wLoc06_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_45E2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_463B(selector ds, word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp di es si sp
fn0800_463B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_463B:
	word16 wLoc0C_155 = 0xFFFF
	word16 wLoc0E_156 = 0xFFFF
	word16 wLoc08_157 = 0xFFFF
	word16 wLoc0A_158 = 0xFFFF
	word16 cx_23 = 0x0000
	word16 si_24 = wArg02
	branch wArg06 <=u 0x0000 l0800_46D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4661:
	word16 ax_32 = Mem29[psegArg04:si_24 + 0x0002:word16]
	word16 dx_33 = Mem29[psegArg04:si_24:word16]
	Mem106 = Mem35
	branch (dx_33 | ax_32) == 0x0000 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4675:
	branch ax_32 >u wLoc08_157 l0800_46AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4680:
	branch ax_32 <u wLoc08_157 l0800_4687
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4682:
	branch dx_33 >=u wLoc0A_158 l0800_46AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46AB:
	Mem106 = Mem35
	branch ax_32 >u wLoc0C_155 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46B6:
	branch ax_32 <u wLoc0C_155 l0800_46BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46B8:
	Mem106 = Mem35
	branch dx_33 >=u wLoc0E_156 l0800_46CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46BD:
	Mem70[ds:0x4658:word16] = cx_23
	wLoc0C_155 = ax_32
	wLoc0E_156 = dx_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4687:
	Mem80[ds:0x4658:word16] = Mem77[ds:0x465A:word16]
	Mem86[ds:0x465A:word16] = cx_23
	wLoc0C_155 = wLoc08_157
	wLoc0E_156 = wLoc0A_158
	wLoc08_157 = ax_32
	wLoc0A_158 = dx_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46CD:
	si_24 = si_24 + 0x000C
	cx_23 = cx_23 + 0x0001
	branch cx_23 <u wArg06 l0800_4661
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46D5:
	branch wLoc08_157 != 0xFFFF l0800_46E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46DB:
	branch wLoc0A_158 == 0xFFFF l0800_46ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46E1:
	branch wLoc0C_155 != 0xFFFF l0800_46F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46E7:
	branch wLoc0E_156 != 0xFFFF l0800_46F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46F5:
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46ED:
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_463B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_46FE(selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_46FE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_46FE:
	branch Mem15[ds:0x2A05:word16] >u 0x0000 l0800_471F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_470D:
	branch Mem15[ds:0x2A05:word16] <u 0x0000 l0800_4716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_470F:
	branch Mem15[ds:0x2A03:word16] >=u 0x002A l0800_471F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_471F:
	fn0800_ACB3(ds, Mem37[ds:0x29E3:word16], Mem33[ds:0x29E5:word16], 0x0000, out cx_1590, out dx_1591, out bx_1592)
	selector ds_62
	word16 ax_58 = fn0800_3FAD(ds, Mem54[ds:0x29E3:word16], Mem40[ds:0x29E5:word16], out ch_1593, out di_1594, out ds_62)
	branch Mem57[ds_62:0x2A05:word16] >u 0x0000 l0800_4761
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4750:
	branch Mem57[ds_62:0x2A05:word16] <u 0x0000 l0800_4758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4752:
	branch ax_58 + 0x0024 <=u Mem57[ds_62:0x2A03:word16] l0800_4761
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4761:
	selector ds_121
	word16 dx_135
	word16 ax_132 = fn0800_8CAA(fn0800_ACB3(ds_62, Mem97[ds_62:0x29E3:word16], Mem93[ds_62:0x29E5:word16], 0x0000, out cx_1595, out dx_1596, out bx_1597), 0x08, fn0800_3F58(ds_62, Mem114[ds_62:0x29E3:word16], Mem100[ds_62:0x29E5:word16], out di_1598, out ds_121), out dx_135)
	word16 sp_136 = <invalid>
	branch dx_135 != 0x0052 l0800_4798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4793:
	branch ax_132 == 0x4E43 l0800_47A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47A1:
	Mem147[ss:sp_136 - 2:word16] = Mem117[ds_121:0x29E5:word16]
	Mem150[ss:sp_136 - 4:word16] = Mem147[ds_121:0x29E3:word16]
	word16 dx_154
	word16 ax_151 = fn0800_AD2F(ds_121, Mem150[ss:sp_136 - 4:segptr32], out dx_154)
	Mem169[ss:sp_136 - 2:word16] = 0x0000
	Mem172[ss:sp_136 - 4:word16] = 0x0000
	Mem174[ss:sp_136 - 6:word16] = 0x0002
	Mem177[ss:sp_136 - 8:word16] = Mem174[ds_121:0x29E5:word16]
	Mem180[ss:sp_136 - 10:word16] = Mem177[ds_121:0x29E3:word16]
	fn0800_ACB3(ds_121, Mem180[ss:sp_136 - 10:word16], Mem180[ss:sp_136 - 8:word16], Mem180[ss:sp_136 - 2:word16], out cx_1599, out dx_1600, out bx_1601)
	Mem194[ss:sp_136 - 2:word16] = Mem180[ds_121:0x29E5:word16]
	Mem197[ss:sp_136 - 4:word16] = Mem194[ds_121:0x29E3:word16]
	selector ds_202
	fn0800_3FAD(ds_121, Mem197[ss:sp_136 - 4:word16], Mem197[ss:sp_136 - 2:word16], out ch_1602, out di_1603, out ds_202)
	Mem215[ss:sp_136 - 2:word16] = Mem197[ds_202:0x29E5:word16]
	Mem218[ss:sp_136 - 4:word16] = Mem215[ds_202:0x29E3:word16]
	word16 di_222
	selector ds_223
	word16 ax_219 = fn0800_3FAD(ds_202, Mem218[ss:sp_136 - 4:word16], Mem218[ss:sp_136 - 2:word16], out ch_1604, out di_222, out ds_223)
	word16 wLoc0C_1464 = ax_219
	branch di_222 == 0x0000 l0800_47F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47F0:
	wLoc0C_1464 = ax_219 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_47F3:
	fn0800_8C69(wLoc0C_1464, 0x09, 0x0000, out cl_1605, out dx_1606)
	word16 sp_252 = <invalid>
	Mem268[ss:sp_252 - 2:word16] = 0x0000
	Mem271[ss:sp_252 - 4:word16] = 0x0000
	Mem273[ss:sp_252 - 6:word16] = 0x0016
	Mem277[ss:sp_252 - 8:word16] = Mem273[ds_223:0x29E5:word16]
	Mem280[ss:sp_252 - 10:word16] = Mem277[ds_223:0x29E3:word16]
	fn0800_ACB3(ds_223, Mem280[ss:sp_252 - 10:word16], Mem280[ss:sp_252 - 8:word16], Mem280[ss:sp_252 - 2:word16], out cx_1607, out dx_1608, out bx_1609)
	Mem294[ss:sp_252 - 2:word16] = Mem280[ds_223:0x29E5:word16]
	Mem297[ss:sp_252 - 4:word16] = Mem294[ds_223:0x29E3:word16]
	selector ds_302
	fn0800_3FAD(ds_223, Mem297[ss:sp_252 - 4:word16], Mem297[ss:sp_252 - 2:word16], out ch_1610, out di_1611, out ds_302)
	Mem314[ss:sp_252 - 2:word16] = Mem297[ds_302:0x29E5:word16]
	Mem317[ss:sp_252 - 4:word16] = Mem314[ds_302:0x29E3:word16]
	selector ds_322
	word16 ax_318 = fn0800_3FAD(ds_302, Mem317[ss:sp_252 - 4:word16], Mem317[ss:sp_252 - 2:word16], out ch_1612, out di_1613, out ds_322)
	Mem335[ss:sp_252 - 2:word16] = Mem332[ds_322:0x29E5:word16]
	Mem338[ss:sp_252 - 4:word16] = Mem335[ds_322:0x29E3:word16]
	selector ds_343
	word16 ax_339 = fn0800_3FAD(ds_322, Mem338[ss:sp_252 - 4:word16], Mem338[ss:sp_252 - 2:word16], out ch_1614, out di_1615, out ds_343)
	Mem356[ss:sp_252 - 2:word16] = Mem353[ds_343:0x29E5:word16]
	Mem359[ss:sp_252 - 4:word16] = Mem356[ds_343:0x29E3:word16]
	selector ds_364
	word16 ax_360 = fn0800_3FAD(ds_343, Mem359[ss:sp_252 - 4:word16], Mem359[ss:sp_252 - 2:word16], out ch_1616, out di_1617, out ds_364)
	Mem377[ss:sp_252 - 2:word16] = Mem374[ds_364:0x29E5:word16]
	Mem380[ss:sp_252 - 4:word16] = Mem377[ds_364:0x29E3:word16]
	selector ds_385
	word16 ax_381 = fn0800_3FAD(ds_364, Mem380[ss:sp_252 - 4:word16], Mem380[ss:sp_252 - 2:word16], out ch_1618, out di_1619, out ds_385)
	Mem398[ss:sp_252 - 2:word16] = Mem395[ds_385:0x29E5:word16]
	Mem401[ss:sp_252 - 4:word16] = Mem398[ds_385:0x29E3:word16]
	selector ds_406
	word16 ax_402 = fn0800_3FAD(ds_385, Mem401[ss:sp_252 - 4:word16], Mem401[ss:sp_252 - 2:word16], out ch_1620, out di_1621, out ds_406)
	Mem419[ss:sp_252 - 2:word16] = Mem416[ds_406:0x29E5:word16]
	Mem422[ss:sp_252 - 4:word16] = Mem419[ds_406:0x29E3:word16]
	selector ds_427
	word16 ax_423 = fn0800_3FAD(ds_406, Mem422[ss:sp_252 - 4:word16], Mem422[ss:sp_252 - 2:word16], out ch_1622, out di_1623, out ds_427)
	Mem440[ss:sp_252 - 2:word16] = Mem437[ds_427:0x29E5:word16]
	Mem443[ss:sp_252 - 4:word16] = Mem440[ds_427:0x29E3:word16]
	selector ds_448
	word16 ax_444 = fn0800_3FAD(ds_427, Mem443[ss:sp_252 - 4:word16], Mem443[ss:sp_252 - 2:word16], out ch_1624, out di_1625, out ds_448)
	Mem461[ss:sp_252 - 2:word16] = Mem458[ds_448:0x29E5:word16]
	Mem464[ss:sp_252 - 4:word16] = Mem461[ds_448:0x29E3:word16]
	selector ds_469
	word16 ax_465 = fn0800_3FAD(ds_448, Mem464[ss:sp_252 - 4:word16], Mem464[ss:sp_252 - 2:word16], out ch_1626, out di_1627, out ds_469)
	Mem482[ss:sp_252 - 2:word16] = Mem479[ds_469:0x29E1:word16]
	Mem485[ss:sp_252 - 4:word16] = Mem482[ds_469:0x29DF:word16]
	Mem488[ss:sp_252 - 6:word16] = 0x4D5A
	selector ds_493
	fn0800_401E(ds_469, Mem488[ss:sp_252 - 6:word16], Mem488[ss:sp_252 - 4:word16], Mem488[ss:sp_252 - 2:word16], out cx_1628, out dx_1629, out bx_1630, out ds_493, out Top_1631)
	Mem504[ss:sp_252 - 2:word16] = Mem488[ds_493:0x29E1:word16]
	Mem507[ss:sp_252 - 4:word16] = Mem504[ds_493:0x29DF:word16]
	Mem512[ss:sp_252 - 6:word16] = 0x0000
	Mem514[ss:sp_252 - 8:word16] = 0x0000
	selector ds_519
	fn0800_409C(ds_493, Mem514[ss:sp_252 - 8:word16], Mem514[ss:sp_252 - 6:word16], Mem514[ss:sp_252 - 4:word16], Mem514[ss:sp_252 - 2:word16], out dx_1632, out ds_519, out Top_1633)
	Mem530[ss:sp_252 - 2:word16] = Mem514[ds_519:0x29E1:word16]
	Mem533[ss:sp_252 - 4:word16] = Mem530[ds_519:0x29DF:word16]
	Mem538[ss:sp_252 - 6:word16] = 0x0000
	Mem540[ss:sp_252 - 8:word16] = 0x0000
	selector ds_545
	fn0800_409C(ds_519, Mem540[ss:sp_252 - 8:word16], Mem540[ss:sp_252 - 6:word16], Mem540[ss:sp_252 - 4:word16], Mem540[ss:sp_252 - 2:word16], out dx_1634, out ds_545, out Top_1635)
	Mem557[ss:sp_252 - 2:word16] = Mem540[ds_545:0x29E1:word16]
	Mem560[ss:sp_252 - 4:word16] = Mem557[ds_545:0x29DF:word16]
	Mem563[ss:sp_252 - 6:word16] = ax_360
	selector ds_568
	fn0800_40BF(ds_545, Mem563[ss:sp_252 - 6:byte], Mem563[ss:sp_252 - 4:word16], Mem563[ss:sp_252 - 2:word16], out dx_1636, out di_1637, out ds_568)
	Mem580[ss:sp_252 - 2:word16] = Mem563[ds_568:0x29E1:word16]
	Mem583[ss:sp_252 - 4:word16] = Mem580[ds_568:0x29DF:word16]
	Mem586[ss:sp_252 - 6:word16] = ax_381
	selector ds_591
	fn0800_40BF(ds_568, Mem586[ss:sp_252 - 6:byte], Mem586[ss:sp_252 - 4:word16], Mem586[ss:sp_252 - 2:word16], out dx_1638, out di_1639, out ds_591)
	Mem603[ss:sp_252 - 2:word16] = Mem586[ds_591:0x29E1:word16]
	Mem606[ss:sp_252 - 4:word16] = Mem603[ds_591:0x29DF:word16]
	Mem609[ss:sp_252 - 6:word16] = ax_465
	selector ds_614
	fn0800_40BF(ds_591, Mem609[ss:sp_252 - 6:byte], Mem609[ss:sp_252 - 4:word16], Mem609[ss:sp_252 - 2:word16], out dx_1640, out di_1641, out ds_614)
	Mem626[ss:sp_252 - 2:word16] = Mem609[ds_614:0x29E1:word16]
	Mem629[ss:sp_252 - 4:word16] = Mem626[ds_614:0x29DF:word16]
	Mem632[ss:sp_252 - 6:word16] = ax_444
	selector ds_637
	fn0800_40BF(ds_614, Mem632[ss:sp_252 - 6:byte], Mem632[ss:sp_252 - 4:word16], Mem632[ss:sp_252 - 2:word16], out dx_1642, out di_1643, out ds_637)
	Mem648[ss:sp_252 - 2:word16] = Mem632[ds_637:0x29E1:word16]
	Mem651[ss:sp_252 - 4:word16] = Mem648[ds_637:0x29DF:word16]
	Mem656[ss:sp_252 - 6:word16] = 0x0000
	selector ds_661
	fn0800_401E(ds_637, Mem656[ss:sp_252 - 6:word16], Mem656[ss:sp_252 - 4:word16], Mem656[ss:sp_252 - 2:word16], out cx_1644, out dx_1645, out bx_1646, out ds_661, out Top_1647)
	Mem673[ss:sp_252 - 2:word16] = Mem656[ds_661:0x29E1:word16]
	Mem676[ss:sp_252 - 4:word16] = Mem673[ds_661:0x29DF:word16]
	Mem679[ss:sp_252 - 6:word16] = ax_402
	selector ds_684
	fn0800_40BF(ds_661, Mem679[ss:sp_252 - 6:byte], Mem679[ss:sp_252 - 4:word16], Mem679[ss:sp_252 - 2:word16], out dx_1648, out di_1649, out ds_684)
	Mem696[ss:sp_252 - 2:word16] = Mem679[ds_684:0x29E1:word16]
	Mem699[ss:sp_252 - 4:word16] = Mem696[ds_684:0x29DF:word16]
	Mem702[ss:sp_252 - 6:word16] = ax_423
	selector ds_707
	fn0800_40BF(ds_684, Mem702[ss:sp_252 - 6:byte], Mem702[ss:sp_252 - 4:word16], Mem702[ss:sp_252 - 2:word16], out dx_1650, out di_1651, out ds_707)
	Mem719[ss:sp_252 - 2:word16] = Mem702[ds_707:0x29E1:word16]
	Mem722[ss:sp_252 - 4:word16] = Mem719[ds_707:0x29DF:word16]
	Mem725[ss:sp_252 - 6:word16] = 0x001E
	selector ds_730
	fn0800_40BF(ds_707, Mem725[ss:sp_252 - 6:byte], Mem725[ss:sp_252 - 4:word16], Mem725[ss:sp_252 - 2:word16], out dx_1652, out di_1653, out ds_730)
	Mem742[ss:sp_252 - 2:word16] = Mem725[ds_730:0x29E1:word16]
	Mem745[ss:sp_252 - 4:word16] = Mem742[ds_730:0x29DF:word16]
	Mem748[ss:sp_252 - 6:word16] = ax_339
	selector ds_753
	fn0800_40BF(ds_730, Mem748[ss:sp_252 - 6:byte], Mem748[ss:sp_252 - 4:word16], Mem748[ss:sp_252 - 2:word16], out dx_1654, out di_1655, out ds_753)
	Mem764[ss:sp_252 - 2:word16] = Mem748[ds_753:0x29E1:word16]
	Mem767[ss:sp_252 - 4:word16] = Mem764[ds_753:0x29DF:word16]
	Mem772[ss:sp_252 - 6:word16] = 0x0000
	selector ds_1044
	fn0800_401E(ds_753, Mem772[ss:sp_252 - 6:word16], Mem772[ss:sp_252 - 4:word16], Mem772[ss:sp_252 - 2:word16], out cx_1656, out dx_1657, out bx_1658, out ds_1044, out Top_1659)
	Mem788[ss:sp_252 - 2:word16] = 0x0000
	Mem795[ss:sp_252 - 4:word16] = 0x0000
	Mem797[ss:sp_252 - 6:word16] = ax_318 + 0x0020
	Mem800[ss:sp_252 - 8:word16] = Mem797[ds_1044:0x29E5:word16]
	Mem803[ss:sp_252 - 10:word16] = Mem800[ds_1044:0x29E3:word16]
	fn0800_ACB3(ds_1044, Mem803[ss:sp_252 - 10:word16], Mem803[ss:sp_252 - 8:word16], Mem803[ss:sp_252 - 2:word16], out cx_1660, out dx_1661, out bx_1662)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49B5:
	Mem822[ss:sp_252 - 2:word16] = Mem817[ds_1044:0x29E5:word16]
	Mem825[ss:sp_252 - 4:word16] = Mem822[ds_1044:0x29E3:word16]
	word16 ax_840 = DPB(fn0800_3DCF(ds_1044, Mem825[ss:sp_252 - 4:segptr32], out ch_1671, out dx_1672, out di_1673, out ds_1044, out Top_1674), 0x00, 8)
	word16 di_842 = ax_840
	branch ax_840 == 0x0000 l0800_4A22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49CB:
	Mem848[ss:sp_252 - 2:word16] = Mem825[ds_1044:0x29E5:word16]
	Mem851[ss:sp_252 - 4:word16] = Mem848[ds_1044:0x29E3:word16]
	word16 ax_852 = fn0800_3FAD(ds_1044, Mem851[ss:sp_252 - 4:word16], Mem851[ss:sp_252 - 2:word16], out ch_1663, out di_842, out ds_1044)
	word16 si_867 = 0x0000
	word16 wLoc0C_1479 = di_842
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A15:
	wLoc0C_1479 = wLoc0C_1479 - 0x0001
	branch wLoc0C_1479 != 0x0000 l0800_49E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_49E3:
	Mem885[ss:sp_252 - 2:word16] = Mem876[ds_1044:0x29E5:word16]
	Mem888[ss:sp_252 - 4:word16] = Mem885[ds_1044:0x29E3:word16]
	selector ds_896
	si_867 = si_867 + DPB(fn0800_3DCF(ds_1044, Mem888[ss:sp_252 - 4:segptr32], out ch_1664, out dx_1665, out di_1666, out ds_896, out Top_1667), 0x00, 8)
	Mem909[ss:sp_252 - 2:word16] = Mem888[ds_896:0x29E1:word16]
	Mem912[ss:sp_252 - 4:word16] = Mem909[ds_896:0x29DF:word16]
	Mem914[ss:sp_252 - 6:word16] = si_867
	selector ds_919
	fn0800_40BF(ds_896, Mem914[ss:sp_252 - 6:byte], Mem914[ss:sp_252 - 4:word16], Mem914[ss:sp_252 - 2:word16], out dx_1668, out di_1669, out ds_919)
	Mem931[ss:sp_252 - 2:word16] = Mem914[ds_919:0x29E1:word16]
	Mem934[ss:sp_252 - 4:word16] = Mem931[ds_919:0x29DF:word16]
	Mem937[ss:sp_252 - 6:word16] = ax_852
	fn0800_40BF(ds_919, Mem937[ss:sp_252 - 6:byte], Mem937[ss:sp_252 - 4:word16], Mem937[ss:sp_252 - 2:word16], out dx_1670, out di_842, out ds_1044)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A1F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A22:
	branch di_842 != 0x0000 l0800_49B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A26:
	word16 di_1012
	Mem967[ss:sp_252 - 2:word16] = Mem962[ds_1044:0x29E1:word16]
	Mem970[ss:sp_252 - 4:word16] = Mem967[ds_1044:0x29DF:word16]
	word16 dx_974
	word16 ax_971 = fn0800_AD2F(ds_1044, Mem970[ss:sp_252 - 4:segptr32], out dx_974)
	branch dx_974 > 0x0000 l0800_4A56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A38:
	branch dx_974 < 0x0000 l0800_4A3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A3A:
	branch ax_971 >=u 0x0200 l0800_4A56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A56:
	Mem993[ss:sp_252 - 2:word16] = Mem970[ds_1044:0x29E1:word16]
	Mem996[ss:sp_252 - 4:word16] = Mem993[ds_1044:0x29DF:word16]
	di_1012 = 0x0010 - fn0800_AD2F(ds_1044, Mem996[ss:sp_252 - 4:segptr32], out dx_1675) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A3F:
	Mem1019[ss:sp_252 - 2:word16] = Mem970[ds_1044:0x29E1:word16]
	Mem1022[ss:sp_252 - 4:word16] = Mem1019[ds_1044:0x29DF:word16]
	di_1012 = 0x0200 - fn0800_AD2F(ds_1044, Mem1022[ss:sp_252 - 4:segptr32], out dx_1676)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A81:
	branch di_1012 != 0x0000 l0800_4A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A70:
	Mem1050[ss:sp_252 - 2:word16] = Mem1045[ds_1044:0x29E1:word16]
	Mem1053[ss:sp_252 - 4:word16] = Mem1050[ds_1044:0x29DF:word16]
	Mem1057[ss:sp_252 - 6:word16] = DPB(di_1012, 0x00, 0)
	fn0800_4047(ds_1044, Mem1057[ss:sp_252 - 6:byte], Mem1057[ss:sp_252 - 4:segptr32], out cx_1677, out dx_1678, out bx_1679, out di_1012, out ds_1044, out Top_1680)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4A88:
	Mem1074[ss:sp_252 - 2:word16] = Mem1045[ds_1044:0x29E1:word16]
	Mem1077[ss:sp_252 - 4:word16] = Mem1074[ds_1044:0x29DF:word16]
	word16 dx_1081
	fn0800_8C8A(fn0800_AD2F(ds_1044, Mem1077[ss:sp_252 - 4:segptr32], out dx_1081), 0x04, dx_1081, out cl_1681, out dx_1682)
	word16 sp_1094 = <invalid>
	Mem1108[ss:sp_1094 - 2:word16] = 0x0000
	Mem1111[ss:sp_1094 - 4:word16] = dx_154
	Mem1114[ss:sp_1094 - 6:word16] = ax_151
	Mem1117[ss:sp_1094 - 8:word16] = Mem1114[ds_1044:0x29E5:word16]
	Mem1120[ss:sp_1094 - 10:word16] = Mem1117[ds_1044:0x29E3:word16]
	fn0800_ACB3(ds_1044, Mem1120[ss:sp_1094 - 10:word16], Mem1120[ss:sp_1094 - 8:word16], Mem1120[ss:sp_1094 - 2:word16], out cx_1683, out dx_1684, out bx_1685)
	word16 bp_1133
	selector ds_1137
	word16 ax_1132 = fn0800_5374(ds_1044, out dx_1686, out bp_1133, out ds_1137)
	word16 sp_1141 = <invalid>
	branch ax_1132 == 0x0000 l0800_4AC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4AC4:
	Mem1154[ss:sp_1141 - 2:word16] = Mem1120[ds_1137:0x29E1:word16]
	Mem1157[ss:sp_1141 - 4:word16] = Mem1154[ds_1137:0x29DF:word16]
	word16 dx_1161
	word16 ax_1158 = fn0800_AD2F(ds_1137, Mem1157[ss:sp_1141 - 4:segptr32], out dx_1161)
	Mem1168[ss:bp_1133 - 0x0006:word16] = dx_1161
	Mem1169[ss:bp_1133 - 0x0008:word16] = ax_1158
	Mem1174[ss:sp_1141 - 2:word16] = 0x0000
	Mem1177[ss:sp_1141 - 4:word16] = Mem1174[ss:bp_1133 - 0x0002:word16]
	Mem1180[ss:sp_1141 - 6:word16] = Mem1177[ss:bp_1133 - 0x0004:word16]
	Mem1183[ss:sp_1141 - 8:word16] = Mem1180[ds_1137:0x29E5:word16]
	Mem1186[ss:sp_1141 - 10:word16] = Mem1183[ds_1137:0x29E3:word16]
	word16 dx_1190
	word16 ax_1187 = fn0800_ACB3(ds_1137, Mem1186[ss:sp_1141 - 10:word16], Mem1186[ss:sp_1141 - 8:word16], Mem1186[ss:sp_1141 - 2:word16], out cx_1687, out dx_1190, out bx_1688)
	Mem1200[ss:sp_1141 - 2:word16] = Mem1186[ds_1137:0x29E5:word16]
	Mem1203[ss:sp_1141 - 4:word16] = Mem1200[ds_1137:0x29E3:word16]
	fn0800_4194(ds_1137, Mem1203[ss:sp_1141 - 4:word16], Mem1203[ss:sp_1141 - 2:word16])
	ui32 dx_ax_1444 = SEQ(dx_1190, ax_1187) - SEQ(Mem1203[ss:bp_1133 - 0x0002:word16], Mem1203[ss:bp_1133 - 0x0004:word16])
	Mem1218[ss:sp_1141 - 2:word16] = SLICE(dx_ax_1444, word16, 16)
	Mem1220[ss:sp_1141 - 4:word16] = (word16) dx_ax_1444
	Mem1223[ss:sp_1141 - 6:word16] = Mem1220[ds_1137:0x29E1:word16]
	Mem1226[ss:sp_1141 - 8:word16] = Mem1223[ds_1137:0x29DF:word16]
	Mem1229[ss:sp_1141 - 10:word16] = Mem1226[ds_1137:0x29E5:word16]
	Mem1232[ss:sp_1141 - 12:word16] = Mem1229[ds_1137:0x29E3:word16]
	word16 bp_1234
	selector ds_1238
	fn0800_3B0A(Mem1232[ss:sp_1141 - 4:word16], Mem1232[ss:sp_1141 - 2:word16], out dx_1689, out bp_1234, out ds_1238)
	word16 di_1249 = Mem1232[ss:bp_1234 - 0x0008:word16]
	Mem1265[ss:bp_1234 - 0x000A:word16] = fn0800_8CAA(Mem1232[ss:bp_1234 - 0x0008:word16], 0x09, Mem1232[ss:bp_1234 - 0x0006:word16], out dx_1690)
	word16 sp_1260 = <invalid>
	branch (di_1249 & 0x01FF) == 0x0000 l0800_4B37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B34:
	Mem1271[ss:bp_1234 - 0x000A:word16] = Mem1265[ss:bp_1234 - 0x000A:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B37:
	Mem1279[ss:sp_1260 - 2:word16] = 0x0000
	Mem1282[ss:sp_1260 - 4:word16] = 0x0000
	Mem1284[ss:sp_1260 - 6:word16] = 0x0002
	Mem1288[ss:sp_1260 - 8:word16] = Mem1284[ds_1238:0x29E1:word16]
	Mem1291[ss:sp_1260 - 10:word16] = Mem1288[ds_1238:0x29DF:word16]
	fn0800_ACB3(ds_1238, Mem1291[ss:sp_1260 - 10:word16], Mem1291[ss:sp_1260 - 8:word16], Mem1291[ss:sp_1260 - 2:word16], out cx_1691, out dx_1692, out bx_1693)
	Mem1305[ss:sp_1260 - 2:word16] = Mem1291[ds_1238:0x29E1:word16]
	Mem1308[ss:sp_1260 - 4:word16] = Mem1305[ds_1238:0x29DF:word16]
	Mem1311[ss:sp_1260 - 6:word16] = di_1249 & 0x01FF
	selector ds_1316
	fn0800_40BF(ds_1238, Mem1311[ss:sp_1260 - 6:byte], Mem1311[ss:sp_1260 - 4:word16], Mem1311[ss:sp_1260 - 2:word16], out dx_1694, out di_1695, out ds_1316)
	Mem1328[ss:sp_1260 - 2:word16] = Mem1311[ds_1316:0x29E1:word16]
	Mem1331[ss:sp_1260 - 4:word16] = Mem1328[ds_1316:0x29DF:word16]
	Mem1335[ss:sp_1260 - 6:word16] = Mem1331[ss:bp_1234 - 0x000A:word16]
	selector ds_1340
	fn0800_40BF(ds_1316, Mem1335[ss:sp_1260 - 6:byte], Mem1335[ss:sp_1260 - 4:word16], Mem1335[ss:sp_1260 - 2:word16], out dx_1696, out di_1697, out ds_1340)
	Mem1352[ss:sp_1260 - 2:word16] = Mem1335[ds_1340:0x29E1:word16]
	Mem1355[ss:sp_1260 - 4:word16] = Mem1352[ds_1340:0x29DF:word16]
	Mem1358[ss:sp_1260 - 6:word16] = Mem1355[ss:bp_1234 - 0x000C:word16]
	selector ds_1363
	fn0800_40BF(ds_1340, Mem1358[ss:sp_1260 - 6:byte], Mem1358[ss:sp_1260 - 4:word16], Mem1358[ss:sp_1260 - 2:word16], out dx_1698, out di_1699, out ds_1363)
	Mem1375[ss:sp_1260 - 2:word16] = Mem1358[ds_1363:0x29E1:word16]
	Mem1378[ss:sp_1260 - 4:word16] = Mem1375[ds_1363:0x29DF:word16]
	Mem1381[ss:sp_1260 - 6:word16] = Mem1378[ss:bp_1234 - 0x000E:word16]
	selector ds_1386
	word16 dx_1387
	fn0800_40BF(ds_1363, Mem1381[ss:sp_1260 - 6:byte], Mem1381[ss:sp_1260 - 4:word16], Mem1381[ss:sp_1260 - 2:word16], out dx_1387, out di_1700, out ds_1386)
	dxOut = dx_1387
	dsOut = ds_1386
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4ABE:
	dxOut = ax_1132
	dsOut = ds_1137
	return ax_1132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4798:
	dxOut = dx_135
	dsOut = ds_121
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4758:
	dxOut = 0x0000
	dsOut = ds_62
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4716:
	dxOut = dx
	dsOut = ds
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_46FE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4B97(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_4B97_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4B97:
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, Mem9[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out dx_20, out ds_19) != 0x0000 l0800_4BAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BAD:
	selector ds_37
	word16 dx_38
	word16 ax_32 = fn0800_5374(ds_19, out dx_38, out bp_71, out ds_37)
	dxOut = dx_38
	dsOut = ds_37
	return ax_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BA9:
	dxOut = dx_20
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4B97_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4BB1(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_4BB1_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BB1:
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, Mem9[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out dx_20, out ds_19) != 0x0000 l0800_4BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BC7:
	fn0800_ACB3(ds_19, Mem43[ds_19:0x29E3:word16], Mem40[ds_19:0x29E5:word16], 0x0001, out cx_264, out dx_265, out bx_266)
	fn0800_401E(ds_19, 0x601A, Mem60[ds_19:0x29DF:word16], Mem46[ds_19:0x29E1:word16], out cx_267, out dx_268, out bx_269, out ds_270, out Top_271)
	selector ds_105
	fn0800_3B0A(0x0010, 0x0000, out dx_272, out bp_273, out ds_105)
	word16 sp_109 = <invalid>
	Mem118[ss:sp_109 + 0x000A:word16] = Mem99[ds_105:0x29E1:word16]
	Mem121[ss:sp_109 + 0x0008:word16] = Mem118[ds_105:0x29DF:word16]
	Mem126[ss:sp_109 + 0x0006:word16] = 0x0000
	Mem128[ss:sp_109 + 0x0004:word16] = 0x0000
	selector ds_133
	fn0800_409C(ds_105, Mem128[ss:sp_109 + 0x0004:word16], Mem128[ss:sp_109 + 0x0006:word16], Mem128[ss:sp_109 + 0x0008:word16], Mem128[ss:sp_109 + 0x000A:word16], out dx_274, out ds_133, out Top_275)
	Mem144[ss:sp_109 + 0x000A:word16] = Mem128[ds_133:0x29E1:word16]
	Mem147[ss:sp_109 + 0x0008:word16] = Mem144[ds_133:0x29DF:word16]
	Mem152[ss:sp_109 + 0x0006:word16] = 0x0000
	Mem154[ss:sp_109 + 0x0004:word16] = 0x0000
	selector ds_159
	fn0800_409C(ds_133, Mem154[ss:sp_109 + 0x0004:word16], Mem154[ss:sp_109 + 0x0006:word16], Mem154[ss:sp_109 + 0x0008:word16], Mem154[ss:sp_109 + 0x000A:word16], out dx_276, out ds_159, out Top_277)
	Mem171[ss:sp_109 + 0x000A:word16] = Mem154[ds_159:0x29E1:word16]
	Mem174[ss:sp_109 + 0x0008:word16] = Mem171[ds_159:0x29DF:word16]
	Mem177[ss:sp_109 + 0x0006:word16] = Mem174[ds_159:0x29E5:word16]
	Mem180[ss:sp_109 + 0x0004:word16] = Mem177[ds_159:0x29E3:word16]
	selector ds_185
	Mem196[ss:sp_109 + 0x0006:word16] = fn0800_3E27(ds_159, Mem180[ss:sp_109 + 0x0004:word16], Mem180[ss:sp_109 + 0x0006:word16], out cx_278, out dx_279, out di_280, out ds_185, out Top_281)
	selector ds_201
	fn0800_401E(ds_185, Mem196[ss:sp_109 + 0x0006:word16], Mem196[ss:sp_109 + 0x0008:word16], Mem196[ss:sp_109 + 0x000A:word16], out cx_282, out dx_283, out bx_284, out ds_201, out Top_285)
	selector ds_216
	word16 dx_217
	word16 ax_211 = fn0800_5374(ds_201, out dx_217, out bp_286, out ds_216)
	dxOut = dx_217
	dsOut = ds_216
	return ax_211
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4BC3:
	dxOut = dx_20
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4BB1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_4C55(word16 ax, word16 bp, selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es sp Top
// Preserved:
fn0800_4C55_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C55:
	selector ds_21
	word16 dx_22 = fn0800_3E5D(ds, Mem14[ds:0x29E3:word16], Mem7[ds:0x29E5:word16], out ds_21, out Top_897)
	branch dx_22 != 0x0000 l0800_4C72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C6D:
	branch ax == 0x03F3 l0800_4C79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C79:
	selector ds_109
	word16 ax_180 = fn0800_409C(ds_21, 0x03F3, 0x0000, Mem39[ds_21:0x29DF:word16], Mem17[ds_21:0x29E1:word16], out dx_898, out ds_109, out Top_899)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C8E:
	selector ds_78
	word16 dx_79 = fn0800_3E5D(ds_109, Mem71[ds_109:0x29E3:word16], Mem66[ds_109:0x29E5:word16], out ds_78, out Top_903)
	fn0800_409C(ds_78, ax_180, dx_79, Mem96[ds_78:0x29DF:word16], Mem93[ds_78:0x29E1:word16], out dx_904, out ds_109, out Top_905)
	word16 wLoc08_708 = dx_79
	word16 wLoc0A_709 = ax_180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CDA:
	word16 v21_124 = wLoc0A_709 - 0x0001
	wLoc0A_709 = v21_124
	wLoc08_708 = wLoc08_708 - (v21_124 <u 0x0000)
	word16 ax_130 = wLoc0A_709 | wLoc08_708
	branch ax_130 != 0x0000 l0800_4CBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CBC:
	selector ds_151
	fn0800_409C(ds_151, ax_130, fn0800_3E5D(ds_109, Mem144[ds_109:0x29E3:word16], Mem141[ds_109:0x29E5:word16], out ds_151, out Top_900), Mem138[ds_109:0x29DF:word16], Mem129[ds_109:0x29E1:word16], out dx_901, out ds_109, out Top_902)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CEC:
	ax_180 = ax_180 | dx_79
	Mem66 = Mem129
	branch ax_180 != 0x0000 l0800_4C8E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4CF4:
	selector ds_199
	selector ds_221
	word16 ax_217 = fn0800_409C(ds_199, ax_180 - 0x0001, fn0800_3E5D(ds_109, Mem192[ds_109:0x29E3:word16], Mem189[ds_109:0x29E5:word16], out ds_199, out Top_906) - (ax_180 <u 0x0001), Mem186[ds_109:0x29DF:word16], Mem129[ds_109:0x29E1:word16], out dx_907, out ds_221, out Top_908)
	selector ds_240
	word16 dx_241 = fn0800_3E5D(ds_221, Mem233[ds_221:0x29E3:word16], Mem216[ds_221:0x29E5:word16], out ds_240, out Top_909)
	selector ds_261
	word16 dx_262 = fn0800_3E5D(ds_240, Mem254[ds_240:0x29E3:word16], Mem251[ds_240:0x29E5:word16], out ds_261, out Top_910)
	selector ds_297
	fn0800_409C(ds_261, ax_217, dx_241, Mem283[ds_261:0x29DF:word16], Mem280[ds_261:0x29E1:word16], out dx_911, out ds_297, out Top_912)
	selector ds_327
	fn0800_409C(ds_297, ax_217 - 0x0001, dx_262 - (ax_217 <u 0x0001), Mem308[ds_297:0x29DF:word16], Mem292[ds_297:0x29E1:word16], out dx_913, out ds_327, out Top_914)
	word16 dx_346
	word16 ax_343 = fn0800_AD2F(ds_327, SEQ(Mem322[ds_327:0x29E1:word16], Mem339[ds_327:0x29DF:word16]), out dx_346)
	Mem353[ds_327:0x4E8E:word16] = dx_346
	Mem354[ds_327:0x4E8C:word16] = ax_343
	fn0800_ACB3(ds_327, Mem368[ds_327:0x29E3:word16], Mem365[ds_327:0x29E5:word16], 0x0001, out cx_915, out dx_916, out bx_917)
	ui32 ax_dx_698 = SEQ(dx_262, ax_217) - SEQ(dx_241, ax_217)
	word16 ax_277 = SLICE(ax_dx_698, word16, 16)
	word16 dx_274 = (word16) ax_dx_698
	word16 wLoc04_760 = ax_277
	word16 wLoc06_761 = dx_274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DE4:
	word16 ax_391 = wLoc06_761 | wLoc04_760
	branch ax_391 != 0x0000 l0800_4DBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DBE:
	selector ds_412
	fn0800_409C(ds_412, ax_391, fn0800_3E5D(ds_327, Mem405[ds_327:0x29E3:word16], Mem402[ds_327:0x29E5:word16], out ds_412, out Top_918), Mem399[ds_327:0x29DF:word16], Mem389[ds_327:0x29E1:word16], out dx_919, out ds_327, out Top_920)
	word16 v56_439 = wLoc06_761 - 0x0001
	wLoc06_761 = v56_439
	wLoc04_760 = wLoc04_760 - (v56_439 <u 0x0000)
	Mem389 = Mem444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4DEC:
	word16 v45_457 = Mem456[ds_327:0x29E5:word16]
	word16 v46_460 = Mem459[ds_327:0x29E3:word16]
	word16 ax_463 = fn0800_ACB3(ds_327, v46_460, v45_457, 0x0001, out cx_921, out dx_922, out bx_923)
	word16 v48_477 = Mem476[ds_327:0x29E3:word16]
	selector ds_483
	word16 dx_495 = fn0800_3E5D(ds_327, v48_477, Mem462[ds_327:0x29E5:word16], out ds_483, out Top_924) + (ax_463 <u 0x0001)
	word16 dx_508
	word16 ax_505 = fn0800_8C69(ax_463 + 0x0001, 0x02, dx_495, out cl_925, out dx_508)
	word16 sp_509 = <invalid>
	Mem515[ss:sp_509 - 2:word16] = dx_508
	Mem517[ss:sp_509 - 4:word16] = ax_505
	Mem520[ss:sp_509 - 6:word16] = Mem517[ds_483:0x29E5:word16]
	Mem523[ss:sp_509 - 8:word16] = Mem520[ds_483:0x29E3:word16]
	fn0800_ACB3(ds_483, Mem523[ss:sp_509 - 8:word16], Mem523[ss:sp_509 - 6:word16], Mem523[ss:sp_509:word16], out cx_926, out dx_927, out bx_928)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4EDE:
	Mem537[ss:sp_509:word16] = Mem523[ds_483:0x29E5:word16]
	Mem540[ss:sp_509 - 2:word16] = Mem537[ds_483:0x29E3:word16]
	word16 dx_544
	word16 ax_541 = fn0800_AD2F(ds_483, Mem540[ss:sp_509 - 2:segptr32], out dx_544)
	Mem553[ss:sp_509:word16] = ax_541
	Mem555[ss:sp_509 - 2:word16] = dx_544
	Mem558[ss:sp_509 - 4:word16] = Mem555[ds_483:0x29E5:word16]
	Mem561[ss:sp_509 - 6:word16] = Mem558[ds_483:0x29E3:word16]
	fn0800_4194(ds_483, Mem561[ss:sp_509 - 6:word16], Mem561[ss:sp_509 - 4:word16])
	word16 bx_570 = Mem561[ss:sp_509 - 0x0002:word16]
	word16 dx_573 = Mem561[ss:sp_509:word16]
	branch bx_570 >=u dx_544 l0800_4F05
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F05:
	branch bx_570 != dx_544 l0800_4F0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F07:
	branch dx_573 >=u ax_541 l0800_4F0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F0E:
	dxOut = dx_573
	dsOut = ds_483
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F0B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F02:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E41:
	Mem594[ss:sp_509:word16] = Mem561[ds_483:0x29E5:word16]
	Mem597[ss:sp_509 - 2:word16] = Mem594[ds_483:0x29E3:word16]
	selector ds_601
	word16 dx_602 = fn0800_3E5D(ds_483, Mem597[ss:sp_509 - 2:word16], Mem597[ss:sp_509:word16], out ds_601, out Top_929)
	Mem617[ss:sp_509:word16] = Mem614[ds_601:0x29E1:word16]
	Mem620[ss:sp_509 - 2:word16] = Mem617[ds_601:0x29DF:word16]
	Mem623[ss:sp_509 - 4:word16] = dx_602
	Mem625[ss:sp_509 - 6:word16] = ax_541
	selector ds_630
	int8 Top_633
	fn0800_409C(ds_601, Mem625[ss:sp_509 - 6:word16], Mem625[ss:sp_509 - 4:word16], Mem625[ss:sp_509 - 2:word16], Mem625[ss:sp_509:word16], out dx_930, out ds_630, out Top_633)
	word16 cx_646 = 0x0004
	word16 bx_647 = 0x4F14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E7C:
	branch Mem645[0x0800:bx_647:word16] != ax_541 l0800_4E8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E84:
	word16 ax_655 = Mem645[0x0800:bx_647 + 0x0008:word16]
	branch ax_655 == (dx_602 & 0x3FFF) l0800_4E94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E94:
	word16 dx_662
	word16 ax_663
	call Mem645[0x0800:bx_647 + 0x0010:word16] (retsize: 2;)
		uses: ax:ax_655,bx:bx_648,cx:cx_664,dx:ax_541,sp:sp_509 + 0x0002,Stack +0000:bp,Stack +FFFFFFDE:v46_460,Stack +FFFFFFE0:v45_457,Stack +FFFFFFE2:0x0004,Stack +FFFFFFE4:v48_477,Stack +FFFFFFE6:0x0001,Stack +FFFFFFE8:ax_541,Stack +FFFFFFEA:dx_602 & 0x3FFF,Stack +FFFFFFEC:dx_274,Stack +FFFFFFEE:ax_277,Stack +FFFFFFF0:ax_217,Stack +FFFFFFF2:dx_262,Stack +FFFFFFF4:ax_217,Stack +FFFFFFF6:dx_241,Stack +FFFFFFF8:ax_541,Stack +FFFFFFFA:dx_602,Stack +FFFFFFFC:ax_463 + 0x0001,Stack +FFFFFFFE:dx_495,Top:Top_633
		defs: ax:ax_663,dx:dx_662
	dxOut = dx_662
	dsOut = ds_630
	return ax_663
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E8D:
	bx_647 = bx_647 + 0x0002
	cx_646 = cx_646 - 0x0001
	branch cx_646 != 0x0000 l0800_4E7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4E92:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4ED7:
	dxOut = ax_541
	dsOut = ds_630
	return 0x0009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4C72:
	dxOut = dx_22
	dsOut = ds_21
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4C55_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_4F2C(word16 ax, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_4F2C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F2C:
	word16 dx_36
	selector ds_103
	word16 ax_33 = fn0800_8C69(ax, 0x02, fn0800_3E5D(ds, Mem14[ds:0x29E3:word16], Mem7[ds:0x29E5:word16], out ds_103, out Top_778), out cl_779, out dx_36)
	word16 sp_37 = <invalid>
	Mem46[ss:sp_37 - 2:word16] = Mem43[ds_103:0x29E5:word16]
	Mem49[ss:sp_37 - 4:word16] = Mem46[ds_103:0x29E3:word16]
	word16 dx_53
	word16 ax_50 = fn0800_AD2F(ds_103, Mem49[ss:sp_37 - 4:segptr32], out dx_53)
	branch dx_36 <u 0x0000 l0800_4F95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F65:
	branch dx_36 >u 0x0000 l0800_4F6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F67:
	branch ax_33 <=u 0x0012 l0800_4F95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F6D:
	Mem73[ss:sp_37 - 2:word16] = Mem61[ds_103:0x29E5:word16]
	Mem76[ss:sp_37 - 4:word16] = Mem73[ds_103:0x29E3:word16]
	selector ds_80
	wLoc16 = fn0800_3E5D(ds_103, Mem76[ss:sp_37 - 4:word16], Mem76[ss:sp_37 - 2:word16], out ds_80, out Top_781)
	Mem96[ss:sp_37 - 2:word16] = Mem93[ds_80:0x29E5:word16]
	Mem99[ss:sp_37 - 4:word16] = Mem96[ds_80:0x29E3:word16]
	wLoc18 = ax_50
	wLoc0E = fn0800_3E5D(ds_80, Mem99[ss:sp_37 - 4:word16], Mem99[ss:sp_37 - 2:word16], out ds_103, out Top_782)
	wLoc10 = ax_50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4F95:
	Mem121[ss:sp_37 - 2:word16] = Mem116[ds_103:0x29E5:word16]
	Mem124[ss:sp_37 - 4:word16] = Mem121[ds_103:0x29E3:word16]
	selector ds_128
	word16 dx_143
	word16 ax_140 = fn0800_8CAA(ax_50, 0x08, fn0800_3F58(ds_103, Mem124[ss:sp_37 - 4:word16], Mem124[ss:sp_37 - 2:word16], out di_780, out ds_128), out dx_143)
	word16 sp_144 = <invalid>
	branch dx_143 != 0x0052 l0800_4FB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FAD:
	branch ax_140 != 0x4E43 l0800_4FB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FB5:
	Mem159[ss:sp_144 - 2:word16] = Mem124[ds_128:0x29E1:word16]
	Mem162[ss:sp_144 - 4:word16] = Mem159[ds_128:0x29DF:word16]
	word16 dx_171
	word16 ax_168 = fn0800_8CAA(ax_33, 0x02, dx_36, out dx_171)
	word16 sp_172 = <invalid>
	Mem178[ss:sp_172 - 2:word16] = dx_171
	Mem180[ss:sp_172 - 4:word16] = ax_168
	selector ds_185
	fn0800_409C(ds_128, Mem180[ss:sp_172 - 4:word16], Mem180[ss:sp_172 - 2:word16], Mem180[ss:sp_172:word16], Mem180[ss:sp_172 + 2:word16], out dx_783, out ds_185, out Top_784)
	Mem198[ss:sp_172 + 0x0002:word16] = 0x0000
	Mem201[ss:sp_172:word16] = dx_53
	Mem204[ss:sp_172 - 2:word16] = ax_50
	Mem207[ss:sp_172 - 4:word16] = Mem204[ds_185:0x29E5:word16]
	Mem210[ss:sp_172 - 6:word16] = Mem207[ds_185:0x29E3:word16]
	fn0800_ACB3(ds_185, Mem210[ss:sp_172 - 6:word16], Mem210[ss:sp_172 - 4:word16], Mem210[ss:sp_172 + 2:word16], out cx_785, out dx_786, out bx_787)
	Mem224[ss:sp_172 + 0x0002:word16] = dx_36
	Mem227[ss:sp_172:word16] = ax_33
	Mem230[ss:sp_172 - 2:word16] = Mem227[ds_185:0x29E1:word16]
	Mem233[ss:sp_172 - 4:word16] = Mem230[ds_185:0x29DF:word16]
	Mem236[ss:sp_172 - 6:word16] = Mem233[ds_185:0x29E5:word16]
	Mem239[ss:sp_172 - 8:word16] = Mem236[ds_185:0x29E3:word16]
	word16 sp_249 = <invalid>
	word16 bp_241
	selector ds_245
	word16 ax_240 = fn0800_3B0A(Mem239[ss:sp_172:word16], Mem239[ss:sp_172 + 2:word16], out dx_788, out bp_241, out ds_245)
	word16 sp_255 = sp_249 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50BC:
	word16 sp_261 = sp_255 - 2
	Mem263[ss:sp_261:word16] = Mem258[ds_245:0x29E5:word16]
	Mem266[ss:sp_261 - 2:word16] = Mem263[ds_245:0x29E3:word16]
	selector ds_270
	branch fn0800_3F58(ds_245, Mem266[ss:sp_261 - 2:word16], Mem266[ss:sp_261:word16], out di_803, out ds_270) != 0x0000 l0800_50D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50CE:
	branch ax_240 != 0x03EC l0800_50D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50D6:
	word16 v58_288 = Mem266[ds_270:0x4E8C:word16] + 0x0004
	Mem289[ds_270:0x4E8C:word16] = v58_288
	Mem293[ds_270:0x4E8E:word16] = Mem289[ds_270:0x4E8E:word16] + (v58_288 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50D3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5006:
	Mem305[ss:sp_261:word16] = 0x0001
	Mem311[ss:sp_261 - 2:word16] = 0x0000
	Mem313[ss:sp_261 - 4:word16] = 0x0004
	Mem316[ss:sp_261 - 6:word16] = Mem313[ds_270:0x29E5:word16]
	Mem319[ss:sp_261 - 8:word16] = Mem316[ds_270:0x29E3:word16]
	fn0800_ACB3(ds_270, Mem319[ss:sp_261 - 8:word16], Mem319[ss:sp_261 - 6:word16], Mem319[ss:sp_261:word16], out cx_804, out dx_805, out bx_806)
	Mem332[ss:sp_261:word16] = Mem319[ds_270:0x29E1:word16]
	Mem335[ss:sp_261 - 2:word16] = Mem332[ds_270:0x29DF:word16]
	Mem341[ss:sp_261 - 4:word16] = 0x0000
	Mem343[ss:sp_261 - 6:word16] = 0x03EC
	ax_240 = fn0800_409C(ds_270, Mem343[ss:sp_261 - 6:word16], Mem343[ss:sp_261 - 4:word16], Mem343[ss:sp_261 - 2:word16], Mem343[ss:sp_261:word16], out dx_807, out ds_245, out Top_808)
	sp_255 = sp_261 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5034:
	word16 sp_362 = sp_255 - 2
	Mem364[ss:sp_362:word16] = Mem359[ds_245:0x29E5:word16]
	Mem367[ss:sp_362 - 2:word16] = Mem364[ds_245:0x29E3:word16]
	selector ds_371
	Mem382[ss:bp_241 - 0x0004:word16] = fn0800_3E5D(ds_245, Mem367[ss:sp_362 - 2:word16], Mem367[ss:sp_362:word16], out ds_371, out Top_814)
	Mem384[ss:bp_241 - 0x0006:word16] = ax_240
	Mem387[ss:sp_362:word16] = Mem384[ds_371:0x29E1:word16]
	Mem390[ss:sp_362 - 2:word16] = Mem387[ds_371:0x29DF:word16]
	Mem393[ss:sp_362 - 4:word16] = Mem390[ss:bp_241 - 0x0004:word16]
	Mem395[ss:sp_362 - 6:word16] = ax_240
	fn0800_409C(ds_371, Mem395[ss:sp_362 - 6:word16], Mem395[ss:sp_362 - 4:word16], Mem395[ss:sp_362 - 2:word16], Mem395[ss:sp_362:word16], out dx_815, out ds_245, out Top_816)
	sp_255 = sp_362 + 0x0002
	word16 ax_410 = Mem395[ss:bp_241 - 0x0006:word16] | Mem395[ss:bp_241 - 0x0004:word16]
	branch ax_410 == 0x0000 l0800_50B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5062:
	Mem416[ss:sp_362:word16] = Mem395[ds_245:0x29E5:word16]
	Mem419[ss:sp_362 - 0x0002:word16] = Mem416[ds_245:0x29E3:word16]
	selector ds_423
	Mem437[ss:bp_241 - 0x0008:word16] = fn0800_3E5D(ds_245, Mem419[ss:sp_362 - 0x0002:word16], Mem419[ss:sp_362:word16], out ds_423, out Top_809) - (ax_410 <u 0x0001)
	Mem438[ss:bp_241 - 0x000A:word16] = ax_410 - 0x0001
	Mem441[ss:sp_362:word16] = Mem438[ds_423:0x29E1:word16]
	Mem444[ss:sp_362 - 0x0002:word16] = Mem441[ds_423:0x29DF:word16]
	Mem447[ss:sp_362 - 0x0004:word16] = Mem444[ss:bp_241 - 0x0008:word16]
	Mem449[ss:sp_362 - 6:word16] = ax_410 - 0x0001
	selector ds_454
	fn0800_409C(ds_423, Mem449[ss:sp_362 - 6:word16], Mem449[ss:sp_362 - 4:word16], Mem449[ss:sp_362 - 2:word16], Mem449[ss:sp_362:word16], out dx_810, out ds_454, out Top_811)
	word16 dx_470
	word16 ax_467 = fn0800_8C69(Mem449[ss:bp_241 - 0x0006:word16], 0x02, Mem449[ss:bp_241 - 0x0004:word16], out cl_812, out dx_470)
	word16 sp_471 = <invalid>
	Mem477[ss:sp_471 - 2:word16] = dx_470
	Mem479[ss:sp_471 - 4:word16] = ax_467
	Mem482[ss:sp_471 - 6:word16] = Mem479[ds_454:0x29E1:word16]
	Mem485[ss:sp_471 - 8:word16] = Mem482[ds_454:0x29DF:word16]
	Mem488[ss:sp_471 - 10:word16] = Mem485[ds_454:0x29E5:word16]
	Mem491[ss:sp_471 - 12:word16] = Mem488[ds_454:0x29E3:word16]
	fn0800_3B0A(Mem491[ss:sp_471 - 4:word16], Mem491[ss:sp_471 - 2:word16], out dx_813, out bp_241, out ds_245)
	word16 sp_501 = <invalid>
	sp_255 = sp_501 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50B1:
	ax_240 = Mem511[ss:bp_241 - 0x0006:word16] | Mem511[ss:bp_241 - 0x0004:word16]
	branch ax_240 == 0x0000 l0800_50BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_4FB2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_50E6:
	Mem519[ss:sp_144 - 2:word16] = Mem124[ds_128:0x29E1:word16]
	Mem522[ss:sp_144 - 4:word16] = Mem519[ds_128:0x29DF:word16]
	word16 dx_529
	word16 ax_526 = fn0800_8CAA(wLoc18, 0x02, wLoc16, out dx_529)
	word16 sp_530 = <invalid>
	Mem536[ss:sp_530 - 2:word16] = dx_529
	Mem538[ss:sp_530 - 4:word16] = ax_526
	selector ds_543
	fn0800_409C(ds_128, Mem538[ss:sp_530 - 4:word16], Mem538[ss:sp_530 - 2:word16], Mem538[ss:sp_530:word16], Mem538[ss:sp_530 + 2:word16], out dx_789, out ds_543, out Top_790)
	Mem555[ss:sp_530 + 0x0002:word16] = Mem538[ds_543:0x29E1:word16]
	Mem558[ss:sp_530:word16] = Mem555[ds_543:0x29DF:word16]
	word16 dx_562
	word16 ax_559 = fn0800_AD2F(ds_543, Mem558[ss:sp_530:segptr32], out dx_562)
	Mem575[ss:sp_530 + 0x0002:word16] = 0x0000
	Mem578[ss:sp_530:word16] = Mem575[ds_543:0x4E8E:word16]
	Mem581[ss:sp_530 - 2:word16] = Mem578[ds_543:0x4E8C:word16]
	Mem584[ss:sp_530 - 4:word16] = Mem581[ds_543:0x29E1:word16]
	Mem587[ss:sp_530 - 6:word16] = Mem584[ds_543:0x29DF:word16]
	fn0800_ACB3(ds_543, Mem587[ss:sp_530 - 6:word16], Mem587[ss:sp_530 - 4:word16], Mem587[ss:sp_530 + 2:word16], out cx_791, out dx_792, out bx_793)
	Mem601[ss:sp_530 + 0x0002:word16] = Mem587[ds_543:0x29E1:word16]
	Mem604[ss:sp_530:word16] = Mem601[ds_543:0x29DF:word16]
	Mem607[ss:sp_530 - 2:word16] = wLoc0E
	Mem610[ss:sp_530 - 4:word16] = wLoc10
	selector ds_615
	fn0800_409C(ds_543, Mem610[ss:sp_530 - 4:word16], Mem610[ss:sp_530 - 2:word16], Mem610[ss:sp_530:word16], Mem610[ss:sp_530 + 2:word16], out dx_794, out ds_615, out Top_795)
	word16 v48_624 = Mem610[ds_615:0x4E8C:word16] + 0x0004
	Mem625[ds_615:0x4E8C:word16] = v48_624
	Mem629[ds_615:0x4E8E:word16] = Mem625[ds_615:0x4E8E:word16] + (v48_624 <u 0x0000)
	Mem634[ss:sp_530 + 0x0002:word16] = 0x0000
	Mem637[ss:sp_530:word16] = dx_562
	Mem640[ss:sp_530 - 2:word16] = ax_559
	Mem643[ss:sp_530 - 4:word16] = Mem640[ds_615:0x29E1:word16]
	Mem646[ss:sp_530 - 6:word16] = Mem643[ds_615:0x29DF:word16]
	fn0800_ACB3(ds_615, Mem646[ss:sp_530 - 6:word16], Mem646[ss:sp_530 - 4:word16], Mem646[ss:sp_530 + 2:word16], out cx_796, out dx_797, out bx_798)
	word16 bp_659
	selector ds_663
	Mem673[ss:bp_659 - 0x0002:word16] = fn0800_5374(ds_615, out dx_799, out bp_659, out ds_663)
	word16 sp_667 = <invalid>
	Mem676[ss:sp_667 - 2:word16] = 0x0000
	ui32 ax_dx_712 = SEQ(Mem676[ss:bp_659 - 0x0018:word16], Mem676[ss:bp_659 - 0x001A:word16]) + SEQ(Mem676[ss:bp_659 - 0x0010:word16], Mem676[ss:bp_659 - 0x0012:word16])
	Mem685[ss:sp_667 - 4:word16] = SLICE(ax_dx_712, word16, 16)
	Mem687[ss:sp_667 - 6:word16] = (word16) ax_dx_712
	Mem690[ss:sp_667 - 8:word16] = Mem687[ds_663:0x29E5:word16]
	Mem693[ss:sp_667 - 10:word16] = Mem690[ds_663:0x29E3:word16]
	fn0800_ACB3(ds_663, Mem693[ss:sp_667 - 10:word16], Mem693[ss:sp_667 - 8:word16], Mem693[ss:sp_667 - 2:word16], out cx_800, out dx_801, out bx_802)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_4F2C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_518F(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_518F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_518F:
	selector ds_19
	word16 dx_20
	branch fn0800_5DCE(ax, dx, ds, Mem9[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out dx_20, out ds_19) != 0x0000 l0800_51A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A5:
	selector ds_37
	word16 dx_38
	word16 ax_32 = fn0800_5374(ds_19, out dx_38, out bp_71, out ds_37)
	dxOut = dx_38
	dsOut = ds_37
	return ax_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A1:
	dxOut = dx_20
	dsOut = ds_19
	return 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_518F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_51A9(selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_51A9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51A9:
	word16 bp_290 = fp - 2
	word16 sp_11 = fp - 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_533D:
	word16 sp_18 = sp_11 - 2
	Mem20[ss:sp_18:word16] = Mem15[ds:0x29E5:word16]
	Mem23[ss:sp_18 - 2:word16] = Mem20[ds:0x29E3:word16]
	word16 dx_27
	word16 ax_24 = fn0800_AD2F(ds, Mem23[ss:sp_18 - 2:segptr32], out dx_27)
	Mem36[ss:sp_18:word16] = ax_24
	Mem38[ss:sp_18 - 2:word16] = dx_27
	Mem41[ss:sp_18 - 4:word16] = Mem38[ds:0x29E5:word16]
	Mem44[ss:sp_18 - 6:word16] = Mem41[ds:0x29E3:word16]
	fn0800_4194(ds, Mem44[ss:sp_18 - 6:word16], Mem44[ss:sp_18 - 4:word16])
	word16 bx_53 = Mem44[ss:sp_18 - 0x0002:word16]
	word16 dx_56 = Mem44[ss:sp_18:word16]
	branch bx_53 >=u dx_27 l0800_5364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5364:
	branch bx_53 != dx_27 l0800_536D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5366:
	branch dx_56 >=u ax_24 l0800_536D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_536D:
	dxOut = dx_56
	dsOut = ds
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_536A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5361:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51B3:
	Mem80[ss:sp_18:word16] = Mem44[ds:0x29E5:word16]
	Mem83[ss:sp_18 - 2:word16] = Mem80[ds:0x29E3:word16]
	word16 dx_87
	word16 ax_84 = fn0800_3E9A(ds, Mem83[ss:sp_18 - 2:segptr32], out dx_87, out ds)
	branch ax_84 == 0x0000 l0800_51D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51D5:
	Mem103[ss:sp_18:word16] = Mem83[ds:0x29E1:word16]
	Mem106[ss:sp_18 - 2:word16] = Mem103[ds:0x29DF:word16]
	Mem109[ss:sp_18 - 4:word16] = Mem106[ds:0x29E5:word16]
	Mem112[ss:sp_18 - 6:word16] = Mem109[ds:0x29E3:word16]
	selector ds_120
	Mem128[ss:sp_18 - 0x0004:word16] = fn0800_3DCF(ds, Mem112[ss:sp_18 - 6:segptr32], out ch_588, out dx_589, out di_590, out ds_120, out Top_591)
	fn0800_4047(ds_120, Mem128[ss:sp_18 - 0x0004:byte], Mem128[ss:sp_18 - 0x0002:segptr32], out cx_592, out dx_593, out bx_594, out di_595, out ds, out Top_596)
	sp_11 = sp_18 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51C5:
	branch ax_84 == 0x0001 l0800_51F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51F5:
	Mem147[ss:sp_18:word16] = Mem83[ds:0x29E1:word16]
	Mem150[ss:sp_18 - 2:word16] = Mem147[ds:0x29DF:word16]
	Mem153[ss:sp_18 - 4:word16] = Mem150[ds:0x29E5:word16]
	Mem156[ss:sp_18 - 6:word16] = Mem153[ds:0x29E3:word16]
	selector ds_160
	Mem171[ss:sp_18 - 0x0004:word16] = fn0800_3E5D(ds, Mem156[ss:sp_18 - 6:word16], Mem156[ss:sp_18 - 4:word16], out ds_160, out Top_597)
	Mem173[ss:sp_18 - 0x0006:word16] = ax_84
	selector ds_178
	fn0800_409C(ds_160, Mem173[ss:sp_18 - 0x0006:word16], Mem173[ss:sp_18 - 0x0004:word16], Mem173[ss:sp_18 - 0x0002:word16], Mem173[ss:sp_18:word16], out dx_598, out ds_178, out Top_599)
	Mem190[ss:sp_18:word16] = Mem173[ds_178:0x29E5:word16]
	Mem193[ss:sp_18 - 2:word16] = Mem190[ds_178:0x29E3:word16]
	selector ds_198
	word16 ax_194 = fn0800_3FAD(ds_178, Mem193[ss:sp_18 - 2:word16], Mem193[ss:sp_18:word16], out ch_600, out di_601, out ds_198)
	Mem209[ss:bp_290 - 0x0002:word16] = 0x0000
	Mem210[ss:bp_290 - 0x0004:word16] = ax_194
	Mem213[ss:sp_18:word16] = Mem210[ds_198:0x29E1:word16]
	Mem216[ss:sp_18 - 2:word16] = Mem213[ds_198:0x29DF:word16]
	Mem218[ss:sp_18 - 4:word16] = ax_194
	selector ds_223
	word16 ax_219 = fn0800_40BF(ds_198, Mem218[ss:sp_18 - 4:byte], Mem218[ss:sp_18 - 2:word16], Mem218[ss:sp_18:word16], out dx_602, out di_603, out ds_223)
	Mem235[ss:sp_18:word16] = Mem218[ds_223:0x29E5:word16]
	Mem238[ss:sp_18 - 2:word16] = Mem235[ds_223:0x29E3:word16]
	selector ds_242
	word16 dx_256
	word16 ax_253 = fn0800_8CAA(ax_219, 0x08, fn0800_3F58(ds_223, Mem238[ss:sp_18 - 2:word16], Mem238[ss:sp_18:word16], out di_604, out ds_242), out dx_256)
	word16 sp_257 = <invalid>
	branch dx_256 != 0x0052 l0800_52BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5250:
	branch ax_253 != 0x4E43 l0800_52BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52BA:
	Mem272[ss:sp_257 - 2:word16] = Mem238[ss:bp_290 - 0x0002:word16]
	Mem275[ss:sp_257 - 4:word16] = Mem272[ss:bp_290 - 0x0004:word16]
	Mem279[ss:sp_257 - 6:word16] = Mem275[ds_242:0x29E1:word16]
	Mem282[ss:sp_257 - 8:word16] = Mem279[ds_242:0x29DF:word16]
	Mem285[ss:sp_257 - 10:word16] = Mem282[ds_242:0x29E5:word16]
	Mem288[ss:sp_257 - 12:word16] = Mem285[ds_242:0x29E3:word16]
	fn0800_3B0A(Mem288[ss:sp_257 - 4:word16], Mem288[ss:sp_257 - 2:word16], out dx_615, out bp_290, out ds)
	word16 sp_298 = <invalid>
	sp_11 = sp_298 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5255:
	selector ds_311
	word16 dx_312
	word16 ax_306 = fn0800_5374(ds_242, out dx_312, out bp_290, out ds_311)
	word16 sp_315 = <invalid>
	branch ax_306 == 0x0000 l0800_5263
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5263:
	Mem328[ss:sp_315 - 2:word16] = 0x0001
	word16 dx_330 = Mem328[ds_311:0x2A07:word16]
	word16 dx_336 = -(dx_330 + 0x0002)
	Mem341[ss:sp_315 - 4:word16] = -(Mem328[ds_311:0x2A09:word16] + (dx_330 <u 0x0002)) - (dx_336 == 0x0000)
	Mem343[ss:sp_315 - 6:word16] = dx_336
	Mem346[ss:sp_315 - 8:word16] = Mem343[ds_311:0x29E1:word16]
	Mem349[ss:sp_315 - 10:word16] = Mem346[ds_311:0x29DF:word16]
	fn0800_ACB3(ds_311, Mem349[ss:sp_315 - 10:word16], Mem349[ss:sp_315 - 8:word16], Mem349[ss:sp_315 - 2:word16], out cx_616, out dx_617, out bx_618)
	Mem363[ss:sp_315 - 2:word16] = Mem349[ds_311:0x29E1:word16]
	Mem366[ss:sp_315 - 4:word16] = Mem363[ds_311:0x29DF:word16]
	Mem369[ss:sp_315 - 6:word16] = Mem366[ds_311:0x2A07:word16]
	fn0800_40BF(ds_311, Mem369[ss:sp_315 - 6:byte], Mem369[ss:sp_315 - 4:word16], Mem369[ss:sp_315 - 2:word16], out dx_619, out di_620, out ds)
	Mem386[ss:sp_315 - 2:word16] = 0x0001
	Mem389[ss:sp_315 - 4:word16] = Mem386[ds:0x2A09:word16]
	Mem392[ss:sp_315 - 6:word16] = Mem389[ds:0x2A07:word16]
	Mem395[ss:sp_315 - 8:word16] = Mem392[ds:0x29E1:word16]
	Mem398[ss:sp_315 - 10:word16] = Mem395[ds:0x29DF:word16]
	fn0800_ACB3(ds, Mem398[ss:sp_315 - 10:word16], Mem398[ss:sp_315 - 8:word16], Mem398[ss:sp_315 - 2:word16], out cx_621, out dx_622, out bx_623)
	sp_11 = sp_315
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_525E:
	dxOut = dx_312
	dsOut = ds_311
	return ax_306
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_51A9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51CA:
	branch ax_84 != 0x0003 l0800_51D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51D2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5301:
	Mem418[ss:sp_18:word16] = Mem83[ds:0x29E5:word16]
	Mem421[ss:sp_18 - 2:word16] = Mem418[ds:0x29E3:word16]
	fn0800_4194(ds, Mem421[ss:sp_18 - 2:word16], Mem421[ss:sp_18:word16])
	Mem432[ss:sp_18:word16] = ax_84
	Mem434[ss:sp_18 - 2:word16] = dx_87
	Mem437[ss:sp_18 - 4:word16] = Mem434[ds:0x29E5:word16]
	Mem440[ss:sp_18 - 6:word16] = Mem437[ds:0x29E3:word16]
	word16 dx_444
	ui32 bx_cx_551 = SEQ(Mem440[ss:sp_18 - 0x0002:word16], Mem440[ss:sp_18:word16]) - SEQ(dx_444, fn0800_AD2F(ds, Mem440[ss:sp_18 - 6:segptr32], out dx_444))
	Mem461[ss:sp_18:word16] = SLICE(bx_cx_551, word16, 16)
	Mem463[ss:sp_18 - 2:word16] = (word16) bx_cx_551
	Mem466[ss:sp_18 - 4:word16] = Mem463[ds:0x29E1:word16]
	Mem469[ss:sp_18 - 6:word16] = Mem466[ds:0x29DF:word16]
	Mem472[ss:sp_18 - 8:word16] = Mem469[ds:0x29E5:word16]
	Mem475[ss:sp_18 - 10:word16] = Mem472[ds:0x29E3:word16]
	fn0800_3B0A(Mem475[ss:sp_18 - 2:word16], Mem475[ss:sp_18:word16], out dx_605, out bp_290, out ds)
	word16 sp_485 = <invalid>
	sp_11 = sp_485 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_51CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52D8:
	word16 si_493 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52FA:
	branch si_493 != 0x0003 l0800_52DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52DC:
	word16 sp_503 = sp_11 - 2
	Mem505[ss:sp_503:word16] = Mem500[ds:0x29E1:word16]
	Mem508[ss:sp_503 - 2:word16] = Mem505[ds:0x29DF:word16]
	Mem511[ss:sp_503 - 4:word16] = Mem508[ds:0x29E5:word16]
	Mem514[ss:sp_503 - 6:word16] = Mem511[ds:0x29E3:word16]
	selector ds_522
	Mem530[ss:sp_503 - 0x0004:word16] = fn0800_3DCF(ds, Mem514[ss:sp_503 - 6:segptr32], out ch_606, out dx_607, out di_608, out ds_522, out Top_609)
	fn0800_4047(ds_522, Mem530[ss:sp_503 - 0x0004:byte], Mem530[ss:sp_503 - 0x0002:segptr32], out cx_610, out dx_611, out bx_612, out di_613, out ds, out Top_614)
	si_493 = si_493 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_52FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5374(selector ds, ptr16 & dxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_5374_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5374:
	word16 ax_21 = fn0800_AD2F(ds, SEQ(Mem13[ds:0x29E5:word16], Mem17[ds:0x29E3:word16]), out dx_640)
	selector ds_43
	fn0800_3E5D(ds, Mem36[ds:0x29E3:word16], Mem33[ds:0x29E5:word16], out ds_43, out Top_641)
	Mem55[ds_43:0x2A21:word16] = ax_21 & 0x0003
	selector ds_65
	Mem74[ds_65:0x2A09:word16] = fn0800_3E5D(ds_43, Mem58[ds_43:0x29E3:word16], Mem55[ds_43:0x29E5:word16], out ds_65, out Top_642)
	Mem75[ds_65:0x2A07:word16] = ax_21 & 0x0003
	branch Mem75[ds_65:0x2A21:word16] != 0x0000 l0800_53EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_53EF:
	selector ds_87
	Mem97[ds_87:0x2A05:word16] = fn0800_3E5D(ds_65, Mem80[ds_65:0x29E3:word16], Mem75[ds_65:0x29E5:word16], out ds_87, out Top_643)
	Mem98[ds_87:0x2A03:word16] = ax_21 & 0x0003
	selector ds_109
	Mem119[ds_109:0x2E4B:word16] = fn0800_3E27(ds_87, Mem101[ds_87:0x29E3:word16], Mem98[ds_87:0x29E5:word16], out cx_644, out dx_645, out di_646, out ds_109, out Top_647)
	selector ds_130
	Mem140[ds_130:0x2E49:word16] = fn0800_3E27(ds_109, Mem122[ds_109:0x29E3:word16], Mem119[ds_109:0x29E5:word16], out cx_648, out dx_649, out di_650, out ds_130, out Top_651)
	fn0800_3E27(ds_130, Mem143[ds_130:0x29E3:word16], Mem140[ds_130:0x29E5:word16], out cx_652, out dx_653, out di_654, out ds_655, out Top_656)
	word16 sp_182 = <invalid>
	word16 bp_174
	selector ds_178
	word16 dx_179
	branch fn0800_2D0A(out dx_179, out bp_174, out ds_178) == Mem172[ds_178:0x2E49:word16] l0800_5458
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5458:
	Mem194[ss:sp_182 + 0x0006:word16] = 0x0001
	Mem196[ss:sp_182 + 0x0004:word16] = 0x000F
	word16 bp_198
	selector ds_202
	word16 dx_203
	word16 ax_197 = fn0800_4311(out dx_203, out bp_198, out si_658, out di_659, out ds_202)
	Mem214[ss:bp_198 - 0x0006:word16] = dx_203
	Mem215[ss:bp_198 - 0x0008:word16] = ax_197
	Mem218[ds_202:0x2E73:word16] = dx_203 + 0x0001
	Mem219[ds_202:0x2E71:word16] = 0x0000
	word16 sp_206 = <invalid>
	Mem223[ss:sp_206 + 0x0002:word16] = 0x0001
	Mem225[ss:sp_206:word16] = 0x000F
	word16 bp_227
	selector ds_231
	word16 dx_232
	word16 ax_226 = fn0800_4311(out dx_232, out bp_227, out si_660, out di_661, out ds_231)
	Mem242[ss:bp_227 - 0x0002:word16] = dx_232
	Mem243[ss:bp_227 - 0x0004:word16] = ax_226
	Mem245[ds_231:0x2E5B:word16] = dx_232 + 0x0001
	Mem246[ds_231:0x2E59:word16] = 0x0000
	word16 dx_248 = Mem246[ds_231:0x2E71:word16]
	Mem250[ds_231:0x2E6F:word16] = Mem246[ds_231:0x2E73:word16]
	Mem251[ds_231:0x2E6D:word16] = dx_248 + 0xFFFD
	word16 dx_254 = Mem251[ds_231:0x2E59:word16] + Mem251[ds_231:0x2E31:word16]
	Mem255[ds_231:0x2E57:word16] = Mem251[ds_231:0x2E5B:word16]
	Mem256[ds_231:0x2E55:word16] = dx_254
	Mem257[ds_231:0x2E4D:word16] = 0x0000
	Mem261[ds_231:0x2E45:word16] = 0x0000
	Mem262[ds_231:0x29FD:word16] = 0x0000
	Mem263[ds_231:0x29FB:word16] = 0x0000
	Mem264[ds_231:0x2A01:word16] = 0x0000
	Mem265[ds_231:0x29FF:word16] = 0x0000
	Mem267[ss:bp_227 - 0x000E:word16] = Mem265[ds_231:0x2E4F:word16]
	word16 sp_235 = <invalid>
	Mem270[ss:sp_235 + 0x0002:word16] = 0x0001
	word16 si_278
	selector ds_275
	branch fn0800_5C1A(ds_231, Mem270[ss:sp_235 + 0x0002:word16], out si_278, out ds_275) == 0x0000 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_54F3:
	branch Mem270[ds_275:0x2A25:word16] == 0x0002 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_54FA:
	branch Mem270[ds_275:0x2A25:word16] == 0x0007 l0800_5504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5501:
	si_278 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5504:
	word16 si_295 = si_278
	branch si_278 != 0x0000 l0800_555D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5508:
	Mem303[ss:sp_235 + 0x0002:word16] = 0x0001
	branch fn0800_5C1A(ds_275, Mem303[ss:sp_235 + 0x0002:word16], out si_295, out ds_275) == 0x0000 l0800_5557
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5557:
	Mem323[ds_275:0x2E4F:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5516:
	branch Mem303[ds_275:0x2A23:word16] == 0x0001 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_551D:
	Mem328[ss:sp_235 + 0x0002:word16] = 0x0010
	word16 ax_329 = fn0800_5C1A(ds_275, Mem328[ss:sp_235 + 0x0002:word16], out si_295, out ds_275)
	branch Mem328[ds_275:0x2A25:word16] != 0x0002 l0800_553B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5530:
	branch Mem328[ds_275:0x2E4F:word16] != 0x0000 l0800_553B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5537:
	Mem348[ds_275:0x2E4F:word16] = ax_329
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_553B:
	branch Mem350[ds_275:0x2E4F:word16] == ax_329 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5541:
	branch Mem350[ds_275:0x2E4F:word16] == 0x0000 l0800_554B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5548:
	si_295 = 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_554B:
	branch Mem358[ds_275:0x2E4F:word16] != 0x0000 l0800_555D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5552:
	si_295 = 0x000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_555D:
	word16 si_365 = si_295
	branch si_295 != 0x0000 l0800_557C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5561:
	word16 ax_372 = Mem370[ds_275:0x2A21:word16]
	branch ax_372 == 0x0001 l0800_5570
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5570:
	si_365 = fn0800_55E8(ds_275, out ds_275)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5569:
	branch ax_372 == 0x0002 l0800_5577
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5577:
	si_365 = fn0800_579B(ds_275, out ds_275)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_556E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_557C:
	Mem417[ds_275:0x2E4F:word16] = Mem370[ss:bp_227 - 0x000E:word16]
	Mem424[ss:sp_235 + 0x0002:word16] = Mem417[ss:bp_227 - 0x0006:word16]
	Mem427[ss:sp_235:word16] = Mem424[ss:bp_227 - 0x0008:word16]
	selector ds_431
	fn0800_4346(ds_275, Mem427[ss:sp_235 + 0x0002:word16], out cx_662, out dx_663, out bx_664, out ds_431)
	Mem442[ss:sp_235 + 0x0002:word16] = Mem427[ss:bp_227 - 0x0002:word16]
	Mem445[ss:sp_235:word16] = Mem442[ss:bp_227 - 0x0004:word16]
	selector ds_449
	fn0800_4346(ds_431, Mem445[ss:sp_235 + 0x0002:word16], out cx_665, out dx_666, out bx_667, out ds_449)
	word16 v40_457 = Mem445[ds_449:0x2A03:word16] + 0x0012
	Mem458[ds_449:0x2A03:word16] = v40_457
	Mem462[ds_449:0x2A05:word16] = Mem458[ds_449:0x2A05:word16] + (v40_457 <u 0x0000)
	Mem465[ss:sp_235 + 0x0002:word16] = 0x0000
	ui32 ax_dx_568 = SEQ(Mem465[ss:bp_227 - 0x000A:word16], Mem465[ss:bp_227 - 0x000C:word16]) + SEQ(Mem465[ds_449:0x2A05:word16], Mem465[ds_449:0x2A03:word16])
	Mem474[ss:sp_235:word16] = SLICE(ax_dx_568, word16, 16)
	Mem476[ss:sp_235 - 0x0002:word16] = (word16) ax_dx_568
	Mem479[ss:sp_235 - 0x0004:word16] = Mem476[ds_449:0x29E5:word16]
	Mem482[ss:sp_235 - 0x0006:word16] = Mem479[ds_449:0x29E3:word16]
	word16 dx_486
	fn0800_ACB3(ds_449, Mem482[ss:sp_235 - 0x0006:word16], Mem482[ss:sp_235 - 0x0004:word16], Mem482[ss:sp_235 + 0x0002:word16], out cx_668, out dx_486, out bx_669)
	branch si_365 == 0x0000 l0800_55D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55D0:
	branch Mem482[ds_449:0x2E4D:word16] == Mem482[ds_449:0x2E4B:word16] l0800_55E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55E1:
	word16 bp_506 = Mem482[ss:bp_227:word16]
	dxOut = dx_486
	bpOut = bp_506
	dsOut = ds_449
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55D9:
	word16 bp_511 = Mem482[ss:bp_227:word16]
	dxOut = dx_486
	bpOut = bp_511
	dsOut = ds_449
	return 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55C9:
	word16 bp_516 = Mem482[ss:bp_227:word16]
	dxOut = dx_486
	bpOut = bp_516
	dsOut = ds_449
	return si_365
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5450:
	word16 bp_521 = Mem172[ss:bp_174:word16]
	dxOut = dx_179
	bpOut = bp_521
	dsOut = ds_178
	return 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_53BF:
	word16 bp_541
	selector ds_545
	fn0800_3B0A(ax_21 & 0x0003, Mem75[ds_65:0x2A09:word16], out dx_657, out bp_541, out ds_545)
	word16 dx_557 = Mem539[ds_545:0x2A07:word16]
	Mem558[ds_545:0x2A05:word16] = Mem539[ds_545:0x2A09:word16]
	Mem559[ds_545:0x2A03:word16] = dx_557
	word16 bp_565 = Mem559[ss:bp_541:word16]
	dxOut = dx_557
	bpOut = bp_565
	dsOut = ds_545
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5374_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_55E8(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_55E8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55E8:
	word16 sp_158 = fp - 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_574B:
	word16 ax_13 = Mem12[ds:0x2A01:word16]
	word16 dx_14 = Mem12[ds:0x29FF:word16]
	branch ax_13 >=u Mem12[ds:0x2A09:word16] l0800_575B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_575B:
	branch ax_13 != Mem12[ds:0x2A09:word16] l0800_5766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_575D:
	branch dx_14 >=u Mem12[ds:0x2A07:word16] l0800_5766
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5766:
	word16 sp_25 = sp_158 - 2
	Mem28[ss:sp_25:word16] = Mem12[ds:0x29E1:word16]
	Mem31[ss:sp_25 - 2:word16] = Mem28[ds:0x29DF:word16]
	word16 ax_34 = Mem31[ds:0x2E55:word16] - Mem31[ds:0x2E59:word16]
	word16 ax_38 = ax_34 - Mem31[ds:0x2E31:word16]
	Mem43[ss:sp_25 - 4:word16] = 0x0000 - (ax_34 <u 0x0000) - (ax_38 <u 0x0000)
	Mem45[ss:sp_25 - 6:word16] = ax_38
	word16 ax_47 = Mem45[ds:0x2E59:word16] + Mem45[ds:0x2E31:word16]
	Mem51[ss:sp_25 - 8:word16] = Mem45[ds:0x2E5B:word16]
	Mem53[ss:sp_25 - 10:word16] = ax_47
	selector ds_58
	fn0800_4152(ds, Mem53[ss:sp_25 - 10:word16], Mem53[ss:sp_25 - 8:word16], Mem53[ss:sp_25 - 6:word16], Mem53[ss:sp_25 - 2:word16], Mem53[ss:sp_25:word16], out ds_58)
	dsOut = ds_58
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_55E8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5763:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5758:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_55F1:
	word16 sp_78 = sp_158 - 2
	Mem80[ss:sp_78:word16] = 0x0010
	Mem83[ss:sp_78 - 2:word16] = ds
	Mem86[ss:sp_78 - 4:word16] = 0x290F
	selector ds_89 = fn0800_5A24(ds, Mem86[ss:sp_78 - 4:word16], Mem86[ss:sp_78 - 2:word16], Mem86[ss:sp_78:word16])
	Mem102[ss:sp_78:word16] = 0x0010
	Mem104[ss:sp_78 - 2:word16] = ds_89
	Mem107[ss:sp_78 - 4:word16] = 0x284F
	selector ds_110 = fn0800_5A24(ds_89, Mem107[ss:sp_78 - 4:word16], Mem107[ss:sp_78 - 2:word16], Mem107[ss:sp_78:word16])
	Mem123[ss:sp_78:word16] = 0x0010
	Mem125[ss:sp_78 - 2:word16] = ds_110
	Mem128[ss:sp_78 - 4:word16] = 0x278F
	selector ds_131 = fn0800_5A24(ds_110, Mem128[ss:sp_78 - 4:word16], Mem128[ss:sp_78 - 2:word16], Mem128[ss:sp_78:word16])
	Mem144[ss:sp_78:word16] = 0x0010
	sp_158 = sp_78 + 0x0002
	word16 wLoc04_458 = 0x0000
	word16 wLoc06_459 = fn0800_5C39(ds_131, Mem144[ss:sp_78:word16], out si_482, out di_483, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5736:
	word16 v11_168 = wLoc06_459 - 0x0001
	word16 v12_172 = wLoc04_458 - (v11_168 <u 0x0000)
	wLoc06_459 = v11_168
	wLoc04_458 = v12_172
	branch (wLoc06_459 | wLoc04_458) == 0x0000 l0800_574B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5748:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5633:
	word16 sp_179 = sp_158 - 2
	Mem181[ss:sp_179:word16] = ds
	Mem184[ss:sp_179 - 2:word16] = 0x290F
	word16 ax_185 = fn0800_5A8D(ds, Mem184[ss:sp_179 - 2:word16], Mem184[ss:sp_179:selector], out ds)
	Mem197[ds:0x2E47:word16] = ax_185
	word16 v17_198 = Mem197[ds:0x29FF:word16] + ax_185
	Mem199[ds:0x29FF:word16] = v17_198
	Mem203[ds:0x2A01:word16] = Mem199[ds:0x2A01:word16] + (v17_198 <u 0x0000)
	sp_158 = sp_179 + 0x0002
	branch Mem203[ds:0x2E47:word16] != 0x0000 l0800_5654
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5654:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5664:
	word16 dx_189
	word16 ax_208 = Mem207[ds:0x2E47:word16]
	Mem210[ds:0x2E47:word16] = Mem207[ds:0x2E47:word16] - 0x0001
	word16 ax_211 = ax_208
	branch ax_208 != 0x0000 l0800_5656
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5656:
	selector ds_220
	word16 ax_216 = fn0800_5B15(ds, out si_484, out di_485, out ds_220)
	word16 sp_234 = sp_158 - 2
	Mem236[ss:sp_234:word16] = DPB(ax_216, (byte) ax_216 ^ Mem210[ds_220:0x2E4F:byte], 0)
	ds = fn0800_5D2F(ds_220, Mem236[ss:sp_234:byte])
	dx_189 = dx_240
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_566F:
	branch (Mem210[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_5684
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5684:
	Mem256[ds:0x2E4F:word16] = Mem210[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5677:
	ax_211 = Mem210[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem263[ds:0x2E4F:word16] = ax_211
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5688:
	ptr32 es_bx_266 = Mem265[ds:0x2E6D:segptr32]
	word16 sp_272 = sp_158 - 2
	Mem277[ss:sp_272:word16] = DPB(DPB(ax_211, Mem265[es_bx_266 + 0x0002:byte], 0), 0x00, 8)
	word16 dx_285 = DPB(DPB(dx_189, Mem277[es_bx_266 + 0x0001:byte], 0), 0x00, 8)
	word16 dx_292 = Mem277[ss:sp_272:word16] + (dx_285 << 0x08 <u 0x0000)
	word16 bx_299 = DPB(DPB((word16) es_bx_266, Mem277[es_bx_266:byte], 0), 0x00, 8)
	Mem296[ss:sp_272:word16] = dx_285 << 0x08
	Mem302[ss:sp_272 - 2:word16] = dx_292
	int32 dx_ax_451 = SEQ(Mem302[ss:sp_272 - 2:word16], Mem302[ss:sp_272:word16]) + (int32) bx_299
	word16 sp_322 = <invalid>
	word16 dx_321
	Mem328[ss:sp_322 - 2:word16] = fn0800_8C69((word16) dx_ax_451, Mem302[ds:0x2E45:byte], SLICE(dx_ax_451, word16, 16), out cl_486, out dx_321)
	word16 ax_331 = 0x0001 << Mem328[ds:0x2E45:byte]
	Mem334[ss:sp_322 - 4:word16] = dx_321
	int32 dx_ax_335 = (int32) (ax_331 - 0x0001)
	ui32 ax_dx_454 = SEQ(Mem334[ss:sp_322 - 4:word16], Mem334[ss:sp_322 - 2:word16]) + SEQ(Mem334[ds:0x29FD:word16] & SLICE(dx_ax_335, word16, 16), Mem334[ds:0x29FB:word16] & (word16) dx_ax_335)
	Mem351[ds:0x29FD:word16] = SLICE(ax_dx_454, word16, 16)
	Mem352[ds:0x29FB:word16] = (word16) ax_dx_454
	sp_158 = sp_322
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5651:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_56E6:
	branch (v11_168 | v12_172) == 0x0000 l0800_574B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_56EE:
	word16 sp_364 = sp_158 - 2
	Mem366[ss:sp_364:word16] = ds
	Mem369[ss:sp_364 - 2:word16] = 0x284F
	selector ds_373
	Mem385[ds_373:0x2E2B:word16] = fn0800_5A8D(ds, Mem369[ss:sp_364 - 2:word16], Mem369[ss:sp_364:selector], out ds_373) + 0x0001
	Mem387[ss:sp_364:word16] = ds_373
	Mem390[ss:sp_364 - 2:word16] = 0x278F
	word16 ax_391 = fn0800_5A8D(ds_373, Mem390[ss:sp_364 - 2:word16], Mem390[ss:sp_364:selector], out ds)
	Mem404[ds:0x2E29:word16] = ax_391 + 0x0002
	word16 v19_405 = Mem404[ds:0x29FF:word16] + (ax_391 + 0x0002)
	Mem406[ds:0x29FF:word16] = v19_405
	Mem410[ds:0x2A01:word16] = Mem406[ds:0x2A01:word16] + (v19_405 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_572B:
	word16 ax_414 = Mem413[ds:0x2E29:word16]
	Mem416[ds:0x2E29:word16] = Mem413[ds:0x2E29:word16] - 0x0001
	branch ax_414 != 0x0000 l0800_5719
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5719:
	ptr32 es_bx_421 = Mem416[ds:0x2E55:segptr32]
	word16 sp_428 = sp_158 - 2
	Mem431[ss:sp_428:word16] = DPB(ax_414, Mem416[SLICE(es_bx_421, selector, 16):(word16) es_bx_421 - Mem416[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(ds, Mem431[ss:sp_428:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_579B(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_579B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_579B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58F2:
	word16 ax_6 = Mem5[ds:0x2A01:word16]
	word16 dx_7 = Mem5[ds:0x29FF:word16]
	branch ax_6 >=u Mem5[ds:0x2A09:word16] l0800_5902
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5902:
	branch ax_6 != Mem5[ds:0x2A09:word16] l0800_590D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5904:
	branch dx_7 >=u Mem5[ds:0x2A07:word16] l0800_590D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_590D:
	selector ds_51
	fn0800_4152(ds, Mem38[ds:0x2E59:word16] + Mem38[ds:0x2E31:word16], Mem38[ds:0x2E5B:word16], Mem24[ds:0x2E55:word16] - Mem24[ds:0x2E59:word16] - Mem24[ds:0x2E31:word16], Mem21[ds:0x29DF:word16], Mem5[ds:0x29E1:word16], out ds_51)
	dsOut = ds_51
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_579B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_590A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57CF:
	selector ds_73
	branch fn0800_5CD9(ds, 0x0001, out ds_73) == 0x0000 l0800_579E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_579E:
	selector ds_90
	word16 ax_86 = fn0800_5B15(ds_73, out si_491, out di_492, out ds_90)
	ds = fn0800_5D2F(ds_90, SLICE(DPB(ax_86, (byte) ax_86 ^ Mem68[ds_90:0x2E4F:byte], 0), byte, 0))
	branch (Mem105[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_57C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57C1:
	Mem124[ds:0x2E4F:word16] = Mem105[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57B4:
	Mem131[ds:0x2E4F:word16] = Mem105[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57C5:
	word16 v16_134 = Mem133[ds:0x29FF:word16] + 0x0001
	Mem135[ds:0x29FF:word16] = v16_134
	Mem139[ds:0x2A01:word16] = Mem135[ds:0x2A01:word16] + (v16_134 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57DD:
	selector ds_147
	branch fn0800_5CD9(ds_73, 0x0001, out ds_147) == 0x0000 l0800_5866
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5866:
	selector ds_162 = fn0800_593F(ds_147)
	branch Mem143[ds_162:0x2E29:word16] != 0x0009 l0800_58B7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58B7:
	ds = fn0800_5975(ds_162)
	word16 v28_187 = Mem143[ds:0x29FF:word16] + Mem143[ds:0x2E29:word16]
	Mem188[ds:0x29FF:word16] = v28_187
	Mem192[ds:0x2A01:word16] = Mem188[ds:0x2A01:word16] + (v28_187 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58DA:
	word16 ax_196 = Mem195[ds:0x2E29:word16]
	Mem198[ds:0x2E29:word16] = Mem195[ds:0x2E29:word16] - 0x0001
	branch ax_196 != 0x0000 l0800_58C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58C8:
	ptr32 es_bx_203 = Mem198[ds:0x2E55:segptr32]
	ds = fn0800_5D2F(ds, SLICE(DPB(ax_196, Mem198[SLICE(es_bx_203, selector, 16):(word16) es_bx_203 - Mem198[ds:0x2E2B:word16]:byte], 0), byte, 0))
	Mem195 = Mem213
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58E5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5870:
	ds = fn0800_5A0F(ds_162)
	word16 v22_241 = Mem143[ds:0x29FF:word16] + Mem143[ds:0x2E47:word16]
	Mem242[ds:0x29FF:word16] = v22_241
	Mem246[ds:0x2A01:word16] = Mem242[ds:0x2A01:word16] + (v22_241 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_588F:
	word16 ax_250 = Mem249[ds:0x2E47:word16]
	Mem252[ds:0x2E47:word16] = Mem249[ds:0x2E47:word16] - 0x0001
	branch ax_250 != 0x0000 l0800_5881
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5881:
	selector ds_262
	word16 ax_258 = fn0800_5B15(ds, out si_497, out di_498, out ds_262)
	ds = fn0800_5D2F(ds_262, SLICE(DPB(ax_258, (byte) ax_258 ^ Mem252[ds_262:0x2E4F:byte], 0), byte, 0))
	Mem249 = Mem278
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_589A:
	branch (Mem252[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_58B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58B0:
	Mem298[ds:0x2E4F:word16] = Mem252[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58A2:
	Mem305[ds:0x2E4F:word16] = Mem252[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57EB:
	selector ds_400
	selector ds_312
	branch fn0800_5CD9(ds_147, 0x0001, out ds_312) != 0x0000 l0800_580A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_580A:
	selector ds_348
	selector ds_331
	branch fn0800_5CD9(ds_312, 0x0001, out ds_331) != 0x0000 l0800_5820
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5820:
	Mem360[ds_348:0x2E29:word16] = DPB(fn0800_5B15(ds_331, out si_495, out di_496, out ds_348), 0x00, 8) + 0x0008
	ds_331 = ds_348
	branch Mem360[ds_348:0x2E29:word16] != 0x0008 l0800_5835
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5832:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_58E8:
	fn0800_5CD9(ds_348, 0x0001, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5818:
	Mem379[ds_331:0x2E29:word16] = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5835:
	ds = fn0800_5975(ds_331)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_57F9:
	Mem395[ds_312:0x2E29:word16] = 0x0002
	Mem413[ds_400:0x2E2B:word16] = DPB(fn0800_5B15(ds_312, out si_493, out di_494, out ds_400), 0x00, 8) + 0x0001
	ds = ds_400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5838:
	word16 v13_418 = Mem415[ds:0x29FF:word16] + Mem415[ds:0x2E29:word16]
	Mem419[ds:0x29FF:word16] = v13_418
	Mem423[ds:0x2A01:word16] = Mem419[ds:0x2A01:word16] + (v13_418 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5858:
	word16 ax_427 = Mem426[ds:0x2E29:word16]
	Mem429[ds:0x2E29:word16] = Mem426[ds:0x2E29:word16] - 0x0001
	branch ax_427 != 0x0000 l0800_5846
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5846:
	ptr32 es_bx_434 = Mem429[ds:0x2E55:segptr32]
	ds = fn0800_5D2F(ds, SLICE(DPB(ax_427, Mem429[SLICE(es_bx_434, selector, 16):(word16) es_bx_434 - Mem429[ds:0x2E2B:word16]:byte], 0), byte, 0))
	Mem426 = Mem444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5863:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_593F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_593F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_593F:
	selector ds_12
	Mem23[ds_12:0x2E29:word16] = fn0800_5CD9(ds, 0x0001, out ds_12) + 0x0004
	selector ds_30
	branch fn0800_5CD9(ds_12, 0x0001, out ds_30) == 0x0000 l0800_5974
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_595D:
	Mem63[ds_30:0x2E29:word16] = (Mem45[ds_30:0x2E29:word16] - 0x0001 << 0x0001) + fn0800_5CD9(ds_30, 0x0001, out ds_30)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5974:
	return ds_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_593F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5975(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_5975_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5975:
	Mem5[ds:0x2E2B:word16] = 0x0000
	selector ds_110
	branch fn0800_5CD9(ds, 0x0001, out ds_110) == 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5989:
	selector ds_32
	Mem42[ds_32:0x2E2B:word16] = fn0800_5CD9(ds_110, 0x0001, out ds_32)
	branch fn0800_5CD9(ds_32, 0x0001, out ds_110) == 0x0000 l0800_59E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59E3:
	branch Mem45[ds_110:0x2E2B:word16] != 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59EA:
	Mem81[ds_110:0x2E2B:word16] = fn0800_5CD9(ds_110, 0x0001, out ds_110) + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59A4:
	selector ds_88
	Mem103[ds_88:0x2E2B:word16] = (Mem84[ds_88:0x2E2B:word16] << 0x0001) + fn0800_5CD9(ds_110, 0x0001, out ds_88) | 0x0004
	branch fn0800_5CD9(ds_88, 0x0001, out ds_110) != 0x0000 l0800_59FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59CB:
	Mem142[ds_110:0x2E2B:word16] = (Mem125[ds_110:0x2E2B:word16] << 0x0001) + fn0800_5CD9(ds_110, 0x0001, out ds_110)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_59FA:
	selector ds_149
	Mem168[ds_149:0x2E2B:word16] = (Mem159[ds_149:0x2E2B:word16] << 0x08) + DPB(fn0800_5B15(ds_110, out si_182, out di_183, out ds_149), 0x00, 8) + 0x0001
	return ds_149
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5975_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5A0F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_5A0F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A0F:
	selector ds_12
	Mem25[ds_12:0x2E47:word16] = (fn0800_5CD9(ds, 0x0004, out ds_12) << 0x0002) + 0x000C
	return ds_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A0F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5A24(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5A24_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	selector ds_174
	word16 ax_38 = fn0800_5C39(ds, 0x0005, out si_189, out di_190, out ds_174)
	word16 wArg06_142 = ax_38
	branch ax_38 == 0x0000 l0800_5A89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A49:
	branch ax_38 <=u 0x0010 l0800_5A54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A4F:
	wArg06_142 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A54:
	branch wArg06_142 <=u 0x0000 l0800_5A7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A61:
	word16 si_75
	word16 di_80
	Mem90[wArg04:si_75:word16] = fn0800_5C39(ds_174, 0x0004, out si_75, out di_80, out ds_174)
	branch di_80 + 0x0001 <u wArg06_142 l0800_5A61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A7A:
	fn0800_4550(wArg02, wArg04, wArg06_142)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A89:
	return ds_174
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A24_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5A8D(selector ds, word16 wArg02, selector psegArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5A8D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A8D:
	word16 wLoc04_123 = 0x0000
	word16 di_18 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AA5:
	byte bLoc04_133 = SLICE(wLoc04_123, byte, 0)
	branch Mem21[psegArg04:di_18 + 0x000A:word16] == 0x0000 l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AAF:
	int32 dx_ax_30 = (int32) ((0x0001 << Mem21[psegArg04:di_18 + 0x000A:byte]) - 0x0001)
	word16 cx_35 = Mem21[ds:0x29FB:word16] & (word16) dx_ax_30
	branch (Mem21[ds:0x29FD:word16] & SLICE(dx_ax_30, word16, 16)) != Mem21[psegArg04:di_18 + 0x0008:word16] l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5ACC:
	branch cx_35 != Mem21[psegArg04:di_18 + 0x0006:word16] l0800_5A9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5A9F:
	di_18 = di_18 + 0x000C
	wLoc04_123 = wLoc04_123 + 0x0001
	Mem21 = Mem49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AD2:
	selector ds_70
	fn0800_5C39(ds, Mem21[psegArg04:wArg02 + (word16) (wLoc04_123 *s 0x000C) + 0x000A:word16], out si_165, out di_166, out ds_70)
	branch wLoc04_123 >=u 0x0002 l0800_5AF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AF8:
	selector ds_91
	word16 ax_102 = fn0800_5C39(ds_70, wLoc04_123 - 0x0001, out si_167, out di_168, out ds_91) | 0x0001 << bLoc04_133 - 0x01
	dsOut = ds_91
	return ax_102
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5AEF:
	dsOut = ds_70
	return wLoc04_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5A8D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5B15(selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5B15_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B15:
	word16 ax_11 = Mem7[ds:0x2E73:word16]
	word16 dx_12 = Mem7[ds:0x2E71:word16]
	branch ax_11 == Mem7[ds:0x2E6F:word16] l0800_5B2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B2E:
	branch dx_12 + 0xFFFD == Mem7[ds:0x2E6D:word16] l0800_5B37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B37:
	word16 ax_72
	word16 dx_71
	fn0800_4194(ds, Mem20[ds:0x29E3:word16], Mem7[ds:0x29E5:word16])
	word16 dx_46
	ui32 bx_cx_233 = SEQ(dx_12 + 0xFFFD, ax_11) - SEQ(dx_46, fn0800_AD2F(ds, SEQ(Mem36[ds:0x29E5:word16], Mem39[ds:0x29E3:word16]), out dx_46))
	word16 cx_57 = (word16) bx_cx_233
	word16 bx_60 = SLICE(bx_cx_233, word16, 16)
	branch bx_60 <u 0x0000 l0800_5B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B67:
	branch bx_60 >u 0x0000 l0800_5B6F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B69:
	branch cx_57 <=u 0xFFFD l0800_5B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B76:
	dx_71 = bx_60
	ax_72 = cx_57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B6F:
	dx_71 = 0x0000
	ax_72 = 0xFFFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B7C:
	word16 v23_88 = Mem84[ds:0x29E5:word16]
	word16 v24_94 = Mem93[ds:0x29E3:word16]
	word16 ax_102 = Mem101[ds:0x2E73:word16]
	word16 dx_103 = Mem101[ds:0x2E71:word16]
	Mem104[ds:0x2E6F:word16] = ax_102
	Mem105[ds:0x2E6D:word16] = dx_103
	selector ds_114
	fn0800_4110(ds, dx_103, ax_102, ax_72, dx_71, v24_94, v23_88, out si_317, out di_318, out ds_114)
	ui32 v27_v26_235 = SEQ(bx_60, v26_126) - SEQ(dx_71, ax_72)
	word16 v26_126 = (word16) v27_v26_235
	word16 v27_131 = SLICE(v27_v26_235, word16, 16)
	word16 wLoc06_256 = v26_126
	word16 wLoc04_259 = v27_131
	branch Test(ULT,false) l0800_5BCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BBA:
	branch v27_131 >u 0x0000 l0800_5BC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BBC:
	branch v26_126 <=u 0x0002 l0800_5BCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BC1:
	wLoc04_259 = 0x0000
	wLoc06_256 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5BCB:
	fn0800_4110(ds_114, Mem163[ds_114:0x2E71:word16] + ax_72, Mem163[ds_114:0x2E73:word16], wLoc06_256, wLoc04_259, Mem153[ds_114:0x29E3:word16], Mem147[ds_114:0x29E5:word16], out si, out di, out ds)
	ax_11 = fn0800_ACB3(ds, Mem202[ds:0x29E3:word16], Mem199[ds:0x29E5:word16], 0x0001, out cx_319, out dx_320, out bx_321)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B34:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5B2B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C0B:
	ptr32 es_bx_219 = Mem218[ds:0x2E6D:segptr32]
	Mem221[ds:0x2E6D:word16] = Mem218[ds:0x2E6D:word16] + 0x0001
	word16 ax_284 = DPB(ax_11, Mem221[es_bx_219:byte], 0)
	siOut = si
	diOut = di
	dsOut = ds
	return ax_284
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5B15_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5C1A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5C1A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C1A:
	branch Mem7[ds:0x2A21:word16] != 0x0002 l0800_5C30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C30:
	word16 si_16
	selector ds_22
	word16 ax_15 = fn0800_5C39(ds, wArg02, out si_16, out di_80, out ds_22)
	siOut = si_16
	dsOut = ds_22
	return ax_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C27:
	selector ds_37
	word16 ax_34 = fn0800_5CD9(ds, wArg02, out ds_37)
	siOut = si
	dsOut = ds_37
	return ax_34
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5C1A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5C39(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax di ds si
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: bp sp
fn0800_5C39_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C39:
	word16 sp_13 = fp - 0x000C
	word16 si_155 = wArg02
	word16 di_129 = 0x0000
	word16 wLoc08_165 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CCA:
	word16 si_154 = si_155
	branch si_155 == 0x0000 l0800_5CD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CD1:
	word16 di_31 = Mem30[ss:sp_13:word16]
	siOut = Mem30[ss:sp_13 + 2:word16]
	diOut = di_31
	dsOut = ds
	return di_129
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5C39_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CCE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C4D:
	branch Mem30[ds:0x2E45:word16] != 0x0000 l0800_5CA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5C54:
	selector ds_45
	word16 ax_55 = DPB(fn0800_5B15(ds, out si_198, out di_199, out ds_45), 0x00, 8)
	word16 ax_57 = fn0800_5B15(ds_45, out si_154, out di_129, out ds)
	word16 dx_88
	word16 ax_85 = fn0800_8C69(DPB(DPB(DPB(ax_57, 0x00, 8), Mem72[Mem72[ds:0x2E6D:segptr32] + 0x0001:byte], 0), 0x00, 8), 0x18, 0x0000, out cl_200, out dx_88)
	word16 ax_109 = ax_85 + (DPB(ax_57, 0x00, 8) << 0x08)
	ptr32 es_bx_94 = Mem72[ds:0x2E6D:segptr32]
	word16 ax_113 = ax_109 + ax_55
	Mem118[ds:0x29FD:word16] = dx_88 + DPB(DPB((word16) es_bx_94, Mem72[es_bx_94:byte], 0), 0x00, 8) + (ax_85 <u 0x0000) + (ax_109 <u 0x0000) + (ax_113 <u 0x0000)
	Mem119[ds:0x29FB:word16] = ax_113
	Mem120[ds:0x2E45:word16] = 0x0010
	sp_13 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CA2:
	branch (Mem122[ds:0x29FB:word16] & 0x0001) == 0x0000 l0800_5CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CAD:
	di_129 = di_129 | wLoc08_165
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CB0:
	word16 ax_137 = Mem122[ds:0x29FD:word16]
	word16 dx_143 = __rcr(Mem122[ds:0x29FB:word16], 0x01, SLICE(cond(ax_137 >>u 0x0001), bool, 1))
	Mem144[ds:0x29FD:word16] = ax_137 >>u 0x0001
	Mem145[ds:0x29FB:word16] = dx_143
	Mem152[ds:0x2E45:word16] = Mem149[ds:0x2E45:word16] - 0x0001
	wLoc08_165 = wLoc08_165 << 0x0001
	si_155 = si_154 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5CD9(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_5CD9_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CD9:
	word16 di_15 = wArg02
	word16 si_16 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D25:
	word16 di_20 = di_15
	branch di_15 != 0x0000 l0800_5CE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CE5:
	branch Mem25[ds:0x2E45:word16] != 0x0000 l0800_5D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5CEC:
	word16 ax_44 = DPB(fn0800_5B15(ds, out si_16, out di_20, out ds), 0x00, 8)
	Mem43[ds:0x29FD:word16] = 0x0000
	Mem45[ds:0x29FB:word16] = ax_44
	Mem46[ds:0x2E45:word16] = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D00:
	si_16 = si_16 << 0x0001
	branch (Mem51[ds:0x29FB:word16] & 0x0080) == 0x0000 l0800_5D0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D0D:
	si_16 = si_16 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D0E:
	word16 dx_63 = Mem51[ds:0x29FB:word16]
	Mem70[ds:0x29FD:word16] = __rcl(Mem51[ds:0x29FD:word16], 0x01, SLICE(cond(dx_63 << 0x0001), bool, 1))
	Mem71[ds:0x29FB:word16] = dx_63 << 0x0001
	Mem73[ds:0x2E45:word16] = Mem71[ds:0x2E45:word16] - 0x0001
	di_15 = di_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D29:
	dsOut = ds
	return si_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5CD9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_5D2F(selector ds, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_5D2F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D2F:
	word16 ax_10 = Mem7[ds:0x2E5B:word16]
	word16 dx_11 = Mem7[ds:0x2E59:word16]
	branch ax_10 != Mem7[ds:0x2E57:word16] l0800_5D9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D40:
	branch dx_11 - 0x0001 != Mem7[ds:0x2E55:word16] l0800_5D9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D46:
	fn0800_4152(ds, Mem32[ds:0x2E59:word16] + Mem32[ds:0x2E31:word16], Mem32[ds:0x2E5B:word16], 0xFFFF - Mem22[ds:0x2E31:word16], Mem19[ds:0x29DF:word16], Mem7[ds:0x29E1:word16], out ds)
	fn0800_B0F3(Mem68[ds:0x2E59:word16], Mem65[ds:0x2E5B:word16], Mem57[ds:0x2E55:word16] - Mem57[ds:0x2E31:word16], Mem57[ds:0x2E57:word16], Mem40[ds:0x2E31:word16])
	ax_10 = Mem71[ds:0x2E5B:word16]
	word16 dx_85 = Mem71[ds:0x2E59:word16] + Mem71[ds:0x2E31:word16]
	Mem87[ds:0x2E57:word16] = ax_10
	Mem88[ds:0x2E55:word16] = dx_85
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5D9E:
	Mem97[Mem90[ds:0x2E55:segptr32]:byte] = bArg02
	Mem99[ds:0x2E55:word16] = Mem97[ds:0x2E55:word16] + 0x0001
	Mem116[ds:0x2E4D:word16] = Mem99[ds:((DPB(DPB(ax_10, Mem99[ds:0x2E4D:byte] ^ bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem99[ds:0x2E4D:word16] >>u 0x08
	return ds
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5D2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5DCE(word16 ax, word16 dx, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax ds dx
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_5DCE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DCE:
	word16 ax_55
	fn0800_4194(ds, wArg02, wArg04)
	word16 dx_132 = dx
	branch Test(ULT,false) l0800_5DEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE2:
	branch dx != 0x0000 l0800_5DE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE4:
	branch ax <u 0x0400 l0800_5DEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DEE:
	fn0800_4194(ds, wArg02, wArg04)
	ax_55 = ax & 0xFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DE9:
	ax_55 = 0x0400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5DFD:
	word16 si_141 = ax_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E5B:
	branch si_141 != 0x0000 l0800_5E01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E01:
	branch fn0800_3E27(ds, wArg02, wArg04, out cx_79, out dx_132, out di_80, out ds, out Top_84) != 0x524E l0800_5E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E12:
	branch (fn0800_3E27(ds, wArg02, wArg04, out cx_284, out dx_285, out di_286, out ds, out Top_287) & 0xFF00) != 0x4300 l0800_5E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E40:
	fn0800_ACB3(ds, wArg02, wArg04, 0x0001, out cx_288, out dx_132, out bx_289)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E58:
	si_141 = si_141 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E26:
	fn0800_ACB3(ds, wArg02, wArg04, 0x0001, out cx_290, out dx_132, out bx_291)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E5F:
	dxOut = dx_132
	dsOut = ds
	return si_141
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5DCE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_5E64(selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_5E64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E64:
	word16 bp_1069 = fp - 2
	word16 sp_128 = fp - 0x003E
	word16 di_21 = 0x2202
	word16 si_22 = 0x4271
	word16 cx_2197 = 0x0004
	word16 dx_118 = 0x0003
	branch true l0800_5E80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E7E:
	cx_2197 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E80:
	word16 ax_28 = 0x0000
	bool Z_41 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E82:
	branch cx_2197 == 0x0000 l0800_5E84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E82_1:
	Z_41 = SLICE(cond(Mem18[ds:si_2609:byte] - Mem18[ds:di_2610:byte]), bool, 2) (alias)
	si_22 = si_2609 + 0x0001
	di_21 = di_2610 + 0x0001
	cx_2197 = cx_2197 - 0x0001
	si_2609 = si_22
	di_2610 = di_21
	branch Mem18[ds:si_2609:byte] != Mem18[ds:di_2610:byte] l0800_5E82
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E84:
	branch Z_41 l0800_5E8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E86:
	ax_28 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E8B:
	word16 ax_112 = ax_28
	branch ax_28 == 0x0000 l0800_5EC3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5E8F:
	word16 di_2173 = 0x4271
	word16 si_2178 = 0x2202
	word16 cx_77 = 0x0004
	word16 dx_2205 = 0xFFFF
	branch true l0800_5EA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA1:
	cx_77 = 0x0003
	dx_2205 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA5:
	word16 cx_86 = cx_77 >>u 0x0001
	cx_2196 = cx_86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA7:
	word16 cx_2196
	branch cx_2196 == 0x0000 l0800_5EA9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA9:
	word16 cx_2186 = cx_2196 * 0x0002 + (cx_86 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAB:
	branch cx_2186 == 0x0000 l0800_5EAD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAD:
	word16 cx_2176 = dx_2205
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB1:
	branch cx_2176 == 0x0000 l0800_5EB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB3:
	word16 sp_121 = <invalid>
	bp_1069 = fn0800_09A3(out ds)
	sp_128 = sp_121 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EC3:
	word16 ax_150 = (DPB(DPB(ax_112, Mem131[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_118, Mem131[ds:0x2E76:byte], 0), 0x00, 8)
	branch Mem131[ds:0x2A09:word16] >u 0x0000 l0800_5EED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EDC:
	branch Mem131[ds:0x2A09:word16] != 0x0000 l0800_5EE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EDE:
	branch ax_150 <u Mem131[ds:0x2A07:word16] l0800_5EED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EED:
	branch Mem131[ds:0x2A0D:word16] <u 0x0000 l0800_5F0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EF4:
	branch Mem131[ds:0x2A0D:word16] >u 0x0000 l0800_5EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EF6:
	branch Mem131[ds:0x2A0B:word16] <=u 0x7FF0 l0800_5F0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EFE:
	Mem165[ds:0x2A0D:word16] = 0x0000
	Mem166[ds:0x2A0B:word16] = 0x7FF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F0A:
	word16 sp_174 = sp_128 - 2
	Mem179[ss:sp_174:word16] = 0x0000
	Mem182[ss:sp_174 - 2:word16] = 0x0000
	Mem184[ss:sp_174 - 4:word16] = 0x0002
	Mem188[ss:sp_174 - 6:word16] = Mem184[ds:0x29E5:word16]
	Mem191[ss:sp_174 - 8:word16] = Mem188[ds:0x29E3:word16]
	fn0800_ACB3(ds, Mem191[ss:sp_174 - 8:word16], Mem191[ss:sp_174 - 6:word16], Mem191[ss:sp_174:word16], out cx_2472, out dx_2473, out bx_2474)
	Mem205[ss:sp_174:word16] = Mem191[ds:0x29E5:word16]
	Mem208[ss:sp_174 - 2:word16] = Mem205[ds:0x29E3:word16]
	selector ds_213
	Mem231[ss:bp_1069 - 0x0022:word16] = fn0800_3FAD(ds, Mem208[ss:sp_174 - 2:word16], Mem208[ss:sp_174:word16], out ch_2475, out di_2476, out ds_213)
	Mem234[ss:sp_174:word16] = Mem231[ds_213:0x29E5:word16]
	Mem237[ss:sp_174 - 2:word16] = Mem234[ds_213:0x29E3:word16]
	selector ds_242
	word16 ax_238 = fn0800_3FAD(ds_213, Mem237[ss:sp_174 - 2:word16], Mem237[ss:sp_174:word16], out ch_2477, out di_2478, out ds_242)
	word16 di_251 = ax_238
	branch Mem237[ss:bp_1069 - 0x0022:word16] == 0x0000 l0800_5F48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F47:
	di_251 = ax_238 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F48:
	word16 dx_265
	word16 ax_274 = fn0800_8C69(di_251, 0x09, 0x0000, out cl_2479, out dx_265) + Mem237[ss:bp_1069 - 0x0022:word16]
	Mem278[ss:bp_1069 - 0x0002:word16] = dx_265 + (ax_274 <u 0x0000)
	Mem279[ss:bp_1069 - 0x0004:word16] = ax_274
	word16 sp_266 = <invalid>
	word16 ax_280 = Mem279[ss:bp_1069 - 0x0002:word16]
	word16 dx_281 = Mem279[ss:bp_1069 - 0x0004:word16]
	branch ax_280 <u Mem279[ds_242:0x2A09:word16] l0800_5F7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F69:
	branch ax_280 >u Mem279[ds_242:0x2A09:word16] l0800_5F71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F6B:
	branch dx_281 <=u Mem279[ds_242:0x2A07:word16] l0800_5F7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F71:
	word16 dx_291 = Mem279[ds_242:0x2A07:word16]
	Mem294[ss:bp_1069 - 0x0002:word16] = Mem279[ds_242:0x2A09:word16]
	Mem295[ss:bp_1069 - 0x0004:word16] = dx_291
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5F7E:
	Mem303[ss:sp_266 - 2:word16] = Mem297[ds_242:0x29E5:word16]
	Mem306[ss:sp_266 - 4:word16] = Mem303[ds_242:0x29E3:word16]
	selector ds_311
	Mem322[ss:bp_1069 - 0x0024:word16] = fn0800_3FAD(ds_242, Mem306[ss:sp_266 - 4:word16], Mem306[ss:sp_266 - 2:word16], out ch_2480, out di_2481, out ds_311)
	Mem325[ss:sp_266 - 2:word16] = Mem322[ds_311:0x29E5:word16]
	Mem328[ss:sp_266 - 4:word16] = Mem325[ds_311:0x29E3:word16]
	selector ds_333
	Mem343[ss:bp_1069 - 0x0026:word16] = fn0800_3FAD(ds_311, Mem328[ss:sp_266 - 4:word16], Mem328[ss:sp_266 - 2:word16], out ch_2482, out di_2483, out ds_333)
	Mem346[ss:sp_266 - 2:word16] = Mem343[ds_333:0x29E5:word16]
	Mem349[ss:sp_266 - 4:word16] = Mem346[ds_333:0x29E3:word16]
	selector ds_354
	Mem364[ss:bp_1069 - 0x0028:word16] = fn0800_3FAD(ds_333, Mem349[ss:sp_266 - 4:word16], Mem349[ss:sp_266 - 2:word16], out ch_2484, out di_2485, out ds_354)
	Mem367[ss:sp_266 - 2:word16] = Mem364[ds_354:0x29E5:word16]
	Mem370[ss:sp_266 - 4:word16] = Mem367[ds_354:0x29E3:word16]
	selector ds_375
	Mem385[ss:bp_1069 - 0x002A:word16] = fn0800_3FAD(ds_354, Mem370[ss:sp_266 - 4:word16], Mem370[ss:sp_266 - 2:word16], out ch_2486, out di_2487, out ds_375)
	Mem388[ss:sp_266 - 2:word16] = Mem385[ds_375:0x29E5:word16]
	Mem391[ss:sp_266 - 4:word16] = Mem388[ds_375:0x29E3:word16]
	selector ds_396
	Mem406[ss:bp_1069 - 0x002C:word16] = fn0800_3FAD(ds_375, Mem391[ss:sp_266 - 4:word16], Mem391[ss:sp_266 - 2:word16], out ch_2488, out di_2489, out ds_396)
	Mem409[ss:sp_266 - 2:word16] = Mem406[ds_396:0x29E5:word16]
	Mem412[ss:sp_266 - 4:word16] = Mem409[ds_396:0x29E3:word16]
	selector ds_417
	Mem427[ss:bp_1069 - 0x002E:word16] = fn0800_3FAD(ds_396, Mem412[ss:sp_266 - 4:word16], Mem412[ss:sp_266 - 2:word16], out ch_2490, out di_2491, out ds_417)
	Mem430[ss:sp_266 - 2:word16] = Mem427[ds_417:0x29E5:word16]
	Mem433[ss:sp_266 - 4:word16] = Mem430[ds_417:0x29E3:word16]
	selector ds_438
	fn0800_3FAD(ds_417, Mem433[ss:sp_266 - 4:word16], Mem433[ss:sp_266 - 2:word16], out ch_2492, out di_2493, out ds_438)
	Mem450[ss:sp_266 - 2:word16] = Mem433[ds_438:0x29E5:word16]
	Mem453[ss:sp_266 - 4:word16] = Mem450[ds_438:0x29E3:word16]
	selector ds_458
	Mem468[ss:bp_1069 - 0x0030:word16] = fn0800_3FAD(ds_438, Mem453[ss:sp_266 - 4:word16], Mem453[ss:sp_266 - 2:word16], out ch_2494, out di_2495, out ds_458)
	Mem471[ss:sp_266 - 2:word16] = Mem468[ds_458:0x29E5:word16]
	Mem474[ss:sp_266 - 4:word16] = Mem471[ds_458:0x29E3:word16]
	selector ds_479
	Mem489[ss:bp_1069 - 0x0032:word16] = fn0800_3FAD(ds_458, Mem474[ss:sp_266 - 4:word16], Mem474[ss:sp_266 - 2:word16], out ch_2496, out di_2497, out ds_479)
	Mem492[ss:sp_266 - 2:word16] = Mem489[ds_479:0x29E5:word16]
	Mem495[ss:sp_266 - 4:word16] = Mem492[ds_479:0x29E3:word16]
	selector ds_500
	Mem510[ss:bp_1069 - 0x0034:word16] = fn0800_3FAD(ds_479, Mem495[ss:sp_266 - 4:word16], Mem495[ss:sp_266 - 2:word16], out ch_2498, out di_2499, out ds_500)
	Mem513[ss:sp_266 - 2:word16] = Mem510[ds_500:0x29E5:word16]
	Mem516[ss:sp_266 - 4:word16] = Mem513[ds_500:0x29E3:word16]
	selector ds_521
	word16 ax_517 = fn0800_3FAD(ds_500, Mem516[ss:sp_266 - 4:word16], Mem516[ss:sp_266 - 2:word16], out ch_2500, out di_2501, out ds_521)
	Mem532[ss:sp_266 - 2:word16] = Mem516[ds_521:0x29E1:word16]
	Mem535[ss:sp_266 - 4:word16] = Mem532[ds_521:0x29DF:word16]
	word16 ax_546 = (DPB(DPB(ax_517, Mem535[ds_521:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_522, Mem535[ds_521:0x2E76:byte], 0), 0x00, 8)
	Mem551[ss:sp_266 - 6:word16] = 0x0000
	Mem553[ss:sp_266 - 8:word16] = ax_546
	Mem555[ss:sp_266 - 10:word16] = ds_521
	Mem558[ss:sp_266 - 12:word16] = 0x2E77
	selector ds_1019
	word16 ax_1031 = (word16) fn0800_4152(ds_521, Mem558[ss:sp_266 - 12:word16], Mem558[ss:sp_266 - 10:word16], Mem558[ss:sp_266 - 8:word16], Mem558[ss:sp_266 - 4:word16], Mem558[ss:sp_266 - 2:word16], out ds_1019)
	word16 sp_1022 = sp_266
	branch Mem558[ss:bp_1069 - 0x0024:word16] != 0x0000 l0800_6064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6064:
	Mem580[ss:sp_266 - 2:word16] = 0x0000
	Mem582[ss:sp_266 - 4:word16] = 0xFFFF
	word16 dx_589
	word16 di_587
	selector ds_588
	word16 ax_583 = fn0800_4311(out dx_589, out bp_1069, out si_2502, out di_587, out ds_588)
	Mem599[ss:bp_1069 - 0x000A:word16] = dx_589
	Mem600[ss:bp_1069 - 0x000C:word16] = ax_583
	word16 sp_592 = <invalid>
	Mem605[ss:sp_592 + 0x0002:word16] = 0x0000
	Mem607[ss:sp_592:word16] = 0x0000
	Mem610[ss:sp_592 - 2:word16] = Mem607[ss:bp_1069 - 0x0034:word16]
	Mem613[ss:sp_592 - 4:word16] = Mem610[ds_588:0x29E5:word16]
	Mem616[ss:sp_592 - 6:word16] = Mem613[ds_588:0x29E3:word16]
	word16 bx_618
	word16 cx_619
	fn0800_ACB3(ds_588, Mem616[ss:sp_592 - 6:word16], Mem616[ss:sp_592 - 4:word16], Mem616[ss:sp_592 + 2:word16], out cx_619, out dx_2503, out bx_618)
	Mem631[ss:bp_1069 - 0x0036:word16] = Mem616[ss:bp_1069 - 0x000C:word16]
	word16 sp_626 = sp_592 + 0x0004
	word16 si_627 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_60D6:
	branch si_627 != Mem635[ss:bp_1069 - 0x0024:word16] l0800_6096
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6096:
	word16 sp_641 = sp_626 - 2
	Mem642[ss:sp_641:word16] = Mem635[ds_588:0x29E5:word16]
	Mem645[ss:sp_641 - 2:word16] = Mem642[ds_588:0x29E3:word16]
	selector ds_650
	Mem660[ss:bp_1069 - 0x0022:word16] = fn0800_3FAD(ds_588, Mem645[ss:sp_641 - 2:word16], Mem645[ss:sp_641:word16], out ch_2509, out di_2510, out ds_650)
	Mem663[ss:sp_641:word16] = Mem660[ds_650:0x29E5:word16]
	Mem666[ss:sp_641 - 2:word16] = Mem663[ds_650:0x29E3:word16]
	word16 ax_667 = fn0800_3FAD(ds_650, Mem666[ss:sp_641 - 2:word16], Mem666[ss:sp_641:word16], out ch_2511, out di_2512, out ds_588)
	byte cl_687
	word16 dx_688
	word16 ax_694 = fn0800_8C69(ax_667, 0x04, 0x0000, out cl_687, out dx_688) + Mem666[ss:bp_1069 - 0x0022:word16]
	selector es_698 = Mem666[ss:bp_1069 - 0x000A:selector]
	bx_618 = Mem666[ss:bp_1069 - 0x0036:word16]
	Mem700[es_698:bx_618 + 0x0002:word16] = dx_688 + (ax_694 <u 0x0000)
	Mem701[es_698:bx_618:word16] = ax_694
	Mem703[ss:bp_1069 - 0x0036:word16] = Mem701[ss:bp_1069 - 0x0036:word16] + 0x0004
	word16 cx_669 = <invalid>
	di_587 = ax_667
	sp_626 = <invalid>
	cx_619 = DPB(cx_669, cl_687, 0) (alias)
	si_627 = si_627 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_60DB:
	word16 sp_708 = sp_626 - 2
	Mem709[ss:sp_708:word16] = 0x667B
	Mem712[ss:sp_708 - 2:word16] = 0x0004
	Mem715[ss:sp_708 - 4:word16] = Mem712[ss:bp_1069 - 0x0024:word16]
	Mem718[ss:sp_708 - 6:word16] = Mem715[ss:bp_1069 - 0x000A:word16]
	Mem721[ss:sp_708 - 8:word16] = Mem718[ss:bp_1069 - 0x000C:word16]
	fn0800_B95E(cx_619, bx_618, si_627, di_587, ds_588, Mem721[ss:sp_708 - 8:word16], Mem721[ss:sp_708 - 6:word16], Mem721[ss:sp_708 - 4:word16], Mem721[ss:sp_708 - 2:word16], Mem721[ss:sp_708:word16])
	word16 di_740 = Mem721[ss:bp_1069 - 0x000C:word16]
	Mem747[ss:bp_1069 - 0x0038:word16] = -false
	word16 sp_1017 = sp_708 + 0x0002
	word16 si_2212 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_620C:
	branch si_2212 == Mem751[ss:bp_1069 - 0x0024:word16] l0800_6214
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6214:
	word16 sp_756 = sp_1017 - 2
	Mem757[ss:sp_756:word16] = Mem751[ss:bp_1069 - 0x000A:word16]
	Mem760[ss:sp_756 - 2:word16] = Mem757[ss:bp_1069 - 0x000C:word16]
	ax_1031 = fn0800_4346(ds_588, Mem760[ss:sp_756:word16], out cx_2541, out dx_2542, out bx_2543, out ds_1019)
	sp_1022 = sp_756 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6211:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6104:
	selector es_774 = Mem751[ss:bp_1069 - 0x000A:selector]
	word16 ax_776 = Mem751[es_774:di_740 + 0x0002:word16]
	word16 dx_777 = Mem751[es_774:di_740:word16]
	Mem778[ss:bp_1069 - 0x0012:word16] = ax_776
	Mem779[ss:bp_1069 - 0x0014:word16] = dx_777
	Mem784[ss:bp_1069 - 0x000E:word16] = ax_776 & 0x000F
	Mem785[ss:bp_1069 - 0x0010:word16] = dx_777 & 0xFFF0
	word16 sp_787 = sp_1017 - 2
	Mem788[ss:sp_787:word16] = Mem785[ds_588:0x29E1:word16]
	Mem791[ss:sp_787 - 2:word16] = Mem788[ds_588:0x29DF:word16]
	Mem795[ss:sp_787 - 4:word16] = DPB(ax_776 & 0x000F, 0x00, 0)
	selector ds_803
	fn0800_4047(ds_588, Mem795[ss:sp_787 - 4:byte], Mem795[ss:sp_787 - 2:segptr32], out cx_2544, out dx_2545, out bx_2546, out di_2547, out ds_803, out Top_2548)
	Mem812[ss:sp_787:word16] = Mem795[ds_803:0x29E1:word16]
	Mem815[ss:sp_787 - 2:word16] = Mem812[ds_803:0x29DF:word16]
	word16 sp_823 = <invalid>
	Mem829[ss:sp_823 - 2:word16] = fn0800_8CAA(Mem815[ss:bp_1069 - 0x0010:word16], 0x04, Mem815[ss:bp_1069 - 0x000E:word16], out dx_2549)
	word16 di_833
	selector ds_834
	fn0800_40BF(ds_803, Mem829[ss:sp_823 - 2:byte], Mem829[ss:sp_823:word16], Mem829[ss:sp_823 + 2:word16], out dx_2550, out di_833, out ds_834)
	Mem844[ss:bp_1069 - 0x0022:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6150:
	selector es_848 = Mem847[ss:bp_1069 - 0x000A:selector]
	ui32 ax_dx_2228 = SEQ(Mem847[es_848:di_833 + 0x0002:word16], Mem847[es_848:di_833:word16]) - SEQ(Mem847[ss:bp_1069 - 0x000E:word16], Mem847[ss:bp_1069 - 0x0010:word16])
	Mem856[ss:bp_1069 - 0x0016:word16] = SLICE(ax_dx_2228, word16, 16)
	Mem857[ss:bp_1069 - 0x0018:word16] = (word16) ax_dx_2228
	Mem859[ss:bp_1069 - 0x0010:word16] = v101_858
	ui32 v102_v101_2230 = SEQ(Mem859[ss:bp_1069 - 0x000E:word16], Mem857[ss:bp_1069 - 0x0010:word16]) + ax_dx_2228
	Mem863[ss:bp_1069 - 0x000E:word16] = SLICE(v102_v101_2230, word16, 16)
	word16 v101_858 = (word16) v102_v101_2230
	branch Mem863[ss:bp_1069 - 0x0016:word16] >u 0x0000 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6172:
	branch Mem863[ss:bp_1069 - 0x0016:word16] != 0x0000 l0800_617B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6174:
	branch Mem863[ss:bp_1069 - 0x0018:word16] >u 0x00FF l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_617B:
	ui32 ax_dx_2226 = SEQ(Mem863[ss:bp_1069 - 0x000E:word16], Mem863[ss:bp_1069 - 0x0010:word16]) - SEQ(Mem863[ss:bp_1069 - 0x0012:word16], Mem863[ss:bp_1069 - 0x0014:word16])
	word16 dx_874 = (word16) ax_dx_2226
	word16 ax_877 = SLICE(ax_dx_2226, word16, 16)
	branch ax_877 >u 0x0000 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_618B:
	branch Test(ULT,false) l0800_6192
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_618D:
	branch dx_874 >=u 0xFFF0 l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6192:
	branch Mem863[ss:bp_1069 - 0x0022:word16] == 0x00FF l0800_61B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6199:
	Mem898[ss:sp_823 + 0x0002:word16] = Mem863[ds_834:0x29E1:word16]
	Mem901[ss:sp_823:word16] = Mem898[ds_834:0x29DF:word16]
	Mem906[ss:sp_823 - 0x0002:word16] = DPB(ax_877, Mem901[ss:bp_1069 - 0x0018:byte], 0)
	word16 di_913
	fn0800_4047(ds_834, Mem906[ss:sp_823 - 0x0002:byte], Mem906[ss:sp_823:segptr32], out cx_2569, out dx_2570, out bx_2571, out di_913, out ds_834, out Top_2572)
	Mem921[ss:bp_1069 - 0x0022:word16] = Mem906[ss:bp_1069 - 0x0022:word16] + 0x0001
	di_833 = di_913 + 0x0004
	si_2212 = si_2212 + 0x0001
	branch si_2212 != Mem921[ss:bp_1069 - 0x0024:word16] l0800_6150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_61B9:
	Mem934[ss:sp_823 + 0x0002:word16] = 0x0001
	word16 ax_939 = -(Mem934[ss:bp_1069 - 0x0022:word16] + 0x0003)
	Mem944[ss:sp_823:word16] = Mem934[ss:bp_1069 - 0x0038:word16] - (ax_939 == 0x0000)
	Mem946[ss:sp_823 - 0x0002:word16] = ax_939
	Mem950[ss:sp_823 - 0x0004:word16] = Mem946[ds_834:0x29E1:word16]
	Mem953[ss:sp_823 - 0x0006:word16] = Mem950[ds_834:0x29DF:word16]
	word16 ax_954 = fn0800_ACB3(ds_834, Mem953[ss:sp_823 - 0x0006:word16], Mem953[ss:sp_823 - 0x0004:word16], Mem953[ss:sp_823 + 0x0002:word16], out cx_2559, out dx_2560, out bx_2561)
	Mem967[ss:sp_823 + 0x0002:word16] = Mem953[ds_834:0x29E1:word16]
	Mem970[ss:sp_823:word16] = Mem967[ds_834:0x29DF:word16]
	Mem974[ss:sp_823 - 0x0002:word16] = DPB(ax_954, Mem970[ss:bp_1069 - 0x0022:byte], 0)
	fn0800_4047(ds_834, Mem974[ss:sp_823 - 0x0002:byte], Mem974[ss:sp_823:segptr32], out cx_2562, out dx_2563, out bx_2564, out di_740, out ds_588, out Top_2565)
	Mem990[ss:sp_823 + 0x0002:word16] = 0x0001
	word16 ax_991 = Mem990[ss:bp_1069 - 0x0022:word16]
	Mem999[ss:sp_823:word16] = SLICE(cond(ax_991 + 0x0002), bool, 1)
	Mem1001[ss:sp_823 - 0x0002:word16] = ax_991 + 0x0002
	Mem1004[ss:sp_823 - 0x0004:word16] = Mem1001[ds_588:0x29E1:word16]
	Mem1007[ss:sp_823 - 0x0006:word16] = Mem1004[ds_588:0x29DF:word16]
	fn0800_ACB3(ds_588, Mem1007[ss:sp_823 - 0x0006:word16], Mem1007[ss:sp_823 - 0x0004:word16], Mem1007[ss:sp_823 + 0x0002:word16], out cx_2566, out dx_2567, out bx_2568)
	sp_1017 = sp_823 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6061:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6220:
	word16 sp_1023 = sp_1022 - 2
	Mem1025[ss:sp_1023:word16] = Mem1020[ds_1019:0x29E1:word16]
	Mem1028[ss:sp_1023 - 2:word16] = Mem1025[ds_1019:0x29DF:word16]
	Mem1033[ss:sp_1023 - 4:word16] = DPB(ax_1031, 0x00, 0)
	selector ds_1041
	fn0800_4047(ds_1019, Mem1033[ss:sp_1023 - 4:byte], Mem1033[ss:sp_1023 - 2:segptr32], out cx_2504, out dx_2505, out bx_2506, out di_2507, out ds_1041, out Top_2508)
	Mem1050[ss:sp_1023:word16] = Mem1033[ds_1041:0x29E1:word16]
	Mem1053[ss:sp_1023 - 2:word16] = Mem1050[ds_1041:0x29DF:word16]
	word16 dx_1057
	word16 ax_1054 = fn0800_AD2F(ds_1041, Mem1053[ss:sp_1023 - 2:segptr32], out dx_1057)
	Mem1070[ss:bp_1069 - 0x001A:word16] = dx_1057 + 0xFF + (ax_1054 <u 0xFFE0)
	Mem1071[ss:bp_1069 - 0x001C:word16] = ax_1054 + 0xFFE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6266:
	word16 ax_1075 = Mem1074[ss:bp_1069 - 0x001C:word16]
	branch (ax_1075 & 0x000F) != 0x0000 l0800_624D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_624D:
	word16 sp_1084 = sp_1022 - 2
	Mem1085[ss:sp_1084:word16] = Mem1074[ds_1041:0x29E1:word16]
	Mem1088[ss:sp_1084 - 2:word16] = Mem1085[ds_1041:0x29DF:word16]
	Mem1092[ss:sp_1084 - 4:word16] = DPB(ax_1075 & 0x000F, 0x00, 0)
	fn0800_4047(ds_1041, Mem1092[ss:sp_1084 - 4:byte], Mem1092[ss:sp_1084 - 2:segptr32], out cx_2513, out dx_2514, out bx_2515, out di_2516, out ds_1041, out Top_2517)
	word16 v163_1106 = Mem1092[ss:bp_1069 - 0x001C:word16] + 0x0001
	Mem1107[ss:bp_1069 - 0x001C:word16] = v163_1106
	Mem1111[ss:bp_1069 - 0x001A:word16] = Mem1107[ss:bp_1069 - 0x001A:word16] + (v163_1106 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6271:
	word16 v64_1116 = Mem1074[ss:bp_1069 - 0x0004:word16] - (Mem1074[ss:bp_1069 - 0x0026:word16] << 0x04)
	Mem1117[ss:bp_1069 - 0x0004:word16] = v64_1116
	Mem1121[ss:bp_1069 - 0x0002:word16] = Mem1117[ss:bp_1069 - 0x0002:word16] - (v64_1116 <u 0x0000)
	word16 sp_1123 = sp_1022 - 2
	Mem1124[ss:sp_1123:word16] = 0x0000
	word16 ax_1125 = Mem1124[ss:bp_1069 - 0x0026:word16]
	Mem1131[ss:sp_1123 - 2:word16] = 0x0000
	Mem1133[ss:sp_1123 - 4:word16] = ax_1125 << 0x04
	Mem1136[ss:sp_1123 - 6:word16] = Mem1133[ds_1041:0x29E5:word16]
	Mem1139[ss:sp_1123 - 8:word16] = Mem1136[ds_1041:0x29E3:word16]
	fn0800_ACB3(ds_1041, Mem1139[ss:sp_1123 - 8:word16], Mem1139[ss:sp_1123 - 6:word16], Mem1139[ss:sp_1123:word16], out cx_2518, out dx_2519, out bx_2520)
	Mem1153[ss:sp_1123:word16] = Mem1139[ss:bp_1069 - 0x0002:word16]
	Mem1156[ss:sp_1123 - 2:word16] = Mem1153[ss:bp_1069 - 0x0004:word16]
	Mem1159[ss:sp_1123 - 4:word16] = Mem1156[ss:bp_1069 - 0x0002:word16]
	Mem1162[ss:sp_1123 - 6:word16] = Mem1159[ss:bp_1069 - 0x0004:word16]
	word16 bp_1164
	selector ds_1168
	fn0800_75EA(ds_1041, Mem1162[ss:sp_1123 - 6:word16], Mem1162[ss:sp_1123 - 4:word16], Mem1162[ss:sp_1123 - 2:word16], Mem1162[ss:sp_1123:word16], out bp_1164, out si_2521, out ds_1168)
	word16 sp_1172 = <invalid>
	Mem1183[ss:sp_1172 + 0x0006:word16] = 0x0000
	Mem1186[ss:sp_1172 + 0x0004:word16] = 0x0000
	Mem1188[ss:sp_1172 + 0x0002:word16] = 0x0020
	Mem1191[ss:sp_1172:word16] = Mem1188[ds_1168:0x29E1:word16]
	Mem1194[ss:sp_1172 - 2:word16] = Mem1191[ds_1168:0x29DF:word16]
	fn0800_ACB3(ds_1168, Mem1194[ss:sp_1172 - 2:word16], Mem1194[ss:sp_1172:word16], Mem1194[ss:sp_1172 + 6:word16], out cx_2522, out dx_2523, out bx_2524)
	Mem1208[ss:sp_1172 + 0x0006:word16] = Mem1194[ds_1168:0x29E1:word16]
	Mem1211[ss:sp_1172 + 0x0004:word16] = Mem1208[ds_1168:0x29DF:word16]
	Mem1214[ss:sp_1172 + 0x0002:word16] = Mem1211[ss:bp_1164 - 0x0030:word16]
	selector ds_1219
	fn0800_40BF(ds_1168, Mem1214[ss:sp_1172 + 0x0002:byte], Mem1214[ss:sp_1172 + 0x0004:word16], Mem1214[ss:sp_1172 + 0x0006:word16], out dx_2525, out di_2526, out ds_1219)
	Mem1231[ss:sp_1172 + 0x0006:word16] = Mem1214[ds_1219:0x29E1:word16]
	Mem1234[ss:sp_1172 + 0x0004:word16] = Mem1231[ds_1219:0x29DF:word16]
	Mem1237[ss:sp_1172 + 0x0002:word16] = Mem1234[ss:bp_1164 - 0x0032:word16]
	selector ds_1242
	fn0800_40BF(ds_1219, Mem1237[ss:sp_1172 + 0x0002:byte], Mem1237[ss:sp_1172 + 0x0004:word16], Mem1237[ss:sp_1172 + 0x0006:word16], out dx_2527, out di_2528, out ds_1242)
	Mem1254[ss:sp_1172 + 0x0006:word16] = Mem1237[ds_1242:0x29E1:word16]
	Mem1257[ss:sp_1172 + 0x0004:word16] = Mem1254[ds_1242:0x29DF:word16]
	Mem1260[ss:sp_1172 + 0x0002:word16] = Mem1257[ss:bp_1164 - 0x002E:word16]
	selector ds_1265
	fn0800_40BF(ds_1242, Mem1260[ss:sp_1172 + 0x0002:byte], Mem1260[ss:sp_1172 + 0x0004:word16], Mem1260[ss:sp_1172 + 0x0006:word16], out dx_2529, out di_2530, out ds_1265)
	Mem1277[ss:sp_1172 + 0x0006:word16] = Mem1260[ds_1265:0x29E1:word16]
	Mem1280[ss:sp_1172 + 0x0004:word16] = Mem1277[ds_1265:0x29DF:word16]
	Mem1283[ss:sp_1172 + 0x0002:word16] = Mem1280[ss:bp_1164 - 0x002C:word16]
	selector ds_1288
	fn0800_40BF(ds_1265, Mem1283[ss:sp_1172 + 0x0002:byte], Mem1283[ss:sp_1172 + 0x0004:word16], Mem1283[ss:sp_1172 + 0x0006:word16], out dx_2531, out di_2532, out ds_1288)
	Mem1300[ss:sp_1172 + 0x0006:word16] = Mem1283[ds_1288:0x29E1:word16]
	Mem1303[ss:sp_1172 + 0x0004:word16] = Mem1300[ds_1288:0x29DF:word16]
	Mem1306[ss:sp_1172 + 0x0002:word16] = Mem1303[ss:bp_1164 - 0x001C:word16]
	selector ds_1311
	fn0800_40BF(ds_1288, Mem1306[ss:sp_1172 + 0x0002:byte], Mem1306[ss:sp_1172 + 0x0004:word16], Mem1306[ss:sp_1172 + 0x0006:word16], out dx_2533, out di_2534, out ds_1311)
	Mem1333[ss:bp_1164 - 0x0022:word16] = fn0800_8CAA(Mem1306[ds_1311:0x2A03:word16], 0x04, Mem1306[ds_1311:0x2A05:word16], out dx_2535)
	word16 sp_1328 = <invalid>
	branch (Mem1333[ds_1311:0x2A03:word16] & 0x000F) == 0x0000 l0800_6333
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6330:
	Mem1341[ss:bp_1164 - 0x0022:word16] = Mem1333[ss:bp_1164 - 0x0022:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6333:
	Mem1349[ss:sp_1328 - 2:word16] = Mem1344[ds_1311:0x29E1:word16]
	Mem1352[ss:sp_1328 - 4:word16] = Mem1349[ds_1311:0x29DF:word16]
	Mem1356[ss:sp_1328 - 6:word16] = Mem1352[ss:bp_1164 - 0x0022:word16]
	selector ds_1361
	fn0800_40BF(ds_1311, Mem1356[ss:sp_1328 - 6:byte], Mem1356[ss:sp_1328 - 4:word16], Mem1356[ss:sp_1328 - 2:word16], out dx_2536, out di_2537, out ds_1361)
	Mem1373[ss:sp_1328 - 2:word16] = Mem1356[ds_1361:0x29E1:word16]
	Mem1376[ss:sp_1328 - 4:word16] = Mem1373[ds_1361:0x29DF:word16]
	word16 sp_1384 = <invalid>
	Mem1393[ss:sp_1384 - 2:word16] = Mem1376[ss:bp_1164 - 0x0022:word16] + fn0800_8CAA(Mem1376[ss:bp_1164 - 0x001C:word16], 0x04, Mem1376[ss:bp_1164 - 0x001A:word16], out dx_2538)
	selector ds_1398
	fn0800_40BF(ds_1361, Mem1393[ss:sp_1384 - 2:byte], Mem1393[ss:sp_1384:word16], Mem1393[ss:sp_1384 + 2:word16], out dx_2539, out di_2540, out ds_1398)
	ui32 ax_dx_2222 = SEQ(Mem1393[ss:bp_1164 - 0x0002:word16], Mem1393[ss:bp_1164 - 0x0004:word16]) - SEQ(Mem1393[ds_1398:0x2A05:word16], Mem1393[ds_1398:0x2A03:word16]) + SEQ(Mem1393[ds_1398:0x4E8A:word16], Mem1393[ds_1398:0x4E88:word16])
	word16 dx_1413 = (word16) ax_dx_2222
	Mem1421[ss:bp_1164 - 0x0006:word16] = SLICE(ax_dx_2222, word16, 16) + (dx_1413 <u 0x0080)
	Mem1422[ss:bp_1164 - 0x0008:word16] = dx_1413 + 0x0080
	branch Mem1422[ds_1398:0x2A1D:word16] == 0x0000 l0800_6398
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6398:
	branch Mem1422[ds_1398:0x2A21:word16] != 0x0001 l0800_63A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_639F:
	word16 v153_1427 = Mem1422[ss:bp_1164 - 0x0008:word16] + 0x0180
	Mem1428[ss:bp_1164 - 0x0008:word16] = v153_1427
	Mem1432[ss:bp_1164 - 0x0006:word16] = Mem1428[ss:bp_1164 - 0x0006:word16] + (v153_1427 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_638D:
	word16 v95_1434 = Mem1422[ss:bp_1164 - 0x0008:word16] + 0x0200
	Mem1435[ss:bp_1164 - 0x0008:word16] = v95_1434
	Mem1439[ss:bp_1164 - 0x0006:word16] = Mem1435[ss:bp_1164 - 0x0006:word16] + (v95_1434 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_63A8:
	Mem1445[ss:sp_1384 + 0x0002:word16] = 0x0000
	word16 bx_1452 = Mem1445[ss:bp_1164 - 0x0004:word16] + (Mem1445[ss:bp_1164 - 0x0026:word16] << 0x04)
	Mem1458[ss:sp_1384:word16] = Mem1445[ss:bp_1164 - 0x0002:word16] + (bx_1452 <u 0x0000)
	Mem1460[ss:sp_1384 - 2:word16] = bx_1452
	Mem1464[ss:sp_1384 - 4:word16] = Mem1460[ds_1398:0x29E5:word16]
	Mem1467[ss:sp_1384 - 6:word16] = Mem1464[ds_1398:0x29E3:word16]
	fn0800_ACB3(ds_1398, Mem1467[ss:sp_1384 - 6:word16], Mem1467[ss:sp_1384 - 4:word16], Mem1467[ss:sp_1384 + 2:word16], out cx_2551, out dx_2552, out bx_2553)
	Mem1480[ss:sp_1384 + 0x0002:word16] = 0x0002
	Mem1485[ss:sp_1384:word16] = 0x0000
	Mem1487[ss:sp_1384 - 2:word16] = 0x0000
	Mem1490[ss:sp_1384 - 4:word16] = Mem1487[ds_1398:0x29E1:word16]
	Mem1493[ss:sp_1384 - 6:word16] = Mem1490[ds_1398:0x29DF:word16]
	fn0800_ACB3(ds_1398, Mem1493[ss:sp_1384 - 6:word16], Mem1493[ss:sp_1384 - 4:word16], Mem1493[ss:sp_1384 + 2:word16], out cx_2554, out dx_2555, out bx_2556)
	Mem1507[ss:sp_1384 + 0x0002:word16] = Mem1493[ds_1398:0x29E1:word16]
	Mem1510[ss:sp_1384:word16] = Mem1507[ds_1398:0x29DF:word16]
	word16 dx_1514
	word16 ax_1511 = fn0800_AD2F(ds_1398, Mem1510[ss:sp_1384:segptr32], out dx_1514)
	Mem1521[ss:bp_1164 - 0x001E:word16] = dx_1514
	Mem1522[ss:bp_1164 - 0x0020:word16] = ax_1511
	ui32 dx_bx_2224 = SEQ(Mem1522[ds_1398:0x2A09:word16], Mem1522[ds_1398:0x2A07:word16]) - SEQ(Mem1522[ss:bp_1164 - 0x0002:word16], Mem1522[ss:bp_1164 - 0x0004:word16])
	word16 bx_1532 = (word16) dx_bx_2224 - (Mem1522[ss:bp_1164 - 0x0026:word16] << 0x04)
	Mem1538[ss:sp_1384 + 0x0002:word16] = SLICE(dx_bx_2224, word16, 16) - (bx_1532 <u 0x0000)
	Mem1540[ss:sp_1384:word16] = bx_1532
	Mem1543[ss:sp_1384 - 2:word16] = Mem1540[ds_1398:0x29E1:word16]
	Mem1546[ss:sp_1384 - 4:word16] = Mem1543[ds_1398:0x29DF:word16]
	Mem1549[ss:sp_1384 - 6:word16] = Mem1546[ds_1398:0x29E5:word16]
	Mem1552[ss:sp_1384 - 8:word16] = Mem1549[ds_1398:0x29E3:word16]
	word16 bp_1554
	selector ds_1558
	fn0800_3B0A(Mem1552[ss:sp_1384:word16], Mem1552[ss:sp_1384 + 2:word16], out dx_2557, out bp_1554, out ds_1558)
	Mem1573[ss:bp_1554 - 0x0022:word16] = Mem1552[ss:bp_1554 - 0x0020:word16] & 0x01FF
	fn0800_8CAA(Mem1573[ss:bp_1554 - 0x0020:word16], 0x09, Mem1573[ss:bp_1554 - 0x001E:word16], out dx_2558)
	word16 sp_1581 = <invalid>
	branch Mem1573[ss:bp_1554 - 0x0022:word16] == 0x0000 l0800_6446
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6445:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6446:
	Mem1597[ss:sp_1581 - 2:word16] = 0x0000
	Mem1600[ss:sp_1581 - 4:word16] = 0x0000
	Mem1602[ss:sp_1581 - 6:word16] = 0x0002
	Mem1606[ss:sp_1581 - 8:word16] = Mem1602[ds_1558:0x29E1:word16]
	Mem1609[ss:sp_1581 - 10:word16] = Mem1606[ds_1558:0x29DF:word16]
	fn0800_ACB3(ds_1558, Mem1609[ss:sp_1581 - 10:word16], Mem1609[ss:sp_1581 - 8:word16], Mem1609[ss:sp_1581 - 2:word16], out cx_2573, out dx_2574, out bx_2575)
	Mem1623[ss:sp_1581 - 2:word16] = Mem1609[ds_1558:0x29E1:word16]
	Mem1626[ss:sp_1581 - 4:word16] = Mem1623[ds_1558:0x29DF:word16]
	Mem1630[ss:sp_1581 - 6:word16] = Mem1626[ss:bp_1554 - 0x0022:word16]
	word16 di_1634
	selector ds_1635
	fn0800_40BF(ds_1558, Mem1630[ss:sp_1581 - 6:byte], Mem1630[ss:sp_1581 - 4:word16], Mem1630[ss:sp_1581 - 2:word16], out dx_2576, out di_1634, out ds_1635)
	Mem1647[ss:sp_1581 - 2:word16] = Mem1630[ds_1635:0x29E1:word16]
	Mem1650[ss:sp_1581 - 4:word16] = Mem1647[ds_1635:0x29DF:word16]
	Mem1652[ss:sp_1581 - 6:word16] = di_1634
	selector ds_1657
	fn0800_40BF(ds_1635, Mem1652[ss:sp_1581 - 6:byte], Mem1652[ss:sp_1581 - 4:word16], Mem1652[ss:sp_1581 - 2:word16], out dx_2577, out di_2578, out ds_1657)
	branch Mem1652[ds_1657:0x2A1D:word16] == 0x0000 l0800_64B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6483:
	Mem1672[ss:sp_1581 - 2:word16] = 0x0000
	Mem1675[ss:sp_1581 - 4:word16] = 0x0000
	Mem1677[ss:sp_1581 - 6:word16] = 0x002E
	Mem1680[ss:sp_1581 - 8:word16] = Mem1677[ds_1657:0x29E1:word16]
	Mem1683[ss:sp_1581 - 10:word16] = Mem1680[ds_1657:0x29DF:word16]
	fn0800_ACB3(ds_1657, Mem1683[ss:sp_1581 - 10:word16], Mem1683[ss:sp_1581 - 8:word16], Mem1683[ss:sp_1581 - 2:word16], out cx_2593, out dx_2594, out bx_2595)
	Mem1697[ss:sp_1581 - 2:word16] = Mem1683[ds_1657:0x29E1:word16]
	Mem1700[ss:sp_1581 - 4:word16] = Mem1697[ds_1657:0x29DF:word16]
	Mem1703[ss:sp_1581 - 6:word16] = Mem1700[ss:bp_1554 - 0x0022:word16]
	word16 di_1707
	selector ds_1708
	fn0800_40BF(ds_1657, Mem1703[ss:sp_1581 - 6:byte], Mem1703[ss:sp_1581 - 4:word16], Mem1703[ss:sp_1581 - 2:word16], out dx_2596, out di_1707, out ds_1708)
	Mem1720[ss:sp_1581 - 2:word16] = Mem1703[ds_1708:0x29E1:word16]
	Mem1723[ss:sp_1581 - 4:word16] = Mem1720[ds_1708:0x29DF:word16]
	Mem1725[ss:sp_1581 - 6:word16] = di_1707
	fn0800_40BF(ds_1708, Mem1725[ss:sp_1581 - 6:byte], Mem1725[ss:sp_1581 - 4:word16], Mem1725[ss:sp_1581 - 2:word16], out dx_2597, out di_2598, out ds_1657)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_64B9:
	Mem1746[ss:sp_1581 - 2:word16] = 0x0000
	Mem1749[ss:sp_1581 - 4:word16] = 0x0000
	Mem1751[ss:sp_1581 - 6:word16] = 0x0018
	Mem1755[ss:sp_1581 - 8:word16] = Mem1751[ds_1657:0x29E1:word16]
	Mem1758[ss:sp_1581 - 10:word16] = Mem1755[ds_1657:0x29DF:word16]
	word16 dx_1762
	word16 ax_1759 = fn0800_ACB3(ds_1657, Mem1758[ss:sp_1581 - 10:word16], Mem1758[ss:sp_1581 - 8:word16], Mem1758[ss:sp_1581 - 2:word16], out cx_2579, out dx_1762, out bx_2580)
	Mem1771[ss:sp_1581 - 2:word16] = Mem1758[ds_1657:0x29E1:word16]
	Mem1774[ss:sp_1581 - 4:word16] = Mem1771[ds_1657:0x29DF:word16]
	Mem1789[ss:sp_1581 - 6:word16] = (DPB(DPB(ax_1759, Mem1774[ds_1657:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_1762, Mem1774[ds_1657:0x2E76:byte], 0), 0x00, 8) - 0x0020
	selector ds_1794
	fn0800_40BF(ds_1657, Mem1789[ss:sp_1581 - 6:byte], Mem1789[ss:sp_1581 - 4:word16], Mem1789[ss:sp_1581 - 2:word16], out dx_2581, out di_2582, out ds_1794)
	Mem1807[ss:sp_1581 - 2:word16] = 0x0000
	Mem1810[ss:sp_1581 - 4:word16] = 0x0000
	Mem1812[ss:sp_1581 - 6:word16] = 0x001C
	Mem1815[ss:sp_1581 - 8:word16] = Mem1812[ds_1794:0x29E1:word16]
	Mem1818[ss:sp_1581 - 10:word16] = Mem1815[ds_1794:0x29DF:word16]
	fn0800_ACB3(ds_1794, Mem1818[ss:sp_1581 - 10:word16], Mem1818[ss:sp_1581 - 8:word16], Mem1818[ss:sp_1581 - 2:word16], out cx_2583, out dx_2584, out bx_2585)
	Mem1832[ss:sp_1581 - 2:word16] = Mem1818[ds_1794:0x29E1:word16]
	Mem1835[ss:sp_1581 - 4:word16] = Mem1832[ds_1794:0x29DF:word16]
	Mem1839[ss:sp_1581 - 6:word16] = Mem1835[ss:bp_1554 - 0x0028:word16]
	selector ds_1844
	fn0800_40BF(ds_1794, Mem1839[ss:sp_1581 - 6:byte], Mem1839[ss:sp_1581 - 4:word16], Mem1839[ss:sp_1581 - 2:word16], out dx_2586, out di_2587, out ds_1844)
	Mem1856[ss:sp_1581 - 2:word16] = Mem1839[ds_1844:0x29E1:word16]
	Mem1859[ss:sp_1581 - 4:word16] = Mem1856[ds_1844:0x29DF:word16]
	Mem1862[ss:sp_1581 - 6:word16] = Mem1859[ss:bp_1554 - 0x002A:word16]
	selector ds_1867
	fn0800_40BF(ds_1844, Mem1862[ss:sp_1581 - 6:byte], Mem1862[ss:sp_1581 - 4:word16], Mem1862[ss:sp_1581 - 2:word16], out dx_2588, out di_2589, out ds_1867)
	Mem1880[ss:sp_1581 - 2:word16] = 0x0000
	Mem1883[ss:sp_1581 - 4:word16] = 0x0000
	Mem1885[ss:sp_1581 - 6:word16] = 0x000A
	Mem1888[ss:sp_1581 - 8:word16] = Mem1885[ds_1867:0x29E1:word16]
	Mem1891[ss:sp_1581 - 10:word16] = Mem1888[ds_1867:0x29DF:word16]
	fn0800_ACB3(ds_1867, Mem1891[ss:sp_1581 - 10:word16], Mem1891[ss:sp_1581 - 8:word16], Mem1891[ss:sp_1581 - 2:word16], out cx_2590, out dx_2591, out bx_2592)
	word16 cx_1912 = Mem1891[ss:bp_1554 - 0x0020:word16]
	word16 bx_1907 = Mem1891[ss:bp_1554 - 0x0004:word16] + (Mem1891[ss:bp_1554 - 0x0028:word16] << 0x04)
	word16 cx_1917 = cx_1912 - 0x0020 + Mem1891[ss:bp_1554 - 0x0008:word16]
	word16 dx_1910 = Mem1891[ss:bp_1554 - 0x0002:word16] + (bx_1907 <u 0x0000)
	word16 ax_1920 = Mem1891[ss:bp_1554 - 0x001E:word16] - (cx_1912 <u 0x0020) + Mem1891[ss:bp_1554 - 0x0006:word16] + (cx_1917 <u 0x0000)
	branch dx_1910 <u ax_1920 l0800_659C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6568:
	branch dx_1910 >u ax_1920 l0800_656E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_656A:
	branch bx_1907 <=u cx_1917 l0800_659C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_656E:
	word16 cx_1939 = Mem1891[ss:bp_1554 - 0x0020:word16]
	word16 bx_1934 = Mem1891[ss:bp_1554 - 0x0004:word16] + (Mem1891[ss:bp_1554 - 0x0028:word16] << 0x04)
	word16 cx_1944 = cx_1939 - 0x0020 + Mem1891[ss:bp_1554 - 0x0008:word16]
	ui32 dx_bx_2234 = SEQ(Mem1891[ss:bp_1554 - 0x0002:word16] + (bx_1934 <u 0x0000), bx_1934) - SEQ(((Mem1891[ss:bp_1554 - 0x001E:word16] - (cx_1939 <u 0x0020)) + Mem1891[ss:bp_1554 - 0x0006:word16]) + (cx_1944 <u 0x0000), cx_1944)
	Mem1953[ss:bp_1554 - 0x0008:word16] = v151_1952
	ui32 v152_v151_2236 = SEQ(Mem1953[ss:bp_1554 - 0x0006:word16], Mem1891[ss:bp_1554 - 0x0008:word16]) + dx_bx_2234
	Mem1957[ss:bp_1554 - 0x0006:word16] = SLICE(v152_v151_2236, word16, 16)
	word16 v151_1952 = (word16) v152_v151_2236
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_659C:
	0x00000010 = 0x00000010
	word16 v157_1969 = Mem1963[ss:bp_1554 - 0x0008:word16] + ((word16) (0x00000010 - SEQ(Mem1963[ss:bp_1554 - 0x0006:word16], Mem1963[ss:bp_1554 - 0x0008:word16])) & 0x000F)
	Mem1970[ss:bp_1554 - 0x0008:word16] = v157_1969
	Mem1974[ss:bp_1554 - 0x0006:word16] = Mem1970[ss:bp_1554 - 0x0006:word16] + (v157_1969 <u 0x0000)
	word16 ax_1979 = fn0800_8CAA(Mem1974[ss:bp_1554 - 0x0008:word16], 0x04, Mem1974[ss:bp_1554 - 0x0006:word16], out dx_2599)
	Mem1988[ss:bp_1554 - 0x0028:word16] = ax_1979
	word16 sp_1983 = <invalid>
	Mem1993[ss:sp_1983 - 2:word16] = Mem1988[ds_1867:0x29E1:word16]
	Mem1996[ss:sp_1983 - 4:word16] = Mem1993[ds_1867:0x29DF:word16]
	Mem1998[ss:sp_1983 - 6:word16] = ax_1979
	selector ds_2003
	fn0800_40BF(ds_1867, Mem1998[ss:sp_1983 - 6:byte], Mem1998[ss:sp_1983 - 4:word16], Mem1998[ss:sp_1983 - 2:word16], out dx_2600, out di_2601, out ds_2003)
	branch Mem1998[ss:bp_1554 - 0x002A:word16] >=u Mem1998[ss:bp_1554 - 0x0028:word16] l0800_65DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_65D6:
	Mem2016[ss:bp_1554 - 0x002A:word16] = Mem1998[ss:bp_1554 - 0x0028:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_65DC:
	Mem2023[ss:sp_1983 - 2:word16] = Mem2018[ds_2003:0x29E1:word16]
	Mem2026[ss:sp_1983 - 4:word16] = Mem2023[ds_2003:0x29DF:word16]
	Mem2030[ss:sp_1983 - 6:word16] = Mem2026[ss:bp_1554 - 0x002A:word16]
	selector ds_2035
	fn0800_40BF(ds_2003, Mem2030[ss:sp_1983 - 6:byte], Mem2030[ss:sp_1983 - 4:word16], Mem2030[ss:sp_1983 - 2:word16], out dx_2602, out di_2603, out ds_2035)
	ui32 dx_ax_2238 = SEQ(Mem2030[ss:bp_1554 - 0x0002:word16], Mem2030[ss:bp_1554 - 0x0004:word16]) + SEQ(Mem2030[ds_2035:0x4E8A:word16], Mem2030[ds_2035:0x4E88:word16])
	word16 ax_2046 = (word16) dx_ax_2238
	word16 ax_2056 = fn0800_8CAA(ax_2046 + 0x0020, 0x04, SLICE(dx_ax_2238, word16, 16) + (ax_2046 <u 0x0020), out dx_2604)
	Mem2065[ss:bp_1554 - 0x002C:word16] = ax_2056
	word16 sp_2060 = <invalid>
	Mem2068[ss:sp_2060 - 2:word16] = Mem2065[ds_2035:0x29E1:word16]
	Mem2071[ss:sp_2060 - 4:word16] = Mem2068[ds_2035:0x29DF:word16]
	Mem2073[ss:sp_2060 - 6:word16] = ax_2056
	selector ds_2078
	fn0800_40BF(ds_2035, Mem2073[ss:sp_2060 - 6:byte], Mem2073[ss:sp_2060 - 4:word16], Mem2073[ss:sp_2060 - 2:word16], out dx_2605, out di_2606, out ds_2078)
	Mem2089[ss:bp_1554 - 0x002E:word16] = Mem2073[ss:bp_1554 - 0x001C:word16] + 0x0080
	branch Mem2089[ds_2078:0x2A1D:word16] == 0x0000 l0800_662F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_662F:
	branch Mem2089[ds_2078:0x2A21:word16] != 0x0001 l0800_663B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6636:
	Mem2095[ss:bp_1554 - 0x002E:word16] = Mem2089[ss:bp_1554 - 0x002E:word16] + 0x0180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6628:
	Mem2098[ss:bp_1554 - 0x002E:word16] = Mem2089[ss:bp_1554 - 0x002E:word16] + 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_663B:
	Mem2106[ss:sp_2060 - 2:word16] = Mem2101[ds_2078:0x29E1:word16]
	Mem2109[ss:sp_2060 - 4:word16] = Mem2106[ds_2078:0x29DF:word16]
	Mem2113[ss:sp_2060 - 6:word16] = Mem2109[ss:bp_1554 - 0x002E:word16]
	selector ds_2118
	fn0800_40BF(ds_2078, Mem2113[ss:sp_2060 - 6:byte], Mem2113[ss:sp_2060 - 4:word16], Mem2113[ss:sp_2060 - 2:word16], out dx_2607, out di_2608, out ds_2118)
	ui32 dx_bx_2240 = SEQ(Mem2113[ds_2118:0x2A09:word16], Mem2113[ds_2118:0x2A07:word16]) - SEQ(Mem2113[ss:bp_1554 - 0x0002:word16], Mem2113[ss:bp_1554 - 0x0004:word16])
	word16 bx_2136 = (word16) dx_bx_2240 - (Mem2113[ss:bp_1554 - 0x0026:word16] << 0x04)
	word16 dx_2139 = SLICE(dx_bx_2240, word16, 16) - (bx_2136 <u 0x0000)
	branch (bx_2136 | dx_2139) == 0x0000 l0800_6673
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6673:
	dxOut = dx_2139
	dsOut = ds_2118
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_666A:
	dxOut = dx_2139
	dsOut = ds_2118
	return 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EE4:
	dxOut = 0x0000
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_5E64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EB1_1:
	Mem2174[ds:di_2173:byte] = 0x00
	di_2173 = di_2173 + 0x0001
	cx_2176 = cx_2176 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EAB_1:
	Mem2183[ds:di_2173:byte] = Mem2179[ds:si_2178:byte]
	si_2178 = si_2178 + 0x0001
	di_2173 = di_2173 + 0x0001
	cx_2186 = cx_2186 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_5EA7_1:
	Mem2193[ds:di_2173:word16] = Mem2189[ds:si_2178:word16]
	si_2178 = si_2178 + 0x0002
	di_2173 = di_2173 + 0x0002
	cx_2196 = cx_2196 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_669C(selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_669C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_669C:
	word16 bp_121 = fp - 2
	branch Mem15[ds:0x2A09:word16] <u 0x0000 l0800_66BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66AB:
	branch Mem15[ds:0x2A09:word16] >u 0x0000 l0800_66B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66AD:
	branch Mem15[ds:0x2A07:word16] <=u 0xFEFE l0800_66BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66BE:
	word16 sp_136 = fp - 0x000A
	word16 di_29 = 0x2206
	word16 si_30 = 0x4271
	word16 cx_31 = 0x0004
	word16 dx_126 = 0x0003
	branch true l0800_66D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D0:
	cx_31 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D2:
	word16 ax_36 = 0x0000
	bool Z_49 = SLICE(cond(0x0000), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D4:
	branch cx_31 == 0x0000 l0800_66D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D4_1:
	Z_49 = SLICE(cond(Mem26[ds:si_451:byte] - Mem26[ds:di_452:byte]), bool, 2) (alias)
	si_30 = si_451 + 0x0001
	di_29 = di_452 + 0x0001
	cx_31 = cx_31 - 0x0001
	si_451 = si_30
	di_452 = di_29
	branch Mem26[ds:si_451:byte] != Mem26[ds:di_452:byte] l0800_66D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D6:
	branch Z_49 l0800_66DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66D8:
	ax_36 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66DD:
	word16 ax_120 = ax_36
	branch ax_36 == 0x0000 l0800_6715
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66E1:
	word16 di_304 = 0x4271
	word16 si_309 = 0x2206
	word16 cx_85 = 0x0004
	word16 dx_347 = 0xFFFF
	branch true l0800_66F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F3:
	cx_85 = 0x0003
	dx_347 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F7:
	word16 cx_94 = cx_85 >>u 0x0001
	cx_327 = cx_94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F9:
	word16 cx_327
	branch cx_327 == 0x0000 l0800_66FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FB:
	word16 cx_100 = cx_327 * 0x0002 + (cx_94 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FD:
	branch cx_100 == 0x0000 l0800_66FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FF:
	word16 cx_102 = dx_347
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6703:
	branch cx_102 == 0x0000 l0800_6705
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6705:
	word16 sp_129 = <invalid>
	bp_121 = fn0800_09A3(out ds)
	sp_136 = sp_129 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6715:
	word16 sp_144 = sp_136 - 2
	Mem146[ss:sp_144:word16] = Mem139[ds:0x29E1:word16]
	Mem149[ss:sp_144 - 2:word16] = Mem146[ds:0x29DF:word16]
	word16 ax_166 = (DPB(DPB(ax_120, Mem149[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_126, Mem149[ds:0x2E76:byte], 0), 0x00, 8)
	Mem171[ss:sp_144 - 4:word16] = 0x0000
	Mem173[ss:sp_144 - 6:word16] = ax_166
	Mem175[ss:sp_144 - 8:word16] = ds
	Mem178[ss:sp_144 - 10:word16] = 0x2E77
	selector ds_183
	word16 bx_206 = Mem178[ds_183:0x2A07:word16] + ((DPB(DPB((word16) fn0800_4152(ds, Mem178[ss:sp_144 - 10:word16], Mem178[ss:sp_144 - 8:word16], Mem178[ss:sp_144 - 6:word16], Mem178[ss:sp_144 - 2:word16], Mem178[ss:sp_144:word16], out ds_183), Mem178[ds_183:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_184, Mem178[ds_183:0x2E76:byte], 0), 0x00, 8))
	word16 dx_213 = Mem178[ds_183:0x2A09:word16] + (bx_206 <u 0x0000) + (bx_206 <u 0x0040)
	Mem220[ss:bp_121 - 0x0002:word16] = dx_213
	Mem221[ss:bp_121 - 0x0004:word16] = bx_206 + 0x0040
	branch Mem221[ds_183:0x2A1D:word16] == 0x0000 l0800_6779
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6779:
	branch Mem221[ds_183:0x2A21:word16] != 0x0001 l0800_6789
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6780:
	word16 v28_226 = Mem221[ss:bp_121 - 0x0004:word16] + 0x0180
	Mem227[ss:bp_121 - 0x0004:word16] = v28_226
	Mem231[ss:bp_121 - 0x0002:word16] = Mem227[ss:bp_121 - 0x0002:word16] + (v28_226 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_676E:
	word16 v25_233 = Mem221[ss:bp_121 - 0x0004:word16] + 0x0200
	Mem234[ss:bp_121 - 0x0004:word16] = v25_233
	Mem238[ss:bp_121 - 0x0002:word16] = Mem234[ss:bp_121 - 0x0002:word16] + (v25_233 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6789:
	branch Mem242[ss:bp_121 - 0x0002:word16] <u 0x0000 l0800_67A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_678F:
	branch Mem242[ss:bp_121 - 0x0002:word16] >u 0x0000 l0800_6798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6791:
	branch Mem242[ss:bp_121 - 0x0004:word16] <=u 0xFEFE l0800_67A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67A1:
	Mem256[ss:sp_144:word16] = Mem242[ds_183:0x2A09:word16]
	Mem259[ss:sp_144 - 2:word16] = Mem256[ds_183:0x2A07:word16]
	Mem262[ss:sp_144 - 4:word16] = Mem259[ds_183:0x2A09:word16]
	Mem265[ss:sp_144 - 6:word16] = Mem262[ds_183:0x2A07:word16]
	selector ds_271
	dxOut = fn0800_75EA(ds_183, Mem265[ss:sp_144 - 6:word16], Mem265[ss:sp_144 - 4:word16], Mem265[ss:sp_144 - 2:word16], Mem265[ss:sp_144:word16], out bp_267, out si_450, out ds_271)
	dsOut = ds_271
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6798:
	dxOut = dx_213
	dsOut = ds_183
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6703_1:
	Mem305[ds:di_304:byte] = 0x00
	di_304 = di_304 + 0x0001
	cx_102 = cx_102 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66FD_1:
	Mem314[ds:di_304:byte] = Mem310[ds:si_309:byte]
	si_309 = si_309 + 0x0001
	di_304 = di_304 + 0x0001
	cx_100 = cx_100 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66F9_1:
	Mem324[ds:di_304:word16] = Mem320[ds:si_309:word16]
	si_309 = si_309 + 0x0002
	di_304 = di_304 + 0x0002
	cx_327 = cx_327 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_66B5:
	dxOut = dx
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_669C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_67BF(selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_67BF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67BF:
	word16 ax_23 = (DPB(DPB(ax, Mem7[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem7[ds:0x2E76:byte], 0), 0x00, 8)
	branch Mem24[ds:0x2A09:word16] >u 0x0000 l0800_67F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E1:
	branch Mem24[ds:0x2A09:word16] != 0x0000 l0800_67E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E3:
	branch ax_23 <u Mem24[ds:0x2A07:word16] l0800_67F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67F0:
	selector ds_274
	word16 bp_270
	word16 sp_284
	selector ds_59
	fn0800_4152(ds, 0x2E77, ds, ax_23, Mem37[ds:0x29DF:word16], Mem24[ds:0x29E1:word16], out ds_59)
	fn0800_ACB3(ds_59, Mem81[ds_59:0x29DF:word16], Mem78[ds_59:0x29E1:word16], 0x0001, out cx_968, out dx_969, out bx_970)
	selector ds_106
	branch fn0800_3F0A(ds_59, Mem98[ds_59:0x29E3:word16], Mem84[ds_59:0x29E5:word16], out dx_971, out ds_106) == 0x601A l0800_6839
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6839:
	fn0800_ACB3(ds_106, Mem130[ds_106:0x29E3:word16], Mem127[ds_106:0x29E5:word16], 0x0001, out cx_972, out dx_973, out bx_974)
	selector ds_169
	fn0800_3B0A(0x0010, 0x0000, out dx_975, out bp_976, out ds_169)
	word16 sp_173 = <invalid>
	Mem184[ss:sp_173 + 0x000A:word16] = 0x0000
	Mem187[ss:sp_173 + 0x0008:word16] = 0x0000
	Mem189[ss:sp_173 + 0x0006:word16] = 0x001A
	Mem192[ss:sp_173 + 0x0004:word16] = Mem189[ds_169:0x29E5:word16]
	Mem195[ss:sp_173 + 0x0002:word16] = Mem192[ds_169:0x29E3:word16]
	fn0800_ACB3(ds_169, Mem195[ss:sp_173 + 0x0002:word16], Mem195[ss:sp_173 + 0x0004:word16], Mem195[ss:sp_173 + 0x000A:word16], out cx_977, out dx_978, out bx_979)
	Mem209[ss:sp_173 + 0x000A:word16] = Mem195[ds_169:0x29E1:word16]
	Mem212[ss:sp_173 + 0x0008:word16] = Mem209[ds_169:0x29DF:word16]
	Mem215[ss:sp_173 + 0x0006:word16] = Mem212[ds_169:0x29E5:word16]
	Mem218[ss:sp_173 + 0x0004:word16] = Mem215[ds_169:0x29E3:word16]
	selector ds_223
	Mem234[ss:sp_173 + 0x0006:word16] = fn0800_3E27(ds_169, Mem218[ss:sp_173 + 0x0004:word16], Mem218[ss:sp_173 + 0x0006:word16], out cx_980, out dx_981, out di_982, out ds_223, out Top_983)
	selector ds_239
	fn0800_401E(ds_223, Mem234[ss:sp_173 + 0x0006:word16], Mem234[ss:sp_173 + 0x0008:word16], Mem234[ss:sp_173 + 0x000A:word16], out cx_984, out dx_985, out bx_986, out ds_239, out Top_987)
	word16 dx_249 = Mem234[ds_239:0x2A07:word16]
	Mem255[ss:sp_173 + 0x000A:word16] = Mem234[ds_239:0x2A09:word16] - (dx_249 <u 0x001C)
	Mem257[ss:sp_173 + 0x0008:word16] = dx_249 - 0x001C
	word16 dx_259 = Mem257[ds_239:0x2A07:word16]
	Mem266[ss:sp_173 + 0x0006:word16] = Mem257[ds_239:0x2A09:word16] - (dx_259 <u 0x001C)
	Mem268[ss:sp_173 + 0x0004:word16] = dx_259 - 0x001C
	fn0800_75EA(ds_239, Mem268[ss:sp_173 + 0x0004:word16], Mem268[ss:sp_173 + 0x0006:word16], Mem268[ss:sp_173 + 0x0008:word16], Mem268[ss:sp_173 + 0x000A:word16], out bp_270, out si_277, out ds_274)
	word16 dx_286 = Mem268[ds_274:0x2A07:word16]
	word16 dx_291 = dx_286 - 0x001C - Mem268[ds_274:0x2A03:word16]
	ui32 ax_dx_825 = SEQ(Mem268[ds_274:0x2A09:word16] - (dx_286 <u 0x001C) - Mem268[ds_274:0x2A05:word16] - (dx_291 <u 0x0000), dx_291) + SEQ(Mem268[ds_274:0x4E8A:word16], Mem268[ds_274:0x4E88:word16])
	word16 dx_295 = (word16) ax_dx_825
	Mem304[ss:bp_270 - 0x0006:word16] = SLICE(ax_dx_825, word16, 16) + (dx_295 <u 0x000E)
	Mem305[ss:bp_270 - 0x0008:word16] = dx_295 + 0x000E
	word16 sp_278 = <invalid>
	sp_284 = sp_278 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6836:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_68F1:
	selector ds_322
	fn0800_409C(ds_106, Mem314[ds_106:0x2A07:word16], Mem311[ds_106:0x2A09:word16], Mem308[ds_106:0x29DF:word16], Mem101[ds_106:0x29E1:word16], out dx_988, out ds_322, out Top_989)
	fn0800_ACB3(ds_322, Mem344[ds_322:0x29DF:word16], Mem341[ds_322:0x29E1:word16], 0x0001, out cx_990, out dx_991, out bx_992)
	fn0800_75EA(ds_322, Mem367[ds_322:0x2A07:word16], Mem364[ds_322:0x2A09:word16], Mem361[ds_322:0x2A07:word16], Mem347[ds_322:0x2A09:word16], out bp_270, out si_379, out ds_274)
	ui32 ax_dx_829 = SEQ(Mem370[ds_274:0x2A09:word16], Mem370[ds_274:0x2A07:word16]) - SEQ(Mem370[ds_274:0x2A05:word16], Mem370[ds_274:0x2A03:word16]) + SEQ(Mem370[ds_274:0x4E8A:word16], Mem370[ds_274:0x4E88:word16])
	word16 dx_393 = (word16) ax_dx_829
	Mem402[ss:bp_270 - 0x0006:word16] = SLICE(ax_dx_829, word16, 16) + (dx_393 <u 0x000E)
	Mem403[ss:bp_270 - 0x0008:word16] = dx_393 + 0x000E
	word16 sp_380 = <invalid>
	sp_284 = sp_380 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6959:
	word16 sp_408 = sp_284 - 2
	Mem410[ss:sp_408:word16] = Mem405[ds_274:0x29E1:word16]
	Mem413[ss:sp_408 - 2:word16] = Mem410[ds_274:0x29DF:word16]
	word16 ax_414 = fn0800_AD2F(ds_274, Mem413[ss:sp_408 - 2:segptr32], out dx_993)
	branch (ax_414 & 0x0001) == 0x0000 l0800_6988
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_696F:
	Mem431[ss:sp_408:word16] = Mem413[ds_274:0x29E1:word16]
	Mem434[ss:sp_408 - 2:word16] = Mem431[ds_274:0x29DF:word16]
	Mem438[ss:sp_408 - 4:word16] = DPB(ax_414 & 0x0001, 0x90, 0)
	fn0800_4047(ds_274, Mem438[ss:sp_408 - 4:byte], Mem438[ss:sp_408 - 2:segptr32], out cx_1009, out dx_1010, out bx_1011, out di_1012, out ds_274, out Top_1013)
	word16 v50_453 = Mem438[ss:bp_270 - 0x0008:word16] + 0x0001
	Mem454[ss:bp_270 - 0x0008:word16] = v50_453
	Mem458[ss:bp_270 - 0x0006:word16] = Mem454[ss:bp_270 - 0x0006:word16] + (v50_453 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6988:
	word16 sp_464 = sp_284 - 2
	Mem466[ss:sp_464:word16] = Mem461[ds_274:0x29E1:word16]
	Mem469[ss:sp_464 - 2:word16] = Mem466[ds_274:0x29DF:word16]
	Mem474[ss:sp_464 - 4:word16] = 0x0000
	Mem476[ss:sp_464 - 6:word16] = 0x0000
	selector ds_481
	fn0800_409C(ds_274, Mem476[ss:sp_464 - 6:word16], Mem476[ss:sp_464 - 4:word16], Mem476[ss:sp_464 - 2:word16], Mem476[ss:sp_464:word16], out dx_994, out ds_481, out Top_995)
	Mem493[ss:sp_464:word16] = Mem476[ds_481:0x29E1:word16]
	Mem496[ss:sp_464 - 2:word16] = Mem493[ds_481:0x29DF:word16]
	word16 dx_500
	word16 ax_497 = fn0800_AD2F(ds_481, Mem496[ss:sp_464 - 2:segptr32], out dx_500)
	Mem511[ds_481:0x2A05:word16] = dx_500 + 0xFF + (ax_497 <u 0xFFE0)
	Mem512[ds_481:0x2A03:word16] = ax_497 + 0xFFE0
	Mem517[ss:sp_464:word16] = 0x0000
	Mem520[ss:sp_464 - 2:word16] = 0x0000
	Mem522[ss:sp_464 - 4:word16] = 0x0002
	Mem525[ss:sp_464 - 6:word16] = Mem522[ds_481:0x29E1:word16]
	Mem528[ss:sp_464 - 8:word16] = Mem525[ds_481:0x29DF:word16]
	word16 ax_529 = fn0800_ACB3(ds_481, Mem528[ss:sp_464 - 8:word16], Mem528[ss:sp_464 - 6:word16], Mem528[ss:sp_464:word16], out cx_996, out dx_997, out bx_998)
	Mem542[ss:sp_464:word16] = Mem528[ds_481:0x29E1:word16]
	Mem545[ss:sp_464 - 2:word16] = Mem542[ds_481:0x29DF:word16]
	selector ds_549
	word16 dx_550 = fn0800_3F58(ds_481, Mem545[ss:sp_464 - 2:word16], Mem545[ss:sp_464:word16], out di_999, out ds_549)
	Mem560[ss:bp_270 - 0x0008:word16] = v60_559
	ui32 v61_v60_831 = SEQ(Mem560[ss:bp_270 - 0x0006:word16], Mem545[ss:bp_270 - 0x0008:word16]) - SEQ(dx_550, ax_529)
	Mem564[ss:bp_270 - 0x0006:word16] = SLICE(v61_v60_831, word16, 16)
	Mem568[ss:sp_464:word16] = Mem564[ds_549:0x29E1:word16]
	Mem571[ss:sp_464 - 2:word16] = Mem568[ds_549:0x29DF:word16]
	Mem574[ss:sp_464 - 4:word16] = Mem571[ds_549:0x2A05:word16]
	Mem577[ss:sp_464 - 6:word16] = Mem574[ds_549:0x2A03:word16]
	selector ds_582
	fn0800_409C(ds_549, Mem577[ss:sp_464 - 6:word16], Mem577[ss:sp_464 - 4:word16], Mem577[ss:sp_464 - 2:word16], Mem577[ss:sp_464:word16], out dx_1000, out ds_582, out Top_1001)
	Mem595[ss:sp_464:word16] = 0x0000
	Mem597[ss:sp_464 - 2:word16] = 0x0000
	Mem599[ss:sp_464 - 4:word16] = 0x0000
	Mem602[ss:sp_464 - 6:word16] = Mem599[ds_582:0x29E5:word16]
	Mem605[ss:sp_464 - 8:word16] = Mem602[ds_582:0x29E3:word16]
	fn0800_ACB3(ds_582, Mem605[ss:sp_464 - 8:word16], Mem605[ss:sp_464 - 6:word16], Mem605[ss:sp_464:word16], out cx_1002, out dx_1003, out bx_1004)
	Mem619[ss:sp_464:word16] = Mem605[ds_582:0x29E5:word16]
	Mem622[ss:sp_464 - 2:word16] = Mem619[ds_582:0x29E3:word16]
	word16 v60_559 = (word16) v61_v60_831
	selector ds_627
	word16 ax_623 = fn0800_3E27(ds_582, Mem622[ss:sp_464 - 2:word16], Mem622[ss:sp_464:word16], out cx_1005, out dx_1006, out di_1007, out ds_627, out Top_1008)
	branch ax_623 == 0x601A l0800_6A1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A1E:
	Mem640[ss:sp_464:word16] = Mem622[ds_627:0x29E5:word16]
	Mem643[ss:sp_464 - 2:word16] = Mem640[ds_627:0x29E3:word16]
	selector ds_647
	word16 dx_648 = fn0800_3E5D(ds_627, Mem643[ss:sp_464 - 2:word16], Mem643[ss:sp_464:word16], out ds_647, out Top_1014)
	Mem658[ss:sp_464:word16] = ax_623
	Mem660[ss:sp_464 - 2:word16] = dx_648
	Mem663[ss:sp_464 - 4:word16] = Mem660[ds_647:0x29E5:word16]
	Mem666[ss:sp_464 - 6:word16] = Mem663[ds_647:0x29E3:word16]
	selector ds_670
	ui32 bx_cx_834 = SEQ(Mem666[ss:sp_464 - 0x0002:word16], Mem666[ss:sp_464:word16]) + SEQ(fn0800_3E5D(ds_647, Mem666[ss:sp_464 - 6:word16], Mem666[ss:sp_464 - 4:word16], out ds_670, out Top_1015), ax_623)
	Mem688[ss:bp_270 - 0x0002:word16] = SLICE(bx_cx_834, word16, 16)
	Mem689[ss:bp_270 - 0x0004:word16] = (word16) bx_cx_834
	Mem692[ss:sp_464:word16] = Mem689[ds_670:0x29E5:word16]
	Mem695[ss:sp_464 - 2:word16] = Mem692[ds_670:0x29E3:word16]
	Mem708[ss:bp_270 - 0x000A:word16] = fn0800_3E5D(ds_670, Mem695[ss:sp_464 - 2:word16], Mem695[ss:sp_464:word16], out ds_627, out Top_1016)
	Mem709[ss:bp_270 - 0x000C:word16] = ax_623
	ui32 ax_dx_836 = SEQ(Mem709[ss:bp_270 - 0x0002:word16], Mem709[ss:bp_270 - 0x0004:word16]) + SEQ(Mem709[ss:bp_270 - 0x000A:word16], Mem709[ss:bp_270 - 0x000C:word16])
	ui32 bx_cx_838 = SEQ(Mem709[ds_627:0x2A05:word16], Mem709[ds_627:0x2A03:word16]) + SEQ(Mem709[ss:bp_270 - 0x0006:word16], Mem709[ss:bp_270 - 0x0008:word16])
	word16 dx_712 = (word16) ax_dx_836
	word16 ax_715 = SLICE(ax_dx_836, word16, 16)
	word16 cx_718 = (word16) bx_cx_838
	word16 bx_721 = SLICE(bx_cx_838, word16, 16)
	branch ax_715 <u bx_721 l0800_6AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A7A:
	branch ax_715 >u bx_721 l0800_6A80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A7C:
	branch dx_712 <=u cx_718 l0800_6AA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A80:
	ui32 ax_dx_845 = SEQ(Mem709[ss:bp_270 - 0x0002:word16], Mem709[ss:bp_270 - 0x0004:word16]) + SEQ(Mem709[ss:bp_270 - 0x000A:word16], Mem709[ss:bp_270 - 0x000C:word16]) - (SEQ(Mem709[ds_627:0x2A05:word16], Mem709[ds_627:0x2A03:word16]) + SEQ(Mem709[ss:bp_270 - 0x0006:word16], Mem709[ss:bp_270 - 0x0008:word16]))
	Mem748[ss:bp_270 - 0x0008:word16] = v79_747
	ui32 v80_v79_847 = SEQ(Mem748[ss:bp_270 - 0x0006:word16], Mem709[ss:bp_270 - 0x0008:word16]) + ax_dx_845
	Mem752[ss:bp_270 - 0x0006:word16] = SLICE(v80_v79_847, word16, 16)
	word16 v79_747 = (word16) v80_v79_847
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6A1B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AA4:
	word16 sp_759 = sp_284 - 2
	Mem761[ss:sp_759:word16] = 0x0000
	Mem764[ss:sp_759 - 2:word16] = 0x0000
	Mem766[ss:sp_759 - 4:word16] = 0x000A
	Mem770[ss:sp_759 - 6:word16] = Mem766[ds_627:0x29E1:word16]
	Mem773[ss:sp_759 - 8:word16] = Mem770[ds_627:0x29DF:word16]
	fn0800_ACB3(ds_627, Mem773[ss:sp_759 - 8:word16], Mem773[ss:sp_759 - 6:word16], Mem773[ss:sp_759:word16], out cx_1017, out dx_1018, out bx_1019)
	Mem787[ss:sp_759:word16] = Mem773[ds_627:0x29E1:word16]
	Mem790[ss:sp_759 - 2:word16] = Mem787[ds_627:0x29DF:word16]
	Mem794[ss:sp_759 - 4:word16] = Mem790[ss:bp_270 - 0x0006:word16]
	Mem797[ss:sp_759 - 6:word16] = Mem794[ss:bp_270 - 0x0008:word16]
	selector ds_802
	word16 dx_803
	fn0800_409C(ds_627, Mem797[ss:sp_759 - 6:word16], Mem797[ss:sp_759 - 4:word16], Mem797[ss:sp_759 - 2:word16], Mem797[ss:sp_759:word16], out dx_803, out ds_802, out Top_1020)
	dxOut = dx_803
	dsOut = ds_802
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_67E9:
	dxOut = 0x0000
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_67BF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_6AD4(word16 bp, word16 si, selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] ds:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax ds dx sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_6AD4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AD4:
	word16 ax_26 = (DPB(DPB(ax, Mem12[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem12[ds:0x2E76:byte], 0), 0x00, 8)
	branch Mem12[ds:0x2A09:word16] >u 0x0000 l0800_6B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AF4:
	branch Mem12[ds:0x2A09:word16] != 0x0000 l0800_6AFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AF6:
	branch ax_26 <u Mem12[ds:0x2A07:word16] l0800_6B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B04:
	selector ds_46
	word16 dx_47 = fn0800_3E5D(ds, Mem39[ds:0x29E3:word16], Mem12[ds:0x29E5:word16], out ds_46, out Top_908)
	branch dx_47 != 0x0000 l0800_6B1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B16:
	branch ax_26 == 0x03F3 l0800_6B23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B23:
	selector ds_134
	word16 ax_115 = fn0800_409C(ds_46, 0x03F3, 0x0000, Mem64[ds_46:0x29DF:word16], Mem42[ds_46:0x29E1:word16], out dx_909, out ds_134, out Top_910)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B38:
	selector ds_103
	word16 dx_104 = fn0800_3E5D(ds_134, Mem96[ds_134:0x29E3:word16], Mem91[ds_134:0x29E5:word16], out ds_103, out Top_914)
	fn0800_409C(ds_103, ax_115, dx_104, Mem121[ds_103:0x29DF:word16], Mem118[ds_103:0x29E1:word16], out dx_915, out ds_134, out Top_916)
	word16 wLoc08_682 = dx_104
	word16 wLoc0A_683 = ax_115
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B84:
	word16 v27_149 = wLoc0A_683 - 0x0001
	wLoc0A_683 = v27_149
	wLoc08_682 = wLoc08_682 - (v27_149 <u 0x0000)
	word16 ax_155 = wLoc0A_683 | wLoc08_682
	branch ax_155 != 0x0000 l0800_6B66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B66:
	selector ds_176
	fn0800_409C(ds_176, ax_155, fn0800_3E5D(ds_134, Mem169[ds_134:0x29E3:word16], Mem166[ds_134:0x29E5:word16], out ds_176, out Top_911), Mem163[ds_134:0x29DF:word16], Mem154[ds_134:0x29E1:word16], out dx_912, out ds_134, out Top_913)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B96:
	ax_115 = ax_115 | dx_104
	Mem91 = Mem154
	branch ax_115 != 0x0000 l0800_6B38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B9E:
	selector ds_224
	selector ds_246
	word16 ax_242 = fn0800_409C(ds_224, ax_115 + 0x0001, fn0800_3E5D(ds_134, Mem217[ds_134:0x29E3:word16], Mem214[ds_134:0x29E5:word16], out ds_224, out Top_917) + (ax_115 <u 0x0001), Mem211[ds_134:0x29DF:word16], Mem154[ds_134:0x29E1:word16], out dx_918, out ds_246, out Top_919)
	selector ds_265
	word16 dx_266 = fn0800_3E5D(ds_246, Mem258[ds_246:0x29E3:word16], Mem241[ds_246:0x29E5:word16], out ds_265, out Top_920)
	selector ds_286
	word16 dx_287 = fn0800_3E5D(ds_265, Mem279[ds_265:0x29E3:word16], Mem276[ds_265:0x29E5:word16], out ds_286, out Top_921)
	selector ds_326
	fn0800_409C(ds_286, ax_242, dx_266, Mem312[ds_286:0x29DF:word16], Mem309[ds_286:0x29E1:word16], out dx_922, out ds_326, out Top_923)
	selector ds_356
	word16 dx_357
	selector ds_399
	fn0800_409C(ds_356, (DPB(DPB(fn0800_409C(ds_326, ax_242 + 0x0001, dx_287 + (ax_242 <u 0x0001), Mem337[ds_326:0x29DF:word16], Mem321[ds_326:0x29E1:word16], out dx_357, out ds_356, out Top_924), Mem351[ds_356:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_357, Mem351[ds_356:0x2E76:byte], 0), 0x00, 8) - 0x000C >>u 0x0002, 0x0000, Mem383[ds_356:0x29DF:word16], Mem380[ds_356:0x29E1:word16], out dx_925, out ds_399, out Top_926)
	word16 dx_418
	word16 ax_415 = fn0800_AD2F(ds_399, SEQ(Mem394[ds_399:0x29E1:word16], Mem411[ds_399:0x29DF:word16]), out dx_418)
	Mem426[ds_399:0x4E8E:word16] = dx_418
	Mem427[ds_399:0x4E8C:word16] = ax_415
	ui32 ax_dx_671 = SEQ(dx_287, ax_242) - SEQ(dx_266, ax_242)
	word16 dx_299 = (word16) ax_dx_671
	word16 ax_306 = SLICE(ax_dx_671, word16, 16) + (dx_299 <u 0x0001)
	word16 dx_429 = dx_299 + 0x0001
	word16 wLoc04_735 = ax_306
	word16 wLoc06_736 = dx_299 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CAF:
	word16 ax_436 = wLoc06_736 | wLoc04_735
	branch ax_436 != 0x0000 l0800_6C89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6C89:
	selector ds_457
	fn0800_409C(ds_457, ax_436, fn0800_3E5D(ds_399, Mem450[ds_399:0x29E3:word16], Mem447[ds_399:0x29E5:word16], out ds_457, out Top_927), Mem444[ds_399:0x29DF:word16], Mem434[ds_399:0x29E1:word16], out dx_429, out ds_399, out Top_928)
	word16 v58_484 = wLoc06_736 - 0x0001
	wLoc06_736 = v58_484
	wLoc04_735 = wLoc04_735 - (v58_484 <u 0x0000)
	Mem434 = Mem489
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CB7:
	word16 ax_508 = (DPB(DPB(ax_436, Mem496[ds_399:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx_429, Mem496[ds_399:0x2E76:byte], 0), 0x00, 8)
	selector ds_525
	fn0800_4152(ds_399, 0x2E77, ds_399, ax_508, Mem493[ds_399:0x29DF:word16], Mem434[ds_399:0x29E1:word16], out ds_525)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6E93:
	word16 dx_547
	word16 ax_544 = fn0800_AD2F(ds_525, SEQ(Mem520[ds_525:0x29E5:word16], Mem540[ds_525:0x29E3:word16]), out dx_547)
	branch dx_547 >=u Mem543[ds_525:0x2A09:word16] l0800_6EAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EAA:
	branch dx_547 != Mem543[ds_525:0x2A09:word16] l0800_6EB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EAC:
	branch ax_544 >=u Mem543[ds_525:0x2A07:word16] l0800_6EB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EB5:
	dxOut = dx_547
	dsOut = ds_525
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EB2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EA7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6CE4:
	word16 v62_572 = Mem543[ds_525:0x29E5:word16]
	word16 v63_577 = Mem576[ds_525:0x29E3:word16]
	selector ds_583
	int8 Top_586
	word16 dx_584 = fn0800_3E5D(ds_525, v63_577, v62_572, out ds_583, out Top_586)
	word16 cx_603 = 0x0007
	word16 bx_604 = 0x6EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D0D:
	branch Mem602[0x0800:bx_604:word16] != ax_544 l0800_6D1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D15:
	word16 ax_612 = Mem602[0x0800:bx_604 + 0x000E:word16]
	branch ax_612 == (dx_584 & 0x3FFF) l0800_6D26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D26:
	word16 ax_618
	word16 dx_623
	call Mem602[0x0800:bx_604 + 0x001C:word16] (retsize: 2;)
		uses: ax:ax_612,bx:bx_605,cx:cx_620,dx:ax_544,sp:fp - 0x001C,Stack +0000:v62_572,Stack +0002:si,Stack +0004:ax_544,Stack +0006:dx_584 & 0x3FFF,Stack +0008:dx_299 + 0x0001,Stack +000A:ax_306,Stack +000C:ax_242,Stack +000E:dx_287,Stack +0010:ax_242,Stack +0012:dx_266,Stack +0014:ax_544,Stack +0016:dx_584,Stack +0018:wLoc06_737,Stack +001A:wLoc04_738,Stack +001C:bp,Stack +FFFFFFF6:0x2E77,Stack +FFFFFFF8:ds_440,Stack +FFFFFFFA:ax_508,Stack +FFFFFFFC:0x0000,Stack +FFFFFFFE:v63_577,Top:Top_586
		defs: ax:ax_618,dx:dx_623
	dxOut = dx_623
	dsOut = ds_583
	return ax_618
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D1E:
	bx_604 = bx_604 + 0x0002
	cx_603 = cx_603 - 0x0001
	branch cx_603 != 0x0000 l0800_6D0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6D23:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6E8B:
	dxOut = ax_544
	dsOut = ds_583
	return 0x0009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6B1B:
	dxOut = dx_47
	dsOut = ds_46
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6AFC:
	dxOut = 0x0000
	dsOut = ds
	return 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6AD4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6EE6(word16 cx, word16 dx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_6EE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EE6:
	fn0800_B2EF(cx, dx, bx, ds, 0x2223, ds, out si_52, out di_53)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6EE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6EFF(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_6EFF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6EFF:
	fn0800_B2EF(cx, dx, bx, ds, 0x2231, ds, out si_20, out di_19)
	branch wArg02 <=u 0x0009 l0800_6F1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F13:
	fn0800_B2EF(cx, dx, bx, ds, 0x223E, ds, out si_73, out di_74)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F1E:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6EFF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_6F20(word16 ax, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_6F20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F20:
	word16 dx_36
	selector ds_102
	word16 ax_33 = fn0800_8C69(ax, 0x02, fn0800_3E5D(ds, Mem14[ds:0x29E3:word16], Mem7[ds:0x29E5:word16], out ds_102, out Top_1322), out cl_1323, out dx_36)
	word16 sp_37 = <invalid>
	Mem46[ss:sp_37 - 2:word16] = Mem43[ds_102:0x29E5:word16]
	Mem49[ss:sp_37 - 4:word16] = Mem46[ds_102:0x29E3:word16]
	word16 dx_53
	word16 ax_50 = fn0800_AD2F(ds_102, Mem49[ss:sp_37 - 4:segptr32], out dx_53)
	Mem65[ss:sp_37 - 2:word16] = 0x0001
	Mem68[ss:sp_37 - 4:word16] = dx_36
	Mem71[ss:sp_37 - 6:word16] = ax_33
	Mem74[ss:sp_37 - 8:word16] = Mem71[ds_102:0x29E5:word16]
	Mem77[ss:sp_37 - 10:word16] = Mem74[ds_102:0x29E3:word16]
	word16 bp_508 = fp - 2
	word16 ax_115 = fn0800_ACB3(ds_102, Mem77[ss:sp_37 - 10:word16], Mem77[ss:sp_37 - 8:word16], Mem77[ss:sp_37 - 2:word16], out cx_1324, out dx_1325, out bx_1326)
	word16 sp_1214 = sp_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FCC:
	word16 sp_93 = sp_1214 - 2
	Mem95[ss:sp_93:word16] = Mem90[ds_102:0x29E5:word16]
	Mem98[ss:sp_93 - 2:word16] = Mem95[ds_102:0x29E3:word16]
	branch fn0800_3F58(ds_102, Mem98[ss:sp_93 - 2:word16], Mem98[ss:sp_93:word16], out di_1327, out ds_102) != 0x0000 l0800_6FE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FDE:
	branch ax_115 == 0x03EC l0800_6F6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F6D:
	Mem120[ss:sp_93:word16] = 0x0001
	Mem126[ss:sp_93 - 2:word16] = 0x0000
	Mem128[ss:sp_93 - 4:word16] = 0x0004
	Mem131[ss:sp_93 - 6:word16] = Mem128[ds_102:0x29E5:word16]
	Mem134[ss:sp_93 - 8:word16] = Mem131[ds_102:0x29E3:word16]
	ax_115 = fn0800_ACB3(ds_102, Mem134[ss:sp_93 - 8:word16], Mem134[ss:sp_93 - 6:word16], Mem134[ss:sp_93:word16], out cx_1330, out dx_1331, out bx_1332)
	sp_1214 = sp_93 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6F86:
	word16 sp_150 = sp_1214 - 2
	Mem152[ss:sp_150:word16] = Mem147[ds_102:0x29E5:word16]
	Mem155[ss:sp_150 - 2:word16] = Mem152[ds_102:0x29E3:word16]
	word16 dx_174
	word16 ax_171 = fn0800_8C69(ax_115, 0x02, fn0800_3E5D(ds_102, Mem155[ss:sp_150 - 2:word16], Mem155[ss:sp_150:word16], out ds_102, out Top_1391), out cl_1392, out dx_174)
	word16 sp_175 = <invalid>
	Mem220 = Mem182
	branch (ax_171 | dx_174) == 0x0000 l0800_6FC4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FA4:
	Mem189[ss:sp_175 - 2:word16] = 0x0001
	Mem198[ss:sp_175 - 4:word16] = dx_174 + (ax_171 <u 0x0004)
	Mem200[ss:sp_175 - 6:word16] = ax_171 + 0x0004
	Mem203[ss:sp_175 - 8:word16] = Mem200[ds_102:0x29E5:word16]
	Mem206[ss:sp_175 - 10:word16] = Mem203[ds_102:0x29E3:word16]
	fn0800_ACB3(ds_102, Mem206[ss:sp_175 - 10:word16], Mem206[ss:sp_175 - 8:word16], Mem206[ss:sp_175 - 2:word16], out cx_1380, out dx_1381, out bx_1382)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FC4:
	sp_1214 = sp_175
	ax_115 = ax_171 | dx_174
	branch ax_115 != 0x0000 l0800_6F86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_6FE3:
	Mem232[ss:sp_93:word16] = Mem98[ds_102:0x29E5:word16]
	Mem235[ss:sp_93 - 2:word16] = Mem232[ds_102:0x29E3:word16]
	word16 dx_239
	ui32 dx_ax_1218 = SEQ(dx_239, fn0800_AD2F(ds_102, Mem235[ss:sp_93 - 2:segptr32], out dx_239)) - SEQ(dx_53, ax_50)
	word16 dx_251 = SLICE(dx_ax_1218, word16, 16)
	Mem255[ds_102:0x2A05:word16] = dx_251
	word16 ax_248 = (word16) dx_ax_1218
	Mem256[ds_102:0x2A03:word16] = ax_248
	Mem259[ss:sp_93:word16] = Mem256[ds_102:0x29E1:word16]
	Mem262[ss:sp_93 - 2:word16] = Mem259[ds_102:0x29DF:word16]
	Mem265[ss:sp_93 - 4:word16] = wArg04
	Mem268[ss:sp_93 - 6:word16] = wArg02
	selector ds_273
	fn0800_409C(ds_102, Mem268[ss:sp_93 - 6:word16], Mem268[ss:sp_93 - 4:word16], Mem268[ss:sp_93 - 2:word16], Mem268[ss:sp_93:word16], out dx_1328, out ds_273, out Top_1329)
	Mem285[ss:sp_93:word16] = Mem268[ds_273:0x29E1:word16]
	Mem288[ss:sp_93 - 2:word16] = Mem285[ds_273:0x29DF:word16]
	word16 dx_292
	word16 ax_289 = fn0800_AD2F(ds_273, Mem288[ss:sp_93 - 2:segptr32], out dx_292)
	word16 sp_298 = sp_93 + 0x0002
	branch dx_251 >=u 0x0000 l0800_7035
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7035:
	branch dx_251 >u 0x0000 l0800_7040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7037:
	branch ax_248 >u 0x0012 l0800_7040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7040:
	Mem312[ss:sp_93:word16] = 0x0000
	Mem316[ss:sp_93 - 2:word16] = Mem312[ds_273:0x4E8E:word16]
	Mem319[ss:sp_93 - 4:word16] = Mem316[ds_273:0x4E8C:word16]
	Mem322[ss:sp_93 - 6:word16] = Mem319[ds_273:0x29E1:word16]
	Mem325[ss:sp_93 - 8:word16] = Mem322[ds_273:0x29DF:word16]
	word16 ax_326 = fn0800_ACB3(ds_273, Mem325[ss:sp_93 - 8:word16], Mem325[ss:sp_93 - 6:word16], Mem325[ss:sp_93:word16], out cx_1333, out dx_1334, out bx_1335)
	Mem339[ss:sp_93:word16] = Mem325[ds_273:0x29E1:word16]
	Mem342[ss:sp_93 - 2:word16] = Mem339[ds_273:0x29DF:word16]
	selector ds_346
	word16 dx_347 = fn0800_3E5D(ds_273, Mem342[ss:sp_93 - 2:word16], Mem342[ss:sp_93:word16], out ds_346, out Top_1336)
	Mem362[ss:sp_93:word16] = 0x0000
	Mem365[ss:sp_93 - 2:word16] = dx_292
	Mem368[ss:sp_93 - 4:word16] = ax_289
	Mem371[ss:sp_93 - 6:word16] = Mem368[ds_346:0x29E1:word16]
	Mem374[ss:sp_93 - 8:word16] = Mem371[ds_346:0x29DF:word16]
	fn0800_ACB3(ds_346, Mem374[ss:sp_93 - 8:word16], Mem374[ss:sp_93 - 6:word16], Mem374[ss:sp_93:word16], out cx_1337, out dx_1338, out bx_1339)
	Mem387[ss:sp_93:word16] = Mem374[ds_346:0x29E1:word16]
	Mem390[ss:sp_93 - 2:word16] = Mem387[ds_346:0x29DF:word16]
	Mem395[ss:sp_93 - 4:word16] = 0x0000
	Mem397[ss:sp_93 - 6:word16] = 0x0000
	selector ds_402
	fn0800_409C(ds_346, Mem397[ss:sp_93 - 6:word16], Mem397[ss:sp_93 - 4:word16], Mem397[ss:sp_93 - 2:word16], Mem397[ss:sp_93:word16], out dx_1340, out ds_402, out Top_1341)
	Mem414[ss:sp_93:word16] = Mem397[ds_402:0x29E1:word16]
	Mem417[ss:sp_93 - 2:word16] = Mem414[ds_402:0x29DF:word16]
	Mem420[ss:sp_93 - 4:word16] = dx_36
	Mem423[ss:sp_93 - 6:word16] = ax_33
	selector ds_428
	fn0800_409C(ds_402, Mem423[ss:sp_93 - 6:word16], Mem423[ss:sp_93 - 4:word16], Mem423[ss:sp_93 - 2:word16], Mem423[ss:sp_93:word16], out dx_1342, out ds_428, out Top_1343)
	Mem440[ss:sp_93:word16] = Mem423[ds_428:0x29E1:word16]
	Mem443[ss:sp_93 - 2:word16] = Mem440[ds_428:0x29DF:word16]
	Mem446[ss:sp_93 - 4:word16] = dx_347
	Mem449[ss:sp_93 - 6:word16] = ax_326
	selector ds_454
	fn0800_409C(ds_428, Mem449[ss:sp_93 - 6:word16], Mem449[ss:sp_93 - 4:word16], Mem449[ss:sp_93 - 2:word16], Mem449[ss:sp_93:word16], out dx_1344, out ds_454, out Top_1345)
	Mem467[ss:sp_93:word16] = 0x0000
	Mem470[ss:sp_93 - 2:word16] = dx_53
	Mem473[ss:sp_93 - 4:word16] = ax_50
	Mem476[ss:sp_93 - 6:word16] = Mem473[ds_454:0x29E5:word16]
	Mem479[ss:sp_93 - 8:word16] = Mem476[ds_454:0x29E3:word16]
	fn0800_ACB3(ds_454, Mem479[ss:sp_93 - 8:word16], Mem479[ss:sp_93 - 6:word16], Mem479[ss:sp_93:word16], out cx_1346, out dx_1347, out bx_1348)
	Mem498[ss:sp_93:word16] = dx_251 - (ax_248 <u 0x0008)
	Mem500[ss:sp_93 - 2:word16] = ax_248 - 0x0008
	Mem503[ss:sp_93 - 4:word16] = dx_251
	Mem506[ss:sp_93 - 6:word16] = ax_248
	fn0800_75EA(ds_454, Mem506[ss:sp_93 - 6:word16], Mem506[ss:sp_93 - 4:word16], Mem506[ss:sp_93 - 2:word16], Mem506[ss:sp_93:word16], out bp_508, out si_1349, out ds_273)
	word16 v58_523 = Mem506[ds_273:0x2A03:word16] + 0x0008
	Mem524[ds_273:0x2A03:word16] = v58_523
	Mem528[ds_273:0x2A05:word16] = Mem524[ds_273:0x2A05:word16] + (v58_523 <u 0x0000)
	word16 sp_516 = <invalid>
	sp_298 = sp_516 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_703D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7032:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_70F9:
	word16 ax_532 = Mem531[ds_273:0x2A05:word16]
	word16 dx_533 = Mem531[ds_273:0x2A03:word16]
	branch ax_532 >=u Mem531[ss:bp_508 - 0x0016:word16] l0800_7108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7108:
	branch ax_532 != Mem531[ss:bp_508 - 0x0016:word16] l0800_7112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_710A:
	branch dx_533 >=u Mem531[ss:bp_508 - 0x0018:word16] l0800_7112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7112:
	word16 sp_546 = sp_298 - 2
	Mem548[ss:sp_546:word16] = 0x0000
	Mem552[ss:sp_546 - 2:word16] = Mem548[ss:bp_508 - 0x0002:word16]
	Mem555[ss:sp_546 - 4:word16] = Mem552[ss:bp_508 - 0x0004:word16]
	Mem559[ss:sp_546 - 6:word16] = Mem555[ds_273:0x29E1:word16]
	Mem562[ss:sp_546 - 8:word16] = Mem559[ds_273:0x29DF:word16]
	fn0800_ACB3(ds_273, Mem562[ss:sp_546 - 8:word16], Mem562[ss:sp_546 - 6:word16], Mem562[ss:sp_546:word16], out cx_1350, out dx_1351, out bx_1352)
	Mem575[ss:sp_546:word16] = 0x0000
	word16 dx_577 = Mem575[ss:bp_508 - 0x0014:word16]
	Mem584[ss:sp_546 - 2:word16] = Mem575[ss:bp_508 - 0x0012:word16] - (dx_577 <u 0x0004)
	Mem586[ss:sp_546 - 4:word16] = dx_577 - 0x0004
	Mem589[ss:sp_546 - 6:word16] = Mem586[ds_273:0x29E5:word16]
	Mem592[ss:sp_546 - 8:word16] = Mem589[ds_273:0x29E3:word16]
	fn0800_ACB3(ds_273, Mem592[ss:sp_546 - 8:word16], Mem592[ss:sp_546 - 6:word16], Mem592[ss:sp_546:word16], out cx_1353, out dx_1354, out bx_1355)
	word16 dx_604 = Mem592[ss:bp_508 - 0x0010:word16]
	Mem611[ss:sp_546:word16] = Mem592[ss:bp_508 - 0x000E:word16] + (dx_604 <u 0x0004)
	Mem613[ss:sp_546 - 2:word16] = dx_604 + 0x0004
	Mem616[ss:sp_546 - 4:word16] = Mem613[ds_273:0x29E1:word16]
	Mem619[ss:sp_546 - 6:word16] = Mem616[ds_273:0x29DF:word16]
	Mem622[ss:sp_546 - 8:word16] = Mem619[ds_273:0x29E5:word16]
	Mem625[ss:sp_546 - 10:word16] = Mem622[ds_273:0x29E3:word16]
	selector ds_631
	word16 bp_627
	word16 ax_626 = fn0800_3B0A(Mem625[ss:sp_546 - 2:word16], Mem625[ss:sp_546:word16], out dx_1356, out bp_627, out ds_631)
	word16 sp_635 = <invalid>
	Mem645[ss:sp_635 + 0x000A:word16] = Mem625[ds_631:0x29E5:word16]
	Mem648[ss:sp_635 + 0x0008:word16] = Mem645[ds_631:0x29E3:word16]
	selector ds_652
	branch fn0800_3F58(ds_631, Mem648[ss:sp_635 + 0x0008:word16], Mem648[ss:sp_635 + 0x000A:word16], out di_651, out ds_652) == 0x0000 l0800_7181
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7181:
	branch ax_626 == 0x03EC l0800_7189
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7189:
	Mem669[ss:sp_635 + 0x000A:word16] = 0x0001
	Mem675[ss:sp_635 + 0x0008:word16] = 0x0000
	Mem677[ss:sp_635 + 0x0006:word16] = 0x0004
	Mem680[ss:sp_635 + 0x0004:word16] = Mem677[ds_652:0x29E5:word16]
	Mem683[ss:sp_635 + 0x0002:word16] = Mem680[ds_652:0x29E3:word16]
	fn0800_ACB3(ds_652, Mem683[ss:sp_635 + 0x0002:word16], Mem683[ss:sp_635 + 0x0004:word16], Mem683[ss:sp_635 + 0x000A:word16], out cx_1375, out dx_1376, out bx_1377)
	Mem696[ss:sp_635 + 0x000A:word16] = Mem683[ds_652:0x29E1:word16]
	Mem699[ss:sp_635 + 0x0008:word16] = Mem696[ds_652:0x29DF:word16]
	Mem705[ss:sp_635 + 0x0006:word16] = 0x0000
	Mem707[ss:sp_635 + 0x0004:word16] = 0x03EC
	word16 ax_708 = fn0800_409C(ds_652, Mem707[ss:sp_635 + 0x0004:word16], Mem707[ss:sp_635 + 0x0006:word16], Mem707[ss:sp_635 + 0x0008:word16], Mem707[ss:sp_635 + 0x000A:word16], out dx_1378, out ds_652, out Top_1379)
	word16 sp_1215 = sp_635 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_71B7:
	word16 sp_726 = sp_1215 - 2
	Mem728[ss:sp_726:word16] = Mem723[ds_652:0x29E5:word16]
	Mem731[ss:sp_726 - 2:word16] = Mem728[ds_652:0x29E3:word16]
	selector ds_735
	Mem746[ss:bp_627 - 0x0002:word16] = fn0800_3E5D(ds_652, Mem731[ss:sp_726 - 2:word16], Mem731[ss:sp_726:word16], out ds_735, out Top_1388)
	Mem748[ss:bp_627 - 0x0004:word16] = ax_708
	Mem751[ss:sp_726:word16] = Mem748[ds_735:0x29E1:word16]
	Mem754[ss:sp_726 - 2:word16] = Mem751[ds_735:0x29DF:word16]
	Mem757[ss:sp_726 - 4:word16] = Mem754[ss:bp_627 - 0x0002:word16]
	Mem759[ss:sp_726 - 6:word16] = ax_708
	fn0800_409C(ds_735, Mem759[ss:sp_726 - 6:word16], Mem759[ss:sp_726 - 4:word16], Mem759[ss:sp_726 - 2:word16], Mem759[ss:sp_726:word16], out dx_1389, out ds_652, out Top_1390)
	sp_1215 = sp_726 + 0x0002
	word16 ax_774 = Mem759[ss:bp_627 - 0x0004:word16] | Mem759[ss:bp_627 - 0x0002:word16]
	branch ax_774 == 0x0000 l0800_7234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_71E5:
	Mem780[ss:sp_726:word16] = Mem759[ds_652:0x29E5:word16]
	Mem783[ss:sp_726 - 0x0002:word16] = Mem780[ds_652:0x29E3:word16]
	selector ds_787
	Mem801[ss:bp_627 - 0x0006:word16] = fn0800_3E5D(ds_652, Mem783[ss:sp_726 - 0x0002:word16], Mem783[ss:sp_726:word16], out ds_787, out Top_1383) + (ax_774 <u 0x0001)
	Mem802[ss:bp_627 - 0x0008:word16] = ax_774 + 0x0001
	Mem805[ss:sp_726:word16] = Mem802[ds_787:0x29E1:word16]
	Mem808[ss:sp_726 - 0x0002:word16] = Mem805[ds_787:0x29DF:word16]
	Mem811[ss:sp_726 - 0x0004:word16] = Mem808[ss:bp_627 - 0x0006:word16]
	Mem813[ss:sp_726 - 6:word16] = ax_774 + 0x0001
	selector ds_818
	fn0800_409C(ds_787, Mem813[ss:sp_726 - 6:word16], Mem813[ss:sp_726 - 4:word16], Mem813[ss:sp_726 - 2:word16], Mem813[ss:sp_726:word16], out dx_1384, out ds_818, out Top_1385)
	word16 dx_834
	word16 ax_831 = fn0800_8C69(Mem813[ss:bp_627 - 0x0004:word16], 0x02, Mem813[ss:bp_627 - 0x0002:word16], out cl_1386, out dx_834)
	word16 sp_835 = <invalid>
	Mem841[ss:sp_835 - 2:word16] = dx_834
	Mem843[ss:sp_835 - 4:word16] = ax_831
	Mem846[ss:sp_835 - 6:word16] = Mem843[ds_818:0x29E1:word16]
	Mem849[ss:sp_835 - 8:word16] = Mem846[ds_818:0x29DF:word16]
	Mem852[ss:sp_835 - 10:word16] = Mem849[ds_818:0x29E5:word16]
	Mem855[ss:sp_835 - 12:word16] = Mem852[ds_818:0x29E3:word16]
	fn0800_3B0A(Mem855[ss:sp_835 - 4:word16], Mem855[ss:sp_835 - 2:word16], out dx_1387, out bp_627, out ds_652)
	word16 sp_865 = <invalid>
	sp_1215 = sp_865 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7234:
	ax_708 = Mem875[ss:bp_627 - 0x0004:word16] | Mem875[ss:bp_627 - 0x0002:word16]
	branch ax_708 == 0x0000 l0800_723F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_723C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7186:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_717E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_723F:
	word16 v80_884 = Mem883[ds_652:0x4E8C:word16] + 0x0004
	Mem885[ds_652:0x4E8C:word16] = v80_884
	Mem889[ds_652:0x4E8E:word16] = Mem885[ds_652:0x4E8E:word16] + (v80_884 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_710F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7105:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_724D:
	ui32 ax_dx_1220 = SEQ(Mem531[ss:bp_508 - 0x0016:word16], Mem531[ss:bp_508 - 0x0018:word16]) + SEQ(Mem531[ds_273:0x4E8A:word16], Mem531[ds_273:0x4E88:word16])
	Mem906[ss:bp_508 - 0x0002:word16] = SLICE(ax_dx_1220, word16, 16)
	Mem907[ss:bp_508 - 0x0004:word16] = (word16) ax_dx_1220
	branch (Mem907[ds_273:0x2A03:word16] & 0x0003) == 0x0000 l0800_7274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_726C:
	word16 v60_914 = Mem907[ss:bp_508 - 0x0004:word16] + 0x0002
	Mem915[ss:bp_508 - 0x0004:word16] = v60_914
	Mem919[ss:bp_508 - 0x0002:word16] = Mem915[ss:bp_508 - 0x0002:word16] + (v60_914 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7274:
	word16 sp_937
	branch (Mem923[ss:bp_508 - 0x0004:word16] & 0x0003) == 0x0000 l0800_7298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7298:
	word16 dx_936
	word16 ax_933 = fn0800_8CAA(Mem923[ss:bp_508 - 0x0004:word16], 0x02, Mem923[ss:bp_508 - 0x0002:word16], out dx_936)
	Mem942[ss:bp_508 - 0x0002:word16] = dx_936
	Mem943[ss:bp_508 - 0x0004:word16] = ax_933
	sp_937 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_727F:
	word16 dx_950
	word16 ax_947 = fn0800_8CAA(Mem923[ss:bp_508 - 0x0004:word16], 0x02, Mem923[ss:bp_508 - 0x0002:word16], out dx_950)
	Mem961[ss:bp_508 - 0x0002:word16] = dx_950 + (ax_947 <u 0x0001)
	Mem962[ss:bp_508 - 0x0004:word16] = ax_947 + 0x0001
	sp_937 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72C6:
	word16 ax_965 = Mem964[ds_273:0x2A03:word16]
	branch (ax_965 & 0x0003) != 0x0000 l0800_72AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72AB:
	word16 sp_973 = sp_937 - 2
	Mem975[ss:sp_973:word16] = Mem964[ds_273:0x29E1:word16]
	Mem978[ss:sp_973 - 2:word16] = Mem975[ds_273:0x29DF:word16]
	Mem982[ss:sp_973 - 4:word16] = DPB(ax_965 & 0x0003, 0x00, 0)
	fn0800_4047(ds_273, Mem982[ss:sp_973 - 4:byte], Mem982[ss:sp_973 - 2:segptr32], out cx_1357, out dx_1358, out bx_1359, out di_1360, out ds_273, out Top_1361)
	word16 v101_996 = Mem982[ds_273:0x2A03:word16] + 0x0001
	Mem997[ds_273:0x2A03:word16] = v101_996
	Mem1001[ds_273:0x2A05:word16] = Mem997[ds_273:0x2A05:word16] + (v101_996 <u 0x0000)
	sp_937 = sp_973 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_72D1:
	word16 sp_1004 = sp_937 - 2
	Mem1005[ss:sp_1004:word16] = Mem964[ds_273:0x29E1:word16]
	Mem1008[ss:sp_1004 - 2:word16] = Mem1005[ds_273:0x29DF:word16]
	word16 dx_1012
	word16 ax_1009 = fn0800_AD2F(ds_273, Mem1008[ss:sp_1004 - 2:segptr32], out dx_1012)
	Mem1020[ss:bp_508 - 0x0006:word16] = dx_1012
	Mem1021[ss:bp_508 - 0x0008:word16] = ax_1009
	Mem1024[ss:sp_1004:word16] = 0x0001
	word16 dx_1028 = -Mem1024[ds_273:0x2A03:word16]
	Mem1037[ss:sp_1004 - 2:word16] = -Mem1024[ds_273:0x2A05:word16] - (dx_1028 == 0x0000) - (dx_1028 <u 0x0004)
	Mem1039[ss:sp_1004 - 4:word16] = dx_1028 - 0x0004
	Mem1042[ss:sp_1004 - 6:word16] = Mem1039[ds_273:0x29E1:word16]
	Mem1045[ss:sp_1004 - 8:word16] = Mem1042[ds_273:0x29DF:word16]
	fn0800_ACB3(ds_273, Mem1045[ss:sp_1004 - 8:word16], Mem1045[ss:sp_1004 - 6:word16], Mem1045[ss:sp_1004:word16], out cx_1362, out dx_1363, out bx_1364)
	Mem1059[ss:sp_1004:word16] = Mem1045[ds_273:0x29E1:word16]
	Mem1062[ss:sp_1004 - 2:word16] = Mem1059[ds_273:0x29DF:word16]
	word16 dx_1069
	word16 ax_1066 = fn0800_8CAA(Mem1062[ds_273:0x2A03:word16], 0x02, Mem1062[ds_273:0x2A05:word16], out dx_1069)
	word16 sp_1070 = <invalid>
	Mem1076[ss:sp_1070 - 2:word16] = dx_1069
	Mem1078[ss:sp_1070 - 4:word16] = ax_1066
	selector ds_1083
	fn0800_409C(ds_273, Mem1078[ss:sp_1070 - 4:word16], Mem1078[ss:sp_1070 - 2:word16], Mem1078[ss:sp_1070:word16], Mem1078[ss:sp_1070 + 2:word16], out dx_1365, out ds_1083, out Top_1366)
	word16 ax_1092 = Mem1078[ss:bp_508 - 0x000A:word16]
	word16 dx_1093 = Mem1078[ss:bp_508 - 0x000C:word16]
	Mem1095[ss:bp_508 - 0x001A:word16] = ax_1092 & 0x3FFF
	branch (ax_1092 & 0x3FFF) <u Mem1095[ss:bp_508 - 0x0002:word16] l0800_734D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_733A:
	branch (ax_1092 & 0x3FFF) >u Mem1095[ss:bp_508 - 0x0002:word16] l0800_7341
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_733C:
	branch dx_1093 <=u Mem1095[ss:bp_508 - 0x0004:word16] l0800_734D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7341:
	word16 ax_1104 = Mem1095[ss:bp_508 - 0x000C:word16]
	Mem1106[ss:bp_508 - 0x0002:word16] = Mem1095[ss:bp_508 - 0x001A:word16]
	Mem1107[ss:bp_508 - 0x0004:word16] = ax_1104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_734D:
	word16 ax_1111 = Mem1110[ss:bp_508 - 0x000A:word16]
	Mem1114[ss:bp_508 - 0x0004:word16] = Mem1110[ss:bp_508 - 0x0004:word16]
	Mem1117[ss:bp_508 - 0x0002:word16] = Mem1114[ss:bp_508 - 0x0002:word16] | ax_1111 & 0xC000
	Mem1125[ss:sp_1070 + 0x0002:word16] = 0x0000
	Mem1130[ss:sp_1070:word16] = Mem1125[ds_1083:0x4E8E:word16]
	Mem1133[ss:sp_1070 - 2:word16] = Mem1130[ds_1083:0x4E8C:word16]
	Mem1136[ss:sp_1070 - 4:word16] = Mem1133[ds_1083:0x29E1:word16]
	Mem1139[ss:sp_1070 - 6:word16] = Mem1136[ds_1083:0x29DF:word16]
	fn0800_ACB3(ds_1083, Mem1139[ss:sp_1070 - 6:word16], Mem1139[ss:sp_1070 - 4:word16], Mem1139[ss:sp_1070 + 2:word16], out cx_1367, out dx_1368, out bx_1369)
	Mem1153[ss:sp_1070 + 0x0002:word16] = Mem1139[ds_1083:0x29E1:word16]
	Mem1156[ss:sp_1070:word16] = Mem1153[ds_1083:0x29DF:word16]
	Mem1159[ss:sp_1070 - 2:word16] = Mem1156[ss:bp_508 - 0x0002:word16]
	Mem1162[ss:sp_1070 - 4:word16] = Mem1159[ss:bp_508 - 0x0004:word16]
	selector ds_1167
	fn0800_409C(ds_1083, Mem1162[ss:sp_1070 - 4:word16], Mem1162[ss:sp_1070 - 2:word16], Mem1162[ss:sp_1070:word16], Mem1162[ss:sp_1070 + 2:word16], out dx_1370, out ds_1167, out Top_1371)
	Mem1180[ss:sp_1070 + 0x0002:word16] = 0x0000
	Mem1183[ss:sp_1070:word16] = Mem1180[ss:bp_508 - 0x0006:word16]
	Mem1186[ss:sp_1070 - 2:word16] = Mem1183[ss:bp_508 - 0x0008:word16]
	Mem1189[ss:sp_1070 - 4:word16] = Mem1186[ds_1167:0x29E1:word16]
	Mem1192[ss:sp_1070 - 6:word16] = Mem1189[ds_1167:0x29DF:word16]
	fn0800_ACB3(ds_1167, Mem1192[ss:sp_1070 - 6:word16], Mem1192[ss:sp_1070 - 4:word16], Mem1192[ss:sp_1070 + 2:word16], out cx_1372, out dx_1373, out bx_1374)
	word16 v96_1203 = Mem1192[ds_1167:0x4E8C:word16] + 0x0004
	Mem1204[ds_1167:0x4E8C:word16] = v96_1203
	Mem1208[ds_1167:0x4E8E:word16] = Mem1204[ds_1167:0x4E8E:word16] + (v96_1203 <u 0x0000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_6F20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_73AC(selector ds, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds dx
// Trashed: SCZO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_73AC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_73AC:
	selector ds_42
	fn0800_4152(ds, 0x2E77, ds, (DPB(DPB(ax, Mem12[ds:0x2E75:byte], 0), 0x00, 8) << 0x08) + DPB(DPB(dx, Mem12[ds:0x2E76:byte], 0), 0x00, 8), Mem9[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], out ds_42)
	fn0800_ACB3(ds_42, Mem64[ds_42:0x29DF:word16], Mem61[ds_42:0x29E1:word16], 0x0001, out cx_160, out dx_161, out bx_162)
	selector ds_95
	fn0800_409C(ds_42, Mem87[ds_42:0x2A0F:word16], Mem84[ds_42:0x2A11:word16], Mem81[ds_42:0x29DF:word16], Mem67[ds_42:0x29E1:word16], out dx_163, out ds_95, out Top_164)
	selector ds_122
	dxOut = fn0800_75EA(ds_95, Mem113[ds_95:0x2A07:word16], Mem110[ds_95:0x2A09:word16], Mem107[ds_95:0x2A07:word16], Mem90[ds_95:0x2A09:word16], out bp_165, out si_166, out ds_122)
	dsOut = ds_122
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_73AC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_741D(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es si Top
// Preserved: bp di ds sp
fn0800_741D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_741D:
	word16 bp_225 = fp - 2
	word16 sp_11 = fp - 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75C1:
	word16 sp_18 = sp_11 - 2
	Mem20[ss:sp_18:word16] = Mem15[ds:0x29E5:word16]
	Mem23[ss:sp_18 - 2:word16] = Mem20[ds:0x29E3:word16]
	word16 dx_27
	word16 ax_24 = fn0800_AD2F(ds, Mem23[ss:sp_18 - 2:segptr32], out dx_27)
	branch dx_27 >=u Mem23[ds:0x2A09:word16] l0800_75D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75D8:
	branch dx_27 != Mem23[ds:0x2A09:word16] l0800_75E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75DA:
	branch ax_24 >=u Mem23[ds:0x2A07:word16] l0800_75E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75E3:
	dxOut = dx_27
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_741D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75E0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75D5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7427:
	Mem57[ss:sp_18:word16] = Mem23[ds:0x29E5:word16]
	Mem60[ss:sp_18 - 2:word16] = Mem57[ds:0x29E3:word16]
	word16 ax_61 = fn0800_3E9A(ds, Mem60[ss:sp_18 - 2:segptr32], out dx_536, out ds)
	branch ax_61 == 0x0000 l0800_7449
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7449:
	Mem80[ss:sp_18:word16] = Mem60[ds:0x29E1:word16]
	Mem83[ss:sp_18 - 2:word16] = Mem80[ds:0x29DF:word16]
	Mem86[ss:sp_18 - 4:word16] = Mem83[ds:0x29E5:word16]
	Mem89[ss:sp_18 - 6:word16] = Mem86[ds:0x29E3:word16]
	selector ds_97
	Mem105[ss:sp_18 - 0x0004:word16] = fn0800_3DCF(ds, Mem89[ss:sp_18 - 6:segptr32], out ch_537, out dx_538, out di_539, out ds_97, out Top_540)
	fn0800_4047(ds_97, Mem105[ss:sp_18 - 0x0004:byte], Mem105[ss:sp_18 - 0x0002:segptr32], out cx_541, out dx_542, out bx_543, out di_544, out ds, out Top_545)
	sp_11 = sp_18 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7439:
	branch ax_61 == 0x0001 l0800_7469
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7469:
	Mem124[ss:sp_18:word16] = Mem60[ds:0x29E1:word16]
	Mem127[ss:sp_18 - 2:word16] = Mem124[ds:0x29DF:word16]
	Mem130[ss:sp_18 - 4:word16] = Mem127[ds:0x29E5:word16]
	Mem133[ss:sp_18 - 6:word16] = Mem130[ds:0x29E3:word16]
	selector ds_137
	Mem148[ss:sp_18 - 0x0004:word16] = fn0800_3E5D(ds, Mem133[ss:sp_18 - 6:word16], Mem133[ss:sp_18 - 4:word16], out ds_137, out Top_546)
	Mem150[ss:sp_18 - 0x0006:word16] = ax_61
	selector ds_155
	fn0800_409C(ds_137, Mem150[ss:sp_18 - 0x0006:word16], Mem150[ss:sp_18 - 0x0004:word16], Mem150[ss:sp_18 - 0x0002:word16], Mem150[ss:sp_18:word16], out dx_547, out ds_155, out Top_548)
	Mem167[ss:sp_18:word16] = Mem150[ds_155:0x29E5:word16]
	Mem170[ss:sp_18 - 2:word16] = Mem167[ds_155:0x29E3:word16]
	selector ds_175
	word16 ax_171 = fn0800_3FAD(ds_155, Mem170[ss:sp_18 - 2:word16], Mem170[ss:sp_18:word16], out ch_549, out di_550, out ds_175)
	Mem185[ss:bp_225 - 0x0002:word16] = 0x0000
	Mem186[ss:bp_225 - 0x0004:word16] = ax_171
	Mem189[ss:sp_18:word16] = Mem186[ds_175:0x29E1:word16]
	Mem192[ss:sp_18 - 2:word16] = Mem189[ds_175:0x29DF:word16]
	Mem197[ss:sp_18 - 4:word16] = 0x0000
	selector ds_202
	fn0800_401E(ds_175, Mem197[ss:sp_18 - 4:word16], Mem197[ss:sp_18 - 2:word16], Mem197[ss:sp_18:word16], out cx_551, out dx_552, out bx_553, out ds_202, out Top_554)
	Mem214[ss:sp_18:word16] = Mem197[ss:bp_225 - 0x0002:word16]
	Mem217[ss:sp_18 - 2:word16] = Mem214[ss:bp_225 - 0x0004:word16]
	Mem220[ss:sp_18 - 4:word16] = Mem217[ss:bp_225 - 0x0002:word16]
	Mem223[ss:sp_18 - 6:word16] = Mem220[ss:bp_225 - 0x0004:word16]
	selector ds_229
	fn0800_75EA(ds_202, Mem223[ss:sp_18 - 6:word16], Mem223[ss:sp_18 - 4:word16], Mem223[ss:sp_18 - 2:word16], Mem223[ss:sp_18:word16], out bp_225, out si_555, out ds_229)
	word16 sp_233 = <invalid>
	Mem242[ss:sp_233 + 0x0006:word16] = 0x0001
	word16 dx_244 = Mem242[ds_229:0x2A03:word16]
	word16 dx_250 = -(dx_244 + 0x0002)
	Mem255[ss:sp_233 + 0x0004:word16] = -(Mem242[ds_229:0x2A05:word16] + (dx_244 <u 0x0002)) - (dx_250 == 0x0000)
	Mem257[ss:sp_233 + 0x0002:word16] = dx_250
	Mem260[ss:sp_233:word16] = Mem257[ds_229:0x29E1:word16]
	Mem263[ss:sp_233 - 2:word16] = Mem260[ds_229:0x29DF:word16]
	fn0800_ACB3(ds_229, Mem263[ss:sp_233 - 2:word16], Mem263[ss:sp_233:word16], Mem263[ss:sp_233 + 6:word16], out cx_556, out dx_557, out bx_558)
	Mem277[ss:sp_233 + 0x0006:word16] = Mem263[ds_229:0x29E1:word16]
	Mem280[ss:sp_233 + 0x0004:word16] = Mem277[ds_229:0x29DF:word16]
	Mem283[ss:sp_233 + 0x0002:word16] = Mem280[ds_229:0x2A03:word16]
	fn0800_40BF(ds_229, Mem283[ss:sp_233 + 0x0002:byte], Mem283[ss:sp_233 + 0x0004:word16], Mem283[ss:sp_233 + 0x0006:word16], out dx_559, out di_560, out ds)
	word16 dx_298 = Mem283[ds:0x2A03:word16]
	branch Mem283[ds:0x2A05:word16] != Mem283[ss:bp_225 - 0x0002:word16] l0800_754A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7506:
	branch dx_298 != Mem283[ss:bp_225 - 0x0004:word16] l0800_754A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_754A:
	Mem307[ss:sp_233 + 0x0006:word16] = 0x0001
	Mem311[ss:sp_233 + 0x0004:word16] = Mem307[ds:0x2A05:word16]
	Mem314[ss:sp_233 + 0x0002:word16] = Mem311[ds:0x2A03:word16]
	Mem317[ss:sp_233:word16] = Mem314[ds:0x29E1:word16]
	Mem320[ss:sp_233 - 2:word16] = Mem317[ds:0x29DF:word16]
	fn0800_ACB3(ds, Mem320[ss:sp_233 - 2:word16], Mem320[ss:sp_233:word16], Mem320[ss:sp_233 + 6:word16], out cx_571, out dx_572, out bx_573)
	sp_11 = sp_233 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_750B:
	Mem334[ss:sp_233 + 0x0006:word16] = 0x0001
	word16 dx_338 = -Mem334[ss:bp_225 - 0x0004:word16]
	Mem343[ss:sp_233 + 0x0004:word16] = -Mem334[ss:bp_225 - 0x0002:word16] - (dx_338 == 0x0000)
	Mem345[ss:sp_233 + 0x0002:word16] = dx_338
	Mem348[ss:sp_233:word16] = Mem345[ds:0x29E5:word16]
	Mem351[ss:sp_233 - 2:word16] = Mem348[ds:0x29E3:word16]
	fn0800_ACB3(ds, Mem351[ss:sp_233 - 2:word16], Mem351[ss:sp_233:word16], Mem351[ss:sp_233 + 6:word16], out cx_574, out dx_575, out bx_576)
	Mem365[ss:sp_233 + 0x0006:word16] = Mem351[ss:bp_225 - 0x0002:word16]
	Mem368[ss:sp_233 + 0x0004:word16] = Mem365[ss:bp_225 - 0x0004:word16]
	Mem371[ss:sp_233 + 0x0002:word16] = Mem368[ds:0x29E1:word16]
	Mem374[ss:sp_233:word16] = Mem371[ds:0x29DF:word16]
	Mem377[ss:sp_233 - 2:word16] = Mem374[ds:0x29E5:word16]
	Mem380[ss:sp_233 - 4:word16] = Mem377[ds:0x29E3:word16]
	fn0800_3B0A(Mem380[ss:sp_233 + 4:word16], Mem380[ss:sp_233 + 6:word16], out dx_577, out bp_225, out ds)
	word16 sp_390 = <invalid>
	sp_11 = sp_390 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_743E:
	branch ax_61 != 0x0003 l0800_7446
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7446:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_758F:
	Mem402[ss:sp_18:word16] = Mem60[ds:0x29E5:word16]
	Mem405[ss:sp_18 - 2:word16] = Mem402[ds:0x29E3:word16]
	word16 dx_409
	ui32 bx_cx_515 = SEQ(Mem405[ds:0x2A09:word16], Mem405[ds:0x2A07:word16]) - SEQ(dx_409, fn0800_AD2F(ds, Mem405[ss:sp_18 - 2:segptr32], out dx_409))
	Mem424[ss:sp_18:word16] = SLICE(bx_cx_515, word16, 16)
	Mem426[ss:sp_18 - 2:word16] = (word16) bx_cx_515
	Mem429[ss:sp_18 - 4:word16] = Mem426[ds:0x29E1:word16]
	Mem432[ss:sp_18 - 6:word16] = Mem429[ds:0x29DF:word16]
	Mem435[ss:sp_18 - 8:word16] = Mem432[ds:0x29E5:word16]
	Mem438[ss:sp_18 - 10:word16] = Mem435[ds:0x29E3:word16]
	fn0800_3B0A(Mem438[ss:sp_18 - 2:word16], Mem438[ss:sp_18:word16], out dx_561, out bp_225, out ds)
	word16 sp_448 = <invalid>
	sp_11 = sp_448 + 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7443:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7566:
	word16 si_456 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7588:
	branch si_456 != 0x0003 l0800_756A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_756A:
	word16 sp_466 = sp_11 - 2
	Mem468[ss:sp_466:word16] = Mem463[ds:0x29E1:word16]
	Mem471[ss:sp_466 - 2:word16] = Mem468[ds:0x29DF:word16]
	Mem474[ss:sp_466 - 4:word16] = Mem471[ds:0x29E5:word16]
	Mem477[ss:sp_466 - 6:word16] = Mem474[ds:0x29E3:word16]
	selector ds_485
	Mem493[ss:sp_466 - 0x0004:word16] = fn0800_3DCF(ds, Mem477[ss:sp_466 - 6:segptr32], out ch_562, out dx_563, out di_564, out ds_485, out Top_565)
	fn0800_4047(ds_485, Mem493[ss:sp_466 - 0x0004:byte], Mem493[ss:sp_466 - 0x0002:segptr32], out cx_566, out dx_567, out bx_568, out di_569, out ds, out Top_570)
	si_456 = si_456 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_758D:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_75EA(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_75EA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_75EA:
	Mem16[ds:0x4680:word16] = wArg04
	Mem17[ds:0x467E:word16] = wArg02
	Mem18[ds:0x2A05:word16] = wArg04
	Mem19[ds:0x2A03:word16] = wArg02
	Mem20[ds:0x4678:word16] = wArg04
	Mem21[ds:0x4676:word16] = wArg02
	Mem28[ds:0x4E86:word16] = wArg08 - (wArg06 <u 0x0012)
	Mem29[ds:0x4E84:word16] = wArg06 - 0x0012
	word16 bp_181 = fp - 2
	word16 sp_10 = fp - 0x001A
	word16 dx_1002 = wArg06 - 0x0012
	branch Mem29[ds:0x4680:word16] >u 0x0000 l0800_7634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7626:
	branch Mem29[ds:0x4680:word16] == 0x0000 l0800_762B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_762B:
	branch wArg02 >u 0x0012 l0800_7634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7634:
	Mem36[ds:0x2E4B:word16] = 0x0000
	Mem37[ds:0x2E49:word16] = 0x0000
	Mem38[ds:0x465C:word16] = 0x0000
	Mem39[ds:0x4668:word16] = 0x0000
	Mem40[ds:0x4666:word16] = 0x0000
	Mem41[ds:0x2A05:word16] = 0x0000
	Mem42[ds:0x2A03:word16] = 0x0000
	Mem43[ds:0x2A01:word16] = 0x0000
	Mem44[ds:0x29FF:word16] = 0x0000
	Mem45[ds:0x467C:word16] = 0x0000
	Mem46[ds:0x467A:word16] = 0x0000
	Mem47[ds:0x4674:word16] = 0x0000
	Mem48[ds:0x4672:word16] = 0x0000
	Mem49[ds:0x2E43:word16] = 0x0000
	Mem50[ds:0x2E45:word16] = 0x0000
	Mem51[ds:0x4E82:word16] = 0x0000
	Mem52[ds:0x4E8A:word16] = 0x0000
	Mem53[ds:0x4E88:word16] = 0x0000
	Mem54[ds:0x29F9:word16] = 0x0000
	Mem55[ds:0x29F7:word16] = 0x0000
	word16 bp_65
	selector ds_69
	word16 dx_70
	word16 ax_64 = fn0800_4311(out dx_70, out bp_65, out si_1044, out di_1045, out ds_69)
	Mem81[ss:bp_65 - 0x0014:word16] = dx_70
	Mem82[ss:bp_65 - 0x0016:word16] = ax_64
	Mem85[ds_69:0x2E73:word16] = dx_70 + 0x0001
	Mem86[ds_69:0x2E71:word16] = 0x0000
	word16 sp_73 = <invalid>
	Mem90[ss:sp_73 + 0x0002:word16] = 0x0001
	Mem92[ss:sp_73:word16] = 0x0010
	word16 bp_94
	selector ds_98
	word16 dx_99
	word16 ax_93 = fn0800_4311(out dx_99, out bp_94, out si_1046, out di_1047, out ds_98)
	Mem110[ss:bp_94 - 0x0010:word16] = dx_99
	Mem111[ss:bp_94 - 0x0012:word16] = ax_93
	Mem114[ds_98:0x2E39:word16] = dx_99 + 0x0001
	Mem115[ds_98:0x2E37:word16] = 0x0000
	word16 sp_102 = <invalid>
	Mem119[ss:sp_102 + 0x0002:word16] = 0x0001
	Mem121[ss:sp_102:word16] = 0x0010
	word16 bp_123
	selector ds_127
	word16 dx_128
	word16 ax_122 = fn0800_4311(out dx_128, out bp_123, out si_1048, out di_1049, out ds_127)
	Mem139[ss:bp_123 - 0x000C:word16] = dx_128
	Mem140[ss:bp_123 - 0x000E:word16] = ax_122
	Mem143[ds_127:0x2E35:word16] = dx_128 + 0x0001
	Mem144[ds_127:0x2E33:word16] = 0x0000
	word16 sp_131 = <invalid>
	Mem148[ss:sp_131 + 0x0002:word16] = 0x0001
	Mem150[ss:sp_131:word16] = 0x0010
	word16 bp_152
	selector ds_156
	word16 dx_157
	word16 ax_151 = fn0800_4311(out dx_157, out bp_152, out si_1050, out di_1051, out ds_156)
	Mem168[ss:bp_152 - 0x0008:word16] = dx_157
	Mem169[ss:bp_152 - 0x000A:word16] = ax_151
	Mem172[ds_156:0x2E41:word16] = dx_157 + 0x0001
	Mem173[ds_156:0x2E3F:word16] = 0x0000
	word16 sp_160 = <invalid>
	Mem177[ss:sp_160 + 0x0002:word16] = 0x0001
	Mem179[ss:sp_160:word16] = 0x0010
	selector ds_185
	word16 dx_186
	word16 ax_180 = fn0800_4311(out dx_186, out bp_181, out si_1052, out di_1053, out ds_185)
	Mem197[ss:bp_181 - 0x0004:word16] = dx_186
	Mem198[ss:bp_181 - 0x0006:word16] = ax_180
	Mem201[ds_185:0x2E3D:word16] = dx_186 + 0x0001
	Mem202[ds_185:0x2E3B:word16] = 0x0000
	fn0800_87F8(ds_185)
	word16 sp_189 = <invalid>
	Mem213[ss:sp_189 + 0x0002:word16] = Mem202[ds_185:0x29E5:word16]
	Mem216[ss:sp_189:word16] = Mem213[ds_185:0x29E3:word16]
	word16 dx_220
	word16 ax_217 = fn0800_AD2F(ds_185, Mem216[ss:sp_189:segptr32], out dx_220)
	Mem228[ds_185:0x4664:word16] = dx_220
	Mem229[ds_185:0x4662:word16] = ax_217
	Mem232[ss:sp_189 + 0x0002:word16] = Mem229[ds_185:0x29E1:word16]
	Mem235[ss:sp_189:word16] = Mem232[ds_185:0x29DF:word16]
	word16 dx_239
	word16 ax_236 = fn0800_AD2F(ds_185, Mem235[ss:sp_189:segptr32], out dx_239)
	Mem246[ds_185:0x4660:word16] = dx_239
	Mem247[ds_185:0x465E:word16] = ax_236
	Mem250[ss:sp_189 + 0x0002:word16] = Mem247[ds_185:0x29E1:word16]
	Mem253[ss:sp_189:word16] = Mem250[ds_185:0x29DF:word16]
	int32 dx_ax_255 = (int32) Mem253[ds_185:0x2A21:word16]
	word16 ax_256 = (word16) dx_ax_255
	Mem264[ss:sp_189 - 2:word16] = SLICE(dx_ax_255, word16, 16) + 0x524E + (ax_256 <u 0x4300)
	Mem266[ss:sp_189 - 4:word16] = ax_256 + 0x4300
	selector ds_271
	fn0800_409C(ds_185, Mem266[ss:sp_189 - 4:word16], Mem266[ss:sp_189 - 2:word16], Mem266[ss:sp_189:word16], Mem266[ss:sp_189 + 2:word16], out dx_1054, out ds_271, out Top_1055)
	Mem283[ss:sp_189 + 0x0002:word16] = Mem266[ds_271:0x29E1:word16]
	Mem286[ss:sp_189:word16] = Mem283[ds_271:0x29DF:word16]
	Mem289[ss:sp_189 - 2:word16] = Mem286[ds_271:0x4680:word16]
	Mem292[ss:sp_189 - 4:word16] = Mem289[ds_271:0x467E:word16]
	selector ds_297
	fn0800_409C(ds_271, Mem292[ss:sp_189 - 4:word16], Mem292[ss:sp_189 - 2:word16], Mem292[ss:sp_189:word16], Mem292[ss:sp_189 + 2:word16], out dx_1056, out ds_297, out Top_1057)
	Mem308[ss:sp_189 + 0x0002:word16] = Mem292[ds_297:0x29E1:word16]
	Mem311[ss:sp_189:word16] = Mem308[ds_297:0x29DF:word16]
	Mem316[ss:sp_189 - 2:word16] = 0x0000
	Mem318[ss:sp_189 - 4:word16] = 0x0000
	selector ds_323
	fn0800_409C(ds_297, Mem318[ss:sp_189 - 4:word16], Mem318[ss:sp_189 - 2:word16], Mem318[ss:sp_189:word16], Mem318[ss:sp_189 + 2:word16], out dx_1058, out ds_323, out Top_1059)
	Mem334[ss:sp_189 + 0x0002:word16] = Mem318[ds_323:0x29E1:word16]
	Mem337[ss:sp_189:word16] = Mem334[ds_323:0x29DF:word16]
	Mem342[ss:sp_189 - 2:word16] = 0x0000
	selector ds_347
	fn0800_401E(ds_323, Mem342[ss:sp_189 - 2:word16], Mem342[ss:sp_189:word16], Mem342[ss:sp_189 + 2:word16], out cx_1060, out dx_1061, out bx_1062, out ds_347, out Top_1063)
	Mem358[ss:sp_189 + 0x0002:word16] = Mem342[ds_347:0x29E1:word16]
	Mem361[ss:sp_189:word16] = Mem358[ds_347:0x29DF:word16]
	Mem366[ss:sp_189 - 2:word16] = 0x0000
	selector ds_371
	fn0800_401E(ds_347, Mem366[ss:sp_189 - 2:word16], Mem366[ss:sp_189:word16], Mem366[ss:sp_189 + 2:word16], out cx_1064, out dx_1065, out bx_1066, out ds_371, out Top_1067)
	Mem382[ss:sp_189 + 0x0002:word16] = Mem366[ds_371:0x29E1:word16]
	Mem385[ss:sp_189:word16] = Mem382[ds_371:0x29DF:word16]
	Mem390[ss:sp_189 - 2:word16] = 0x0000
	word16 bx_392
	word16 cx_393
	word16 dx_396
	selector ds_395
	fn0800_401E(ds_371, Mem390[ss:sp_189 - 2:word16], Mem390[ss:sp_189:word16], Mem390[ss:sp_189 + 2:word16], out cx_393, out dx_396, out bx_392, out ds_395, out Top_1068)
	Mem406[ss:sp_189 + 0x0002:word16] = ds_395
	Mem409[ss:sp_189:word16] = 0x2240
	fn0800_B2EF(cx_393, dx_396, bx_392, ds_395, Mem409[ss:sp_189:word16], Mem409[ss:sp_189 + 2:word16], out si_1069, out di_1070)
	Mem420[ss:bp_181 - 0x0002:word16] = Mem409[ds_395:0x2E4F:word16]
	Mem423[ss:sp_189 + 0x0002:word16] = 0x0001
	word16 ax_421 = 0x0001
	branch Mem423[ds_395:0x2A1F:word16] == 0x0000 l0800_7808
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7808:
	ax_421 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7806:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_780A:
	Mem433[ss:sp_189:word16] = ax_421
	fn0800_8465(ds_395, Mem433[ss:sp_189:word16], Mem433[ss:sp_189 + 2:word16])
	Mem445[ss:sp_189 + 0x0002:word16] = 0x0001
	word16 ax_443 = 0x0001
	branch Mem445[ds_395:0x2E4F:word16] == 0x0000 l0800_781E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_781E:
	ax_443 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_781C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7820:
	Mem455[ss:sp_189:word16] = ax_443
	fn0800_8465(ds_395, Mem455[ss:sp_189:word16], Mem455[ss:sp_189 + 2:word16])
	branch Mem455[ds_395:0x2A23:word16] == 0x0001 l0800_7843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_782E:
	branch Mem455[ds_395:0x2E4F:word16] == 0x0000 l0800_7843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7835:
	Mem471[ss:sp_189 + 0x0002:word16] = 0x0010
	Mem474[ss:sp_189:word16] = Mem471[ds_395:0x2E4F:word16]
	fn0800_8465(ds_395, Mem474[ss:sp_189:word16], Mem474[ss:sp_189 + 2:word16])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7843:
	word16 ax_486 = Mem485[ds_395:0x2A21:word16]
	branch ax_486 == 0x0001 l0800_7852
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7852:
	ax_486 = (word16) fn0800_7A02(ds_395, out ds_395)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_784B:
	branch ax_486 == 0x0002 l0800_7857
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7857:
	ax_486 = (word16) fn0800_7C78(ds_395, out ds_395)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7850:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_785A:
	word16 si_516 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7870:
	branch Mem520[ds_395:0x4E82:word16] != 0x0000 l0800_785E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_785E:
	Mem533[ss:sp_189 + 0x0002:word16] = DPB(ax_486, Mem520[ds_395:si_516 + 0x0000:byte], 0)
	ax_486 = (word16) fn0800_8624(ds_395, Mem533[ss:sp_189 + 0x0002:byte], out di_1071, out ds_395)
	Mem549[ds_395:0x4E82:word16] = Mem533[ds_395:0x4E82:word16] - 0x0001
	si_516 = si_516 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7877:
	Mem557[ds_395:0x2E4F:word16] = Mem520[ss:bp_181 - 0x0002:word16]
	ui32 ax_dx_969 = SEQ(Mem557[ds_395:0x4680:word16], Mem557[ds_395:0x467E:word16]) - SEQ(Mem557[ds_395:0x2A05:word16], Mem557[ds_395:0x2A03:word16])
	word16 dx_560 = (word16) ax_dx_969
	word16 ax_563 = SLICE(ax_dx_969, word16, 16)
	branch ax_563 >u Mem557[ds_395:0x4E8A:word16] l0800_78B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7892:
	branch ax_563 <u Mem557[ds_395:0x4E8A:word16] l0800_789A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7894:
	branch dx_560 >=u Mem557[ds_395:0x4E88:word16] l0800_78B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78B3:
	Mem570[ds_395:0x4E8A:word16] = 0x0000
	Mem571[ds_395:0x4E88:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_789A:
	ui32 ax_dx_971 = SEQ(Mem557[ds_395:0x4680:word16], Mem557[ds_395:0x467E:word16]) - SEQ(Mem557[ds_395:0x2A05:word16], Mem557[ds_395:0x2A03:word16])
	Mem581[ds_395:0x4E88:word16] = v34_580
	ui32 v35_v34_973 = SEQ(Mem581[ds_395:0x4E8A:word16], Mem557[ds_395:0x4E88:word16]) - ax_dx_971
	Mem585[ds_395:0x4E8A:word16] = SLICE(v35_v34_973, word16, 16)
	word16 v34_580 = (word16) v35_v34_973
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78BF:
	branch Mem588[ds_395:0x2A21:word16] != 0x0002 l0800_78D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78C6:
	word16 v39_591 = Mem588[ds_395:0x4E88:word16] + 0x0002
	Mem592[ds_395:0x4E88:word16] = v39_591
	Mem596[ds_395:0x4E8A:word16] = Mem592[ds_395:0x4E8A:word16] + (v39_591 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_78D0:
	Mem610[ss:sp_189 + 0x0002:word16] = Mem599[ds_395:0x29E1:word16]
	Mem613[ss:sp_189:word16] = Mem610[ds_395:0x29DF:word16]
	word16 dx_617
	int32 dx_ax_975 = SEQ(dx_617, fn0800_AD2F(ds_395, Mem613[ss:sp_189:segptr32], out dx_617)) - SEQ(Mem613[ds_395:0x4660:word16], Mem613[ds_395:0x465E:word16])
	Mem628[ds_395:0x2A05:word16] = SLICE(dx_ax_975, word16, 16)
	Mem629[ds_395:0x2A03:word16] = (word16) dx_ax_975
	Mem632[ss:sp_189 + 0x0002:word16] = 0x0000
	word16 dx_634 = Mem632[ds_395:0x465E:word16]
	Mem641[ss:sp_189:word16] = Mem632[ds_395:0x4660:word16] + (dx_634 <u 0x0008)
	Mem643[ss:sp_189 - 0x0002:word16] = dx_634 + 0x0008
	Mem646[ss:sp_189 - 0x0004:word16] = Mem643[ds_395:0x29E1:word16]
	Mem649[ss:sp_189 - 0x0006:word16] = Mem646[ds_395:0x29DF:word16]
	fn0800_ACB3(ds_395, Mem649[ss:sp_189 - 0x0006:word16], Mem649[ss:sp_189 - 0x0004:word16], Mem649[ss:sp_189 + 0x0002:word16], out cx_1072, out dx_1073, out bx_1074)
	Mem662[ss:sp_189 + 0x0002:word16] = Mem649[ds_395:0x29E1:word16]
	Mem665[ss:sp_189:word16] = Mem662[ds_395:0x29DF:word16]
	word16 dx_667 = Mem665[ds_395:0x2A03:word16]
	Mem674[ss:sp_189 - 0x0002:word16] = Mem665[ds_395:0x2A05:word16] - (dx_667 <u 0x0012)
	Mem676[ss:sp_189 - 0x0004:word16] = dx_667 - 0x0012
	selector ds_681
	fn0800_409C(ds_395, Mem676[ss:sp_189 - 0x0004:word16], Mem676[ss:sp_189 - 0x0002:word16], Mem676[ss:sp_189:word16], Mem676[ss:sp_189 + 0x0002:word16], out dx_1075, out ds_681, out Top_1076)
	Mem693[ss:sp_189 + 0x0002:word16] = Mem676[ds_681:0x29E1:word16]
	Mem696[ss:sp_189:word16] = Mem693[ds_681:0x29DF:word16]
	Mem699[ss:sp_189 - 0x0002:word16] = Mem696[ds_681:0x2E4B:word16]
	selector ds_704
	fn0800_401E(ds_681, Mem699[ss:sp_189 - 0x0002:word16], Mem699[ss:sp_189:word16], Mem699[ss:sp_189 + 0x0002:word16], out cx_1077, out dx_1078, out bx_1079, out ds_704, out Top_1080)
	Mem716[ss:sp_189 + 0x0002:word16] = Mem699[ds_704:0x29E1:word16]
	Mem719[ss:sp_189:word16] = Mem716[ds_704:0x29DF:word16]
	Mem722[ss:sp_189 - 0x0002:word16] = Mem719[ds_704:0x2E49:word16]
	selector ds_727
	word16 ax_723 = fn0800_401E(ds_704, Mem722[ss:sp_189 - 0x0002:word16], Mem722[ss:sp_189:word16], Mem722[ss:sp_189 + 0x0002:word16], out cx_1081, out dx_1082, out bx_1083, out ds_727, out Top_1084)
	Mem739[ss:sp_189 + 0x0002:word16] = Mem722[ds_727:0x29E1:word16]
	Mem742[ss:sp_189:word16] = Mem739[ds_727:0x29DF:word16]
	Mem746[ss:sp_189 - 0x0002:word16] = DPB(ax_723, Mem742[ds_727:0x4E88:byte], 0)
	selector ds_754
	word16 ax_747 = fn0800_4047(ds_727, Mem746[ss:sp_189 - 0x0002:byte], Mem746[ss:sp_189:segptr32], out cx_1085, out dx_1086, out bx_1087, out di_1088, out ds_754, out Top_1089)
	Mem763[ss:sp_189 + 0x0002:word16] = Mem746[ds_754:0x29E1:word16]
	Mem766[ss:sp_189:word16] = Mem763[ds_754:0x29DF:word16]
	Mem770[ss:sp_189 - 0x0002:word16] = DPB(ax_747, Mem766[ds_754:0x29F7:byte], 0)
	selector ds_778
	fn0800_4047(ds_754, Mem770[ss:sp_189 - 0x0002:byte], Mem770[ss:sp_189:segptr32], out cx_1090, out dx_1091, out bx_1092, out di_1093, out ds_778, out Top_1094)
	Mem786[ss:sp_189 + 0x0002:word16] = 0x0000
	ui32 ax_dx_977 = SEQ(Mem786[ds_778:0x4660:word16], Mem786[ds_778:0x465E:word16]) + SEQ(Mem786[ds_778:0x2A05:word16], Mem786[ds_778:0x2A03:word16])
	Mem795[ss:sp_189:word16] = SLICE(ax_dx_977, word16, 16)
	Mem797[ss:sp_189 - 0x0002:word16] = (word16) ax_dx_977
	Mem800[ss:sp_189 - 0x0004:word16] = Mem797[ds_778:0x29E1:word16]
	Mem803[ss:sp_189 - 0x0006:word16] = Mem800[ds_778:0x29DF:word16]
	fn0800_ACB3(ds_778, Mem803[ss:sp_189 - 0x0006:word16], Mem803[ss:sp_189 - 0x0004:word16], Mem803[ss:sp_189 + 0x0002:word16], out cx_1095, out dx_1096, out bx_1097)
	Mem816[ss:sp_189 + 0x0002:word16] = 0x0000
	ui32 ax_dx_979 = SEQ(Mem816[ds_778:0x4664:word16], Mem816[ds_778:0x4662:word16]) + SEQ(Mem816[ds_778:0x4680:word16], Mem816[ds_778:0x467E:word16])
	Mem825[ss:sp_189:word16] = SLICE(ax_dx_979, word16, 16)
	Mem827[ss:sp_189 - 0x0002:word16] = (word16) ax_dx_979
	Mem830[ss:sp_189 - 0x0004:word16] = Mem827[ds_778:0x29E5:word16]
	Mem833[ss:sp_189 - 0x0006:word16] = Mem830[ds_778:0x29E3:word16]
	fn0800_ACB3(ds_778, Mem833[ss:sp_189 - 0x0006:word16], Mem833[ss:sp_189 - 0x0004:word16], Mem833[ss:sp_189 + 0x0002:word16], out cx_1098, out dx_1099, out bx_1100)
	Mem851[ss:sp_189 + 0x0002:word16] = Mem833[ss:bp_181 - 0x0014:word16]
	Mem854[ss:sp_189:word16] = Mem851[ss:bp_181 - 0x0016:word16]
	selector ds_858
	fn0800_4346(ds_778, Mem854[ss:sp_189 + 0x0002:word16], out cx_1101, out dx_1102, out bx_1103, out ds_858)
	Mem869[ss:sp_189 + 0x0002:word16] = Mem854[ss:bp_181 - 0x0010:word16]
	Mem872[ss:sp_189:word16] = Mem869[ss:bp_181 - 0x0012:word16]
	selector ds_876
	fn0800_4346(ds_858, Mem872[ss:sp_189 + 0x0002:word16], out cx_1104, out dx_1105, out bx_1106, out ds_876)
	Mem887[ss:sp_189 + 0x0002:word16] = Mem872[ss:bp_181 - 0x000C:word16]
	Mem890[ss:sp_189:word16] = Mem887[ss:bp_181 - 0x000E:word16]
	selector ds_894
	fn0800_4346(ds_876, Mem890[ss:sp_189 + 0x0002:word16], out cx_1107, out dx_1108, out bx_1109, out ds_894)
	Mem905[ss:sp_189 + 0x0002:word16] = Mem890[ss:bp_181 - 0x0008:word16]
	Mem908[ss:sp_189:word16] = Mem905[ss:bp_181 - 0x000A:word16]
	selector ds_912
	fn0800_4346(ds_894, Mem908[ss:sp_189 + 0x0002:word16], out cx_1110, out dx_1111, out bx_1112, out ds_912)
	Mem923[ss:sp_189 + 0x0002:word16] = Mem908[ss:bp_181 - 0x0004:word16]
	Mem926[ss:sp_189:word16] = Mem923[ss:bp_181 - 0x0006:word16]
	word16 bx_928
	word16 cx_929
	fn0800_4346(ds_912, Mem926[ss:sp_189 + 0x0002:word16], out cx_929, out dx_1002, out bx_928, out ds)
	Mem940[ss:sp_189 + 0x0002:word16] = ds
	Mem943[ss:sp_189:word16] = 0x223C
	fn0800_B2EF(cx_929, dx_1002, bx_928, ds, Mem943[ss:sp_189:word16], Mem943[ss:sp_189 + 0x0002:word16], out si_1113, out di_1114)
	sp_10 = sp_189 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7631:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7628:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_79FD:
	word16 si_957 = Mem956[ss:sp_10:word16]
	bpOut = Mem956[ss:bp_181:word16]
	siOut = si_957
	dsOut = ds
	return dx_1002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_75EA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_7A02(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_7A02_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7A02:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C1A:
	word16 ax_21 = Mem20[ds:0x467C:word16]
	word16 dx_22 = Mem20[ds:0x467A:word16]
	branch ax_21 >=u Mem20[ds:0x4680:word16] l0800_7C2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C2A:
	branch ax_21 != Mem20[ds:0x4680:word16] l0800_7C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C2C:
	branch dx_22 >=u Mem20[ds:0x467E:word16] l0800_7C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C35:
	Mem33[ds:0x2E43:word16] = Mem20[ds:0x2E43:word16] >>u 0x10 - Mem20[ds:0x2E45:byte]
	branch Mem33[ds:0x2E45:word16] != 0x0000 l0800_7C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C46:
	branch Mem33[ds:0x4E82:word16] == 0x0000 l0800_7C57
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C4D:
	ax_21 = (word16) fn0800_8624(ds, SLICE(DPB(ax_21, Mem33[ds:0x2E43:byte], 0), byte, 0), out di_57, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C57:
	branch Mem67[ds:0x2E45:word16] >u 0x0008 l0800_7C65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C5E:
	branch Mem67[ds:0x4E82:word16] == 0x0000 l0800_7C73
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C65:
	ax_21 = (word16) fn0800_8624(ds, SLICE(Mem67[ds:0x2E43:word16] >>u 0x08, byte, 0), out di_89, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C73:
	dsOut = ds
	return (byte) ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7A02_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C32:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C27:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7A19:
	fn0800_43D4(0x284F, ds, 0x0010)
	fn0800_43D4(0x278F, ds, 0x0010)
	fn0800_43D4(0x290F, ds, 0x0010)
	ds = fn0800_7FDC(ds)
	fn0800_ACB3(ds, Mem195[ds:0x29E3:word16], Mem192[ds:0x29E5:word16], 0x0000, out cx_851, out dx_852, out bx_853)
	fn0800_441C(ds, 0x290F, 0x0010)
	fn0800_441C(ds, 0x284F, 0x0010)
	fn0800_441C(ds, 0x278F, 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x290F), 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x284F), 0x0010)
	fn0800_83A1(ds, SEQ(ds, 0x278F), 0x0010)
	fn0800_8489(ds, Mem323[ds:0x466A:word16], 0x0010)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BC0:
	word16 ax_336 = Mem335[ds:0x466A:word16]
	word16 dx_337 = Mem335[ds:0x466C:word16]
	word16 v18_338 = Mem335[ds:0x466A:word16] - 0x0001
	Mem339[ds:0x466A:word16] = v18_338
	Mem343[ds:0x466C:word16] = Mem339[ds:0x466C:word16] - (v18_338 <u 0x0000)
	word16 ax_344 = ax_336 | dx_337
	branch ax_344 == 0x0000 l0800_7BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BD8:
	branch Mem343[ds:0x2E45:word16] != 0x0000 l0800_7BFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BDF:
	word16 si_350 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BF5:
	branch Mem354[ds:0x4E82:word16] != 0x0000 l0800_7BE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BE3:
	ax_344 = (word16) fn0800_8624(ds, SLICE(DPB(ax_344, Mem354[ds:si_350 + 0x0000:byte], 0), byte, 0), out di_857, out ds)
	Mem383[ds:0x4E82:word16] = Mem367[ds:0x4E82:word16] - 0x0001
	si_350 = si_350 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BFC:
	word16 v29_387 = Mem386[ds:0x29F7:word16] + 0x0001
	Mem388[ds:0x29F7:word16] = v29_387
	Mem392[ds:0x29F9:word16] = Mem388[ds:0x29F9:word16] + (v29_387 <u 0x0000)
	fn0800_AD2F(ds, SEQ(Mem392[ds:0x29E5:word16], Mem400[ds:0x29E3:word16]), out dx_856)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BD5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7ACB:
	word16 ax_426 = fn0800_3E27(ds, Mem422[ds:0x29DB:word16], Mem343[ds:0x29DD:word16], out cx_854, out dx_855, out di_429, out ds, out Top_433)
	Mem439[ds:0x2E47:word16] = ax_426
	word16 v25_440 = Mem439[ds:0x467A:word16] + ax_426
	Mem441[ds:0x467A:word16] = v25_440
	Mem445[ds:0x467C:word16] = Mem441[ds:0x467C:word16] + (v25_440 <u 0x0000)
	fn0800_8407(ds, Mem451[ds:0x2E47:word16], SEQ(ds, 0x290F))
	branch Mem454[ds:0x2E47:word16] == 0x0000 l0800_7B56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7AFB:
	branch Mem454[ds:0x2E45:word16] == 0x0000 l0800_7B32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B32:
	word16 ax_471 = Mem470[ds:0x2E47:word16]
	Mem473[ds:0x2E47:word16] = Mem470[ds:0x2E47:word16] - 0x0001
	branch ax_471 != 0x0000 l0800_7B24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B24:
	selector ds_483
	word16 ax_479 = (word16) fn0800_8359(ds, out ds_483)
	fn0800_8624(ds_483, SLICE(DPB(ax_479, (byte) ax_479 ^ Mem473[ds_483:0x2E4F:byte], 0), byte, 0), out di_864, out ds)
	Mem470 = Mem498
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B02:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B17:
	selector ds_527
	word16 ax_515 = Mem514[ds:0x2E47:word16]
	Mem517[ds:0x2E47:word16] = Mem514[ds:0x2E47:word16] - 0x0001
	branch ax_515 != 0x0000 l0800_7B04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B04:
	Mem539[ds_527:Mem517[ds_527:0x4E82:word16] + 0x4682:byte] = (byte) (word16) fn0800_8359(ds, out ds_527) ^ Mem517[ds_527:0x2E4F:byte]
	Mem541[ds_527:0x4E82:word16] = Mem539[ds_527:0x4E82:word16] + 0x0001
	ds = ds_527
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B22:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B3D:
	branch (Mem544[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B52:
	Mem549[ds:0x2E4F:word16] = Mem544[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B45:
	Mem556[ds:0x2E4F:word16] = Mem544[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B56:
	branch (Mem558[ds:0x466A:word16] | Mem558[ds:0x466C:word16]) == 0x0000 l0800_7BC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7B5F:
	selector ds_579
	Mem589[ds_579:0x2E29:word16] = fn0800_3E27(ds, Mem571[ds:0x29DB:word16], Mem558[ds:0x29DD:word16], out cx_858, out dx_859, out di_860, out ds_579, out Top_861)
	selector ds_600
	Mem610[ds_600:0x2E2B:word16] = fn0800_3E27(ds_579, Mem592[ds_579:0x29DB:word16], Mem589[ds_579:0x29DD:word16], out cx_862, out dx_863, out di_599, out ds_600, out Top_603)
	fn0800_8407(ds_600, Mem615[ds_600:0x2E2B:word16], SEQ(ds_600, 0x284F))
	fn0800_8407(ds_600, Mem634[ds_600:0x2E29:word16], SEQ(ds_600, 0x278F))
	Mem649[ds_600:0x2E29:word16] = Mem637[ds_600:0x2E29:word16] + 0x0002
	word16 v40_651 = Mem649[ds_600:0x467A:word16] + Mem649[ds_600:0x2E29:word16]
	Mem652[ds_600:0x467A:word16] = v40_651
	Mem656[ds_600:0x467C:word16] = Mem652[ds_600:0x467C:word16] + (v40_651 <u 0x0000)
	ds = ds_600
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BB5:
	word16 ax_660 = Mem659[ds:0x2E29:word16]
	Mem662[ds:0x2E29:word16] = Mem659[ds:0x2E29:word16] - 0x0001
	branch ax_660 != 0x0000 l0800_7BB2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7BB2:
	fn0800_8359(ds, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_7C78(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_7C78_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C78:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E6D:
	word16 ax_21 = Mem20[ds:0x467C:word16]
	word16 dx_22 = Mem20[ds:0x467A:word16]
	branch ax_21 >=u Mem20[ds:0x4680:word16] l0800_7E7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7D:
	branch ax_21 != Mem20[ds:0x4680:word16] l0800_7E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7F:
	branch dx_22 >=u Mem20[ds:0x467E:word16] l0800_7E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E88:
	Mem33[ds:0x2E43:word16] = Mem20[ds:0x2E43:word16] << 0x08 - Mem20[ds:0x2E45:byte]
	branch Mem33[ds:0x2E45:word16] != 0x0000 l0800_7EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E99:
	branch Mem33[ds:0x4E82:word16] == 0x0000 l0800_7EAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EA0:
	ax_21 = (word16) fn0800_8624(ds, SLICE(DPB(ax_21, Mem33[ds:0x2E43:byte], 0), byte, 0), out di_57, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EAA:
	dsOut = ds
	return (byte) ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7C78_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E85:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E7A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7C8F:
	selector ds_122 = fn0800_7FDC(ds)
	fn0800_ACB3(ds_122, Mem107[ds_122:0x29E3:word16], Mem104[ds_122:0x29E5:word16], 0x0000, out cx_727, out dx_728, out bx_729)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DCD:
	word16 ax_124 = Mem123[ds_122:0x466A:word16]
	word16 dx_125 = Mem123[ds_122:0x466C:word16]
	word16 v17_126 = Mem123[ds_122:0x466A:word16] - 0x0001
	Mem127[ds_122:0x466A:word16] = v17_126
	Mem131[ds_122:0x466C:word16] = Mem127[ds_122:0x466C:word16] - (v17_126 <u 0x0000)
	branch (ax_124 | dx_125) == 0x0000 l0800_7DE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DE5:
	fn0800_854B(ds_122, 0x000F, 0x04)
	fn0800_8600(ds_122, SLICE(DPB(ax_144, 0x00, 0), byte, 0), out ds)
	word16 ax_169 = Mem155[ds:0x467C:word16]
	word16 dx_170 = Mem155[ds:0x467A:word16]
	branch ax_169 >u Mem155[ds:0x4680:word16] l0800_7E1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E09:
	branch ax_169 <u Mem155[ds:0x4680:word16] l0800_7E11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E0B:
	branch dx_170 >=u Mem155[ds:0x467E:word16] l0800_7E1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E1E:
	fn0800_854B(ds, 0x0000, 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E11:
	fn0800_854B(ds, 0x0001, 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E2B:
	word16 ax_187
	branch Mem212[ds:0x2E45:word16] != 0x0000 l0800_7E4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E32:
	word16 si_215 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E48:
	branch Mem219[ds:0x4E82:word16] != 0x0000 l0800_7E36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E36:
	ax_187 = (word16) fn0800_8624(ds, SLICE(DPB(ax_187, Mem219[ds:si_215 + 0x0000:byte], 0), byte, 0), out di_743, out ds)
	Mem248[ds:0x4E82:word16] = Mem232[ds:0x4E82:word16] - 0x0001
	si_215 = si_215 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7E4F:
	word16 v31_252 = Mem251[ds:0x29F7:word16] + 0x0001
	Mem253[ds:0x29F7:word16] = v31_252
	Mem257[ds:0x29F9:word16] = Mem253[ds:0x29F9:word16] + (v31_252 <u 0x0000)
	fn0800_AD2F(ds, SEQ(Mem257[ds:0x29E5:word16], Mem265[ds:0x29E3:word16]), out dx_742)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DE2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CAC:
	word16 ax_294 = fn0800_3E27(ds_122, Mem290[ds_122:0x29DB:word16], Mem131[ds_122:0x29DD:word16], out cx_730, out dx_731, out di_732, out ds_122, out Top_733)
	Mem307[ds_122:0x2E47:word16] = ax_294
	word16 v25_308 = Mem307[ds_122:0x467A:word16] + ax_294
	Mem309[ds_122:0x467A:word16] = v25_308
	Mem313[ds_122:0x467C:word16] = Mem309[ds_122:0x467C:word16] + (v25_308 <u 0x0000)
	fn0800_7EAF(ds_122, ax_294)
	branch (Mem316[ds_122:0x466A:word16] | Mem316[ds_122:0x466C:word16]) != 0x0000 l0800_7CD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CD9:
	selector ds_337
	Mem347[ds_337:0x2E29:word16] = fn0800_3E27(ds_122, Mem329[ds_122:0x29DB:word16], Mem316[ds_122:0x29DD:word16], out cx_734, out dx_735, out di_736, out ds_337, out Top_737)
	selector ds_358
	word16 ax_354 = fn0800_3E27(ds_337, Mem350[ds_337:0x29DB:word16], Mem347[ds_337:0x29DD:word16], out cx_738, out dx_739, out di_740, out ds_358, out Top_741)
	Mem367[ds_358:0x2E2B:word16] = ax_354
	branch Mem367[ds_358:0x2E29:word16] != 0x0000 l0800_7D1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D1D:
	branch Mem367[ds_358:0x2E29:word16] >=u 0x0007 l0800_7D68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D68:
	fn0800_854B(ds_358, 0x000F, 0x04)
	selector ds_395
	fn0800_8600(ds_358, SLICE(DPB(ax_378, Mem377[ds_358:0x2E29:byte] - 0x06, 0), byte, 0), out ds_395)
	word16 bx_404 = Mem390[ds_395:0x2E2B:word16]
	byte al_409 = Mem390[ds_395:(bx_404 >>u 0x08) + 0x21F2:byte]
	fn0800_854B(ds_395, DPB(DPB(DPB(DPB(ax_391, al_409, 0), 0x00, 8), Mem414[ds_395:(bx_404 >>u 0x08) + 0x21E2:byte], 0), 0x00, 8), SLICE(DPB(DPB(ax_391, al_409, 0), 0x00, 8), byte, 0))
	fn0800_8600(ds_395, SLICE(DPB(ax_423, Mem422[ds_395:0x2E2B:byte] & 0xFF, 0), byte, 0), out ds_122)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D24:
	word16 bx_451 = Mem367[ds_358:0x2E29:word16]
	byte al_452 = Mem367[ds_358:bx_451 + 0x21DB:byte]
	fn0800_854B(ds_358, DPB(DPB(DPB(DPB(ax_354, al_452, 0), 0x00, 8), Mem457[ds_358:bx_451 + 0x21D4:byte], 0), 0x00, 8), SLICE(DPB(DPB(ax_354, al_452, 0), 0x00, 8), byte, 0))
	word16 bx_473 = Mem465[ds_358:0x2E2B:word16]
	byte al_478 = Mem465[ds_358:(bx_473 >>u 0x08) + 0x21F2:byte]
	fn0800_854B(ds_358, DPB(DPB(DPB(DPB(ax_466, al_478, 0), 0x00, 8), Mem483[ds_358:(bx_473 >>u 0x08) + 0x21E2:byte], 0), 0x00, 8), SLICE(DPB(DPB(ax_466, al_478, 0), 0x00, 8), byte, 0))
	fn0800_8600(ds_358, SLICE(DPB(ax_492, Mem491[ds_358:0x2E2B:byte] & 0xFF, 0), byte, 0), out ds_122)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7D02:
	fn0800_854B(ds_358, 0x0006, 0x03)
	fn0800_8600(ds_358, SLICE(DPB(ax_526, Mem525[ds_358:0x2E2B:byte], 0), byte, 0), out ds_122)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DAC:
	Mem555[ds_122:0x2E29:word16] = Mem553[ds_122:0x2E29:word16] + 0x0002
	word16 v36_557 = Mem555[ds_122:0x467A:word16] + Mem555[ds_122:0x2E29:word16]
	Mem558[ds_122:0x467A:word16] = v36_557
	Mem562[ds_122:0x467C:word16] = Mem558[ds_122:0x467C:word16] + (v36_557 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DC2:
	word16 ax_566 = Mem565[ds_122:0x2E29:word16]
	Mem568[ds_122:0x2E29:word16] = Mem565[ds_122:0x2E29:word16] - 0x0001
	branch ax_566 != 0x0000 l0800_7DBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7DBF:
	fn0800_8359(ds_122, out ds_122)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7CD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_7EAF(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO Top
// Preserved: ax bp bx cx di ds dx es si sp
fn0800_7EAF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EAF:
	word16 si_136 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD1:
	word16 si_100 = si_136
	branch si_136 == 0x0000 l0800_7FD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7EAF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FD5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EBA:
	branch si_136 >=u 0x000C l0800_7F32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F32:
	branch (si_100 & 0x0003) != 0x0000 l0800_7EFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EFD:
	fn0800_854B(ds, 0x0000, 0x01)
	selector ds_59
	word16 ax_55 = (word16) fn0800_8359(ds, out ds_59)
	fn0800_8600(ds_59, SLICE(DPB(ax_55, (byte) ax_55 ^ Mem45[ds_59:0x2E4F:byte], 0), byte, 0), out ds)
	branch (Mem73[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F2D:
	Mem91[ds:0x2E4F:word16] = Mem73[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F20:
	Mem98[ds:0x2E4F:word16] = Mem73[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F31:
	si_100 = si_100 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F38:
	fn0800_854B(ds, 0x0017, 0x05)
	branch si_100 <u 0x0048 l0800_7F8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F8F:
	fn0800_854B(ds, si_100 - 0x000C >>u 0x0002, 0x04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FB4:
	si_136 = si_100
	branch si_100 != 0x0000 l0800_7FA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FA5:
	selector ds_146
	word16 ax_142 = (word16) fn0800_8359(ds, out ds_146)
	fn0800_8600(ds_146, SLICE(DPB(ax_142, (byte) ax_142 ^ Mem155[ds_146:0x2E4F:byte], 0), byte, 0), out ds)
	si_100 = si_100 - 0x0001
	Mem155 = Mem162
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FB8:
	branch (Mem155[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7FCD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FCD:
	Mem183[ds:0x2E4F:word16] = Mem155[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FC0:
	Mem190[ds:0x2E4F:word16] = Mem155[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F4B:
	fn0800_854B(ds, 0x000F, 0x04)
	word16 di_204 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F6C:
	branch di_204 != 0x0048 l0800_7F5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F5D:
	selector ds_216
	word16 ax_212 = (word16) fn0800_8359(ds, out ds_216)
	di_204 = fn0800_8600(ds_216, SLICE(DPB(ax_212, (byte) ax_212 ^ Mem225[ds_216:0x2E4F:byte], 0), byte, 0), out ds) + 0x0001
	Mem225 = Mem232
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F71:
	branch (Mem225[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F86:
	Mem253[ds:0x2E4F:word16] = Mem225[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F79:
	Mem260[ds:0x2E4F:word16] = Mem225[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7F8A:
	si_136 = si_100 - 0x0048
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EBF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF6:
	si_136 = si_100
	branch si_100 != 0x0000 l0800_7EC1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EC1:
	fn0800_854B(ds, 0x0000, 0x01)
	selector ds_293
	word16 ax_289 = (word16) fn0800_8359(ds, out ds_293)
	fn0800_8600(ds_293, SLICE(DPB(ax_289, (byte) ax_289 ^ Mem279[ds_293:0x2E4F:byte], 0), byte, 0), out ds)
	branch (Mem307[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7EF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF1:
	Mem325[ds:0x2E4F:word16] = Mem307[ds:0x2E4F:word16] >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EE4:
	Mem332[ds:0x2E4F:word16] = Mem307[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EF5:
	si_100 = si_100 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7EFA:
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_7FDC(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: D bp sp
fn0800_7FDC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_7FDC:
	Mem11[ds:0x466C:word16] = 0x0000
	Mem12[ds:0x466A:word16] = 0x0000
	Mem13[ds:0x2E47:word16] = 0x0000
	word16 dx_15 = Mem13[ds:0x2A0B:word16]
	Mem16[ds:0x4670:word16] = Mem13[ds:0x2A0D:word16]
	Mem17[ds:0x466E:word16] = dx_15
	fn0800_ACB3(ds, Mem38[ds:0x29E3:word16], Mem35[ds:0x29E5:word16], 0x0000, out cx_798, out dx_799, out bx_800)
	fn0800_ACB3(ds, Mem63[ds:0x29DB:word16], Mem60[ds:0x29DD:word16], 0x0000, out cx_801, out dx_802, out bx_803)
	word16 sp_133 = fp - 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82A1:
	branch (Mem79[ds:0x4676:word16] | Mem79[ds:0x4678:word16]) == 0x0000 l0800_82AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82AD:
	branch (Mem79[ds:0x4672:word16] | Mem79[ds:0x4674:word16]) == 0x0000 l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82B6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82AA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8042:
	word16 dx_94 = 0xFFFF - Mem79[ds:0x2E31:word16]
	ui32 ax_dx_633 = SEQ(0x0000 - (dx_94 <u 0x0000), dx_94) - SEQ(Mem79[ds:0x4674:word16], Mem79[ds:0x4672:word16])
	word16 ax_101 = SLICE(ax_dx_633, word16, 16)
	word16 dx_98 = (word16) ax_dx_633
	word16 wLoc04_651 = ax_101
	word16 wLoc06_652 = dx_98
	word16 ax_108 = Mem107[ds:0x4678:word16]
	word16 dx_109 = Mem107[ds:0x4676:word16]
	branch ax_108 >u ax_101 l0800_807C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8068:
	branch ax_108 <u ax_101 l0800_806F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_806A:
	branch dx_109 >=u dx_98 l0800_807C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_806F:
	wLoc04_651 = Mem107[ds:0x4678:word16]
	wLoc06_652 = Mem107[ds:0x4676:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_807C:
	word16 dx_127 = Mem124[ds:0x2E71:word16] + Mem124[ds:0x2E31:word16]
	Mem128[ds:0x2E6F:word16] = Mem124[ds:0x2E73:word16]
	Mem129[ds:0x2E6D:word16] = dx_127
	word16 sp_135 = sp_133 - 2
	Mem137[ss:sp_135:word16] = Mem129[ds:0x29E5:word16]
	Mem140[ss:sp_135 - 2:word16] = Mem137[ds:0x29E3:word16]
	Mem144[ss:sp_135 - 4:word16] = wLoc04_651
	Mem147[ss:sp_135 - 6:word16] = wLoc06_652
	word16 ax_149 = Mem147[ds:0x2E6D:word16] + Mem147[ds:0x4672:word16]
	Mem153[ss:sp_135 - 8:word16] = Mem147[ds:0x2E73:word16]
	Mem155[ss:sp_135 - 10:word16] = ax_149
	fn0800_4110(ds, Mem155[ss:sp_135 - 10:word16], Mem155[ss:sp_135 - 8:word16], Mem155[ss:sp_135 - 6:word16], Mem155[ss:sp_135 - 4:word16], Mem155[ss:sp_135 - 2:word16], Mem155[ss:sp_135:word16], out si_163, out di_804, out ds)
	Mem173[ds:0x4676:word16] = v27_172
	ui32 v28_v27_635 = SEQ(Mem173[ds:0x4678:word16], Mem155[ds:0x4676:word16]) - SEQ(wLoc04_651, wLoc06_652)
	Mem177[ds:0x4678:word16] = SLICE(v28_v27_635, word16, 16)
	Mem179[ds:0x4672:word16] = v29_178
	ui32 v30_v29_637 = SEQ(Mem179[ds:0x4674:word16], Mem177[ds:0x4672:word16]) + SEQ(wLoc04_651, wLoc06_652)
	Mem183[ds:0x4674:word16] = SLICE(v30_v29_637, word16, 16)
	word16 ax_184 = Mem183[ds:0x2E6F:word16]
	word16 dx_186 = Mem183[ds:0x2E6D:word16] + Mem183[ds:0x4672:word16]
	Mem187[ds:0x2E67:word16] = ax_184
	Mem188[ds:0x2E65:word16] = dx_186
	Mem189[ds:0x2E6B:word16] = ax_184
	Mem190[ds:0x2E69:word16] = dx_186
	word16 sp_169 = sp_135 + 0x0002
	word16 v27_172 = (word16) v28_v27_635
	word16 v29_178 = (word16) v30_v29_637
	word16 ax_191 = Mem190[ds:0x4670:word16]
	word16 dx_192 = Mem190[ds:0x466E:word16]
	branch ax_191 <=u Mem190[ds:0x4674:word16] l0800_80ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80ED:
	branch ax_191 <u Mem190[ds:0x4674:word16] l0800_80F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80EF:
	branch dx_192 <u Mem190[ds:0x4672:word16] l0800_80F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80F8:
	word16 dx_202 = Mem190[ds:0x2E6D:word16] + Mem190[ds:0x466E:word16]
	Mem204[ds:0x2E67:word16] = Mem190[ds:0x2E6F:word16]
	Mem205[ds:0x2E65:word16] = dx_202
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80F5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_80EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81E9:
	branch Mem207[ds:0x2E65:word16] - 0x0001 <=u Mem207[ds:0x2E6D:word16] l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81F3:
	branch Mem207[ds:0x466C:word16] >=u 0x0000 l0800_81FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FD:
	branch Mem207[ds:0x466C:word16] != 0x0000 l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FF:
	branch Mem207[ds:0x466A:word16] >=u 0xFFFE l0800_8209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8206:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_810D:
	fn0800_8832(ds)
	branch Mem207[ds:0x2E29:word16] <u 0x0002 l0800_8193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8193:
	word16 sp_234 = sp_811 - 2
	Mem237[ss:sp_234:word16] = 0x0001
	fn0800_89A8(ds, Mem237[ss:sp_234:word16])
	Mem251[ds:0x2E47:word16] = Mem237[ds:0x2E47:word16] + 0x0001
	Mem253[ds:0x465C:word16] = Mem251[ds:0x465C:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8117:
	branch Mem207[ds:0x2E6D:word16] + Mem207[ds:0x2E29:word16] <=u Mem207[ds:0x2E65:word16] l0800_813F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8124:
	branch (Mem207[ds:0x466A:word16] | Mem207[ds:0x466C:word16]) == 0x0000 l0800_8130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8130:
	Mem271[ds:0x2E29:word16] = Mem207[ds:0x2E65:word16] - Mem207[ds:0x2E6D:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_813F:
	word16 sp_273 = sp_811 - 2
	Mem276[ss:sp_273:word16] = ds
	Mem279[ss:sp_273 - 2:word16] = 0x290F
	Mem282[ss:sp_273 - 4:word16] = Mem279[ds:0x2E47:word16]
	selector ds_287 = fn0800_831D(ds, Mem282[ss:sp_273 - 4:word16], Mem282[ss:sp_273 - 2:segptr32])
	Mem297[ss:sp_273:word16] = ds_287
	Mem300[ss:sp_273 - 2:word16] = 0x278F
	Mem305[ss:sp_273 - 4:word16] = Mem300[ds_287:0x2E29:word16] - 0x0002
	selector ds_310 = fn0800_831D(ds_287, Mem305[ss:sp_273 - 4:word16], Mem305[ss:sp_273 - 2:segptr32])
	Mem321[ss:sp_273:word16] = ds_310
	Mem324[ss:sp_273 - 2:word16] = 0x284F
	Mem329[ss:sp_273 - 4:word16] = Mem324[ds_310:0x2E2B:word16] - 0x0001
	ds = fn0800_831D(ds_310, Mem329[ss:sp_273 - 4:word16], Mem329[ss:sp_273 - 2:segptr32])
	Mem346[ss:sp_273:word16] = Mem329[ds:0x2E29:word16]
	fn0800_89A8(ds, Mem346[ss:sp_273:word16])
	word16 v40_358 = Mem346[ds:0x466A:word16] + 0x0001
	Mem359[ds:0x466A:word16] = v40_358
	Mem363[ds:0x466C:word16] = Mem359[ds:0x466C:word16] + (v40_358 <u 0x0000)
	Mem364[ds:0x2E47:word16] = 0x0000
	Mem367[ds:0x465C:word16] = Mem364[ds:0x465C:word16] + Mem364[ds:0x2E29:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81A5:
	sp_169 = sp_811
	sp_811 = sp_169
	branch Mem370[ds:0x465C:word16] <u 0x0400 l0800_81E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_81AD:
	word16 v45_374 = Mem370[ds:0x4666:word16] + Mem370[ds:0x465C:word16]
	Mem375[ds:0x4666:word16] = v45_374
	Mem379[ds:0x4668:word16] = Mem375[ds:0x4668:word16] + (v45_374 <u 0x0000)
	word16 sp_382 = sp_811 - 2
	Mem384[ss:sp_382:word16] = Mem379[ds:0x4680:word16]
	Mem387[ss:sp_382 - 2:word16] = Mem384[ds:0x467E:word16]
	word16 dx_395
	word16 ax_394 = fn0800_8F18(0x0063, Mem387[ds:0x4668:word16], 0x0000, Mem387[ds:0x4666:word16], out ch_808, out dx_395)
	Mem402[ss:sp_382 - 4:word16] = dx_395
	Mem404[ss:sp_382 - 6:word16] = ax_394
	word16 bx_406
	word16 cx_407
	word16 dx_408
	word16 ax_405 = fn0800_8BC2(Mem404[ss:sp_382 - 6:word16], Mem404[ss:sp_382 - 4:word16], Mem404[ss:sp_382 - 2:word16], Mem404[ss:sp_382:word16], out cx_407, out dx_408, out bx_406)
	word16 sp_409 = <invalid>
	Mem416[ss:sp_409 + 0x0006:word16] = dx_408
	Mem418[ss:sp_409 + 0x0004:word16] = ax_405
	Mem420[ss:sp_409 + 0x0002:word16] = ds
	Mem423[ss:sp_409:word16] = 0x2244
	fn0800_B2EF(cx_407, dx_408, bx_406, ds, Mem423[ss:sp_409:word16], Mem423[ss:sp_409 + 2:word16], out si_809, out di_810)
	Mem434[ds:0x465C:word16] = 0x0000
	sp_169 = sp_409 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_812D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8209:
	word16 ax_439 = Mem207[ds:0x2E69:word16] - Mem207[ds:0x2E6D:word16]
	Mem443[ds:0x4674:word16] = 0x0000 - (ax_439 <u 0x0000)
	Mem444[ds:0x4672:word16] = ax_439
	word16 ax_447 = Mem444[ds:0x2E6D:word16] - Mem444[ds:0x2E71:word16]
	word16 ax_451 = ax_447 - Mem444[ds:0x2E31:word16]
	word16 ax_465 = Mem463[ds:0x2E71:word16] + ax_451
	word16 sp_476 = sp_811 - 2
	Mem477[ss:sp_476:word16] = Mem463[ds:0x2E6D:word16] - ax_465 + Mem463[ds:0x4672:word16]
	Mem480[ss:sp_476 - 2:word16] = Mem477[ds:0x2E73:word16]
	Mem482[ss:sp_476 - 4:word16] = ax_465
	Mem485[ss:sp_476 - 6:word16] = Mem482[ds:0x2E73:word16]
	Mem488[ss:sp_476 - 8:word16] = Mem485[ds:0x2E71:word16]
	fn0800_B0F3(Mem488[ss:sp_476 - 8:word16], Mem488[ss:sp_476 - 6:word16], Mem488[ss:sp_476 - 4:word16], Mem488[ss:sp_476 - 2:word16], Mem488[ss:sp_476:word16])
	word16 dx_454 = 0x0000 - (ax_447 <u 0x0000) - (ax_451 <u 0x0000)
	sp_133 = sp_476 + 0x0002
	branch Mem488[ds:0x2E65:word16] <u Mem488[ds:0x2E69:word16] l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8269:
	word16 dx_504 = Mem488[ds:0x2E65:word16]
	branch Mem488[ds:0x2E67:word16] != Mem488[ds:0x2E6B:word16] l0800_8285
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8276:
	branch dx_504 != Mem488[ds:0x2E69:word16] l0800_8285
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_827C:
	branch (Mem488[ds:0x4676:word16] | Mem488[ds:0x4678:word16]) == 0x0000 l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8285:
	branch Mem488[ds:0x466C:word16] != 0x0000 l0800_8293
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_828C:
	branch Mem488[ds:0x466A:word16] == 0xFFFE l0800_82B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82B9:
	word16 dx_523 = Mem521[ds:0x2E65:word16]
	branch Mem521[ds:0x2E67:word16] != Mem521[ds:0x2E6B:word16] l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82C6:
	branch dx_523 != Mem521[ds:0x2E69:word16] l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82CC:
	branch (Mem521[ds:0x4676:word16] | Mem521[ds:0x4678:word16]) != 0x0000 l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82D5:
	branch Mem521[ds:0x466C:word16] != 0x0000 l0800_82E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82DC:
	branch Mem521[ds:0x466A:word16] == 0xFFFE l0800_82ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82E3:
	Mem542[ds:0x2E47:word16] = Mem521[ds:0x2E47:word16] + Mem521[ds:0x4672:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_82ED:
	word16 sp_547 = sp_133 - 2
	Mem553[ss:sp_547:word16] = ds
	Mem556[ss:sp_547 - 2:word16] = 0x290F
	Mem559[ss:sp_547 - 4:word16] = Mem556[ds:0x2E47:word16]
	selector ds_564 = fn0800_831D(ds, Mem559[ss:sp_547 - 4:word16], Mem559[ss:sp_547 - 2:segptr32])
	word16 v18_573 = Mem559[ds_564:0x466A:word16] + 0x0001
	Mem574[ds_564:0x466A:word16] = v18_573
	Mem578[ds_564:0x466C:word16] = Mem574[ds_564:0x466C:word16] + (v18_573 <u 0x0000)
	Mem583[ss:sp_547:word16] = 0x0000
	Mem585[ss:sp_547 - 2:word16] = 0x0000
	Mem587[ss:sp_547 - 4:word16] = 0x0000
	Mem590[ss:sp_547 - 6:word16] = Mem587[ds_564:0x29DD:word16]
	Mem593[ss:sp_547 - 8:word16] = Mem590[ds_564:0x29DB:word16]
	fn0800_ACB3(ds_564, Mem593[ss:sp_547 - 8:word16], Mem593[ss:sp_547 - 6:word16], Mem593[ss:sp_547:word16], out cx_805, out dx_806, out bx_807)
	return ds_564
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_7FDC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8293:
	Mem619[ds:0x466E:word16] = v36_618
	ui32 v37_v36_639 = SEQ(Mem619[ds:0x4670:word16], Mem488[ds:0x466E:word16]) - SEQ(dx_454, ax_451)
	Mem623[ds:0x4670:word16] = SLICE(v37_v36_639, word16, 16)
	word16 v36_618 = (word16) v37_v36_639
// DataOut:
// DataOut (flags):
// SymbolicIn:



selector fn0800_831D(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp si sp
fn0800_831D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_831D:
	word16 ax_15
	branch wArg02 <=u 0x0001 l0800_8332
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8332:
	ax_15 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8329:
	ax_15 = fn0800_0C08(wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8334:
	selector es_38 = SLICE(ptrArg04, selector, 16)
	word16 bx_37 = (word16) (ptrArg04 + ax_15 *s 0x000C)
	word16 v14_39 = Mem33[es_38:bx_37:word16] + 0x0001
	Mem40[es_38:bx_37:word16] = v14_39
	Mem44[es_38:bx_37 + 0x0002:word16] = Mem40[es_38:bx_37 + 0x0002:word16] + (v14_39 <u 0x0000)
	selector ds_62
	fn0800_401E(ds, wArg02, Mem51[ds:0x29DB:word16], Mem44[ds:0x29DD:word16], out cx_91, out dx_92, out bx_93, out ds_62, out Top_94)
	return ds_62
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_831D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8359(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8359_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8359:
	selector ds_25
	word16 ax_18 = fn0800_3DCF(ds, SEQ(Mem7[ds:0x29E5:word16], Mem14[ds:0x29E3:word16]), out ch_70, out dx_71, out di_72, out ds_25, out Top_73)
	byte al_31 = (byte) ax_18
	word16 ax_45 = Mem32[ds_25:((DPB(DPB(ax_18, Mem32[ds_25:0x2E4B:byte] ^ al_31, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem32[ds_25:0x2E4B:word16] >>u 0x08
	Mem46[ds_25:0x2E4B:word16] = ax_45
	word16 v17_47 = Mem46[ds_25:0x29FF:word16] + 0x0001
	Mem48[ds_25:0x29FF:word16] = v17_47
	Mem52[ds_25:0x2A01:word16] = Mem48[ds_25:0x2A01:word16] + (v17_47 <u 0x0000)
	dsOut = ds_25
	return (byte) DPB(ax_45, al_31, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8359_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_83A1(selector ds, word16 wArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp di si sp
fn0800_83A1_entry:
	selector psegArg04_131 = SLICE(ptrArg02, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83A1:
	word16 di_17 = wArg06
	word16 si_18 = wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83C4:
	word16 wArg02_110 = SLICE(ptrArg02, word16, 0)
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_83B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83B0:
	branch Mem16[SLICE(ptrArg02, selector, 16):(word16) (ptrArg02 + si_18 *s 0x000C) + 0x000A:word16] != 0x0000 l0800_83CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83C3:
	di_17 = di_17 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83CB:
	fn0800_8489(ds, di_17, 0x0005)
	word16 si_60 = 0x0000
	word16 wLoc04_111 = wArg02_110 + 0x000A
	branch di_17 <=u 0x0000 l0800_8401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_83E5:
	fn0800_8489(ds, Mem71[psegArg04_131:wLoc04_111:word16], 0x0004)
	wLoc04_111 = wLoc04_111 + 0x000C
	si_60 = si_60 + 0x0001
	branch si_60 <u di_17 l0800_83E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8401:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_83A1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8407(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_8407_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8407:
	word16 ax_19
	branch wArg02 <=u 0x0001 l0800_8420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8420:
	ax_19 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8417:
	ax_19 = fn0800_0C08(wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8422:
	selector es_44 = SLICE(ptrArg04, selector, 16)
	word16 bx_41 = (word16) (ptrArg04 + ax_19 *s 0x000C)
	fn0800_8489(ds, Mem48[es_44:bx_41 + 0x0006:word16], Mem35[es_44:bx_41 + 0x000A:word16])
	byte bLoc04_104 = SLICE(ax_19, byte, 0)
	branch ax_19 <=u 0x0001 l0800_845F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8445:
	fn0800_8489(ds, wArg02 - (0x0001 << bLoc04_104 - 0x01), ax_19 - 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_845F:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8407_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_8465_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8465:
	branch Mem7[ds:0x2A21:word16] != 0x0002 l0800_847F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_847F:
	fn0800_8489(ds, wArg02, wArg04)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8475:
	fn0800_854B(ds, wArg02, SLICE(wArg04, byte, 0))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8465_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8489(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: bp bx cx di ds dx es si sp
fn0800_8489_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8489:
	word16 di_114 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_853A:
	wArg04 = wArg04 - 0x0001
	branch wArg04 == 0x0000 l0800_8547
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8547:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8489_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8544:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8494:
	Mem35[ds:0x2E43:word16] = Mem21[ds:0x2E43:word16] >>u 0x0001
	branch (di_114 & 0x0001) == 0x0000 l0800_84A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_849E:
	Mem41[ds:0x2E43:word16] = Mem35[ds:0x2E43:word16] | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84A4:
	Mem49[ds:0x2E45:word16] = Mem47[ds:0x2E45:word16] + 0x0001
	di_114 = di_114 >>u 0x0001
	word16 ax_50 = Mem49[ds:0x2E45:word16]
	branch ax_50 == 0x0010 l0800_84B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84B5:
	selector ds_65
	fn0800_8624(ds, SLICE(DPB(ax_50, Mem49[ds:0x2E43:byte], 0), byte, 0), out di_252, out ds_65)
	word16 ax_105 = (word16) fn0800_8624(ds_65, SLICE(Mem58[ds_65:0x2E43:word16] >>u 0x08, byte, 0), out di_114, out ds)
	word16 si_100 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84E3:
	branch Mem95[ds:0x4E82:word16] != 0x0000 l0800_84D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84D1:
	ax_105 = (word16) fn0800_8624(ds, SLICE(DPB(ax_105, Mem95[ds:si_100 + 0x0000:byte], 0), byte, 0), out di_114, out ds)
	Mem124[ds:0x4E82:word16] = Mem108[ds:0x4E82:word16] - 0x0001
	si_100 = si_100 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84EA:
	word16 ax_126 = Mem95[ds:0x2A01:word16]
	word16 dx_127 = Mem95[ds:0x29FF:word16]
	branch ax_126 <u Mem95[ds:0x2A05:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84F7:
	branch ax_126 >u Mem95[ds:0x2A05:word16] l0800_84FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84F9:
	branch dx_127 <=u Mem95[ds:0x2A03:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84FF:
	ui32 ax_dx_180 = SEQ(Mem95[ds:0x2A01:word16], Mem95[ds:0x29FF:word16]) - SEQ(Mem95[ds:0x2A05:word16], Mem95[ds:0x2A03:word16])
	word16 dx_137 = (word16) ax_dx_180
	word16 ax_140 = SLICE(ax_dx_180, word16, 16)
	branch ax_140 <u Mem95[ds:0x4E8A:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8514:
	branch ax_140 >u Mem95[ds:0x4E8A:word16] l0800_851C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8516:
	branch dx_137 <=u Mem95[ds:0x4E88:word16] l0800_8532
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_851C:
	ui32 ax_dx_182 = SEQ(Mem95[ds:0x2A01:word16], Mem95[ds:0x29FF:word16]) - SEQ(Mem95[ds:0x2A05:word16], Mem95[ds:0x2A03:word16])
	Mem155[ds:0x4E8A:word16] = SLICE(ax_dx_182, word16, 16)
	Mem156[ds:0x4E88:word16] = (word16) ax_dx_182
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8532:
	Mem161[ds:0x2E45:word16] = 0x0000
	Mem162[ds:0x2E43:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_84B2:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_854B(selector ds, word16 wArg02, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO ax cx Top
// Preserved: bp bx di ds dx es si sp
fn0800_854B_entry:
	byte bArg05_182 = SLICE(wArg04, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_854B:
	word16 di_160 = 0x0001 << bArg04 - 0x01
	byte bArg05_185 = SEQ(bArg05_182, bArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85EF:
	bArg05_185 = SLICE(bArg05_185 - 0x0001, byte, 8) (alias)
	branch bArg05_185 == 0x0000 l0800_85FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85FC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_854B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85F9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_855D:
	Mem39[ds:0x2E43:word16] = Mem25[ds:0x2E43:word16] << 0x0001
	branch (wArg02 & di_160) == 0x0000 l0800_856A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8566:
	Mem45[ds:0x2E43:word16] = Mem39[ds:0x2E43:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_856A:
	Mem52[ds:0x2E45:word16] = Mem50[ds:0x2E45:word16] + 0x0001
	di_160 = di_160 >>u 0x0001
	word16 ax_53 = Mem52[ds:0x2E45:word16]
	branch ax_53 != 0x0008 l0800_85EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8578:
	word16 ax_62 = (word16) fn0800_8624(ds, SLICE(DPB(ax_53, Mem52[ds:0x2E43:byte], 0), byte, 0), out di_160, out ds)
	word16 si_75 = 0x4682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8598:
	bArg05_185 = SLICE(bArg05_185, byte, 8) (alias)
	branch Mem79[ds:0x4E82:word16] != 0x0000 l0800_8586
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8586:
	ax_62 = (word16) fn0800_8624(ds, SLICE(DPB(ax_62, Mem79[ds:si_75 + 0x0000:byte], 0), byte, 0), out di_160, out ds)
	Mem108[ds:0x4E82:word16] = Mem92[ds:0x4E82:word16] - 0x0001
	si_75 = si_75 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_859F:
	word16 ax_110 = Mem79[ds:0x2A01:word16]
	word16 dx_111 = Mem79[ds:0x29FF:word16]
	branch ax_110 <u Mem79[ds:0x2A05:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85AC:
	branch ax_110 >u Mem79[ds:0x2A05:word16] l0800_85B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85AE:
	branch dx_111 <=u Mem79[ds:0x2A03:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85B4:
	ui32 ax_dx_164 = SEQ(Mem79[ds:0x2A01:word16], Mem79[ds:0x29FF:word16]) - SEQ(Mem79[ds:0x2A05:word16], Mem79[ds:0x2A03:word16])
	word16 dx_121 = (word16) ax_dx_164
	word16 ax_124 = SLICE(ax_dx_164, word16, 16)
	branch ax_124 <u Mem79[ds:0x4E8A:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85C9:
	branch ax_124 >u Mem79[ds:0x4E8A:word16] l0800_85D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85CB:
	branch dx_121 <=u Mem79[ds:0x4E88:word16] l0800_85E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85D1:
	ui32 ax_dx_166 = SEQ(Mem79[ds:0x2A01:word16], Mem79[ds:0x29FF:word16]) - SEQ(Mem79[ds:0x2A05:word16], Mem79[ds:0x2A03:word16])
	Mem139[ds:0x4E8A:word16] = SLICE(ax_dx_166, word16, 16)
	Mem140[ds:0x4E88:word16] = (word16) ax_dx_166
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_85E7:
	Mem145[ds:0x2E45:word16] = 0x0000
	Mem146[ds:0x2E43:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8600(selector ds, byte bArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8600:
	word16 dx_15 = DPB(dx, bArg02, 0)
	branch Mem7[ds:0x2E45:word16] == 0x0000 l0800_861B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_861B:
	word16 di_22
	selector ds_23
	fn0800_8624(ds, SLICE(dx_15, byte, 0), out di_22, out ds_23)
	dsOut = ds_23
	return di_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_860D:
	Mem34[ds:Mem7[ds:0x4E82:word16] + 0x4682:byte] = bArg02
	Mem36[ds:0x4E82:word16] = Mem34[ds:0x4E82:word16] + 0x0001
	dsOut = ds
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8624(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7]
// LiveOut: ax di ds
// Trashed: SCZO ax bx cx di ds dx es Top
// Preserved: bp sp
fn0800_8624_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8624:
	word16 ax_10 = Mem7[ds:0x2A05:word16]
	word16 dx_11 = Mem7[ds:0x2A03:word16]
	branch ax_10 >u Mem7[ds:0x4E86:word16] l0800_8678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8634:
	branch ax_10 <u Mem7[ds:0x4E86:word16] l0800_863C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8636:
	branch dx_11 >=u Mem7[ds:0x4E84:word16] l0800_8678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_863C:
	ax_10 = Mem32[ds:((DPB(DPB(fn0800_4047(ds, SLICE(DPB(ax_10, bArg02, 0), byte, 0), SEQ(Mem7[ds:0x29E1:word16], Mem23[ds:0x29DF:word16]), out cx_35, out dx_111, out bx_112, out di, out ds, out Top_113), Mem32[ds:0x2E49:byte] ^ bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem32[ds:0x2E49:word16] >>u 0x08
	Mem59[ds:0x2E49:word16] = ax_10
	word16 v18_60 = Mem59[ds:0x2A03:word16] + 0x0001
	Mem61[ds:0x2A03:word16] = v18_60
	Mem65[ds:0x2A05:word16] = Mem61[ds:0x2A05:word16] + (v18_60 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8678:
	diOut = di
	dsOut = ds
	return (byte) ax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8624_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: bp ds sp
// Trashed: SCZDO bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_867A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_867A:
	word16 si_27 = fn0800_87EF(wArg04 + 0x0004, psegArg06)
	byte al_37 = Mem32[psegArg06:si_27 + 0x000A:byte] * 0x02 + true
	selector ds_20 = psegArg06
	word16 di_189 = wArg08
	selector es_22 = psegArg0A
	word16 si_101 = si_27 + 0x000B
	byte al_115 = al_37 * 0x02
	word16 ax_241 = DPB(ax_25, al_37 * 0x02, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8745:
	word16 bx_26
	byte al_41 = al_115 * 0x02
	word16 ax_240 = DPB(ax_241, al_41, 0)
	bool Z_56 = SLICE(cond(al_41), bool, 2)
	al_115 = al_41
	branch al_41 <u 0x00 l0800_8751
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8749:
	Mem50[es_22:di_189:byte] = Mem46[ds_20:si_101:byte]
	si_101 = si_101 + 0x0001
	di_189 = di_189 + 0x0001
	al_115 = al_41 * 0x02
	ax_240 = DPB(ax_241, al_41 * 0x02, 0) (alias)
	Z_56 = SLICE(cond(al_41 * 0x02), bool, 2) (alias)
	branch al_41 * 0x02 >=u 0x00 l0800_8744
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8751:
	word16 ax_239 = DPB(ax_240, al_115, 0)
	branch Z_56 l0800_873C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_873C:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_41 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_239 = DPB(ax_240, al_115, 0) (alias)
	ax_240 = DPB(ax_240, al_115, 0) (alias)
	branch al_115 <u 0x00 l0800_8753
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8741:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8744:
	Mem76[es_22:di_189:byte] = Mem70[ds_20:si_101:byte]
	ax_241 = DPB(ax_240, al_115, 0) (alias)
	si_101 = si_101 + 0x0001
	di_189 = di_189 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8753:
	byte al_83 = al_115 * 0x02
	word16 cx_146 = 0x0002
	byte bh_171 = 0x00
	word16 bx_465 = DPB(bx_26, 0x00, 8)
	bx_465 = DPB(bx_26, 0x00, 8) (alias)
	word16 bx_464 = DPB(bx_465, 0x00, 8)
	bx_464 = DPB(bx_465, 0x00, 8) (alias)
	bx_460 = DPB(bx_464, 0x00, 8) (alias)
	word16 bx_463 = DPB(bx_464, 0x00, 8)
	bx_463 = DPB(bx_464, 0x00, 8) (alias)
	bx_462 = DPB(bx_463, 0x00, 8) (alias)
	word16 bx_462 = DPB(bx_463, 0x00, 8)
	word16 bx_484 = DPB(bx_465, 0x00, 8)
	bx_484 = DPB(bx_465, 0x00, 8) (alias)
	word16 bx_483 = DPB(bx_484, 0x00, 8)
	bx_483 = DPB(bx_484, 0x00, 8) (alias)
	bx_462 = DPB(bx_483, 0x00, 8) (alias)
	word16 bx_490 = DPB(bx_483, 0x00, 8)
	bx_490 = DPB(bx_483, 0x00, 8) (alias)
	bx_462 = DPB(bx_490, 0x00, 8) (alias)
	word16 bx_461 = DPB(bx_462, 0x00, 8)
	bx_461 = DPB(bx_462, 0x00, 8) (alias)
	word16 bx_460 = DPB(bx_461, 0x00, 8)
	word16 bx_498 = DPB(bx_461, 0x00, 8)
	bx_498 = DPB(bx_461, 0x00, 8) (alias)
	word16 bx_664 = DPB(bx_490, 0x00, 8)
	word16 ax_238 = DPB(ax_239, al_83, 0)
	bool C_91 = SLICE(cond(al_83), bool, 1)
	branch al_83 == 0x00 l0800_879B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_879B:
	al_83 = Mem61[ds_20:si_101:byte] * 0x02 + (al_83 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_238 = DPB(ax_239, al_83, 0) (alias)
	C_91 = SLICE(cond(al_83), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_875C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_875F:
	word16 ax_236
	word16 ax_253
	branch C_91 l0800_86E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86E6:
	byte al_106 = al_83 * 0x02
	word16 ax_589 = DPB(ax_238, al_106, 0)
	bool C_105 = SLICE(cond(al_106), bool, 1)
	branch al_106 == 0x00 l0800_86BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86BC:
	al_106 = Mem61[ds_20:si_101:byte] * 0x02 + (al_106 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_589 = DPB(ax_238, al_106, 0) (alias)
	C_105 = SLICE(cond(al_106), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86EA:
	al_115 = al_106 * 0x02
	cx_146 = DPB(0x0002, C_105 + 0x04, 0) (alias)
	word16 ax_588 = DPB(ax_589, al_115, 0)
	bool C_123 = SLICE(cond(al_115), bool, 1)
	branch al_115 == 0x00 l0800_86C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86C2:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_115 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_588 = DPB(ax_589, al_115, 0) (alias)
	C_123 = SLICE(cond(al_115), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F0:
	ax_236 = DPB(ax_588, al_115, 0) (alias)
	bx_906 = bx_462
	branch C_123 l0800_8701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F2:
	byte al_129 = al_115 * 0x02
	word16 ax_587 = DPB(ax_588, al_129, 0)
	al_115 = al_129
	branch al_129 == 0x00 l0800_86C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86C8:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_129 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_587 = DPB(ax_588, al_115, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86F9:
	byte cl_154 = (byte) (cx_146 - 0x0001) * 0x02 + (al_129 <u 0x00)
	ax_236 = DPB(ax_587, al_115, 0) (alias)
	word16 ax_585 = DPB(ax_587, al_115, 0)
	cx_146 = DPB(cx_146 - 0x0001, cl_154, 0) (alias)
	bx_907 = bx_462
	branch cl_154 == 0x09 l0800_86A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A7:
	word16 cx_177 = DPB(cx_146, 0x04, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A9:
	byte al_159 = al_115 * 0x02
	bx_664 = DPB(bx_664, bh_171, 8) (alias)
	bx_664 = DPB(bx_664, bh_171, 8) (alias)
	ax_585 = DPB(ax_585, al_159, 0) (alias)
	al_115 = al_159
	branch al_159 == 0x00 l0800_86A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86A1:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_159 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_585 = DPB(ax_585, al_115, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86AD:
	bh_171 = bh_171 * 0x02 + (al_159 <u 0x00)
	word16 ax_584 = DPB(ax_585, al_115, 0)
	ax_603 = DPB(ax_584, al_115, 0) (alias)
	ax_241 = DPB(ax_584, al_115, 0) (alias)
	bx_26 = DPB(bx_664, bh_171, 8) (alias)
	cx_177 = cx_177 - 0x0001
	branch cx_177 != 0x0000 l0800_86A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B1:
	word16 cx_183 = DPB(cx_177, (bh_171 + 0x03) * 0x02, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B7:
	branch cx_183 == 0x0000 l0800_86B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86B7_1:
	Mem190[es_22:di_189:word16] = Mem186[ds_20:si_101:word16]
	si_101 = si_101 + 0x0002
	di_189 = di_189 + 0x0002
	cx_183 = cx_183 - 0x0001
	ax_584 = ax_603
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8761:
	al_115 = al_83 * 0x02
	word16 ax_237 = DPB(ax_238, al_115, 0)
	bool C_199 = SLICE(cond(al_115), bool, 1)
	branch al_115 == 0x00 l0800_87A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87A0:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_115 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_237 = DPB(ax_238, al_115, 0) (alias)
	C_199 = SLICE(cond(al_115), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8765:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8768:
	ax_253 = DPB(ax_237, al_115, 0) (alias)
	branch C_199 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_876A:
	byte al_207 = al_115 * 0x02
	cx_146 = 0x0003
	ax_236 = DPB(ax_237, al_207, 0) (alias)
	bool C_215 = SLICE(cond(al_207), bool, 1)
	branch al_207 == 0x00 l0800_87A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87A5:
	byte al_216 = Mem61[ds_20:si_101:byte] * 0x02 + (al_207 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_236 = DPB(ax_237, al_216, 0) (alias)
	C_215 = SLICE(cond(al_216), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_876F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8772:
	al_115 = (byte) ax_236 (alias)
	al_115 = (byte) ax_236 (alias)
	ax_236 = DPB(ax_236, al_115, 0) (alias)
	bx_908 = bx_462
	branch C_215 l0800_8701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8774:
	byte cl_223 = Mem61[ds_20:si_101:byte]
	si_101 = si_101 + 0x0001
	word16 cx_315 = DPB(0x0003, cl_223, 0)
	branch cl_223 == 0x00 l0800_87B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87B4:
	word16 ax_284 = ds_20 + (si_101 >>u 0x04)
	byte al_288 = (byte) ax_236
	di_189 = (di_189 & 0x000F) + 0x8000
	es_22 = es_22 + (di_189 >>u 0x04) - 0x0800
	si_101 = si_101 & 0x000F
	bx_26 = si_101 >>u 0x04
	ds_20 = ax_284
	al_115 = al_288 * 0x02
	word16 ax_579 = DPB(ax_236, al_288 * 0x02, 0)
	bool C_294 = SLICE(cond(al_288 * 0x02), bool, 1)
	branch al_288 * 0x02 != 0x00 l0800_87E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87DD:
	al_115 = Mem262[ax_284:si_101 & 0x000F:byte] * 0x02 + (al_288 * 0x02 <u 0x00)
	si_101 = (si_101 & 0x000F) + 0x0001
	ax_579 = DPB(ax_236, al_115, 0) (alias)
	C_294 = SLICE(cond(al_115), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E3:
	ax_241 = DPB(ax_579, al_115, 0) (alias)
	branch C_294 l0800_87E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E8:
	dsOut = psegLoc0A
	return si
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_867A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87E5:
	Mem46 = Mem262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_877B:
	cx_146 = cx_315 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8701:
	al_115 = al_115 * 0x02
	word16 ax_608 = DPB(ax_236, al_115, 0)
	bool C_333 = SLICE(cond(al_115), bool, 1)
	branch al_115 == 0x00 l0800_86CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86CE:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_115 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_608 = DPB(ax_236, al_115, 0) (alias)
	C_333 = SLICE(cond(al_115), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8705:
	ax_253 = DPB(ax_608, al_115, 0) (alias)
	branch C_333 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8707:
	byte al_339 = al_115 * 0x02
	word16 ax_615 = DPB(ax_608, al_339, 0)
	bool C_347 = SLICE(cond(al_339), bool, 1)
	branch al_339 == 0x00 l0800_86D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86D4:
	al_339 = Mem61[ds_20:si_101:byte] * 0x02 + (al_339 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_615 = DPB(ax_608, al_339, 0) (alias)
	C_347 = SLICE(cond(al_339), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_870E:
	al_115 = al_339 * 0x02
	word16 bx_497 = DPB(bx_498, C_347, 8)
	bx_497 = DPB(bx_498, C_347, 8) (alias)
	word16 bx_509 = DPB(bx_497, C_347, 8)
	bx_509 = DPB(bx_497, C_347, 8) (alias)
	word16 ax_614 = DPB(ax_615, al_115, 0)
	bool C_371 = SLICE(cond(al_115), bool, 1)
	branch al_115 == 0x00 l0800_86DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86DA:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_115 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_614 = DPB(ax_615, al_115, 0) (alias)
	C_371 = SLICE(cond(al_115), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8714:
	word16 bx_506
	byte bh_393
	ax_253 = DPB(ax_614, al_115, 0) (alias)
	word16 ax_623 = DPB(ax_614, al_115, 0)
	branch C_371 l0800_8784
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8784:
	byte al_386
	byte al_377 = al_115 * 0x02
	word16 ax_626 = DPB(ax_614, al_377, 0)
	branch al_377 == 0x00 l0800_87AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87AA:
	al_386 = Mem61[ds_20:si_101:byte] * 0x02 + (al_377 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_626 = DPB(ax_614, al_386, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8788:
	al_386 = al_377
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_878B:
	byte bh_392 = C_347 * 0x02 + (al_377 <u 0x00)
	al_115 = al_386 * 0x02
	bh_393 = bh_392 | 0x04
	word16 bx_508 = DPB(bx_509, bh_392 | 0x04, 8)
	bx_508 = DPB(bx_509, bh_392 | 0x04, 8) (alias)
	bx_460 = DPB(bx_508, bh_392 | 0x04, 8) (alias)
	bx_506 = DPB(bx_508, bh_392 | 0x04, 8) (alias)
	word16 ax_625 = DPB(ax_626, al_115, 0)
	bool C_403 = SLICE(cond(al_115), bool, 1)
	branch al_115 == 0x00 l0800_87AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87AF:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_115 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_625 = DPB(ax_626, al_115, 0) (alias)
	C_403 = SLICE(cond(al_115), bool, 1) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8794:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8797:
	ax_253 = DPB(ax_625, al_115, 0) (alias)
	ax_623 = DPB(ax_625, al_115, 0) (alias)
	branch C_403 l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8799:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8716:
	bx_460 = DPB(bx_497, C_347, 8) (alias)
	branch C_347 != false l0800_8728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_871D:
	bh_393 = C_347 + 0x01
	bx_506 = DPB(bx_497, bh_393, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8722:
	byte al_416 = al_115 * 0x02
	word16 bx_505 = DPB(bx_506, bh_393, 8)
	bx_505 = DPB(bx_506, bh_393, 8) (alias)
	word16 ax_622 = DPB(ax_623, al_416, 0)
	al_115 = al_416
	branch al_416 == 0x00 l0800_86E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_86E0:
	al_115 = Mem61[ds_20:si_101:byte] * 0x02 + (al_416 <u 0x00)
	si_101 = si_101 + 0x0001
	ax_622 = DPB(ax_623, al_115, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8726:
	ax_253 = DPB(ax_622, al_115, 0) (alias)
	bx_460 = DPB(bx_505, bh_393 * 0x02 + (al_416 <u 0x00), 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8728:
	bx_26 = DPB(bx_460, Mem61[ds_20:si_101:byte], 0) (alias)
	__cli()
	word16 ax_606 = DPB(ax_253, al_115, 0)
	ax_639 = DPB(ax_606, al_115, 0) (alias)
	ax_241 = DPB(ax_606, al_115, 0) (alias)
	word16 si_444 = si_101 + 0x0001
	word16 si_522 = di_189 - 0x0001 - bx_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8733:
	branch cx_146 == 0x0000 l0800_8736
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8736:
	__sti()
	si_101 = si_444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8733_1:
	Mem533[es_22:di_189:byte] = Mem529[ds_20:si_522:byte]
	si_522 = si_522 + 0x0001
	di_189 = di_189 + 0x0001
	cx_146 = cx_146 - 0x0001
	ax_606 = ax_639
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_87EF(word16 si, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] si:[0..15]
// LiveOut: si
// Trashed: ax bx si Top
// Preserved: sp
fn0800_87EF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87EF:
	word16 si_7 = fn0800_87F4(si, ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F2_thunk_fn0800_87F4:
	return fn0800_87F4(si_7, ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_87F4(word16 si, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] si:[0..15]
// LiveOut: si
// Trashed: ax si Top
// Preserved: sp
fn0800_87F4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F4:
	return si + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87F4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_87F8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx es Top
// Preserved: di sp
fn0800_87F8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_87F8:
	ptr32 es_di_10 = Mem7[ds:0x2E37:segptr32]
	selector es_80 = SLICE(es_di_10, selector, 16)
	word16 di_66 = (word16) es_di_10
	word16 ax_11 = Mem7[ds:0x2E31:word16]
	word16 cx_12 = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8804:
	branch cx_12 == 0x0000 l0800_8806
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8806:
	ptr32 es_di_16 = Mem15[ds:0x2E33:segptr32]
	selector es_78 = SLICE(es_di_16, selector, 16)
	word16 di_60 = (word16) es_di_16
	word16 ax_17 = Mem15[ds:0x2E31:word16]
	word16 cx_18 = 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8810:
	branch cx_18 == 0x0000 l0800_8812
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8812:
	ptr32 es_di_22 = Mem21[ds:0x2E3B:segptr32]
	selector es_76 = SLICE(es_di_22, selector, 16)
	word16 di_54 = (word16) es_di_22
	word16 cx_23 = Mem21[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881C:
	branch cx_23 == 0x0000 l0800_881E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881E:
	ptr32 es_di_30 = Mem29[ds:0x2E3F:segptr32]
	selector es_70 = SLICE(es_di_30, selector, 16)
	word16 di_37 = (word16) es_di_30
	word16 ax_31 = 0x0000
	word16 cx_34 = Mem29[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8828:
	Mem38[es_70:di_37:word16] = ax_31
	di_37 = di_37 + 0x0002
	ax_31 = ax_31 + 0x0001
	cx_34 = cx_34 - 0x0001
	branch cx_34 != 0x0000 l0800_8828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_882C:
	Mem45[ds:0x2E2D:word16] = cx_34
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_87F8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_881C_1:
	Mem55[es_76:di_54:word16] = 0x0000
	di_54 = di_54 + 0x0002
	cx_23 = cx_23 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8810_1:
	Mem61[es_78:di_60:word16] = ax_17
	di_60 = di_60 + 0x0002
	cx_18 = cx_18 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8804_1:
	Mem67[es_80:di_66:word16] = ax_11
	di_66 = di_66 + 0x0002
	cx_12 = cx_12 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8832(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di si sp
fn0800_8832_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8832:
	fn0800_889A(ds)
	branch Mem10[ds:0x2E29:word16] <u 0x0002 l0800_8897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_883E:
	branch Mem10[ds:0x2E65:word16] - Mem10[ds:0x2E6D:word16] <u 0x0003 l0800_8897
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_884D:
	word16 ax_30 = Mem10[ds:0x2E2D:word16]
	word16 si_28 = Mem10[ds:0x2E29:word16]
	word16 di_29 = Mem10[ds:0x2E2B:word16]
	word16 ax_33 = ax_30 + 0x0001
	branch ax_30 + 0x0001 != Mem32[ds:0x2E31:word16] l0800_8865
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8863:
	ax_33 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8865:
	Mem41[ds:0x2E2D:word16] = ax_33
	Mem43[ds:0x2E6D:word16] = Mem41[ds:0x2E6D:word16] + 0x0001
	fn0800_889A(ds)
	Mem56[ds:0x2E6D:word16] = Mem43[ds:0x2E6D:word16] - 0x0001
	Mem59[ds:0x2E2D:word16] = ax_30
	branch Mem59[ds:0x2E29:word16] <=u si_28 l0800_888F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_888F:
	Mem64[ds:0x2E29:word16] = si_28
	Mem66[ds:0x2E2B:word16] = di_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_887D:
	Mem67[ds:0x2E29:word16] = 0x0001
	Mem68[ds:0x2E2B:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8897:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8832_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_889A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: di ds si sp
fn0800_889A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_889A:
	Mem13[ds:0x2E2B:word16] = 0x0000
	Mem14[ds:0x2E29:word16] = 0x0001
	ptr32 es_di_15 = Mem14[ds:0x2E6D:segptr32]
	word16 ax_18 = Mem14[es_di_15:word16]
	Mem19[ds:0x4E90:word16] = ax_18
	word16 di_17 = (word16) es_di_15
	word16 dx_22 = Mem19[ds:0x2E69:word16] - (di_17 + 0x0001)
	selector es_16 = SLICE(es_di_15, selector, 16)
	byte al_199 = (byte) ax_18
	word16 di_20 = di_17 + 0x0001
	bool Z_33 = SLICE(cond(dx_22), bool, 2)
	word16 cx_24 = dx_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BC:
	branch cx_24 == 0x0000 l0800_88BE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BC_1:
	Z_33 = SLICE(cond(al_199 - Mem19[es_16:di_307:byte]), bool, 2) (alias)
	di_20 = di_307 + 0x0001
	cx_24 = cx_24 - 0x0001
	di_307 = di_20
	branch al_199 != Mem19[es_16:di_307:byte] l0800_88BC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88BE:
	branch Z_33 l0800_88C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88C0:
	cx_24 = cx_24 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88C1:
	Mem54[ds:0x4E94:word16] = Mem19[ds:0x2E69:word16] - (word16) Mem19[ds:0x2E6D:segptr32]
	word16 dx_44 = dx_22 - cx_24
	word16 ax_185 = Mem54[Mem54[ds:0x2E39:selector]:Mem54[ds:0x4E90:word16] << 0x0001:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88DC:
	branch ax_185 != Mem62[ds:0x2E31:word16] l0800_88E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88E5:
	word16 di_66 = ax_185 << 0x0001
	Mem69[ds:0x4E92:word16] = Mem62[Mem62[ds:0x2E41:selector]:di_66:word16]
	word16 bx_70 = Mem69[ds:0x2E2D:word16]
	branch bx_70 >u ax_185 l0800_8903
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88FC:
	bx_70 = bx_70 + Mem69[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8903:
	ptr32 es_si_80 = Mem69[ds:0x2E6D:segptr32]
	word16 bx_110 = bx_70 - ax_185
	branch Mem69[ds:0x4E90:word16] != Mem69[SLICE(es_si_80, selector, 16):(word16) es_si_80 - bx_110:word16] l0800_897E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8914:
	word16 cx_100 = Mem69[Mem69[ds:0x2E3D:selector]:di_66:word16]
	branch cx_100 <=u bx_110 l0800_892D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_892D:
	branch cx_100 <=u dx_44 l0800_893A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8931:
	bx_110 = bx_110 - (cx_100 - dx_44)
	cx_100 = dx_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_893A:
	branch cx_100 != dx_44 l0800_8963
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_893E:
	ptr32 es_di_106 = Mem69[ds:0x2E6D:segptr32]
	word16 di_108 = (word16) es_di_106 + cx_100
	word16 ax_113 = Mem69[ds:0x4E94:word16] - cx_100
	selector es_215 = SLICE(es_di_106, selector, 16)
	word16 si_111 = di_108 - bx_110
	bool Z_135 = SLICE(cond(ax_113), bool, 2)
	word16 cx_115 = ax_113
	selector ds_124 = Mem123[ds:0x2E6F:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8957:
	branch cx_115 == 0x0000 l0800_8959
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8957_1:
	Z_135 = SLICE(cond(Mem123[ds_124:si_308:byte] - Mem123[es_215:di_309:byte]), bool, 2) (alias)
	si_111 = si_308 + 0x0001
	di_108 = di_309 + 0x0001
	cx_115 = cx_115 - 0x0001
	si_308 = si_111
	di_309 = di_108
	branch Mem123[ds_124:si_308:byte] != Mem123[es_215:di_309:byte] l0800_8957
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8959:
	branch Z_135 l0800_895C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_895B:
	cx_115 = cx_115 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_895C:
	cx_100 = dx_44 + (ax_113 - cx_115)
	Mem167 = Mem123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8922:
	bx_110 = 0x0001
	cx_100 = dx_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8963:
	branch cx_100 <=u Mem167[ds:0x2E2F:word16] l0800_896D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8969:
	cx_100 = Mem167[ds:0x2E2F:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_896D:
	branch cx_100 <u Mem167[ds:0x2E29:word16] l0800_897E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8973:
	Mem176[ds:0x2E29:word16] = cx_100
	Mem182[ds:0x2E2B:word16] = bx_110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_897E:
	ax_185 = Mem184[ds:0x4E92:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_88E2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8984:
	branch Mem62[ds:0x2E29:word16] != 0x0002 l0800_89A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_898B:
	branch Mem62[ds:0x2E2B:word16] <=u 0x0100 l0800_89A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8996:
	Mem190[ds:0x2E29:word16] = 0x0001
	Mem191[ds:0x2E2B:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89A5:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_889A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di sp
fn0800_89A8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89A8:
	word16 dx_13 = Mem11[ds:0x2E31:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89B1:
	word16 di_17 = Mem16[ds:0x2E2D:word16]
	selector es_19 = Mem16[ds:0x2E41:selector]
	word16 ax_20 = Mem16[es_19:di_17 << 0x0001:word16]
	Mem22[es_19:di_17 << 0x0001:word16] = dx_13
	branch Mem22[ds:0x2E2D:word16] == ax_20 l0800_89EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89C7:
	ptr32 es_di_25 = Mem22[ds:0x2E6D:segptr32]
	word16 di_29 = Mem22[SLICE(es_di_25, selector, 16):(word16) es_di_25 - dx_13:word16]
	Mem32[Mem22[ds:0x2E39:selector]:di_29 << 0x0001:word16] = ax_20
	branch ax_20 != dx_13 l0800_89EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89E0:
	Mem36[Mem32[ds:0x2E35:selector]:di_29 << 0x0001:word16] = dx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89EA:
	word16 di_42 = Mem38[Mem38[ds:0x2E6D:segptr32]:word16]
	word16 ax_44 = Mem38[ds:0x2E2D:word16]
	selector es_45 = Mem38[ds:0x2E39:selector]
	branch Mem38[es_45:di_42 << 0x0001:word16] != dx_13 l0800_8A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A08:
	Mem54[Mem38[ds:0x2E41:selector]:Mem38[Mem38[ds:0x2E35:selector]:di_42 << 0x0001:word16] << 0x0001:word16] = ax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_89FF:
	Mem55[es_45:di_42 << 0x0001:word16] = ax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A18:
	Mem61[Mem57[ds:0x2E35:selector]:di_42 << 0x0001:word16] = ax_44
	ptr32 es_di_62 = Mem61[ds:0x2E6D:segptr32]
	word16 di_64 = (word16) es_di_62
	word16 bx_68 = Mem61[ds:0x2E69:word16] - (di_64 + 0x0001)
	selector es_63 = SLICE(es_di_62, selector, 16)
	byte al_65 = Mem61[es_di_62:byte]
	word16 di_66 = di_64 + 0x0001
	bool Z_79 = SLICE(cond(bx_68), bool, 2)
	word16 cx_70 = bx_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A2F:
	branch cx_70 == 0x0000 l0800_8A31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A2F_1:
	Z_79 = SLICE(cond(al_65 - Mem61[es_63:di_233:byte]), bool, 2) (alias)
	di_66 = di_233 + 0x0001
	cx_70 = cx_70 - 0x0001
	di_233 = di_66
	branch al_65 != Mem61[es_63:di_233:byte] l0800_8A2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A31:
	branch Z_79 l0800_8A34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A33:
	cx_70 = cx_70 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A34:
	word16 bx_131 = bx_68 - cx_70
	Mem100[Mem61[ds:0x2E3D:selector]:Mem61[ds:0x2E2D:word16] << 0x0001:word16] = bx_131
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A86:
	word16 ax_103 = Mem102[ds:0x2E2D:word16]
	word16 ax_104 = ax_103 + 0x0001
	branch ax_103 + 0x0001 != dx_13 l0800_8A90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A8E:
	ax_104 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A90:
	Mem113[ds:0x2E2D:word16] = ax_104
	Mem115[ds:0x2E6D:word16] = Mem113[ds:0x2E6D:word16] + 0x0001
	word16 v20_120 = wArg02 - 0x0001
	wArg02 = v20_120
	branch v20_120 == 0x0000 l0800_8AA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AA8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_89A8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A9C:
	bx_131 = bx_131 - 0x0001
	branch bx_131 >u 0x0001 l0800_8A46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A46:
	word16 di_135 = Mem121[ds:0x2E2D:word16]
	Mem138[Mem121[ds:0x2E3D:selector]:di_135 << 0x0001:word16] = bx_131
	selector es_139 = Mem138[ds:0x2E41:selector]
	word16 v22_141 = Mem138[es_139:di_135 << 0x0001:word16]
	Mem142[es_139:di_135 << 0x0001:word16] = Mem138[ds:0x2E2D:word16]
	branch Mem142[ds:0x2E2D:word16] == v22_141 l0800_8A86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A63:
	ptr32 es_di_146 = Mem142[ds:0x2E6D:segptr32]
	word16 di_151 = Mem142[SLICE(es_di_146, selector, 16):(word16) es_di_146 - dx_13:word16]
	Mem154[Mem142[ds:0x2E39:selector]:di_151 << 0x0001:word16] = v22_141
	branch v22_141 != dx_13 l0800_8A86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8A7C:
	Mem158[Mem154[ds:0x2E35:selector]:di_151 << 0x0001:word16] = dx_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AA5:
	Mem16 = Mem121
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8ACF(word16 cx, selector ds, word16 wArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] Stack +0002:[0..15] Stack +0006:[0..31]
// LiveOut:
// Trashed: SCZO ax bx dx es Top
// Preserved: bp ds sp
fn0800_8ACF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8ACF:
	msdos_unknown_2143()
	word16 ax_22 = DPB(DPB(ax, 0x43, 8), 0x00, 0)
	branch Test(ULT,false) l0800_8AE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AE9:
	fn0800_8D64(ds, ax_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8ADF:
	Mem34[ptrArg06:word16] = cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8AED:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8ACF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8B0D(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax bx cx dx es si Top
// Trashed: SCZO ax bp bx cx dx es si sp Top
// Preserved:
fn0800_8B0D_entry:
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B0D:
	word16 sp_26 = fp - 4
	branch wArg06 != 0x0000 l0800_8B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B18:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B28:
	branch Mem18[ds:0x224E:word16] != 0x0000 l0800_8B1A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B1A:
	Mem22[ds:0x224E:word16] = Mem18[ds:0x224E:word16] - 0x0001
	word16 bx_23 = Mem22[ds:0x224E:word16]
	call SEQ(0x0800, Mem22[ds:(bx_23 << 0x0001) + 0x4E96:word16]) (retsize: 2;)
		uses: ax:ax_102,bx:bx_23 << 0x0001,cx:cx_31,dx:dx_104,sp:sp_26,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_34
		defs: ax:ax_103,cx:cx_32,dx:dx_105,sp:sp_27,Top:Top_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B2F:
	word16 bx_38
	word16 dx_39
	byte ah_49
	call SEQ(0x0800, Mem18[ds:0x2352:word16]) (retsize: 2;)
		uses: ah:fn0800_0150(out dx_39, out bx_38, out es_40),ax:ax_110,bx:bx_38,cx:cx_31,dx:dx_39,sp:sp_26,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_34
		defs: ah:ah_49,bx:bx_47,cx:cx_46,sp:sp_45,Top:Top_48
	word16 ax_110 = DPB(ax, ah_49, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B36:
	word16 dx_55
	word16 ax_54 = fn0800_01B9(ds, out dx_55)
	fn0800_0163()
	branch wArg04 != 0x0000 l0800_8B55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B55:
	word16 si_95 = Mem58[ss:sp_26:word16]
	cxOut = cx
	dxOut = dx_55
	bxOut = bx
	siOut = si_95
	esOut = es
	TopOut = Top_3
	return ax_54
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B0D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B42:
	branch wArg06 != 0x0000 l0800_8B4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B46:
	word16 sp_67
	word16 cx_70
	word16 bx_73
	int8 Top_75
	word16 ax_76
	word16 dx_77
	call SEQ(0x0800, Mem58[ds:0x2354:word16]) (retsize: 2;)
		uses: ax:ax_54,bx:bx_71,cx:cx_68,dx:dx_55,sp:sp_66,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_74
		defs: ax:ax_76,bx:bx_73,cx:cx_70,dx:dx_77,sp:sp_67,Top:Top_75
	call SEQ(0x0800, Mem58[ds:0x2356:word16]) (retsize: 2;)
		uses: ax:ax_76,bx:bx_73,cx:cx_70,dx:dx_77,sp:sp_67,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +FFFFFFFE:si,Top:Top_75
		defs: sp:sp_81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B4E:
	word16 sp_93 = sp_26 - 2
	Mem94[ss:sp_93:word16] = wArg02
	fn0800_0164(Mem94[ss:sp_93:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8B5A(word16 cx, word16 dx, word16 bx, word16 si, selector ds, word16 wArg02, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax bx cx dx es si Top
// Trashed: SCZO ax bx cx dx es si Top
// Preserved: bp sp
fn0800_8B5A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B5A:
	word16 dx_26
	int8 Top_28
	word16 bx_29
	word16 cx_30
	selector es_31
	word16 si_32
	word16 ax_24 = fn0800_8B0D(0x0000, cx, dx, bx, fp - 2, si, ds, wArg02, 0x0000, 0x0000, out cx_30, out dx_26, out bx_29, out si_32, out es_31, out Top_28)
	cxOut = cx_30
	dxOut = dx_26
	bxOut = bx_29
	siOut = si_32
	esOut = es_31
	TopOut = Top_28
	return ax_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B5A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8B69(word16 cx, word16 dx, word16 bx, word16 si, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es si Top
// Preserved: bp sp
fn0800_8B69_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B69:
	fn0800_8B0D(0x0000, cx, dx, bx, fp - 2, si, ds, wArg02, 0x0000, 0x0001, out cx_46, out dx_47, out bx_48, out si_49, out es_50, out Top_51)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B69_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8B95(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah bx cx dx es Top
// Preserved: bp sp
fn0800_8B95_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8B95:
	byte dh_10
	word16 cx_11
	word16 dx_19 = DPB(DPB(dx, dh_10, 8), msdos_get_system_date(out dh_10, out cx_11), 0)
	Mem16[ptrArg02:word16] = cx_11
	Mem20[ptrArg02 + 0x0002:word16] = dx_19
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8B95_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8BA8(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah bx cx dx es Top
// Preserved: bp sp
fn0800_8BA8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BA8:
	byte ch_10
	byte dh_11
	byte dl_12
	Mem20[ptrArg02:word16] = DPB(DPB(cx, ch_10, 8), msdos_get_system_time(out ch_10, out dh_11, out dl_12), 0)
	Mem24[ptrArg02 + 0x0002:word16] = DPB(DPB(dx, dh_11, 8), dl_12, 0)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BA8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BBB(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bx cx dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BBB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BBB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC0_thunk_fn0800_8BD8:
	word16 bx_17
	word16 cx_18
	word16 dx_19
	word16 ax_16 = fn0800_8BD8(0x0000, wArg02, wArg04, wArg06, wArg08, out cx_18, out dx_19, out bx_17)
	cxOut = cx_18
	dxOut = dx_19
	bxOut = bx_17
	return ax_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BBB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BC2(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bx cx dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BC2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BC8_thunk_fn0800_8BD8:
	word16 bx_15
	word16 cx_16
	word16 dx_17
	word16 ax_14 = fn0800_8BD8(0x0001, wArg02, wArg04, wArg06, wArg08, out cx_16, out dx_17, out bx_15)
	cxOut = cx_16
	dxOut = dx_17
	bxOut = bx_15
	return ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BCA(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax dx sp
// Trashed: SCZO ax bx cx dx sp Top
// Preserved:
fn0800_8BCA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BCA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BD0_thunk_fn0800_8BD8:
	word16 dx_17
	word16 ax_14 = fn0800_8BD8(0x0002, wArg02, wArg04, wArg06, wArg08, out cx_30, out dx_17, out bx_31)
	dxOut = dx_17
	return ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BCA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8BD8(word16 cx, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_8BD8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BD8:
	word16 dx_102
	word16 bx_146
	word16 di_16 = cx
	word16 ax_100 = wArg04
	word16 cx_134 = wArg0A
	branch wArg0A != 0x0000 l0800_8BF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BEF:
	branch wArg06 == 0x0000 l0800_8C5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BF3:
	branch wArg08 == 0x0000 l0800_8C5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C5C:
	word32 dx_ax_35 = SEQ(wArg06, wArg04)
	bx_146 = wArg08
	word16 dx_38 = (uint16) (dx_ax_35 % wArg08)
	ax_100 = (uint16) (dx_ax_35 /u wArg08)
	branch (cx & 0x0002) == 0x0000 l0800_8C65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C64:
	ax_100 = dx_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C65:
	dx_102 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BF7:
	word16 bx_194 = wArg08
	dx_102 = wArg06
	branch (cx & 0x0001) != 0x0000 l0800_8C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8BFD:
	dx_102 = wArg06
	branch wArg06 >= 0x0000 l0800_8C0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C01:
	ax_100 = -wArg04
	dx_102 = -wArg06 - (ax_100 == 0x0000)
	di_16 = cx | 0x000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C0B:
	cx_134 = wArg0A
	branch wArg0A >= 0x0000 l0800_8C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C0F:
	bx_194 = -wArg08
	cx_134 = -wArg0A - (bx_194 == 0x0000)
	di_16 = di_16 ^ 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C19:
	cx_134 = 0x0020
	word16 di_111 = 0x0000
	word16 si_107 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C23:
	ax_100 = ax_100 << 0x0001
	dx_102 = __rcl(dx_102, 0x01, SLICE(cond(ax_100), bool, 1))
	si_107 = __rcl(si_107, 0x01, (dx_102 & 0x8000) != 0x0000)
	di_111 = __rcl(di_111, 0x01, (si_107 & 0x8000) != 0x0000)
	branch di_111 <u cx_134 l0800_8C3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C2F:
	branch di_111 >u cx_134 l0800_8C35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C31:
	branch si_107 <u bx_194 l0800_8C3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C35:
	ui32 di_si_198 = SEQ(di_111, si_107) - SEQ(cx_134, bx_194)
	si_107 = (word16) di_si_198
	di_111 = SLICE(di_si_198, word16, 16)
	ax_100 = ax_100 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C3A:
	cx_134 = cx_134 - 0x0001
	branch cx_134 != 0x0000 l0800_8C23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C3C:
	bx_146 = di_16
	branch (di_16 & 0x0002) == 0x0000 l0800_8C49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C43:
	ax_100 = si_107
	dx_102 = di_111
	bx_146 = di_16 >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C49:
	branch (bx_146 & 0x0004) == 0x0000 l0800_8C56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C4F:
	ax_100 = -ax_100
	dx_102 = -dx_102 - (ax_100 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C56:
	cxOut = cx_134
	dxOut = dx_102
	bxOut = bx_146
	return ax_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8BD8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8C69(word16 ax, byte cl, word16 dx, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax cl dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8C69_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C69:
	branch cl >=u 0x10 l0800_8C81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C81:
	clOut = cl - 0x10
	dxOut = ax << cl - 0x10
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C71:
	byte cl_28 = -cl
	clOut = cl_28 + 0x10
	dxOut = dx << cl | ax >>u cl_28 + 0x10
	return ax << cl
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8C69_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, ptr16 & clOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax cl dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8C8A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C8A:
	branch cl >=u 0x10 l0800_8CA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CA2:
	clOut = cl - 0x10
	int32 dx_ax_21 = (int32) dx
	dxOut = SLICE(dx_ax_21, word16, 16)
	return (word16) dx_ax_21 >> cl - 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8C92:
	byte cl_28 = -cl
	clOut = cl_28 + 0x10
	dxOut = dx >> cl
	return ax >>u cl | dx << cl_28 + 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8C8A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8CAA(word16 ax, byte cl, word16 dx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cl:[0..7] dx:[0..15]
// LiveOut: ax dx sp
// Trashed: SCZO ax bx cl dx sp Top
// Preserved:
fn0800_8CAA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CAA:
	branch cl >=u 0x10 l0800_8CC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CC2:
	dxOut = 0x0000
	return dx >>u cl - 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CB2:
	dxOut = dx >>u cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8CAA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8CCB(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: ax cx dx sp
// Trashed: SCZO ax bx cx dx es sp Top
// Preserved:
fn0800_8CCB_entry:
	byte dh_31 = SLICE(dx, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CCB:
	byte cl_27 = (byte) cx
	branch cx >= 0x0000 l0800_8CDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CDE:
	word16 ax_20 = ax + bx
	byte al_36 = (byte) ax_20
	ax_20 = DPB(ax_20, al_36, 0) (alias)
	word16 ax_40 = DPB(ax_20, al_36, 0)
	branch ax_20 >=u 0x0000 l0800_8CE6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CE2:
	dx = dx + 0x1000
	dh_31 = SLICE(dx + 0x1000, byte, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CE6:
	chOut = <invalid>
	dxOut = DPB(dx, dh_31 + (cl_27 << 0x04), 8) + (ax_40 >>u 0x04)
	return DPB(ax_40 >>u 0x04, al_36, 0) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8CD2:
	word16 bx_50 = ~bx
	byte cl_63 = (byte) (~cx + (bx_50 <u 0x0001))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D0D:
	word16 ax_57 = ax - (bx_50 + 0x0001)
	byte al_74 = (byte) ax_57
	ax_57 = DPB(ax_57, al_74, 0) (alias)
	word16 ax_78 = DPB(ax_57, al_74, 0)
	branch ax_57 >=u 0x0000 l0800_8D15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D11:
	dx = dx - 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D15:
	chOut = <invalid>
	dxOut = dx - DPB(DPB(bx_50 + 0x0001, cl_63 << 0x04, 8), 0x00, 0) + (ax_78 >>u 0x04)
	return DPB(ax_78 >>u 0x04, al_74, 0) & 0x000F
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8CCB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_8D2B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D2B:
	word16 si_17
	word16 si_13 = wArg02
	branch wArg02 < 0x0000 l0800_8D4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D4B:
	si_17 = -wArg02
	branch si_17 > 0x0023 l0800_8D3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D52:
	Mem21[ds:0x2516:word16] = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D36:
	branch wArg02 <= 0x0058 l0800_8D3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D3B:
	si_13 = 0x0057
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D3E:
	Mem28[ds:0x2516:word16] = si_13
	si_17 = (int16) Mem28[ds:si_13 + 0x2518:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D58:
	Mem34[ds:0x007F:word16] = si_17
	return 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D2B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_8D64(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_8D64_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D64:
	fn0800_8D2B(ds, wArg02)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D64_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8D76(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_8D76_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D76:
	word16 dx_11
	msdos_ioctl_get_device_info(wArg02, out dx_11)
	return dx_11 & 0x0080
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D76_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8D87(byte bArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0C, word16 wArg0E, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0004:[0..7] Stack +0006:[0..15] Stack +0008:[0..31] Stack +000C:[0..15] Stack +000E:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax bx cx di dx si Top
// Preserved: bp es sp ss
fn0800_8D87_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D87:
	byte bl_23 = (byte) wArg06
	word16 bp_8 = fp - 2
	word16 sp_134 = fp - 0x002A
	selector es_129 = SLICE(ptrArg08, selector, 16)
	word16 di_122 = (word16) ptrArg08
	word16 bx_81 = DPB(wArg06, bl_23, 0)
	branch wArg06 >u 0x0024 l0800_8DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8D9B:
	branch bl_23 <u 0x02 l0800_8DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DA0:
	word16 ax_26 = wArg0C
	word16 cx_28 = wArg0E
	branch wArg0E >= 0x0000 l0800_8DBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DAA:
	branch bArg04 == 0x00 l0800_8DBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DB0:
	Mem36[ptrArg08:byte] = 0x2D
	ax_26 = -wArg0C
	di_122 = di_122 + 0x0001
	cx_28 = -wArg0E - (ax_26 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DBC:
	word16 si_105 = fp - 0x0024
	branch cx_28 == 0x0000 l0800_8DD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DC1:
	word32 dx_ax_52 = (uint32) (uint16) cx_28
	word32 dx_ax_60 = SEQ((uint16) (dx_ax_52 % bx_81), ax_26)
	Mem68[ss:si_105:byte] = (byte) (uint16) (dx_ax_60 % bx_81)
	word16 ax_56 = (uint16) (dx_ax_52 /u bx_81)
	cx_28 = ax_56
	ax_26 = (uint16) (dx_ax_60 /u bx_81)
	si_105 = si_105 + 0x0001
	branch ax_56 == 0x0000 l0800_8DD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DD9:
	branch ax_26 != 0x0000 l0800_8DD1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DD1:
	word32 dx_ax_79 = (uint32) (uint16) ax_26
	Mem94[ss:si_105:byte] = (byte) (uint16) (dx_ax_79 % bx_81)
	ax_26 = (uint16) (dx_ax_79 /u bx_81)
	si_105 = si_105 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DDD:
	word16 cx_102 = 0x0022 - bp_8 + si_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DE5:
	byte al_114
	si_105 = si_105 - 0x0001
	byte al_109 = Mem108[ss:si_105:byte]
	branch al_109 >=u 0x0A l0800_8DF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF1:
	al_114 = al_109 - 0x0A + Mem108[ss:bp_8 + 0x0004:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DED:
	al_114 = al_109 + 0x30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF4:
	Mem123[es_129:di_122:byte] = al_114
	di_122 = di_122 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch cx_102 != 0x0000 l0800_8DE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DF7:
	Mem131[es_129:di_122:byte] = 0x00
	word16 sp_142 = sp_134 + 2
	word16 si_149 = Mem131[ss:sp_142 + 2:word16]
	diOut = Mem131[ss:sp_142:word16]
	return si_149
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8D87_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8DCF:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8E09(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax bx cx di dx si Top
// Preserved: bp sp
fn0800_8E09_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E09:
	word16 di_36
	word16 si_38 = fn0800_8D87(0x00, 0x000A, SEQ(wArg04, wArg02), wArg06, 0x0000, out di_36)
	diOut = di_36
	return si_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E09_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8E29(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_8E29_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E29:
	Mem13[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 ax_23 = DPB(DPB(ax, 0x42, 8), bArg08, 0)
	word16 dx_19 = wArg04
	branch msdos_set_file_position(wArg02, SEQ(wArg06, wArg04), bArg08, SEQ(wArg04, ax_23)) l0800_8E4B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E4B:
	word32 dx_ax_34 = (word32) fn0800_8D2B(ds, ax_23)
	ax_23 = (word16) dx_ax_34 (alias)
	dx_19 = SLICE(dx_ax_34, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E49:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E50:
	cxOut = wArg06
	dxOut = dx_19
	bxOut = wArg02
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E29_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8E52(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_8E52_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E52:
	word16 ax_21
	__syscall(0x21)
	word16 ax_19 = DPB(ax, 0x39, 8)
	branch C l0800_8E64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E64:
	ax_21 = fn0800_8D2B(ds, ax_19)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E60:
	ax_21 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E68:
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E52_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8E6A(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax di dx si
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_8E6A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E6A:
	branch (wArg08 | wArg0A) != 0x0000 l0800_8E7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E75:
	wArg0A = ds
	wArg08 = 0x4ED6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E7D:
	word16 ax_30
	word16 dx_29
	branch (wArg04 | wArg06) != 0x0000 l0800_8E8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E8F:
	dx_29 = wArg06
	ax_30 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E88:
	dx_29 = ds
	ax_30 = 0x2572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8E95:
	word16 dx_51
	word16 di_67
	word16 si_69 = fn0800_8E09(fn0800_9CE6(wArg08, wArg0A, ax_30, dx_29, out dx_51), dx_51, wArg02, out di_67)
	fn0800_BF5F(SEQ(wArg0A, wArg08), SEQ(ds, 0x2576))
	dxOut = wArg0A
	siOut = si_69
	diOut = di_67
	return wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8E6A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] dx:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZO ax cx dx Top
// Preserved: si sp
fn0800_8F18_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F18:
	word16 ax_14 = dx
	branch dx == 0x0000 l0800_8F21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F1F:
	ax_14 = (word16) (bx *u dx) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F21:
	branch cx == 0x0000 l0800_8F28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F23:
	ax_14 = (word16) (ax *u cx) + ax_14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F28:
	chOut = <invalid>
	word32 dx_ax_42 = bx *u ax
	dxOut = SLICE(dx_ax_42, word16, 16) + ax_14
	return (word16) dx_ax_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F18_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8F2F(byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[8..15] ax:[8..15] bl:[0..15] bx:[8..15] cx:[0..15] dx:[0..15]
// LiveOut: CZ bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: sp
fn0800_8F2F_entry:
	word16 ax_13 = DPB(ax, al, 0)
	word16 bx_22 = DPB(bx, bl, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F2F:
	word16 dx_16 = dx + (ax_13 >>u 0x04)
	word16 cx_26 = cx + (bx_22 >>u 0x04)
	word16 bx_32 = DPB(bx_22 >>u 0x04, bl, 0) & 0x000F
	branch dx_16 != cx_26 l0800_8F4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F4D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F4F:
	cxOut = cx_26
	dxOut = dx_16
	bxOut = bx_32
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F50(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_8F50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F50:
	word16 ax_23
	word16 wLoc04_52
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0002) == 0x0000 l0800_8F66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F66:
	dx = (word16) ptrArg04 (alias)
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_23) l0800_8F79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F79:
	wLoc04_52 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F77:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F60:
	wLoc04_52 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7A:
	ax_23 = fn0800_8D2B(ds, wLoc04_52)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7D:
	chOut = <invalid>
	dxOut = dx
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8F7F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut: dx
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_8F7F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F7F:
	word16 dx_15 = (word16) ptrArg02
	word16 ax_21 = DPB(ax, 0x41, 8)
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), dx_15) l0800_8F91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F91:
	fn0800_8D2B(ds, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F8D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F95:
	return dx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F7F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_8F97(word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, selector psegArg0C, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: cx di
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1803, out di_5)
	diOut = di_5
	return (byte) cx_900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1802, out di_18)
	diOut = di_18
	return (byte) cx_900
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F97_entry:
	def fp
	def bp
	def ss
	def si
	def di
	def es
	def ds
	def cx
	def bx
	def dx
	def wArg0A
	def psegArg0C
	def wArg08
	def wArg06
	def wArg02
	def wLoc0C
	def bLoc03
	def wArg04
	def wLoc0A
	Top_29 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8F97:
	wLoc06_1247 = 0x0000
	wLoc08_1248 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FC6:
	sp_45 = fp - 0x0032
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FC8:
	bLoc03_1696 = PHI((bLoc03, l0800_8FC6), (bLoc03_1698, l0800_911C), (bLoc03_1255, l0800_92AB), (bLoc03_1489, l0800_9391), (bLoc03_1255, l0800_91F1), (bLoc03_1255, l0800_91FD))
	wLoc0C_1686 = PHI((wLoc0C, l0800_8FC6), (wLoc0C_1306, l0800_911C), (wLoc0C_1306, l0800_92AB), (wLoc0C_1264, l0800_9391), (wLoc0C_1306, l0800_91F1), (wLoc0C_1306, l0800_91FD))
	wLoc06_1667 = PHI((wLoc06_1247, l0800_8FC6), (wLoc06_1668, l0800_911C), (wLoc06_1670, l0800_92AB), (wLoc06_1671, l0800_9391), (wLoc06_1313, l0800_91F1), (wLoc06_1667, l0800_91FD))
	wLoc08_1589 = PHI((wLoc08_1248, l0800_8FC6), (wLoc08_1371, l0800_911C), (wLoc08_1596, l0800_92AB), (wLoc08_1597, l0800_9391), (wLoc08_1371, l0800_91F1), (wLoc08_1371, l0800_91FD))
	wArg0A_1250 = PHI((wArg0A, l0800_8FC6), (wArg0A_1254, l0800_911C), (wArg0A_1254, l0800_92AB), (wArg0A_1262, l0800_9391), (wArg0A_1254, l0800_91F1), (wArg0A_1254, l0800_91FD))
	Top_1236 = PHI((Top_29, l0800_8FC6), (Top_1237, l0800_911C), (Top_1240, l0800_92AB), (Top_1241, l0800_9391), (Top_598, l0800_91F1), (Top_565, l0800_91FD))
	dx_1227 = PHI((dx, l0800_8FC6), (dx_1229, l0800_911C), (dx_1231, l0800_92AB), (dx_1232, l0800_9391), (dx_671, l0800_91F1), (dx_671, l0800_91FD))
	bx_1217 = PHI((bx, l0800_8FC6), (bx_1219, l0800_911C), (bx_1222, l0800_92AB), (bx_1223, l0800_9391), (bx_116, l0800_91F1), (bx_116, l0800_91FD))
	cx_1207 = PHI((cx, l0800_8FC6), (cx_1209, l0800_911C), (cx_1212, l0800_92AB), (cx_1213, l0800_9391), (cx_900, l0800_91F1), (cx_900, l0800_91FD))
	sp_1199 = PHI((sp_45, l0800_8FC6), (sp_1200, l0800_911C), (sp_1203, l0800_92AB), (sp_1204, l0800_9391), (sp_599, l0800_91F1), (sp_564, l0800_91FD))
	di_1194 = PHI((di, l0800_8FC6), (di_1195, l0800_911C), (di_1197, l0800_92AB), (di_1198, l0800_9391), (di_566, l0800_91F1), (di_94, l0800_91FD))
	Mem51 = PHI((Mem47, l0800_8FC6), (Mem1077, l0800_911C), (Mem1078, l0800_92AB), (Mem1079, l0800_9391), (Mem595, l0800_91F1), (Mem533, l0800_91FD))
	si_52 = wArg0A_1250
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FCB:
	bLoc03_1400 = PHI((bLoc03_1399, l0800_9019), (bLoc03_1399, l0800_902B), (bLoc03_1696, l0800_8FC8))
	wLoc0C_1398 = PHI((wLoc0C_1397, l0800_9019), (wLoc0C_1397, l0800_902B), (wLoc0C_1686, l0800_8FC8))
	wArg0A_1394 = PHI((wArg0A_1393, l0800_9019), (wArg0A_1393, l0800_902B), (wArg0A_1250, l0800_8FC8))
	wLoc08_1371 = PHI((wLoc08_1451, l0800_9019), (wLoc08_1372, l0800_902B), (wLoc08_1589, l0800_8FC8))
	Top_909 = PHI((Top_1025, l0800_9019), (Top_911, l0800_902B), (Top_1236, l0800_8FC8))
	dx_906 = PHI((dx_1022, l0800_9019), (dx_907, l0800_902B), (dx_1227, l0800_8FC8))
	bx_903 = PHI((bx_1019, l0800_9019), (bx_904, l0800_902B), (bx_1217, l0800_8FC8))
	cx_900 = PHI((cx_1018, l0800_9019), (cx_915, l0800_902B), (cx_1207, l0800_8FC8))
	sp_888 = PHI((sp_1027, l0800_9019), (sp_916, l0800_902B), (sp_1199, l0800_8FC8))
	di_877 = PHI((di_923, l0800_9019), (di_923, l0800_902B), (di_1194, l0800_8FC8))
	si_58 = PHI((si_895, l0800_9019), (si_895, l0800_902B), (si_52, l0800_8FC8))
	Mem55 = PHI((Mem1030, l0800_9019), (Mem893, l0800_902B), (Mem51, l0800_8FC8))
	al_59 = Mem55[ds:si_58:byte]
	si_60 = si_58 + 0x0001
	al_61 = al_59
	branch al_59 == 0x00 l0800_9042
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9042:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9042_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1798, out di_67)
	diOut = di_67
	return (byte) cx_900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FD4:
	branch al_59 == 0x25 l0800_9045
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9045:
	wLoc0C_1252 = 0xFFFF
	es_79 = psegArg0C
	bLoc03_1253 = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9051:
	wLoc0C_1306 = PHI((wLoc0C_1252, l0800_9045), (wLoc0C_1306, l0800_9078), (wLoc0C_1306, l0800_9092), (wLoc0C_1306, l0800_90AA), (wLoc0C_1306, l0800_90A4), (wLoc0C_1306, l0800_90BB), (wLoc0C_1306, l0800_909E), (wLoc0C_1306, l0800_9098), (wLoc0C_1367, l0800_907E), (wLoc0C_1368, l0800_9088))
	bLoc03_1255 = PHI((bLoc03_1253, l0800_9045), (bLoc03_1369, l0800_9078), (bLoc03_1305, l0800_9092), (bLoc03_1256, l0800_90AA), (bLoc03_1257, l0800_90A4), (bLoc03_1255, l0800_90BB), (bLoc03_1304, l0800_909E), (bLoc03_1303, l0800_9098), (bLoc03_1255, l0800_907E), (bLoc03_1255, l0800_9088))
	dx_671 = PHI((dx_906, l0800_9045), (dx_671, l0800_9078), (dx_671, l0800_9092), (dx_671, l0800_90AA), (dx_671, l0800_90A4), (dx_155, l0800_90BB), (dx_671, l0800_909E), (dx_671, l0800_9098), (dx_671, l0800_907E), (dx_1166, l0800_9088))
	bx_111 = PHI((bx_903, l0800_9045), (bx_116, l0800_9078), (bx_116, l0800_9092), (bx_116, l0800_90AA), (bx_116, l0800_90A4), (bx_116, l0800_90BB), (bx_116, l0800_909E), (bx_116, l0800_9098), (bx_116, l0800_907E), (bx_116, l0800_9088))
	di_91 = PHI((di_877, l0800_9045), (di_94, l0800_9078), (di_94, l0800_9092), (di_94, l0800_90AA), (di_94, l0800_90A4), (di_94, l0800_90BB), (di_94, l0800_909E), (di_94, l0800_9098), (di_833, l0800_907E), (di_833, l0800_9088))
	Mem83 = PHI((Mem80, l0800_9045), (Mem844, l0800_9078), (Mem503, l0800_9092), (Mem119, l0800_90AA), (Mem123, l0800_90A4), (Mem89, l0800_90BB), (Mem499, l0800_909E), (Mem495, l0800_9098), (Mem831, l0800_907E), (Mem841, l0800_9088))
	si_82 = PHI((si_60, l0800_9045), (si_85, l0800_9078), (si_85, l0800_9092), (si_85, l0800_90AA), (si_85, l0800_90A4), (si_85, l0800_90BB), (si_85, l0800_909E), (si_85, l0800_9098), (si_85, l0800_907E), (si_85, l0800_9088))
	si_85 = si_82 + 0x0001
	ax_86 = (int16) Mem83[ds:si_82:byte]
	wArg0A_1254 = si_85
	ax_92 = di_91
	di_94 = ax_86
	branch ax_86 < 0x0000 l0800_9075
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9075:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9075_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1800, out di_100)
	diOut = di_100
	return (byte) cx_900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_905C:
	bx_113 = DPB(DPB(bx_111, Mem89[ds:ax_86 + 0x257C:byte], 0), 0x00, 8) (alias)
	branch bx_113 <=u 0x0015 l0800_906A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906A:
	bx_116 = bx_113 << 0x0001
	switch (bx_113 << 0x0001) { l0800_93BE l0800_93BE l0800_93BE l0800_9071 l0800_9078 l0800_907E l0800_926F l0800_90C2 l0800_90C2 l0800_90CC l0800_91A1 l0800_9092 l0800_909E l0800_9098 l0800_90BD l0800_920B l0800_92B1 l0800_90B0 l0800_90C7 l0800_9127 l0800_90A4 l0800_90AA }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90AA:
	bLoc03_1256 = bLoc03_1255 | 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90A4:
	bLoc03_1257 = bLoc03_1255 & 0xDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9127:
	ax_127 = fn0800_912A(di_91, cx_900, bx_113 << 0x0001, fp - 2, ds, out cx_130, out bx_129, out bp_128, out di_1795)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9127_thunk_fn0800_912A:
	fn0800_912A(ax_127, cx_130, bx_129, bp_128, ds, out cx_143, out bx_1804, out bp_1805, out di_144)
	diOut = di_144
	return (byte) cx_143
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90C7:
	si_153 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90B0:
	ax_154 = wLoc08_1371
	dx_155 = 0x0000
	branch (bLoc03_1255 & 0x01) == 0x00 l0800_9110
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90BB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92B1:
	sp_160 = sp_888 - 2
	Mem162[ss:sp_160:word16] = psegArg0C
	Mem167[ss:sp_160 - 2:word16] = ss
	es_168 = Mem167[ss:sp_160 - 2:selector]
	di_170 = fp - 0x002C
	cx_171 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BD:
	di_463 = PHI((di_170, l0800_92B1), (di_465, l0800_92BD_1))
	Mem175 = PHI((Mem167, l0800_92B1), (Mem464, l0800_92BD_1))
	cx_172 = PHI((cx_171, l0800_92B1), (cx_466, l0800_92BD_1))
	branch cx_172 == 0x0000 l0800_92BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BF:
	al_180 = Mem175[ds:si_85:byte]
	v48_183 = bLoc03_1255 & 0xEF
	es_176 = Mem175[ss:sp_160:selector]
	sp_177 = sp_160 + 2
	ax_1093 = (word16) al_180 (alias)
	si_181 = si_85 + 0x0001
	bLoc03_1260 = v48_183
	branch al_180 != 0x5E l0800_92D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92CA:
	al_192 = Mem189[ds:si_85 + 0x0001:byte]
	bLoc03_1261 = v48_183 | 0x10
	ax_1094 = DPB(ax_1093, al_192, 0) (alias)
	si_193 = si_85 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92D0:
	bLoc03_1489 = PHI((bLoc03_1260, l0800_92BF), (bLoc03_1261, l0800_92CA))
	si_1116 = PHI((si_181, l0800_92BF), (si_193, l0800_92CA))
	Mem1111 = PHI((Mem184, l0800_92BF), (Mem189, l0800_92CA))
	ax_1092 = PHI((ax_1093, l0800_92BF), (ax_1094, l0800_92CA))
	al_1091 = PHI((al_180, l0800_92BF), (al_192, l0800_92CA))
	ax_1096 = DPB(DPB(ax_1092, 0x00, 8), al_1091, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92D2:
	dx_1141 = PHI((dx_671, l0800_92D0), (dx_1145, l0800_92EE), (dx_1146, l0800_92F2), (dx_1147, l0800_92F7))
	si_1115 = PHI((si_1116, l0800_92D0), (si_218, l0800_92EE), (si_218, l0800_92F2), (si_218, l0800_92F7))
	Mem209 = PHI((Mem1111, l0800_92D0), (Mem216, l0800_92EE), (Mem216, l0800_92F2), (Mem216, l0800_92F7))
	ax_197 = PHI((ax_1096, l0800_92D0), (ax_1108, l0800_92EE), (ax_1100, l0800_92F2), (ax_1101, l0800_92F7))
	al_195 = PHI((al_1091, l0800_92D0), (al_217, l0800_92EE), (al_217, l0800_92F2), (al_217, l0800_92F7))
	ax_198 = DPB(ax_197, al_195, 0) (alias)
	Mem211[ss:fp - 0x002C + (ax_198 >>u 0x03):byte] = Mem209[ss:fp - 0x002C + (ax_198 >>u 0x03):byte] | 0x80
	dl_196 = al_195
	dx_1148 = DPB(dx_1141, al_195, 0) (alias)
	di_201 = ax_198 >>u 0x03
	cx_1130 = 0x8007 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92E4:
	dx_1140 = PHI((dx_1148, l0800_92D2), (dx_1149, l0800_92FD), (dx_1151, l0800_9311))
	cx_1129 = PHI((cx_1130, l0800_92D2), (cx_1129, l0800_92FD), (cx_1132, l0800_9311))
	di_1124 = PHI((di_201, l0800_92D2), (di_1124, l0800_92FD), (di_449, l0800_9311))
	ax_1097 = PHI((ax_198, l0800_92D2), (ax_1102, l0800_92FD), (ax_1105, l0800_9311))
	dl_431 = PHI((dl_196, l0800_92D2), (dl_431, l0800_92FD), (dl_1161, l0800_9311))
	Mem216 = PHI((Mem211, l0800_92D2), (Mem216, l0800_92FD), (Mem454, l0800_9311))
	si_215 = PHI((si_1115, l0800_92D2), (si_438, l0800_92FD), (si_438, l0800_9311))
	al_217 = Mem216[ds:si_215:byte]
	ch_1165 = SLICE(cx_1129, byte, 8) (alias)
	dx_1145 = DPB(dx_1140, dl_431, 0) (alias)
	dx_1146 = DPB(dx_1140, dl_431, 0) (alias)
	dx_1147 = DPB(dx_1140, dl_431, 0) (alias)
	dx_1149 = DPB(dx_1140, dl_431, 0) (alias)
	dx_1153 = DPB(dx_1140, dl_431, 0) (alias)
	ax_1100 = DPB(ax_1097, al_217, 0) (alias)
	ax_1101 = DPB(ax_1097, al_217, 0) (alias)
	ax_1107 = DPB(ax_1097, al_217, 0) (alias)
	ax_1108 = DPB(ax_1097, al_217, 0) (alias)
	si_218 = si_215 + 0x0001
	branch al_217 == 0x00 l0800_9313
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9313:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9313_thunk_fn0800_93BE:
	fn0800_93BE(fp - 2, out bp_1810, out di_225)
	diOut = di_225
	return (byte) cx_1129
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92EA:
	branch al_217 == 0x5D l0800_9316
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9316:
	v64_232 = wLoc0C_1306 & 0x7FFF
	wArg0A_1262 = si_218
	wLoc0C_1264 = v64_232
	si_235 = v64_232
	branch (bLoc03_1489 & 0x01) != 0x00 l0800_932A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9327:
	di_239 = fn0800_8FAB(fp - 2, ds, out es_240)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_932A:
	wLoc08_1266 = PHI((wLoc08_1371, l0800_9316), (wLoc08_1371, l0800_9327), (wLoc08_1267, l0800_9364), (wLoc08_1267, l0800_936A))
	Top_276 = PHI((Top_909, l0800_9316), (Top_909, l0800_9327), (Top_277, l0800_9364), (Top_277, l0800_936A))
	dx_274 = PHI((dx_1153, l0800_9316), (dx_1153, l0800_9327), (dx_275, l0800_9364), (dx_275, l0800_936A))
	bx_272 = PHI((bx_116, l0800_9316), (bx_116, l0800_9327), (bx_353, l0800_9364), (bx_353, l0800_936A))
	cx_270 = PHI((cx_1129, l0800_9316), (cx_1129, l0800_9327), (cx_396, l0800_9364), (cx_396, l0800_936A))
	ax_267 = PHI((ax_1107, l0800_9316), (ax_1107, l0800_9327), (ax_1126, l0800_9364), (ax_1127, l0800_936A))
	di_266 = PHI((di_1124, l0800_9316), (di_239, l0800_9327), (di_266, l0800_9364), (di_372, l0800_936A))
	es_257 = PHI((es_176, l0800_9316), (es_240, l0800_9327), (es_283, l0800_9364), (es_283, l0800_936A))
	sp_255 = PHI((sp_177, l0800_9316), (sp_177, l0800_9327), (sp_284, l0800_9364), (sp_284, l0800_936A))
	Mem251 = PHI((Mem233, l0800_9316), (Mem233, l0800_9327), (Mem264, l0800_9364), (Mem371, l0800_936A))
	si_245 = PHI((si_235, l0800_9316), (si_235, l0800_9327), (si_350, l0800_9364), (si_350, l0800_936A))
	si_246 = si_245 - 0x0001
	branch si_246 < 0x0000 l0800_9385
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_932D:
	v68_252 = wLoc08_1266 + 0x0001
	sp_256 = sp_255 - 2
	Mem258[ss:sp_256:word16] = es_257
	Mem261[ss:sp_256 - 2:word16] = wArg08
	Mem264[ss:sp_256 - 4:word16] = wArg06
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_267,bx:bx_272,cx:cx_270,dx:dx_274,sp:sp_256 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_218,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFF6:v64_232,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v68_252,Stack +FFFFFFFC:wLoc06_1667,Stack +FFFFFFFF:bLoc03_1489,Top:Top_276
		defs: ax:ax_268,dx:dx_275,sp:sp_265,Top:Top_277
	wLoc08_1267 = v68_252
	cx_281 = Mem264[ss:sp_265 + 2:word16]
	es_283 = Mem264[ss:sp_265 + 4:selector]
	sp_284 = sp_265 + 6
	branch ax_268 < 0x0000 l0800_9394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9394:
	branch si_246 + 0x0001 >= v64_232 l0800_9398_thunk_fn0800_93A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9398_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1811, out di_294)
	diOut = di_294
	return (byte) cx_281
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_939A:
	branch (bLoc03_1489 & 0x01) != 0x00 l0800_939E_thunk_fn0800_93A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_939E_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1812, out di_308)
	diOut = di_308
	return (byte) cx_281
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A0:
	Mem318[es_283:di_266:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A3_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1813, out di_325)
	diOut = di_325
	return (byte) cx_281
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9341:
	al_368 = (byte) ax_268 (alias)
	cx_396 = 0x8007 (alias)
	si_350 = si_246
	ax_387 = DPB(ax_268, al_368, 0) (alias)
	ax_388 = DPB(ax_268, al_368, 0) (alias)
	ax_1126 = DPB(ax_1125, al_368, 0) (alias)
	ax_1127 = DPB(ax_1125, al_368, 0) (alias)
	bx_353 = ax_268 >>u 0x03
	branch (Mem264[ss:fp - 0x002C + (ax_268 >>u 0x03):byte] & 0x80) == 0x00 l0800_935E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_935E:
	branch (bLoc03_1489 & 0x10) == 0x00 l0800_936D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9356:
	branch (bLoc03_1489 & 0x10) == 0x00 l0800_9364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9364:
	ax_1125 = PHI((ax_387, l0800_9356), (ax_388, l0800_935E))
	branch (bLoc03_1489 & 0x01) != 0x00 l0800_932A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_936A:
	Mem371[es_283:di_266:byte] = al_368
	di_372 = di_266 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_935C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_936D:
	ax_386 = PHI((ax_387, l0800_935C), (ax_388, l0800_935E))
	Mem377[ss:sp_265 + 4:word16] = es_283
	Mem381[ss:sp_265 + 2:word16] = wArg08
	Mem384[ss:sp_265:word16] = wArg06
	Mem389[ss:sp_265 - 2:word16] = ax_386
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_386,bx:ax_268 >>u 0x03,cx:0x8007,dx:dx_275,sp:sp_265 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_218,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFF6:v64_232,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v68_252,Stack +FFFFFFFC:wLoc06_1667,Stack +FFFFFFFF:bLoc03_1489,Top:Top_277
		defs: bx:bx_399,cx:cx_397,dx:dx_401,sp:sp_390,Top:Top_403
	es_406 = Mem389[ss:sp_390 + 0x0006:selector]
	sp_407 = sp_390 + 0x0008
	branch si_246 + 0x0001 >= v64_232 l0800_938E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9385:
	Top_1242 = PHI((Top_276, l0800_932A), (Top_403, l0800_936D))
	dx_1233 = PHI((dx_274, l0800_932A), (dx_401, l0800_936D))
	bx_1224 = PHI((bx_272, l0800_932A), (bx_399, l0800_936D))
	cx_1214 = PHI((cx_270, l0800_932A), (cx_397, l0800_936D))
	sp_1205 = PHI((sp_255, l0800_932A), (sp_407, l0800_936D))
	es_424 = PHI((es_257, l0800_932A), (es_406, l0800_936D))
	Mem415 = PHI((Mem251, l0800_932A), (Mem409, l0800_936D))
	branch (bLoc03_1489 & 0x01) != 0x00 l0800_9391
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_938B:
	wLoc06_1302 = wLoc06_1667 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_938E:
	wLoc06_1672 = PHI((wLoc06_1667, l0800_936D), (wLoc06_1302, l0800_938B))
	Top_1243 = PHI((Top_403, l0800_936D), (Top_1242, l0800_938B))
	dx_1234 = PHI((dx_401, l0800_936D), (dx_1233, l0800_938B))
	bx_1225 = PHI((bx_399, l0800_936D), (bx_1224, l0800_938B))
	cx_1215 = PHI((cx_397, l0800_936D), (cx_1214, l0800_938B))
	sp_1206 = PHI((sp_407, l0800_936D), (sp_1205, l0800_938B))
	es_423 = PHI((es_406, l0800_936D), (es_424, l0800_938B))
	Mem427[es_423:di_266:byte] = 0x00
	di_428 = di_266 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9391:
	wLoc06_1671 = PHI((wLoc06_1667, l0800_9385), (wLoc06_1672, l0800_938E))
	Top_1241 = PHI((Top_1242, l0800_9385), (Top_1243, l0800_938E))
	dx_1232 = PHI((dx_1233, l0800_9385), (dx_1234, l0800_938E))
	bx_1223 = PHI((bx_1224, l0800_9385), (bx_1225, l0800_938E))
	cx_1213 = PHI((cx_1214, l0800_9385), (cx_1215, l0800_938E))
	sp_1204 = PHI((sp_1205, l0800_9385), (sp_1206, l0800_938E))
	di_1198 = PHI((di_266, l0800_9385), (di_428, l0800_938E))
	Mem1079 = PHI((Mem415, l0800_9385), (Mem427, l0800_938E))
	wLoc08_1597 = wLoc08_1266
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92EE:
	branch al_217 != 0x2D l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92F2:
	branch dl_431 >u Mem216[es_176:si_218:byte] l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92F7:
	branch Mem216[es_176:si_218:byte] == 0x5D l0800_92D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92FD:
	al_439 = Mem216[ds:si_218:byte] - dl_431
	si_438 = si_218 + 0x0001
	ax_1102 = DPB(ax_1097, al_439, 0) (alias)
	branch al_439 == 0x00 l0800_92E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9303:
	dl_442 = dl_431 + al_439
	dx_1151 = DPB(dx_1140, dl_442, 0) (alias)
	dl_1161 = dl_442 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9305:
	al_457 = PHI((al_439, l0800_9303), (al_458, l0800_9305))
	Mem452 = PHI((Mem216, l0800_9303), (Mem454, l0800_9305))
	di_448 = PHI((di_1124, l0800_9303), (di_449, l0800_9305))
	ch_444 = PHI((ch_1165, l0800_9303), (ch_446, l0800_9305))
	ch_446 = __rol(ch_444, 0x01)
	di_449 = di_448 + ((ch_444 & 0x80) != 0x00)
	Mem454[ss:fp - 0x002C + di_449:byte] = Mem452[ss:fp - 0x002C + di_449:byte] | ch_446
	al_458 = al_457 - 0x01
	cx_1132 = DPB(cx_1129, ch_446, 8) (alias)
	ax_1105 = DPB(ax_1097, al_458, 0) (alias)
	branch al_458 != 0x00 l0800_9305
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9311:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92BD_1:
	Mem464[es_168:di_463:word16] = 0x0000
	di_465 = di_463 + 0x0002
	cx_466 = cx_172 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920B:
	ax_467 = fn0800_920E(di_91, cx_900, bx_113 << 0x0001, fp - 2, ds, out cx_470, out bx_469, out bp_468, out di_1794)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920B_thunk_fn0800_920E:
	fn0800_920E(ax_467, cx_470, bx_469, bp_468, ds, out cx_483, out bx_1806, out bp_1807, out di_484)
	diOut = di_484
	return (byte) cx_483
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90BD:
	si_493 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9098:
	bLoc03_1303 = bLoc03_1255 | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_909E:
	bLoc03_1304 = bLoc03_1255 | 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9092:
	bLoc03_1305 = bLoc03_1255 | 0x08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91A1:
	sp_506 = sp_888 - 2
	Mem507[ss:sp_506:word16] = ss
	Mem510[ss:sp_506 - 2:word16] = fp - 0x000A
	Mem512[ss:sp_506 - 4:word16] = ss
	Mem515[ss:sp_506 - 6:word16] = fp - 0x0008
	Mem521[ss:sp_506 - 8:word16] = wLoc0C_1306 & 0x7FFF
	Mem524[ss:sp_506 - 10:word16] = wArg08
	Mem527[ss:sp_506 - 12:word16] = wArg06
	Mem530[ss:sp_506 - 14:word16] = wArg04
	Mem533[ss:sp_506 - 16:word16] = wArg02
	fn0800_A2D0(ds)
	sp_534 = <invalid>
	branch wLoc0A <= 0x0000 l0800_9203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9203:
	fn0800_A2D8(ds)
	branch wLoc0A < 0x0000 l0800_919E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_919E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_919E_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1816, out di_544)
	diOut = di_544
	return (byte) cx_900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9208:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9208_thunk_fn0800_93BE:
	fn0800_93BE(fp - 2, out bp_1815, out di_555)
	diOut = di_555
	return (byte) cx_900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91CA:
	branch ((int16) bLoc03_1255 & 0x0001) != 0x0000 l0800_91FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91FD:
	Top_565 = fn0800_A2D8(ds)
	sp_564 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91D3:
	di_566 = fn0800_8FAB(fp - 2, ds, out es_567)
	wLoc06_1313 = wLoc06_1667 + 0x0001
	branch (bLoc03_1255 & 0x04) == 0x00 l0800_91E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91E4:
	branch (bLoc03_1255 & 0x08) == 0x00 l0800_91EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91EF:
	ax_580 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91EA:
	ax_583 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91DF:
	ax_584 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_91F1:
	ax_587 = PHI((ax_584, l0800_91DF), (ax_583, l0800_91EA), (ax_580, l0800_91EF))
	Mem589[ss:sp_534 + 0x0010:word16] = ax_587
	Mem592[ss:sp_534 + 0x000E:word16] = es_567
	Mem595[ss:sp_534 + 0x000C:word16] = di_566
	sp_597 = <invalid>
	Top_598 = fn0800_A2D4(ds)
	sp_599 = sp_597 + 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90CC:
	si_601 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90C2:
	si_604 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90CE:
	si_645 = PHI((si_153, l0800_90C7), (si_493, l0800_90BD), (si_604, l0800_90C2), (si_601, l0800_90CC))
	branch (ax_86 & 0x0020) != 0x0000 l0800_90DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90D4:
	branch ax_86 == 0x0058 l0800_90DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90D9:
	bLoc03_1316 = bLoc03_1255 | 0x04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_90DD:
	bLoc03_1335 = PHI((bLoc03_1255, l0800_90CE), (bLoc03_1255, l0800_90D4), (bLoc03_1316, l0800_90D9))
	sp_625 = sp_888 - 2
	Mem627[ss:sp_625:word16] = ss
	Mem631[ss:sp_625 - 2:word16] = fp - 0x000A
	Mem633[ss:sp_625 - 4:word16] = ss
	Mem636[ss:sp_625 - 6:word16] = fp - 0x0008
	Mem642[ss:sp_625 - 8:word16] = wLoc0C_1306 & 0x7FFF
	Mem646[ss:sp_625 - 10:word16] = si_645
	Mem649[ss:sp_625 - 12:word16] = wArg08
	Mem652[ss:sp_625 - 14:word16] = wArg06
	Mem655[ss:sp_625 - 16:word16] = wArg04
	Mem658[ss:sp_625 - 18:word16] = wArg02
	ax_673 = fn0800_94B0(wLoc0C_1306 & 0x7FFF, cx_900, dx_671, bx_113 << 0x0001, fp - 2, si_645, ax_86, ds, Mem658[ss:sp_625 - 18:word16], Mem658[ss:sp_625 - 16:word16], Mem658[ss:sp_625 - 14:word16], Mem658[ss:sp_625 - 12:word16], Mem658[ss:sp_625 - 10:word16], Mem658[ss:sp_625 - 8:word16], out cx_675, out dx_677, out bx_674, out di_676, out Top_680)
	branch wLoc0A <= 0x0000 l0800_911F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911F:
	branch wLoc0A < 0x0000 l0800_9124
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9124:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9124_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1809, out di_691)
	diOut = di_691
	return (byte) cx_675
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9121:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9121_thunk_fn0800_93BE:
	fn0800_93BE(fp - 2, out bp_1808, out di_702)
	diOut = di_702
	return (byte) cx_675
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9107:
	branch (bLoc03_1335 & 0x01) != 0x00 l0800_911C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_910D:
	wLoc06_1339 = wLoc06_1667 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9110:
	wLoc06_1669 = PHI((wLoc06_1667, l0800_90B0), (wLoc06_1339, l0800_910D))
	bLoc03_1340 = PHI((bLoc03_1255, l0800_90B0), (bLoc03_1335, l0800_910D))
	Top_1238 = PHI((Top_909, l0800_90B0), (Top_680, l0800_910D))
	bx_1220 = PHI((bx_116, l0800_90B0), (bx_674, l0800_910D))
	cx_1210 = PHI((cx_900, l0800_90B0), (cx_675, l0800_910D))
	dx_728 = PHI((dx_155, l0800_90B0), (dx_677, l0800_910D))
	ax_721 = PHI((ax_154, l0800_90B0), (ax_673, l0800_910D))
	di_715 = fn0800_8FAB(fp - 2, ds, out es_716)
	Mem722[es_716:di_715:word16] = ax_721
	di_723 = di_715 + 0x0002
	branch (bLoc03_1340 & 0x04) == 0x00 l0800_911C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911A:
	Mem731[es_716:di_715 + 0x0002:word16] = dx_728
	dx_730 = ax_721
	di_732 = di_715 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_911C:
	bLoc03_1698 = PHI((bLoc03_1340, l0800_9110), (bLoc03_1340, l0800_911A), (bLoc03_1335, l0800_9107))
	wLoc06_1668 = PHI((wLoc06_1669, l0800_9110), (wLoc06_1669, l0800_911A), (wLoc06_1667, l0800_9107))
	Top_1237 = PHI((Top_1238, l0800_9110), (Top_1238, l0800_911A), (Top_680, l0800_9107))
	dx_1229 = PHI((dx_728, l0800_9110), (dx_730, l0800_911A), (dx_677, l0800_9107))
	bx_1219 = PHI((bx_1220, l0800_9110), (bx_1220, l0800_911A), (bx_674, l0800_9107))
	cx_1209 = PHI((cx_1210, l0800_9110), (cx_1210, l0800_911A), (cx_675, l0800_9107))
	di_1195 = PHI((di_723, l0800_9110), (di_732, l0800_911A), (di_676, l0800_9107))
	Mem1077 = PHI((Mem722, l0800_9110), (Mem731, l0800_911A), (Mem658, l0800_9107))
	sp_1200 = sp_888
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_926F:
	branch (bLoc03_1255 & 0x01) != 0x00 l0800_9278
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9275:
	di_736 = fn0800_8FAB(fp - 2, ds, out es_737)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9278:
	di_1175 = PHI((di_94, l0800_926F), (di_736, l0800_9275))
	es_1171 = PHI((es_79, l0800_926F), (es_737, l0800_9275))
	si_746 = wLoc0C_1306
	branch wLoc0C_1306 >= 0x0000 l0800_9282
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_927F:
	si_750 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9282:
	si_1173 = PHI((si_746, l0800_9278), (si_750, l0800_927F))
	branch wLoc0C_1306 == 0x0000 l0800_92A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9284:
	wLoc08_1342 = PHI((wLoc08_1371, l0800_9282), (wLoc08_1343, l0800_929F))
	Top_781 = PHI((Top_909, l0800_9282), (Top_782, l0800_929F))
	dx_779 = PHI((dx_671, l0800_9282), (dx_780, l0800_929F))
	bx_777 = PHI((bx_116, l0800_9282), (bx_778, l0800_929F))
	cx_775 = PHI((cx_900, l0800_9282), (cx_786, l0800_929F))
	ax_772 = PHI((ax_92, l0800_9282), (ax_1179, l0800_929F))
	di_771 = PHI((di_1175, l0800_9282), (di_1176, l0800_929F))
	si_770 = PHI((si_1173, l0800_9282), (si_812, l0800_929F))
	es_761 = PHI((es_1171, l0800_9282), (es_788, l0800_929F))
	sp_759 = PHI((sp_888, l0800_9282), (sp_789, l0800_929F))
	v65_756 = wLoc08_1342 + 0x0001
	sp_760 = sp_759 - 2
	Mem762[ss:sp_760:word16] = es_761
	Mem765[ss:sp_760 - 2:word16] = wArg08
	Mem768[ss:sp_760 - 4:word16] = wArg06
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_772,bx:bx_777,cx:cx_775,dx:dx_779,sp:sp_760 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:si_85,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFF6:wLoc0C_1306,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v65_756,Stack +FFFFFFFC:wLoc06_1667,Stack +FFFFFFFF:bLoc03_1255,Top:Top_781
		defs: ax:ax_773,bx:bx_778,dx:dx_780,sp:sp_769,Top:Top_782
	al_808 = (byte) ax_773 (alias)
	wLoc08_1343 = v65_756
	cx_786 = Mem768[ss:sp_769 + 2:word16]
	es_788 = Mem768[ss:sp_769 + 4:selector]
	sp_789 = sp_769 + 6
	ax_1180 = DPB(ax_773, al_808, 0) (alias)
	ax_1181 = DPB(ax_773, al_808, 0) (alias)
	branch ax_773 < 0x0000 l0800_92AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AE_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1814, out di_796)
	diOut = di_796
	return (byte) cx_786
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9298:
	branch (bLoc03_1255 & 0x01) != 0x00 l0800_929F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_929E:
	Mem809[es_788:di_771:byte] = al_808
	di_810 = di_771 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_929F:
	ax_1179 = PHI((ax_1180, l0800_9298), (ax_1181, l0800_929E))
	di_1176 = PHI((di_771, l0800_9298), (di_810, l0800_929E))
	Mem822 = PHI((Mem768, l0800_9298), (Mem809, l0800_929E))
	si_812 = si_770 - 0x0001
	branch si_812 > 0x0000 l0800_9284
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92A2:
	wLoc08_1596 = PHI((wLoc08_1371, l0800_9282), (wLoc08_1343, l0800_929F))
	Top_1240 = PHI((Top_909, l0800_9282), (Top_782, l0800_929F))
	dx_1231 = PHI((dx_671, l0800_9282), (dx_780, l0800_929F))
	bx_1222 = PHI((bx_116, l0800_9282), (bx_778, l0800_929F))
	cx_1212 = PHI((cx_900, l0800_9282), (cx_786, l0800_929F))
	sp_1203 = PHI((sp_888, l0800_9282), (sp_789, l0800_929F))
	di_1197 = PHI((di_1175, l0800_9282), (di_1176, l0800_929F))
	Mem820 = PHI((Mem89, l0800_9282), (Mem822, l0800_929F))
	branch (bLoc03_1255 & 0x01) != 0x00 l0800_92AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92A8:
	wLoc06_1366 = wLoc06_1667 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_92AB:
	wLoc06_1670 = PHI((wLoc06_1667, l0800_92A2), (wLoc06_1366, l0800_92A8))
	Mem1078 = PHI((Mem820, l0800_92A2), (Mem827, l0800_92A8))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_907E:
	wLoc0C_1367 = ax_86 - 0x0030
	di_833 = wLoc0C_1306
	branch wLoc0C_1306 < 0x0000 l0800_9051
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9088:
	dx_1166 = SLICE(wLoc0C_1306 *u 0x000A, word16, 16) (alias)
	wLoc0C_1368 = ax_86 - 0x0030 + (word16) (wLoc0C_1306 *u 0x000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9078:
	bLoc03_1369 = bLoc03_1255 | 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9071:
	al_873 = (byte) ax_86 (alias)
	di_849 = di_91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_906C_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1801, out di_852)
	diOut = di_852
	return (byte) cx_900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9067:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9067_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1797, out di_863)
	diOut = di_863
	return (byte) cx_900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FD8:
	bLoc03_1399 = PHI((bLoc03_1400, l0800_8FD4), (bLoc03_1255, l0800_9071))
	wLoc0C_1397 = PHI((wLoc0C_1398, l0800_8FD4), (wLoc0C_1306, l0800_9071))
	wArg0A_1393 = PHI((wArg0A_1394, l0800_8FD4), (wArg0A_1254, l0800_9071))
	dx_905 = PHI((dx_906, l0800_8FD4), (dx_671, l0800_9071))
	bx_902 = PHI((bx_903, l0800_8FD4), (bx_116, l0800_9071))
	si_895 = PHI((si_60, l0800_8FD4), (si_85, l0800_9071))
	di_876 = PHI((di_877, l0800_8FD4), (di_849, l0800_9071))
	al_872 = PHI((al_61, l0800_8FD4), (al_873, l0800_9071))
	v17_883 = wLoc08_1371 + 0x0001
	sp_889 = sp_888 - 2
	Mem890[ss:sp_889:word16] = wArg08
	Mem893[ss:sp_889 - 2:word16] = wArg06
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:di_876,bx:bx_902,cx:cx_900,dx:dx_905,sp:sp_889 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1393,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFF6:wLoc0C_1397,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v17_883,Stack +FFFFFFFC:wLoc06_1667,Stack +FFFFFFFF:bLoc03_1399,Top:Top_909
		defs: ax:ax_897,bx:bx_904,dx:dx_907,sp:sp_894,Top:Top_911
	ax_874 = (int16) al_872
	wLoc08_1372 = v17_883
	cx_915 = Mem893[ss:sp_894 + 2:word16]
	sp_916 = sp_894 + 4
	al_921 = (byte) ax_897 (alias)
	branch ax_897 < 0x0000 l0800_9016
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FEC:
	ax_922 = (int16) al_921
	di_923 = ax_874
	branch ax_874 < 0x0000 l0800_902B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FF1:
	branch Mem893[ds:ax_874 + 0x257C:byte] != 0x01 l0800_902B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_902B:
	branch ax_922 == ax_874 l0800_8FCB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_902F:
	Mem939[ss:sp_894 + 2:word16] = wArg08
	Mem942[ss:sp_894:word16] = wArg06
	Mem944[ss:sp_894 - 2:word16] = ax_922
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_922,bx:bx_904,cx:cx_915,dx:dx_907,sp:sp_894 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1393,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFF6:wLoc0C_1397,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v17_883,Stack +FFFFFFFC:wLoc06_1667,Stack +FFFFFFFF:bLoc03_1399,Top:Top_911
		defs: cx:cx_951
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_903F_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1799, out di_966)
	diOut = di_966
	return (byte) cx_951
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FF8:
	wLoc08_1436 = PHI((wLoc08_1372, l0800_8FF1), (wLoc08_1452, l0800_9004))
	Top_1024 = PHI((Top_911, l0800_8FF1), (Top_1046, l0800_9004))
	dx_1021 = PHI((dx_907, l0800_8FF1), (dx_1045, l0800_9004))
	cx_1017 = PHI((cx_915, l0800_8FF1), (cx_1050, l0800_9004))
	sp_997 = PHI((sp_916, l0800_8FF1), (sp_1051, l0800_9004))
	Mem987 = PHI((Mem893, l0800_8FF1), (Mem1040, l0800_9004))
	bx_977 = PHI((bx_904, l0800_8FF1), (bx_1044, l0800_9004))
	ax_975 = PHI((ax_922, l0800_8FF1), (ax_1052, l0800_9004))
	bl_980 = (byte) ax_975 (alias)
	bx_986 = DPB(ax_975, bl_980, 0) (alias)
	branch bl_980 < 0x00 l0800_9019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FFD:
	branch Mem987[ds:bx_986 + 0x257C:byte] != 0x01 l0800_9019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9019:
	sp_998 = sp_997 - 2
	Mem999[ss:sp_998:word16] = wArg08
	Mem1002[ss:sp_998 - 2:word16] = wArg06
	Mem1005[ss:sp_998 - 4:word16] = bx_986
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:bx_977,bx:bx_986,cx:cx_1017,dx:dx_1021,sp:sp_998 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1393,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFF6:wLoc0C_1397,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:wLoc08_1436,Stack +FFFFFFFC:wLoc06_1667,Stack +FFFFFFFF:bLoc03_1399,Top:Top_1024
		defs: bx:bx_1019,cx:cx_1018,dx:dx_1022,sp:sp_1006,Top:Top_1025
	sp_1027 = sp_1006 + 0x0006
	wLoc08_1451 = wLoc08_1436 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9004:
	v26_1032 = wLoc08_1436 + 0x0001
	sp_1036 = sp_997 - 2
	Mem1037[ss:sp_1036:word16] = wArg08
	Mem1040[ss:sp_1036 - 2:word16] = wArg06
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:bx_977,bx:bx_986,cx:cx_1017,dx:dx_1021,sp:sp_1036 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_1393,Stack +000E:psegArg0C,Stack +FFFFFFD0:es,Stack +FFFFFFD2:di,Stack +FFFFFFD4:si,Stack +FFFFFFF6:wLoc0C_1397,Stack +FFFFFFF8:wLoc0A,Stack +FFFFFFFA:v26_1032,Stack +FFFFFFFC:wLoc06_1667,Stack +FFFFFFFF:bLoc03_1399,Top:Top_1024
		defs: ax:ax_1042,bx:bx_1044,dx:dx_1045,sp:sp_1041,Top:Top_1046
	wLoc08_1452 = v26_1032
	cx_1050 = Mem1040[ss:sp_1041 + 2:word16]
	sp_1051 = sp_1041 + 4
	ax_1052 = ax_1042
	branch ax_1042 > 0x0000 l0800_8FF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9016:
	cx_1740 = PHI((cx_915, l0800_8FD8), (cx_1050, l0800_9004))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9016_thunk_fn0800_93A6:
	fn0800_93A6(fp - 2, out bp_1796, out di_1059)
	diOut = di_1059
	return (byte) cx_1740
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8F97_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_8FAB(word16 bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: di es
// Trashed: SCZO di es Top
// Preserved: sp
fn0800_8FAB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FAB:
	ptr32 es_di_7 = Mem0[ss:bp + 0x0010:segptr32]
	word16 di_12 = (word16) es_di_7
	branch (Mem0[ss:bp - 0x0001:byte] & 0x20) == 0x00 l0800_8FBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FBC:
	word16 di_13 = Mem0[es_di_7:word16]
	Mem20[ss:bp + 0x0010:word16] = Mem16[ss:bp + 0x0010:word16] + 0x0002
	esOut = ds
	return di_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_8FB4:
	ptr32 es_di_22 = Mem0[ds:di_12:segptr32]
	Mem24[ss:bp + 0x0010:word16] = Mem0[ss:bp + 0x0010:word16] + 0x0004
	esOut = SLICE(es_di_22, selector, 16)
	return (word16) es_di_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_8FAB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_912A(word16 ax, word16 cx, word16 bx, word16 bp, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si sp Top
// Preserved:
fn0800_912A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_912A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_912A_thunk_fn0800_93C5:
	word16 bx_11
	word16 cx_12
	word16 bp_15
	word16 di_16
	word16 ax_10 = fn0800_93C5(ax, cx, bx, bp, ds, out cx_12, out bx_11, out bp_15, out di_16)
	cxOut = cx_12
	bxOut = bx_11
	bpOut = bp_15
	diOut = di_16
	return ax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_912A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9145(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si sp Top
// Preserved:
fn0800_9145_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9145:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9145_thunk_fn0800_93EF:
	fn0800_93EF(ax, bp)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9145_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9169(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si sp Top
// Preserved:
fn0800_9169_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9169:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9169_thunk_fn0800_93EF:
	fn0800_93EF(ax, bp)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9169_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_920E(word16 ax, word16 cx, word16 bx, word16 bp, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si sp Top
// Preserved:
fn0800_920E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_920E_thunk_fn0800_93C5:
	word16 bx_11
	word16 cx_12
	word16 bp_15
	word16 di_16
	word16 ax_10 = fn0800_93C5(ax, cx, bx, bp, ds, out cx_12, out bx_11, out bp_15, out di_16)
	cxOut = cx_12
	bxOut = bx_11
	bpOut = bp_15
	diOut = di_16
	return ax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_920E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93A6(word16 bp, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] ss:[0..15]
// LiveOut: ax bp di
// Trashed: SCZO ax bp di es si sp Top
// Preserved:
fn0800_93A6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93A6:
	call SEQ(0x0800, Mem15[ss:bp + 0x0006:word16]) (retsize: 2;)
		uses: ax:0xFFFF,sp:fp - 6,Stack +0002:0xFFFF,Stack +0004:Mem9[ss:bp + 0x0008:word16],Stack +0006:Mem0[ss:bp + 0x000A:word16],Top:0
	Mem27[ss:bp - 0x0004:word16] = Mem15[ss:bp - 0x0004:word16] - (Mem15[ss:bp - 0x0004:word16] <u 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93BA_thunk_fn0800_93BE:
	word16 bp_30
	word16 di_31
	word16 ax_29 = fn0800_93BE(bp, out bp_30, out di_31)
	bpOut = bp_30
	diOut = di_31
	return ax_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93A6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93BE(word16 bp, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] ss:[0..15]
// LiveOut: ax bp di
// Trashed: ax bp di es si sp Top
// Preserved:
fn0800_93BE_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93BE:
	word16 ax_9 = Mem0[ss:bp - 0x0004:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9453:
	bpOut = Mem0[ss:bp:word16]
	diOut = wArg02
	return ax_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_93C5(word16 ax, word16 cx, word16 bx, word16 bp, selector ds, ptr16 & cxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] ds:[0..15] ss:[0..15]
// LiveOut: ax bp bx cx di
// Trashed: SCZO ax bp bx cx di es si sp Top
// Preserved:
fn0800_93C5_entry:
	word16 sp_11 = fp
	int8 Top_18 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93C5:
	Mem8[ss:bp - 0x0006:word16] = Mem6[ss:bp - 0x0006:word16] + 0x0001
	word16 sp_12 = sp_11 - 2
	Mem13[ss:sp_12:word16] = Mem8[ss:bp + 0x000A:word16]
	Mem16[ss:sp_12 - 2:word16] = Mem13[ss:bp + 0x0008:word16]
	word16 sp_17
	word16 ax_23
	word16 bx_25
	call SEQ(0x0800, Mem16[ss:bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_22,bx:bx_24,cx:cx_20,sp:sp_12 - 2,Top:Top_18
		defs: ax:ax_23,bx:bx_25,sp:sp_17,Top:Top_19
	cx = Mem16[ss:sp_17 + 2:word16]
	sp_11 = sp_17 + 4
	ax = ax_23
	byte al_49 = (byte) ax_23
	branch ax_23 <= 0x0000 l0800_93EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EA:
	branch ax_23 == 0x0000 l0800_93E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EC:
	word16 cx_36 = Mem16[ss:sp_17 + 4:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93ED_thunk_fn0800_93A6:
	word16 bp_39
	word16 di_40
	word16 ax_38 = fn0800_93A6(bp, out bp_39, out di_40)
	cxOut = cx_36
	bxOut = bx_25
	bpOut = bp_39
	diOut = di_40
	return ax_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93D7:
	ax = DPB(ax_23, al_49, 0) (alias)
	branch al_49 < 0x00 l0800_93E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93DB:
	bx = bx_25
	branch Mem16[ds:ax + 0x257C:byte] == 0x01 l0800_93C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93E4:
	word16 cx_66 = Mem16[ss:sp_17 + 4:word16]
	word16 cx_74
	word16 ax_76
	word16 bx_78
	call cx_66 + 0x0003 (retsize: 2;)
		uses: ax:ax_75,bx:bx_25,cx:cx_66 + 0x0003,sp:sp_17 + 6,Top:Top_19
		defs: ax:ax_76,bx:bx_78,cx:cx_74
	cxOut = cx_74
	bxOut = bx_78
	bpOut = bp
	diOut = di
	return ax_76
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93C5_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_93EF(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si sp Top
// Preserved:
fn0800_93EF_entry:
	word16 sp_16 = fp
	int8 Top_105 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93EF:
	word16 dx_138 = 0x0000
	word16 cx_155 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93F4:
	word16 v8_10 = Mem9[ss:bp - 0x000A:word16] - 0x0001
	Mem11[ss:bp - 0x000A:word16] = v8_10
	byte cl_51 = (byte) cx_155
	branch v8_10 < 0x0000 l0800_9442
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9442:
	ax = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_93F9:
	word16 sp_17 = sp_16 - 2
	Mem19[ss:sp_17:word16] = dx_138
	Mem22[ss:sp_17 - 2:word16] = cx_155
	Mem24[ss:bp - 0x0006:word16] = Mem22[ss:bp - 0x0006:word16] + 0x0001
	Mem28[ss:sp_17 - 4:word16] = Mem24[ss:bp + 0x000A:word16]
	Mem31[ss:sp_17 - 6:word16] = Mem28[ss:bp + 0x0008:word16]
	word16 sp_32
	word16 ax_36
	call SEQ(0x0800, Mem31[ss:bp + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_35,cx:cx_21,dx:dx_18,sp:sp_17 - 6,Top:Top_37
		defs: ax:ax_36,sp:sp_32,Top:Top_38
	word16 cx_44 = Mem31[ss:sp_32 + 4:word16]
	byte al_55 = (byte) ax_36
	cl_51 = (byte) cx_44 (alias)
	dx_138 = Mem31[ss:sp_32 + 6:word16]
	sp_16 = sp_32 + 8
	ax = ax_36
	ax = DPB(ax_36, al_55, 0) (alias)
	ax = DPB(ax_36, al_55, 0) (alias)
	branch ax_36 <= 0x0000 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_940F:
	word16 cx_152
	word16 cx_150
	word16 cx_148
	word16 cx_146
	word16 cx_143
	word16 cx_141
	cl_51 = cl_51 - 0x01
	word16 cx_140 = DPB(cx_44, cl_51 - 0x01, 0)
	word16 cx_142 = DPB(cx_141, cl_51 - 0x01, 0)
	word16 cx_139 = DPB(cx_143, cl_51 - 0x01, 0)
	word16 cx_147 = DPB(cx_146, cl_51 - 0x01, 0)
	word16 cx_145 = DPB(cx_148, cl_51 - 0x01, 0)
	word16 cx_151 = DPB(cx_150, cl_51 - 0x01, 0)
	cx_145 = DPB(cx_152, cl_51 - 0x01, 0) (alias)
	branch cl_51 < 0x01 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9413:
	byte ch_115 = al_55 - 0x30
	cx_141 = DPB(cx_140, al_55 - 0x30, 8) (alias)
	cx_143 = DPB(cx_142, al_55 - 0x30, 8) (alias)
	branch al_55 <u 0x30 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_941A:
	branch al_55 <u 0x3A l0800_9436
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_941F:
	byte ch_114 = al_55 - 0x41
	cx_146 = DPB(cx_139, al_55 - 0x41, 8) (alias)
	cx_148 = DPB(cx_147, al_55 - 0x41, 8) (alias)
	branch al_55 <u 0x41 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9424:
	branch al_55 <u 0x47 l0800_9433
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9429:
	ch_114 = al_55 - 0x61
	cx_150 = DPB(cx_145, al_55 - 0x61, 8) (alias)
	cx_152 = DPB(cx_151, al_55 - 0x61, 8) (alias)
	branch al_55 <u 0x61 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_942E:
	branch al_55 >=u 0x67 l0800_9444
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9444:
	branch cl_51 == 0x04 l0800_944F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_944F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9450_thunk_fn0800_93A6:
	fn0800_93A6(bp, out bp_187, out di_188)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9449:
	word16 cx_93 = Mem78[ss:sp_16:word16]
	call cx_93 + 0x0003 (retsize: 2;)
		uses: ax:ax_101,cx:cx_93 + 0x0003,dx:dx_98,sp:sp_77 + 2,Top:Top_105
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_93EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9433:
	ch_115 = ch_114 + 0x0A
	cx_139 = DPB(cx_145, ch_115, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9436:
	cx_155 = DPB(cx_139, ch_115, 8) (alias)
	dx_138 = DPB(dx_138 << 0x0004, (byte) (dx_138 << 0x0004) + ch_115, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn0800_9485(byte cl, byte bl, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..7] cl:[0..7]
// LiveOut: C bx
// Trashed: SCZO bx Top
// Preserved: sp
fn0800_9485_entry:
	byte bl_8 = (byte) bx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9485:
	bool C_40
	word16 bx_38
	byte bl_16 = bl_8 - 0x30
	word16 bx_51 = DPB(bx, bl_8 - 0x30, 0)
	branch bl_8 <u 0x30 l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_948B:
	branch bl_8 <=u 0x39 l0800_94A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9490:
	word16 bx_54
	branch bl_8 >u 0x5A l0800_949A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_949A:
	bl_16 = bl_8 - 0x57
	bx_54 = DPB(bx, bl_8 - 0x57, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9495:
	bl_16 = bl_8 - 0x37
	bx_54 = DPB(bx, bl_8 - 0x37, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_949D:
	bx_51 = DPB(bx_54, bl_16, 0) (alias)
	branch bl_16 <=u 0x09 l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94A2:
	word16 bx_59 = DPB(bx_51, bl_16, 0)
	branch bl_16 >=u cl l0800_94AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94AD:
	bx_38 = bx
	C_40 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94A6:
	C_40 = false
	bx_38 = DPB(bx_59, 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94AF:
	bxOut = bx_38
	return C_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9485_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_94B0(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax bx cx di dx Top
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp ds sp ss
fn0800_94B0_entry:
	int8 Top_131 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94B0:
	word16 wLoc02_611 = bp
	word16 bp_328 = fp - 2
	word16 wLoc0A_612 = si
	word16 sp_136 = fp - 0x000C
	word16 wLoc0C_613 = di
	byte bLoc03_614 = 0x00
	word16 wLoc06_615 = 0x0000
	word16 wLoc08_616 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94C6:
	word16 ax_558
	word16 dx_447
	word16 wLoc08_653
	word16 v8_23 = wLoc06_615 + 0x0001
	word16 sp_28 = sp_136 - 2
	Mem29[ss:sp_28:word16] = wArg08
	Mem32[ss:sp_28 - 2:word16] = wArg06
	word16 sp_33
	word16 ax_39
	word16 bx_121
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_38,bx:bx_40,cx:cx_36,dx:dx_44,sp:sp_28 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v8_23,Stack +FFFFFFFF:0x00,Top:Top_46
		defs: ax:ax_39,bx:bx_41,dx:dx_45,sp:sp_33,Top:Top_47
	wLoc06_615 = v8_23
	cx = Mem32[ss:sp_33 + 2:word16]
	sp_136 = sp_33 + 4
	word16 ax_116 = ax_39
	byte al_57 = (byte) ax_39
	branch ax_39 < 0x0000 l0800_9549
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94D8:
	word16 ax_58 = (int16) al_57
	ax = bx_121
	bx = ax_58
	branch ((byte) ax_58 & 0x80) != 0x00 l0800_94E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94DF:
	branch (Mem32[ds:ax_58 + 0x2251:byte] & 0x01) != 0x00 l0800_94C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94E7:
	byte al_151 = (byte) ax_58
	ax_116 = ax_58
	ax_116 = DPB(ax_58, al_151, 0) (alias)
	ax_116 = DPB(ax_58, al_151, 0) (alias)
	wArg0C = wArg0C - 0x0001
	branch wArg0C < 0x0001 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94ED:
	branch al_151 == 0x2B l0800_94F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F1:
	branch al_151 != 0x2D l0800_950F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F5:
	bLoc03_614 = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94F8:
	wArg0C = wArg0C - 0x0002
	branch wArg0C < 0x0002 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_94FD:
	Mem104[ss:sp_33 + 2:word16] = wArg08
	Mem107[ss:sp_33:word16] = wArg06
	word16 sp_108
	word16 ax_119
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_116,bx:bx_41,cx:cx_51,dx:dx_45,sp:sp_33,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C - 0x0002,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v8_23 + 0x0001,Stack +FFFFFFFF:bLoc03_650,Top:Top_47
		defs: ax:ax_119,bx:bx_121,dx:dx_128,sp:sp_108,Top:Top_131
	wLoc06_615 = v8_23 + 0x0001
	cx = Mem107[ss:sp_108 + 2:word16]
	sp_136 = sp_108 + 4
	ax_116 = ax_119
	al_151 = (byte) ax_119 (alias)
	branch ax_119 < 0x0000 l0800_9549
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9549:
	wLoc08_653 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_950F:
	byte cl_200 = (byte) wArg0A
	ax_174 = DPB(ax_116, al_151, 0) (alias)
	ax_116 = DPB(ax_116, al_151, 0) (alias)
	ax_116 = DPB(ax_116, al_151, 0) (alias)
	word16 ax_174 = DPB(ax_116, al_151, 0)
	word16 si_144 = 0x0000
	word16 di_146 = 0x0000
	cx = wArg0A
	cx = DPB(wArg0A, cl_200, 0) (alias)
	cx = DPB(wArg0A, cl_200, 0) (alias)
	branch wArg0A == 0x0000 l0800_956E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_956E:
	wArg0A = 0x000A
	branch al_151 != 0x30 l0800_959E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9577:
	word16 v70_156 = wArg0C - 0x0001
	wArg0C = v70_156
	branch v70_156 < 0x0000 l0800_956B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_957C:
	word16 v71_160 = wLoc06_615 + 0x0001
	word16 sp_165 = sp_136 - 2
	Mem166[ss:sp_165:word16] = wArg08
	Mem169[ss:sp_165 - 2:word16] = wArg06
	word16 sp_170
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_174,bx:bx_176,cx:wArg0A,dx:dx_180,sp:sp_165 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:0x000A,Stack +000E:v70_156,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v71_160,Stack +FFFFFFFF:bLoc03_670,Top:Top_182
		defs: ax:ax_175,bx:bx_177,dx:dx_181,sp:sp_170,Top:Top_183
	byte al_190 = (byte) ax_174
	wLoc06_615 = v71_160
	ax_174 = DPB(ax_174, al_190, 0) (alias)
	cx = Mem169[ss:sp_170 + 2:word16]
	sp_136 = sp_170 + 4
	wArg0A = 0x0008
	branch al_190 == 0x78 l0800_9597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9593:
	branch al_190 != 0x58 l0800_95C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9597:
	wArg0A = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9518:
	branch wArg0A >u 0x0024 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_951D:
	branch cl_200 <u 0x02 l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9522:
	branch al_151 != 0x30 l0800_959E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_959E:
	cx = wArg0A
	ax_116 = bx_218
	word16 bx_218
	branch fn0800_9485((byte) wArg0A, ax_174, out bx_218) l0800_9550
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9550:
	wLoc08_653 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9555:
	word16 sp_237 = sp_136 - 2
	Mem238[ss:sp_237:word16] = wArg08
	Mem241[ss:sp_237 - 2:word16] = wArg06
	Mem246[ss:sp_237 - 4:word16] = ax_116
	word16 sp_247
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_243,bx:bx_262,cx:cx_256,dx:dx_274,sp:sp_237 - 4,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A_722,Stack +000E:wArg0C_718,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:wLoc08_713,Stack +FFFFFFFC:wLoc06_709,Stack +FFFFFFFF:bLoc03_705,Top:Top_279
		defs: cx:cx_260,sp:sp_247,Top:Top_283
	sp_136 = sp_247 + 0x0006
	ax_558 = 0x0000 (alias)
	dx_447 = 0x0000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95A8:
	ax_174 = 0x0000
	si_144 = bx_218
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9526:
	branch cl_200 != 0x10 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_952B:
	word16 v31_296 = wArg0C - 0x0001
	wArg0C = v31_296
	branch v31_296 < 0x0000 l0800_956B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_956B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9530:
	word16 v32_300 = wLoc06_615 + 0x0001
	word16 sp_304 = sp_136 - 2
	Mem305[ss:sp_304:word16] = wArg08
	Mem308[ss:sp_304 - 2:word16] = wArg06
	word16 sp_309
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:ax_212,bx:bx_176,cx:cx_311,dx:dx_180,sp:sp_304 - 2,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:v31_296,Stack +FFFFFFF6:di,Stack +FFFFFFF8:si,Stack +FFFFFFFA:0x0001,Stack +FFFFFFFC:v32_300,Stack +FFFFFFFF:bLoc03_670,Top:Top_182
		defs: ax:ax_313,bx:bx_314,dx:dx_315,sp:sp_309,Top:Top_316
	byte al_322 = (byte) ax_174
	wLoc06_615 = v32_300
	ax_174 = DPB(ax_174, al_322, 0) (alias)
	cx = Mem308[ss:sp_309 + 2:word16]
	sp_136 = sp_309 + 4
	branch al_322 == 0x78 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9542:
	branch al_322 == 0x58 l0800_959C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_959C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9546:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95C8:
	cx = Mem329[ss:bp_328 + 0x000C:word16]
	word16 ax_343 = bx_337
	word16 bx_337
	branch fn0800_9485((byte) cx, ax_174, out bx_337) l0800_95AB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95AB:
	int32 dx_ax_349 = Mem329[ss:bp_328 + 0x000C:word16] *u si_144
	ui32 di_si_607 = SEQ(di_146, bx_337) + dx_ax_349
	ax_174 = (word16) dx_ax_349 (alias)
	dx = SLICE(dx_ax_349, word16, 16) (alias)
	si_144 = (word16) di_si_607
	di_146 = SLICE(di_si_607, word16, 16)
	branch di_146 != 0x0000 l0800_95E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95E5:
	word16 v54_362 = Mem361[ss:bp_328 + 0x000E:word16] - 0x0001
	Mem363[ss:bp_328 + 0x000E:word16] = v54_362
	branch v54_362 < 0x0000 l0800_9612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95EA:
	Mem367[ss:bp_328 - 0x0004:word16] = Mem363[ss:bp_328 - 0x0004:word16] + 0x0001
	word16 sp_371 = sp_136 - 2
	Mem372[ss:sp_371:word16] = Mem367[ss:bp_328 + 0x000A:word16]
	Mem375[ss:sp_371 - 2:word16] = Mem372[ss:bp_328 + 0x0008:word16]
	word16 sp_376
	word16 ax_382
	word16 bx_384
	call SEQ(0x0800, Mem375[ss:bp_328 + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_381,bx:bx_383,cx:cx_379,dx:dx_387,sp:sp_371 - 2,Stack +0000:wLoc02_743,Stack +0004:wArg02_776,Stack +0006:wArg04_787,Stack +0008:wArg06_772,Stack +000A:wArg08_768,Stack +000C:wArg0A_783,Stack +000E:wArg0C_780,Stack +FFFFFFF6:wLoc0C_751,Stack +FFFFFFF8:wLoc0A_747,Stack +FFFFFFFA:wLoc08_763,Stack +FFFFFFFC:wLoc06_759,Stack +FFFFFFFF:bLoc03_755,Top:Top_389
		defs: ax:ax_382,bx:bx_384,dx:dx_388,sp:sp_376,Top:Top_390
	cx = Mem375[ss:bp_328 + 0x000C:word16]
	sp_136 = sp_376 + 4
	ax_343 = bx_401
	bx_121 = bx_384
	word16 bx_401
	branch fn0800_9485((byte) cx, ax_382, out bx_401) l0800_95D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95D4:
	int32 dx_ax_412 = cx *u si_144
	int32 dx_ax_421 = cx *u di_146
	ui32 ax_si_610 = SEQ((word16) dx_ax_421, bx_401) + dx_ax_412
	word16 ax_426 = SLICE(ax_si_610, word16, 16)
	byte dl_434 = SLICE(dx_ax_421, byte, 16) + SLICE(dx_ax_421, byte, 24) + (ax_426 <u 0x0000)
	cx = SLICE(dx_ax_412, word16, 16)
	si_144 = (word16) ax_si_610
	ax_174 = (word16) dx_ax_412
	di_146 = ax_426
	dx = DPB(SLICE(dx_ax_421, word16, 16), dl_434, 0) (alias)
	branch dl_434 != 0x00 l0800_9636
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9636:
	bool C_443 = SLICE(cond(Mem375[ss:bp_328 - 0x0001:byte] + 0xFF), bool, 1)
	Mem449[ss:bp_328 - 0x0006:word16] = 0x0002
	ax_558 = DPB(0xFFFF, C_443 + 0xFF, 8) (alias)
	dx_447 = SLICE(cond(C_443 + 0xFF), bool, 1) + 0x7FFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95B5:
	word16 v44_456 = Mem454[ss:bp_328 + 0x000E:word16] - 0x0001
	Mem457[ss:bp_328 + 0x000E:word16] = v44_456
	branch v44_456 < 0x0000 l0800_9612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95BA:
	Mem461[ss:bp_328 - 0x0004:word16] = Mem457[ss:bp_328 - 0x0004:word16] + 0x0001
	word16 sp_468 = sp_136 - 2
	Mem469[ss:sp_468:word16] = Mem461[ss:bp_328 + 0x000A:word16]
	Mem472[ss:sp_468 - 2:word16] = Mem469[ss:bp_328 + 0x0008:word16]
	word16 sp_473
	call SEQ(0x0800, Mem472[ss:bp_328 + 0x0004:word16]) (retsize: 2;)
		uses: ax:ax_484,bx:bx_490,cx:cx_480,dx:dx_502,sp:sp_468 - 2,Stack +0000:wLoc02_740,Stack +0004:wArg02_773,Stack +0006:wArg04_784,Stack +0008:wArg06_769,Stack +000A:wArg08_765,Stack +000C:wArg0A_781,Stack +000E:wArg0C_777,Stack +FFFFFFF6:wLoc0C_748,Stack +FFFFFFF8:wLoc0A_744,Stack +FFFFFFFA:wLoc08_760,Stack +FFFFFFFC:wLoc06_756,Stack +FFFFFFFF:bLoc03_752,Top:Top_506
		defs: ax:ax_489,bx:bx_493,dx:dx_505,sp:sp_473,Top:Top_510
	sp_136 = sp_473 + 4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_95D2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9602:
	word16 sp_521 = sp_136 - 2
	Mem522[ss:sp_521:word16] = Mem518[ss:bp_328 + 0x000A:word16]
	Mem525[ss:sp_521 - 2:word16] = Mem522[ss:bp_328 + 0x0008:word16]
	Mem528[ss:sp_521 - 4:word16] = ax_343
	word16 sp_529
	call SEQ(0x0800, Mem528[ss:bp_328 + 0x0006:word16]) (retsize: 2;)
		uses: ax:ax_527,bx:bx_535,cx:cx_532,dx:dx_539,sp:sp_521 - 4,Stack +0000:wLoc02_743,Stack +0004:wArg02_776,Stack +0006:wArg04_787,Stack +0008:wArg06_772,Stack +000A:wArg08_768,Stack +000C:wArg0A_783,Stack +000E:wArg0C_780,Stack +FFFFFFF6:wLoc0C_751,Stack +FFFFFFF8:wLoc0A_747,Stack +FFFFFFFA:wLoc08_763,Stack +FFFFFFFC:wLoc06_759,Stack +FFFFFFFF:bLoc03_755,Top:Top_542
		defs: cx:cx_533,sp:sp_529,Top:Top_543
	Mem548[ss:bp_328 - 0x0004:word16] = Mem528[ss:bp_328 - 0x0004:word16] - 0x0001
	sp_136 = sp_529 + 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9612:
	dx_447 = di_146
	ax_558 = si_144
	branch Mem564[ss:bp_328 - 0x0001:byte] == 0x00 l0800_9622
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_961B:
	ax_558 = -si_144
	dx_447 = -di_146 - (ax_558 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9622:
	ptr32 es_di_576 = Mem575[ss:bp_328 + 0x0010:segptr32]
	Mem581[es_di_576:word16] = Mem575[es_di_576:word16] + Mem575[ss:bp_328 - 0x0004:word16]
	word16 bx_584 = Mem581[ss:bp_328 - 0x0006:word16]
	Mem587[Mem581[ss:bp_328 + 0x0014:segptr32]:word16] = bx_584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_964C:
	word16 di_591 = Mem587[ss:sp_136:word16]
	cxOut = cx
	dxOut = dx_447
	bxOut = bx_584
	diOut = di_591
	TopOut = Top_131
	return ax_558
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_94B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9652(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah cx dx es Top
// Preserved: bp si sp
fn0800_9652_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9652:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9652_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_9667(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut:
// Trashed: ah cx dx es Top
// Preserved: bp si sp
fn0800_9667_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9667:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9667_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9764(selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp cx dx sp
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
fn0800_9764_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9764:
	fn0800_8B95(SEQ(ss, fp - 0x0006))
	fn0800_8BA8(SEQ(ss, fp - 0x000A))
	word16 bp_51
	word16 cx_53
	word16 dx_55
	word16 ax_50 = fn0800_C04F(ds, out cx_53, out dx_55, out bp_51)
	Mem65[ss:bp_51 - 0x000A:word16] = dx_55
	Mem66[ss:bp_51 - 0x000C:word16] = ax_50
	branch (Mem66[ss:bp_51 + 0x0004:word16] | Mem66[ss:bp_51 + 0x0006:word16]) == 0x0000 l0800_97AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_979C:
	ptr32 es_bx_72 = Mem66[ss:bp_51 + 0x0004:segptr32]
	word16 dx_74 = Mem66[ss:bp_51 - 0x000C:word16]
	Mem77[es_bx_72 + 0x0002:word16] = Mem66[ss:bp_51 - 0x000A:word16]
	Mem78[es_bx_72:word16] = dx_74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97AC:
	word16 dx_82 = Mem81[ss:bp_51 - 0x000A:word16]
	word16 ax_83 = Mem81[ss:bp_51 - 0x000C:word16]
	word16 bp_85 = Mem81[ss:bp_51:word16]
	cxOut = cx_53
	dxOut = dx_82
	bpOut = bp_85
	return ax_83
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9764_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_97B6(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_97B6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97B6:
	word16 dx_26
	word16 ax_23 = fn0800_8E29(ds, wArg02, 0x0000, 0x0000, 0x01, out cx_47, out dx_26, out bx_48)
	dxOut = dx_26
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97B6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_97CC(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_97CC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97CC:
	word16 ax_29
	byte dl_12 = (byte) wArg02
	branch wArg02 != 0xFFFF l0800_97DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97DC:
	word16 ax_17 = DPB(DPB(ax, dl_12, 0), 0x00, 8)
	branch (Mem7[ds:ax_17 + 0x2251:byte] & 0x08) == 0x00 l0800_97F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F2:
	ax_29 = DPB(DPB(ax_17, dl_12, 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97E9:
	ax_29 = DPB(DPB(ax_17, dl_12, 0), 0x00, 8) + 0xFFE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97D7:
	ax_29 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F6:
	return (byte) ax_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97CC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_97F8(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut: dx
// Trashed: SCZO ax dx Top
// Preserved: bp ds sp
fn0800_97F8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_97F8:
	word16 dx_15 = (word16) ptrArg02
	word16 ax_21 = DPB(ax, 0x41, 8)
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), dx_15) l0800_980A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_980A:
	fn0800_8D2B(ds, ax_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9806:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_980E:
	return dx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_97F8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9810(byte dh, byte dl, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dh:[0..7] di:[0..15] dl:[0..7] es:[0..15]
// LiveOut: di sp
// Trashed: SCZO ax di sp Top
// Preserved:
fn0800_9810_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9810:
	word16 di_9 = fn0800_9817(dh, di, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9815_thunk_fn0800_9817:
	return fn0800_9817(dl, di_9, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9810_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9817(byte al, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] di:[0..15] es:[0..15]
// LiveOut: di
// Trashed: SCZO ax di Top
// Preserved: sp
fn0800_9817_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9817:
	word16 ax_5 = __aam(al)
	byte al_6 = (byte) ax_5
	word16 di_14 = fn0800_9820(SLICE(ax_5, byte, 8), di, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_981E_thunk_fn0800_9820:
	return fn0800_9820(al_6, di_14, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9817_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9820(byte al, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] di:[0..15] es:[0..15]
// LiveOut: di
// Trashed: SCZO al di Top
// Preserved: sp
fn0800_9820_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9820:
	byte al_7 = al + 0xD0 + __daa(al + 0x90, &(al + 0x90))
	__daa(al_7, &al_7)
	Mem12[es:di:byte] = al_7
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9820_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9828(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax di si
// Trashed: SCZDO ax di si Top
// Preserved: bp bx cx dx es sp
fn0800_9828_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9828:
	byte bLoc16_1529 = 0x50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988C:
	word16 sp_1025 = fp - 0x009E
	word16 wLoc06_1319 = fp - 0x0098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9895:
	word16 di_1010 = wLoc06_1319
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9898:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	word16 si_1134 = (word16) psegArg06_1650
	selector es_1009 = SLICE(psegArg06_1650, selector, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_989B:
	byte al_37 = Mem36[ds:si_1134:byte]
	si_1134 = si_1134 + 0x0001
	byte al_1078 = al_37
	word16 ax_1144 = DPB(ax, al_37, 0)
	branch al_37 == 0x00 l0800_98B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98B3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98A1:
	branch al_37 == 0x25 l0800_98B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98B6:
	al_1078 = Mem47[ds:si_1134:byte]
	ax_1144 = DPB(ax, al_1078, 0) (alias)
	word16 ax_1182 = DPB(ax, al_1078, 0)
	si_1134 = si_1134 + 0x0001
	branch al_1078 == 0x25 l0800_98A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98BF:
	wLoc06_1319 = di_1010
	word16 cx_1232 = 0x0000
	byte ch_1223 = 0x00
	word16 wLoc10_1324 = 0x0000
	word16 wLoc04_1325 = 0x0020
	byte bLoc0D_1326 = 0x00
	word16 wLoc0A_1327 = 0xFFFF
	word16 wLoc0C_1328 = 0xFFFF
	Mem74 = Mem62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98DD:
	word16 ax_1183 = DPB(ax_1182, 0x00, 8)
	byte dl_131 = (byte) ax_1183
	byte bl_68 = (byte) ax_1183
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	word16 cx_1233 = DPB(cx_1232, ch_1223, 8)
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	word16 cx_1242 = DPB(cx_1232, ch_1223, 8)
	cx = DPB(cx, ch_1223, 8) (alias)
	cx_1242 = DPB(cx, ch_1223, 8) (alias)
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	cx_1233 = DPB(cx_1232, ch_1223, 8) (alias)
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	cx_1233 = DPB(cx, ch_1223, 8) (alias)
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	word16 cx_1262 = DPB(cx_1232, ch_1223, 8)
	cx_1262 = DPB(cx_1232, ch_1223, 8) (alias)
	cx_1233 = DPB(cx_1262, ch_1223, 8) (alias)
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	cx = DPB(cx_1232, ch_1223, 8) (alias)
	dx = ax_1183
	dx = DPB(ax_1183, dl_131, 0) (alias)
	dx = DPB(ax_1183, dl_131, 0) (alias)
	dx_231 = DPB(ax_1183, dl_131, 0) (alias)
	word16 dx_231 = DPB(ax_1183, dl_131, 0)
	dx_231 = DPB(ax_1183, dl_131, 0) (alias)
	dx = DPB(ax_1183, dl_131, 0) (alias)
	bx = DPB(ax_1183, bl_68 - 0x20, 0) (alias)
	branch bl_68 >=u 0x80 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98EB:
	bx = DPB(ax_1183, Mem74[ds:bx + 0x2605:byte], 0) (alias)
	branch bx <=u 0x0017 l0800_98F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98F7:
	byte bLoc08_1368
	selector es_140
	word16 cx_172
	word16 di_142
	word16 bx_445
	word16 bx_444
	word16 bx_443
	byte bh_333
	word16 dx_347
	word16 ax_353
	bx = bx << 0x0001
	cx_2064 = cx
	switch (bx << 0x0001) { l0800_9917 l0800_9901 l0800_994C l0800_990C l0800_997A l0800_9987 l0800_99C5 l0800_99CC l0800_99D1 l0800_9935 l0800_99FA l0800_99D8 l0800_99DC l0800_99E0 l0800_9A55 l0800_9B02 l0800_9AA5 l0800_9AC5 l0800_9C46 l0800_9C82 l0800_9C82 l0800_9C82 l0800_9927 l0800_992D }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_992D:
	wLoc04_1325 = wLoc04_1325 | 0x0020
	Mem994 = Mem84
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9927:
	wLoc04_1325 = wLoc04_1325 & 0xFFDF
	Mem994 = Mem88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C46:
	word16 di_101
	selector es_108
	branch (wLoc04_1325 & 0x0020) != 0x0000 l0800_9C5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C5E:
	ptr32 es_di_97 = Mem92[ds:wArg02:segptr32]
	es_108 = SLICE(es_di_97, selector, 16) (alias)
	di_101 = (word16) es_di_97 (alias)
	wArg02 = wArg02 + 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C53:
	di_101 = Mem92[ss:wArg02:word16]
	word16 sp_106 = sp_1025 - 2
	Mem107[ss:sp_106:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_108 = Mem107[ss:sp_106:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C65:
	word16 ax_116 = DPB(0x0050, 0x50 - bLoc16_1529, 0)
	Mem122[es_108:di_101:word16] = ax_116
	ax = ax_116
	branch (wLoc04_1325 & 0x0010) == 0x0000 l0800_9C7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C78:
	Mem129[es_108:di_101 + 0x0002:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C7F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AC5:
	bool Z_156
	branch (wLoc04_1325 & 0x0020) != 0x0000 l0800_9AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AE2:
	ptr32 es_di_137 = Mem132[ds:wArg02:segptr32]
	es_140 = SLICE(es_di_137, selector, 16) (alias)
	di_142 = (word16) es_di_137 (alias)
	wArg02 = wArg02 + 0x0004
	Z_156 = SLICE(cond(es_140 | di_142), bool, 2) (alias)
	Mem181 = Mem139
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AD5:
	word16 di_146 = Mem132[ss:wArg02:word16]
	word16 sp_149 = sp_1025 - 2
	Mem150[ss:sp_149:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_140 = Mem150[ss:sp_149:selector]
	di_142 = di_146
	Z_156 = SLICE(cond(di_146), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AED:
	branch Z_156 l0800_9AF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AEF:
	word16 sp_160 = sp_1025 - 2
	Mem163[ss:sp_160:word16] = ds
	es_140 = Mem163[ss:sp_160:selector]
	di_142 = 0x25FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AF4:
	cx_172 = fn0800_9842(di_142, es_140)
	branch cx_172 <=u wLoc0C_1328 l0800_9AFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AFC:
	cx_172 = wLoc0C_1328
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AFF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA5:
	word16 sp_191 = sp_1025 - 2
	Mem192[ss:sp_191:word16] = ss
	wArg02 = wArg02 + 0x0002
	es_140 = Mem192[ss:sp_191:selector]
	sp_1025 = sp_191 + 2
	di_142 = fp - 0x0047
	cx_172 = 0x0001
	Mem574 = Mem200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B02:
	word16 cx_206 = wLoc0C_1328
	branch wLoc0C_1328 >= 0x0000 l0800_9B15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B12:
	cx_206 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B15:
	word16 ax_244
	word16 sp_212 = sp_1025 - 2
	Mem214[ss:sp_212:word16] = ss
	Mem217[ss:sp_212 - 2:word16] = wArg02
	Mem220[ss:sp_212 - 4:word16] = cx_206
	Mem222[ss:sp_212 - 6:word16] = ss
	Mem226[ss:sp_212 - 8:word16] = fp - 0x0047
	Mem232[ss:sp_212 - 10:word16] = dx_231
	Mem236[ss:sp_212 - 12:word16] = wLoc04_1325 & 0x0001
	branch (wLoc04_1325 & 0x0100) == 0x0000 l0800_9B36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B36:
	wArg02 = wArg02 + 0x0008
	ax_244 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B2D:
	ax_244 = 0x0008
	wArg02 = wArg02 + 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B3D:
	Mem253[ss:sp_212 - 14:word16] = ax_244
	fn0800_A2CC(ds)
	word16 sp_256 = <invalid>
	Mem259[ss:sp_256 - 2:word16] = ss
	es_140 = Mem259[ss:sp_256 - 2:selector]
	sp_1025 = sp_256
	di_142 = fp - 0x0047
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A55:
	word16 sp_269 = sp_1025 - 2
	Mem270[ss:sp_269:word16] = Mem265[ss:wArg02:word16]
	word16 di_266 = fp - 0x0048
	wArg02 = wArg02 + 0x0002
	branch (wLoc04_1325 & 0x0020) == 0x0000 l0800_9A80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A70:
	word16 dx_277 = Mem273[ss:wArg02 + 0x0002:word16]
	Mem283[ss:sp_269 - 2:word16] = ss
	selector es_284 = Mem283[ss:sp_269 - 2:selector]
	word16 di_289 = fn0800_9810(SLICE(dx_277, byte, 8), (byte) dx_277, fp - 0x0048, es_284)
	Mem297[es_284:di_289:byte] = 0x3A
	word16 sp_290 = <invalid>
	wArg02 = wArg02 + 0x0004
	sp_269 = sp_290 + 0xFFFE
	di_266 = di_289 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A80:
	word16 sp_300 = sp_269 - 2
	Mem302[ss:sp_300:word16] = ss
	word16 dx_305 = Mem302[ss:sp_300 + 2:word16]
	es_140 = Mem302[ss:sp_300:selector]
	word16 di_311 = fn0800_9810(SLICE(dx_305, byte, 8), (byte) dx_305, di_266, es_140)
	Mem318[ss:di_311:byte] = 0x00
	word16 sp_312 = <invalid>
	sp_1025 = sp_312 + 0xFFFE
	wLoc04_1325 = wLoc04_1325 & 0xFFFB
	word16 di_325 = di_311 - (fp - 0x0048)
	di_142 = fp - 0x0048
	dx_231 = wLoc0C_1328
	branch wLoc0C_1328 > di_325 l0800_9AA2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA0:
	dx_231 = di_325
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9AA2:
	Mem487 = Mem322
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99E0:
	bh_333 = 0x10
	bx_445 = DPB(DPB(bx << 0x0001, 0x10, 8), dl_131 + 0xE9, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99DC:
	bh_333 = 0x0A
	bx_444 = DPB(bx << 0x0001, 0x0A, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99D8:
	bh_333 = 0x08
	bx_445 = DPB(bx << 0x0001, 0x08, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99E6:
	bx_444 = DPB(bx_445, bh_333, 8) (alias)
	bLoc0D_1326 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99EA:
	bx_443 = DPB(bx_444, bh_333, 8) (alias)
	dx_347 = 0x0000
	bLoc08_1368 = 0x00
	ax_353 = Mem351[ss:wArg02:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99FA:
	int32 dx_ax_359 = (int32) Mem356[ss:wArg02:word16]
	bh_333 = 0x0A
	bx_443 = DPB(bx << 0x0001, 0x0A, 8) (alias)
	bLoc08_1368 = 0x01
	ax_353 = (word16) dx_ax_359 (alias)
	dx_347 = SLICE(dx_ax_359, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A0A:
	word16 di_361 = wArg02 + 0x0001
	word16 bx_442 = DPB(bx_443, bh_333, 8)
	bx_442 = DPB(bx_443, bh_333, 8) (alias)
	word16 bx_455 = DPB(bx_442, bh_333, 8)
	bx_455 = DPB(bx_442, bh_333, 8) (alias)
	bx = DPB(bx_442, bh_333, 8) (alias)
	bx = DPB(bx_455, bh_333, 8) (alias)
	word16 bx_460 = DPB(bx, bh_333, 8)
	word16 di_362 = di_361 + 0x0001
	branch (wLoc04_1325 & 0x0010) == 0x0000 l0800_9A1B
	psegArg06_1650 = SEQ(psegArg06_1650, si_1134)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A16:
	dx_347 = Mem368[ss:di_361 + 0x0001:word16]
	di_362 = di_361 + 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A1B:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	wArg02 = di_362
	ax = ax_353
	bx_2062 = bx_455
	branch ax_353 != 0x0000 l0800_9A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A25:
	dx = dx_347
	bx_2063 = bx_455
	branch dx_347 != 0x0000 l0800_9A32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A32:
	wLoc04_1325 = wLoc04_1325 | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A29:
	bx_2061 = bx
	branch wLoc0C_1328 != 0x0000 l0800_9A36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A36:
	word16 sp_410 = sp_1025 - 2
	Mem414[ss:sp_410:word16] = dx_347
	Mem418[ss:sp_410 - 2:word16] = ax_353
	Mem420[ss:sp_410 - 4:word16] = ss
	Mem424[ss:sp_410 - 6:word16] = fp - 0x0047
	word16 ax_432 = (int16) bh_333
	Mem434[ss:sp_410 - 8:word16] = ax_432
	Mem439[ss:sp_410 - 10:word16] = DPB(ax_432, bLoc08_1368, 0)
	Mem461[ss:sp_410 - 12:word16] = bx_460
	fn0800_8D87(Mem461[ss:sp_410 - 10:byte], Mem461[ss:sp_410 - 8:word16], Mem461[ss:sp_410 - 6:segptr32], Mem461[ss:sp_410 - 2:word16], Mem461[ss:sp_410:word16], out di_142)
	Mem475[ss:sp_410:word16] = ss
	es_140 = Mem475[ss:sp_410:selector]
	sp_1025 = sp_410 + 2
	dx_231 = wLoc0C_1328
	branch wLoc0C_1328 >= 0x0000 l0800_9A52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A52:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A4F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B46:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	branch (wLoc04_1325 & 0x0008) == 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B4D:
	dx_231 = wLoc0A_1327
	branch wLoc0A_1327 <= 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B54:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	word16 cx_503 = fn0800_9842(di_142, es_140)
	branch Mem508[es_140:di_142:byte] != 0x2D l0800_9B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B5D:
	cx_503 = cx_503 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B5E:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	dx_231 = dx_231 - cx_503
	branch dx_231 <= 0x0000 l0800_9B65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B62:
	wLoc10_1324 = dx_231
	Mem528 = Mem523
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B65:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	branch Mem528[es_140:di_142:byte] == 0x2D l0800_9B76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B6B:
	branch bLoc0D_1326 == 0x00 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B72:
	di_142 = di_142 - 0x0001
	Mem541[es_140:di_142:byte] = bLoc0D_1326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B76:
	branch wLoc10_1324 <= 0x0000 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B7C:
	branch wLoc0C_1328 >= 0x0000 l0800_9B86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B83:
	wLoc10_1324 = wLoc10_1324 - 0x0001
	Mem576 = Mem553
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B86:
	cx_172 = fn0800_9842(di_142, es_140)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B89:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	word16 si_1206 = di_142
	word16 bx_578 = wLoc0A_1327
	ax = wLoc04_1325 & 0x0005
	branch ax != 0x0005 l0800_9BAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9B9C:
	ax = DPB(ax, dl_131, 8) (alias)
	ax = DPB(ax, dl_131, 8) (alias)
	ax = DPB(ax, dl_131, 8) (alias)
	branch dl_131 != 0x6F l0800_9BB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BB1:
	branch dl_131 == 0x78 l0800_9BBB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BB6:
	branch dl_131 != 0x58 l0800_9BCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BBB:
	word16 v40_599 = wLoc10_1324 - 0x0002
	wLoc04_1325 = wLoc04_1325 | 0x0040
	bx_578 = wLoc0A_1327 - 0x0002
	wLoc10_1324 = v40_599
	Mem616 = Mem600
	branch v40_599 >= 0x0000 l0800_9BCC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BC7:
	wLoc10_1324 = 0x0000
	Mem616 = Mem603
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BA4:
	branch wLoc10_1324 > 0x0000 l0800_9BAF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BAA:
	wLoc10_1324 = 0x0001
	Mem617 = Mem606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BAF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BCC:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	cx = cx_172 + wLoc10_1324
	branch (wLoc04_1325 & 0x0002) != 0x0000 l0800_9BE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BD6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BDE:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	branch bx_578 > cx l0800_9BD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BD8:
	ax = DPB(ax, 0x20, 0) (alias)
	di_1010 = fn0800_984F(0x20, cx, dx_231, bx_578, fp - 2, di_1010, es_140)
	sp_1025 = sp_1025 + 0xFFFE
	bx_578 = bx_578 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BE2:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	branch (wLoc04_1325 & 0x0040) == 0x0000 l0800_9BF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BE9:
	ax = DPB(ax, dl_131, 0) (alias)
	di_1010 = fn0800_984F(dl_131, cx, dx_231, bx_578, fp - 2, fn0800_984F(0x30, cx, dx_231, bx_578, fp - 2, di_1010, es_140), es_140)
	sp_1025 = sp_1025 + 0xFFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BF4:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	dx = wLoc10_1324
	branch wLoc10_1324 <= 0x0000 l0800_9C22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9BFB:
	byte al_724 = Mem616[es_140:di_142:byte]
	word16 cx_714 = cx - wLoc10_1324
	bx_578 = bx_578 - wLoc10_1324
	ax = DPB(ax, al_724, 0) (alias)
	ax = DPB(ax, al_724, 0) (alias)
	ax = DPB(ax, al_724, 0) (alias)
	branch al_724 == 0x2D l0800_9C0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C06:
	branch al_724 == 0x20 l0800_9C0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C0A:
	branch al_724 != 0x2B l0800_9C15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C0E:
	byte al_757 = Mem616[ds:di_142:byte]
	ax = DPB(ax, al_757, 0) (alias)
	si_1206 = di_142 + 0x0001
	di_1010 = fn0800_984F(al_757, cx_714, wLoc10_1324, bx_578, fp - 2, di_1010, es_140)
	sp_1025 = sp_1025 + 0xFFFE
	cx_714 = cx_714 - 0x0001
	bx_578 = bx_578 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C15:
	word16 cx_782 = wLoc10_1324
	branch wLoc10_1324 == 0x0000 l0800_9C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C19:
	psegArg06_1650 = SLICE(ptrArg04_2066, selector, 16) (alias)
	ax = DPB(ax, 0x30, 0) (alias)
	di_1010 = fn0800_984F(0x30, cx_782, cx_714, bx_578, fp - 2, di_1010, es_140)
	sp_1025 = sp_1025 + 0xFFFE
	cx_782 = cx_782 - 0x0001
	ptrArg04_2066 = psegArg06_1650
	branch cx_782 != 0x0000 l0800_9C19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C20:
	dx = cx_782
	cx = cx_714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C22:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	branch cx == 0x0000 l0800_9C36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C24:
	bx_578 = bx_578 - cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C26:
	byte al_813 = Mem812[ds:si_1206:byte]
	Mem817[ss:di_1010:byte] = al_813
	byte v45_820 = bLoc16_1529 - 0x01
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	ax = DPB(ax, al_813, 0) (alias)
	si_1206 = si_1206 + 0x0001
	di_1010 = di_1010 + 0x0001
	bLoc16_1529 = v45_820
	branch v45_820 > 0x00 l0800_9C34
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C31:
	di_1010 = fn0800_9858(cx, dx, bx_578, fp - 2, di_1010, es_140)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C34:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	cx = cx - 0x0001
	Mem812 = Mem821
	Mem1113 = Mem821
	branch cx != 0x0000 l0800_9C26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C36:
	psegArg06_1650 = SLICE(psegArg06_1650, selector, 16) (alias)
	bx = bx_578
	branch bx_578 <= 0x0000 l0800_9C43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C3A:
	cx = bx_578
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C3C:
	psegArg06_1650 = SLICE(ptrArg04_2067, selector, 16) (alias)
	ax = DPB(ax, 0x20, 0) (alias)
	di_1010 = fn0800_984F(0x20, cx, dx, bx_578, fp - 2, di_1010, es_140)
	sp_1025 = sp_1025 + 0xFFFE
	cx = cx - 0x0001
	ptrArg04_2067 = psegArg06_1650
	branch cx != 0x0000 l0800_9C3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C43:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9A2F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9935:
	cx_2065 = cx
	branch ch_1223 >u 0x00 l0800_9987
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_993A:
	branch (wLoc04_1325 & 0x0002) != 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9941:
	wLoc04_1325 = wLoc04_1325 | 0x0008
	ch_1223 = 0x01
	cx_1233 = DPB(cx_1232, 0x01, 8) (alias)
	Mem993 = Mem864
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99CC:
	wLoc04_1325 = wLoc04_1325 | 0x0100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99D1:
	wLoc04_1325 = wLoc04_1325 & 0xFFEF
	Mem994 = Mem876
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99C5:
	wLoc04_1325 = wLoc04_1325 | 0x0010
	Mem994 = Mem880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9931:
	ch_1223 = 0x05
	cx_1233 = DPB(cx_1232, 0x05, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9987:
	dx = ax_1183
	word16 ax_891 = (int16) (dl_131 - 0x30)
	branch ch_1223 >u 0x02 l0800_99A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99A9:
	branch ch_1223 != 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99AE:
	wLoc0C_1328 = ax_891
	ax_1183 = wLoc0C_1328
	Mem995 = Mem901
	branch wLoc0C_1328 == 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_99B5:
	ax_1183 = (wLoc0C_1328 << 0x0003) + (wLoc0C_1328 << 0x0001)
	wLoc0C_1328 = ax_891 + ax_1183
	Mem993 = Mem913
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9990:
	ch_1223 = 0x02
	cx_1242 = DPB(cx_2064, 0x02, 8) (alias)
	cx_1233 = DPB(cx_2064, 0x02, 8) (alias)
	wLoc0A_1327 = ax_891
	ax_1183 = wLoc0A_1327
	Mem995 = Mem917
	branch wLoc0A_1327 < 0x0000 l0800_996A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9999:
	ax_1183 = (wLoc0A_1327 << 0x0003) + (wLoc0A_1327 << 0x0001)
	wLoc0A_1327 = ax_891 + ax_1183
	Mem993 = Mem929
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_997A:
	branch ch_1223 >=u 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_997F:
	ch_1223 = 0x04
	cx_1233 = DPB(cx_1232, 0x04, 8) (alias)
	wLoc0C_1328 = wLoc0C_1328 + 0x0001
	Mem993 = Mem935
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_990C:
	branch ch_1223 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9911:
	wLoc04_1325 = wLoc04_1325 | 0x0002
	Mem993 = Mem940
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_994C:
	ax_1183 = Mem74[ss:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_1223 >=u 0x02 l0800_996D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_996D:
	branch ch_1223 != 0x04 l0800_9949
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9949:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9972:
	ch_1223 = ch_1223 + 0x01
	wLoc0C_1328 = ax_1183
	cx_1233 = DPB(cx_1232, ch_1223, 8) (alias)
	Mem993 = Mem951
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_995B:
	branch ax_1183 >= 0x0000 l0800_9965
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_995F:
	ax_1183 = -ax_1183
	wLoc04_1325 = wLoc04_1325 | 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9965:
	wLoc0A_1327 = ax_1183
	ch_1223 = 0x03
	cx_1242 = DPB(cx_1232, 0x03, 8) (alias)
	Mem995 = Mem966
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_996A:
	cx_1233 = DPB(cx_1242, ch_1223, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9901:
	branch ch_1223 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9906:
	wLoc04_1325 = wLoc04_1325 | 0x0001
	Mem993 = Mem971
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9917:
	branch ch_1223 >u 0x00 l0800_98FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98FE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_991C:
	branch bLoc0D_1326 == 0x2B l0800_9925
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9922:
	bLoc0D_1326 = dl_131
	Mem996 = Mem978
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9925:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98DB:
	cx_1232 = DPB(cx_1233, ch_1223, 8) (alias)
	ax_1182 = DPB(ax_1183, Mem993[ds:si_1134:byte], 0) (alias)
	si_1134 = si_1134 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98F4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C82:
	word16 si_1008 = si_1134
	es_1009 = psegArg06_1650
	byte al_1011 = 0x25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C8D:
	di_1010 = fn0800_984F(al_1011, cx, dx, bx, fp - 2, di_1010, psegArg06_1650)
	byte al_1030 = Mem1005[ds:si_1008:byte]
	sp_1025 = sp_1025 + 0xFFFE
	si_1008 = si_1008 + 0x0001
	al_1011 = al_1030
	branch al_1030 != 0x00 l0800_9C8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C96:
	branch bLoc16_1529 >= 0x50 l0800_9C9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C9C:
	fn0800_9858(cx, dx, bx, fp - 2, di_1010, es_1009)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9C9F:
	word16 ax_1066
	word16 sp_1062 = sp_1025 + 2
	branch 0x0000 == 0x0000 l0800_9CAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CAB:
	ax_1066 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CA6:
	ax_1066 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CAE:
	word16 di_1071 = Mem1038[ss:sp_1062:word16]
	siOut = Mem1038[ss:sp_1062 + 2:word16]
	diOut = di_1071
	return ax_1066
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9828_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98A5:
	Mem1081[ss:di_1010:byte] = al_1078
	byte v16_1084 = bLoc16_1529 - 0x01
	ax = DPB(ax_1144, al_1078, 0) (alias)
	di_1010 = di_1010 + 0x0001
	bLoc16_1529 = v16_1084
	Mem36 = Mem1085
	branch v16_1084 > 0x00 l0800_989B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_98AE:
	di_1010 = fn0800_9858(cx, dx, bx, fp - 2, di_1010, es_1009)
	Mem36 = Mem1085
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9842(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15]
// LiveOut: cx
// Trashed: SCZO al cx Top
// Preserved: di sp
fn0800_9842_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9842:
	word16 cx_12 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9848:
	branch cx_12 == 0x0000 l0800_984A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9848_1:
	di = di_45 + 0x0001
	cx_12 = cx_12 - 0x0001
	di_45 = di
	branch Mem7[es:di_45:byte] == 0x00 l0800_9848
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_984A:
	return ~cx_12 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9842_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_984F(byte al, word16 cx, word16 dx, word16 bx, word16 bp, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] ss:[0..15]
// LiveOut: di
// Trashed: SZO di Top
// Preserved: C sp
fn0800_984F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_984F:
	Mem7[ss:di:byte] = al
	byte v8_10 = Mem7[ss:bp - 0x0014:byte] - 0x01
	Mem11[ss:bp - 0x0014:byte] = v8_10
	branch v8_10 != 0x00 l0800_988B_in_fn0800_984F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988B_in_fn0800_984F:
	return di + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9856_thunk_fn0800_9858:
	return fn0800_9858(cx, dx, bx, bp, di + 0x0001, es)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_984F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9858(word16 cx, word16 dx, word16 bx, word16 bp, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] ss:[0..15]
// LiveOut: di
// Trashed: SCZO di Top
// Preserved: bx cx dx es sp
fn0800_9858_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9858:
	word16 di_20 = di - (bp - 0x0096)
	word16 ax_39
	call SEQ(0x0800, Mem34[ss:bp + 0x000E:word16]) (retsize: 2;)
		uses: ax:bp - 0x0096,bx:bx,cx:cx,dx:dx,sp:fp - 18,Stack +0002:Mem31[ss:bp + 0x000A:word16],Stack +0004:Mem28[ss:bp + 0x000C:word16],Stack +0006:di_20,Stack +0008:bp - 0x0096,Stack +000A:ss,Stack +000C:es,Stack +000E:dx,Stack +0010:cx,Stack +0012:bx,Top:0
		defs: ax:ax_39
	branch ax_39 != 0x0000 l0800_987B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9876:
	Mem46[ss:bp - 0x0016:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_987B:
	Mem49[ss:bp - 0x0014:word16] = 0x0050
	Mem52[ss:bp - 0x0012:word16] = Mem49[ss:bp - 0x0012:word16] + di_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_988B:
	return bp - 0x0096
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9858_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9CE6(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax dx
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp si sp
fn0800_9CE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9CE6:
	word16 ax_18 = fn0800_BFC7(SEQ(wArg08, wArg06), out cx_86)
	fn0800_B03B(SEQ(wArg04, wArg02), SEQ(wArg08, wArg06), ax_18 + 0x0001)
	dxOut = wArg04
	return wArg02 + ax_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9CE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9D41(word16 dx, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9D41_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D41:
	selector ds_35
	word16 wLoc02_67
	branch dx == Mem0[0x0800:0x9D35:word16] l0800_9D7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D48:
	selector ds_9 = Mem0[dx:0x0002:selector]
	branch Mem0[ds_9:0x0002:word16] == 0x0000 l0800_9D5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D5C:
	branch ds_9 == Mem0[0x0800:0x9D35:word16] l0800_9D7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D7A:
	dx = Mem0[0x0800:0x9D35:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D7F:
	Mem16[0x0800:0x9D35:word16] = 0x0000
	Mem17[0x0800:0x9D37:word16] = 0x0000
	Mem18[0x0800:0x9D39:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D65:
	Mem20[0x0800:0x9D37:word16] = Mem0[ds_9:0x0008:word16]
	fn0800_9E15(ds_9)
	wLoc02_67 = ds_9
	ds_35 = Mem28[0x0800:0x9D3B:selector]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D55:
	Mem36[0x0800:0x9D37:word16] = ds_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D94:
	ds_35 = Mem37[0x0800:0x9D3B:selector]
	wLoc02_67 = dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9D9D:
	word16 bx_57
	word16 cx_58
	word16 dx_59
	word16 ax_56 = fn0800_A1D6(ds_35, 0x0000, wLoc02_67, out cx_58, out dx_59, out bx_57)
	cxOut = cx_58
	dxOut = dx_59
	bxOut = bx_57
	return ax_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9D41_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9DA4(word16 dx, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx:[0..15]
// LiveOut: ax bx
// Trashed: SCZO ax bx ds es Top
// Preserved: DP cx dx sp
fn0800_9DA4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DA4:
	word16 bx_17
	selector es_9 = Mem8[dx:0x0002:selector]
	Mem10[dx:0x0002:word16] = 0x0000
	Mem11[dx:0x0008:word16] = es_9
	word16 wLoc02_67 = dx
	branch dx == Mem11[0x0800:0x9D35:word16] l0800_9DEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DBC:
	branch Mem11[es_9:0x0002:word16] != 0x0000 l0800_9DEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DEA:
	bx_17 = fn0800_9E3E(dx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DC4:
	word16 ax_25 = Mem11[dx:0x0000:word16]
	Mem31[es_9:0x0000:word16] = Mem29[es_9:0x0000:word16] + ax_25
	bx_17 = dx
	wLoc02_67 = es_9
	word16 dx_33 = dx + ax_25
	branch Mem31[dx_33:0x0002:word16] != 0x0000 l0800_9DE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DE3:
	Mem37[dx_33:0x0002:word16] = es_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DDC:
	Mem38[dx_33:0x0008:word16] = es_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DED:
	word16 ax_48 = wLoc02_67 + Mem43[wLoc02_67:0x0000:word16]
	branch Mem43[ax_48:0x0002:word16] == 0x0000 l0800_9DFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DFF:
	Mem54[wLoc02_67:0x0000:word16] = Mem43[wLoc02_67:0x0000:word16] + Mem43[ax_48:0x0000:word16]
	Mem60[ax_48 + Mem54[ax_48:0x0000:word16]:0x0002:word16] = wLoc02_67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E11_thunk_fn0800_9E15:
	bxOut = fn0800_9E15(ax_48)
	return wLoc02_67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9DFE:
	bxOut = bx_17
	return ax_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9DA4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E15(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx
// Trashed: SCZO bx es Top
// Preserved: ds sp
fn0800_9E15_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E15:
	branch ds == Mem0[ds:0x0006:word16] l0800_9E36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E36:
	Mem9[0x0800:0x9D39:word16] = 0x0000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E1D:
	selector es_10 = Mem0[ds:0x0006:selector]
	selector ds_11 = Mem0[ds:0x0004:selector]
	Mem12[ds_11:0x0006:word16] = es_10
	Mem13[es_10:0x0004:word16] = ds_11
	Mem14[0x0800:0x9D39:word16] = ds_11
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E15_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E3E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: bx
// Trashed: SCZDOP bx es Top
// Preserved: sp ss
fn0800_9E3E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E3E:
	word16 ax_5 = Mem0[0x0800:0x9D39:word16]
	branch ax_5 == 0x0000 l0800_9E67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E67:
	Mem11[0x0800:0x9D39:word16] = ds
	Mem12[ds:0x0004:word16] = ds
	Mem13[ds:0x0006:word16] = ds
	return bx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E46:
	__cli()
	selector es_22 = Mem20[ax_5:0x0006:selector]
	Mem23[ax_5:0x0006:word16] = ds
	Mem24[ds:0x0004:word16] = ax_5
	Mem28[es_22:0x0004:word16] = ds
	Mem29[ds:0x0006:word16] = es_22
	return ss
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E3E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E75(selector ds, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx ds dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: bp di si sp
fn0800_9E75_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E75:
	Mem16[0x0800:0x9D3B:word16] = ds
	word16 dx_18 = wArg04
	branch wArg04 == 0x0000 l0800_9E95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E86:
	branch wArg04 != Mem16[0x0800:0x9D37:word16] l0800_9E92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E92:
	ax = fn0800_9DA4(wArg04, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E8D:
	ax = fn0800_9D41(wArg04, out cx, out dx_18, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E95:
	selector ds_43 = Mem16[0x0800:0x9D3B:selector]
	cxOut = cx
	dxOut = dx_18
	bxOut = bx
	dsOut = ds_43
	return ax
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E75_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9E9E(word16 ax, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9E9E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9E9E:
	word16 ax_16 = fn0800_A215(Mem7[0x0800:0x9D3B:selector], 0x0000, 0x0000, out dx_126)
	branch (ax_16 & 0x000F) == 0x0000 l0800_9EC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EB3:
	fn0800_A215(Mem15[0x0800:0x9D3B:selector], 0x0010 - (ax_16 & 0x000F), 0x0000, out dx_127)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EC7:
	word16 dx_74
	branch fn0800_A215(Mem57[0x0800:0x9D3B:selector], ax << 0x04, (word16) SLICE(ax, byte, 8) >>u 0x04, out dx_74) == 0xFFFF l0800_9EFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EFE:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9EE6:
	Mem89[0x0800:0x9D35:word16] = dx_74
	Mem90[0x0800:0x9D37:word16] = dx_74
	Mem92[dx_74:0x0000:word16] = ax
	Mem93[dx_74:0x0002:word16] = dx_74
	dxOut = dx_74
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9E9E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F02(word16 ax, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ss:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx ds dx es Top
// Preserved: sp
fn0800_9F02_entry:
	byte ah_9 = SLICE(ax, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F02:
	selector ds_16 = Mem7[0x0800:0x9D3B:selector]
	word16 dx_24
	word16 ax_21 = fn0800_A215(ds_16, ax << 0x04, (word16) ah_9 >>u 0x04, out dx_24)
	branch ax_21 == 0xFFFF l0800_9F58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F20:
	branch (ax_21 & 0x000F) != 0x0000 l0800_9F3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F3D:
	branch fn0800_A215(ds_16, -(ax_21 & 0x000F) + 0x0010, 0x0000, out dx_127) == 0xFFFF l0800_9F58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F58:
	dxOut = 0x0000
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F55:
	dx_24 = dx_24 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F25:
	word16 cx_75 = Mem74[0x0800:0x9D37:word16]
	Mem77[0x0800:0x9D37:word16] = dx_24
	Mem80[dx_24:0x0000:word16] = ax
	Mem81[dx_24:0x0002:word16] = cx_75
	dxOut = dx_24
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F02_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] dx:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx ds dx Top
// Preserved: sp
fn0800_9F5C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F5C:
	Mem10[ds:0x0000:word16] = Mem0[ds:0x0000:word16] - ax
	word16 dx_11 = dx + Mem10[ds:0x0000:word16]
	Mem13[dx_11:0x0000:word16] = ax
	Mem14[dx_11:0x0002:word16] = dx
	Mem19[dx_11 + Mem14[dx_11:0x0000:word16]:0x0002:word16] = dx_11
	dxOut = dx_11
	return 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F5C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F7F(ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_9F7F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F7F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F87_thunk_fn0800_9F92:
	word16 bp_14
	selector ds_16
	word16 dx_17
	word16 di_20
	word16 si_22
	word16 ax_13 = fn0800_9F92(out dx_17, out bp_14, out si_22, out di_20, out ds_16)
	dxOut = dx_17
	bpOut = bp_14
	siOut = si_22
	diOut = di_20
	dsOut = ds_16
	return ax_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F7F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F89(ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_9F89_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F89:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F8F_thunk_fn0800_9F92:
	word16 bp_12
	selector ds_14
	word16 dx_15
	word16 di_18
	word16 si_20
	word16 ax_11 = fn0800_9F92(out dx_15, out bp_12, out si_20, out di_18, out ds_14)
	dxOut = dx_15
	bpOut = bp_12
	siOut = si_20
	diOut = di_18
	dsOut = ds_14
	return ax_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F89_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F92(ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
l0800_9F92:
	Mem11[ss:sp - 2:word16] = si
	Mem14[ss:sp - 4:word16] = di
	Mem16[0x0800:0x9D3B:word16] = ds
	branch (ax | dx) == 0x0000 l0800_9FFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	word16 bp_19
	word16 di_20
	selector ds_21
	word16 dx_22
	word16 si_23
	word16 ax_18 = fn0800_9F9F(ax, dx, out dx_22, out bp_19, out si_23, out di_20, out ds_21)
	dxOut = dx_22
	bpOut = bp_19
	siOut = si_23
	diOut = di_20
	dsOut = ds_21
	return ax_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	word16 bp_33
	word16 di_34
	selector ds_35
	word16 dx_36
	word16 si_37
	word16 ax_32 = fn0800_9F9F(ax, dx, out dx_36, out bp_33, out si_37, out di_34, out ds_35)
	dxOut = dx_36
	bpOut = bp_33
	siOut = si_37
	diOut = di_34
	dsOut = ds_35
	return ax_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F92_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F92:
	Mem57[0x0800:0x9D3B:word16] = ds
	branch (ax | dx) == 0x0000 l0800_9FFD_in_fn0800_9F92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FFD_in_fn0800_9F92:
	selector ds_59 = Mem57[0x0800:0x9D3B:selector]
	dxOut = dx
	bpOut = wArg00
	siOut = si
	diOut = di
	dsOut = ds_59
	return ax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	word16 bp_67
	word16 di_68
	selector ds_69
	word16 dx_70
	word16 si_71
	word16 ax_66 = fn0800_9F9F(ax, dx, out dx_70, out bp_67, out si_71, out di_68, out ds_69)
	dxOut = dx_70
	bpOut = bp_67
	siOut = si_71
	diOut = di_68
	dsOut = ds_69
	return ax_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F92_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_9F9F(word16 ax, word16 dx, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] dx:[0..15] ss:[0..15]
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_9F9F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9F9F:
	word16 ax_121
	word16 dx_132
	word16 dx_9 = dx + (ax <u 0x0013)
	branch dx_9 <u 0x0000 l0800_9FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FA7:
	branch (dx_9 & 0xFFF0) != 0x0000 l0800_9FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FE8:
	ax_121 = 0x0000 (alias)
	dx_132 = 0x0000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FAD:
	word16 ax_20 = ax + 0x0013 >>u 0x04
	word16 ax_31 = DPB(ax_20, SLICE(ax_20, byte, 8) | (byte) (dx_9 << 0x04), 8)
	branch Mem0[0x0800:0x9D35:word16] == 0x0000 l0800_9FDE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FDE:
	ax_121 = fn0800_9E9E(ax_31, out dx_132)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FBE:
	word16 dx_43 = Mem0[0x0800:0x9D39:word16]
	dx_132 = dx_43
	branch dx_43 == 0x0000 l0800_9FD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FC7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FC9:
	branch Mem0[dx_132:0x0000:word16] >=u ax_31 l0800_9FED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FED:
	branch Mem0[dx_132:0x0000:word16] >u ax_31 l0800_9FE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FE3:
	ax_121 = fn0800_9F5C(ax_31, dx_132, dx_132, out dx_132)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FEF:
	fn0800_9E15(dx_132)
	Mem71[dx_132:0x0002:word16] = Mem0[dx_132:0x0008:word16]
	ax_121 = 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FD1:
	dx_132 = Mem0[dx_132:0x0006:word16]
	branch dx_132 != dx_43 l0800_9FC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FD9:
	ax_121 = fn0800_9F02(ax_31, out dx_132)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_9FFD:
	selector ds_93 = Mem90[0x0800:0x9D3B:selector]
	dxOut = dx_132
	bpOut = wArg04
	siOut = wArg02
	diOut = wArg00
	dsOut = ds_93
	return ax_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_9F9F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A006(word16 bx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds es si Top
// Preserved: sp
fn0800_A006_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A006:
	word16 dx_20
	fn0800_9F89(out dx_20, out bp_200, out si_201, out di_202, out ds_203)
	branch dx_20 != 0x0000 l0800_A01F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A01F:
	word16 dx_42 = Mem41[bx:0x0000:word16]
	word16 di_124 = 0x0004
	word16 si_122 = 0x0004
	word16 cx_128 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A033:
	branch cx_128 == 0x0000 l0800_A035
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A035:
	word16 dx_51 = dx_42 - 0x0001
	branch dx_42 == 0x0001 l0800_A070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A039:
	selector es_109 = dx_20 + 0x0001
	selector ds_114 = bx + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A043:
	word16 di_117 = 0x0000
	word16 si_115 = 0x0000
	word16 cx_67 = dx_51
	branch dx_51 <=u 0x1000 l0800_A052
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A04F:
	cx_67 = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A052:
	word16 cx_121 = cx_67 << 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A058:
	branch cx_121 == 0x0000 l0800_A05A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A05A:
	dx_51 = dx_51 - 0x1000
	branch dx_51 <=u 0x0000 l0800_A070
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A070:
	fn0800_9E75(Mem81[0x0800:0x9D3B:selector], bx, out cx_204, out dx_205, out bx_206, out ds_207)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A060:
	es_109 = es_109 + 0x1000
	ds_114 = ds_114 + 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A058_1:
	Mem118[es_109:di_117:word16] = Mem83[ds_114:si_115:word16]
	si_115 = si_115 + 0x0002
	di_117 = di_117 + 0x0002
	cx_121 = cx_121 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A033_1:
	Mem125[dx_20:di_124:word16] = Mem82[bx:si_122:word16]
	si_122 = si_122 + 0x0002
	di_124 = di_124 + 0x0002
	cx_128 = cx_128 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A01D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A006_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A080(word16 ax, word16 cx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] cx:[0..15] ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di ds dx es si Top
// Preserved: sp
fn0800_A080_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A080:
	branch bx == Mem0[0x0800:0x9D37:word16] l0800_A0CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0CB:
	Mem13[bx:0x0000:word16] = ax
	fn0800_A1D6(ds, 0x0000, bx + ax, out cx_110, out dx_111, out bx_112)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A087:
	word16 di_38 = bx + ax
	Mem43[di_38:0x0000:word16] = cx - ax
	Mem44[di_38:0x0002:word16] = bx
	Mem50[bx:0x0000:word16] = ax
	word16 dx_52 = bx + cx
	branch Mem50[dx_52:0x0002:word16] == 0x0000 l0800_A0B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0B8:
	Mem56[dx_52:0x0008:word16] = di_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0B1:
	Mem57[dx_52:0x0002:word16] = di_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A0BD:
	fn0800_9E75(ds, di_38, out cx_113, out dx_114, out bx_115, out ds_116)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A080_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_A162_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A162:
	word16 dx_111
	word16 ax_56
	word16 cx_106 = DPB(cx, 0x06, 0)
	word16 si_18 = wArg04 + 0x0001 - Mem11[ds:0x007B:word16] + 0x003F >>u 0x06
	branch si_18 != Mem11[ds:0x2698:word16] l0800_A18D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A18D:
	word16 si_22 = si_18 << 0x06
	word16 dx_23 = Mem11[ds:0x0091:word16]
	word16 ax_25 = (si_18 << 0x06) + Mem11[ds:0x007B:word16]
	branch ax_25 <=u dx_23 l0800_A1A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A19F:
	si_22 = dx_23 - Mem11[ds:0x007B:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1A5:
	word16 ax_41 = fn0800_A401(ax_25, ds, Mem35[ds:0x007B:word16], si_22, out bx)
	cx_106 = si_22
	dx_111 = ax_41
	branch ax_41 != 0xFFFF l0800_A1C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1C1:
	Mem54[ds:0x0091:word16] = Mem39[ds:0x007B:word16] + ax_41
	Mem55[ds:0x008F:word16] = 0x0000
	ax_56 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1B6:
	Mem63[ds:0x2698:word16] = si_22 >>u 0x06
	cx_106 = DPB(si_22, 0x06, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A17B:
	Mem71[ds:0x008D:word16] = wArg04
	Mem72[ds:0x008B:word16] = wArg02
	dx_111 = wArg02
	ax_56 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1D1:
	cxOut = cx_106
	dxOut = dx_111
	bxOut = bx
	return ax_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A162_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_A1D6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1D6:
	word16 ax_59
	word16 bx_11 = Mem7[ds:0x0087:word16]
	word16 bx_17
	word16 cx_18
	word16 dx_19
	fn0800_8F2F((byte) wArg02, wArg02, Mem7[ds:0x0089:word16], wArg04, (byte) bx_11, bx_11, out cx_18, out dx_19, out bx_17)
	bool C_21 = <invalid>
	branch C_21 l0800_A20C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1EC:
	word16 bx_25 = Mem7[ds:0x008F:word16]
	fn0800_8F2F((byte) wArg02, wArg02, Mem7[ds:0x0091:word16], wArg04, (byte) bx_25, bx_25, out cx_18, out dx_19, out bx_17)
	bool Z_36 = <invalid>
	bool C_35 = <invalid>
	branch Z_36 | C_35 l0800_A20C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out cx_18, out dx_19, out bx_17) != 0x0000 l0800_A211
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A211:
	ax_59 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A20C:
	ax_59 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A213:
	cxOut = cx_18
	dxOut = dx_19
	bxOut = bx_17
	return ax_59
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A1D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A215(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_A215_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A215:
	word16 dx_110
	word16 ax_111
	word16 dx_19
	word16 ax_25 = fn0800_8C69(Mem7[ds:0x008D:word16], 0x04, 0x0000, out cl_18, out dx_19) + Mem7[ds:0x008B:word16]
	ui32 dwArg02_128 = SEQ(wArg04, wArg02)
	ui32 dx_ax_124 = SEQ(dx_19 + (ax_25 <u 0x0000), ax_25) + dwArg02_128
	word16 wArg04_130 = SLICE(dwArg02_128, word16, 16)
	word16 wArg02_132 = SLICE(dwArg02_128, word16, 0)
	word16 ax_29 = (word16) dx_ax_124
	word16 dx_32 = SLICE(dx_ax_124, word16, 16)
	branch dx_32 < 0x000F l0800_A246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A237:
	branch dx_32 > 0x000F l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A239:
	branch ax_29 <=u 0xFFFF l0800_A246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A246:
	word16 dx_48
	word16 ax_46 = fn0800_8CCB(Mem7[ds:0x008B:word16], wArg04_130, Mem7[ds:0x008D:word16], wArg02_132, out ch_173, out dx_48)
	word16 bx_59 = Mem57[ds:0x0087:word16]
	fn0800_8F2F((byte) ax_46, ax_46, Mem57[ds:0x0089:word16], dx_48, (byte) bx_59, bx_59, out cx_65, out dx_174, out bx_64)
	word16 sp_50 = <invalid>
	bool C_68 = <invalid>
	branch C_68 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A26C:
	word16 bx_72 = Mem57[ds:0x008F:word16]
	fn0800_8F2F((byte) ax_46, ax_46, Mem57[ds:0x0091:word16], dx_48, (byte) bx_72, bx_72, out cx_175, out dx_176, out bx_177)
	bool Z_83 = <invalid>
	bool C_82 = <invalid>
	branch Z_83 | C_82 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A27F:
	word16 ax_86 = Mem57[ds:0x008D:word16]
	word16 dx_87 = Mem57[ds:0x008B:word16]
	Mem92[ss:sp_50 - 2:word16] = dx_48
	Mem95[ss:sp_50 - 4:word16] = ax_46
	branch fn0800_A162(ds, Mem95[ss:sp_50 - 4:word16], Mem95[ss:sp_50 - 2:word16], out cx_178, out dx_179, out bx_180) == 0x0000 l0800_A23E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A299:
	dx_110 = ax_86
	ax_111 = dx_87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A23E:
	dx_110 = 0xFFFF
	ax_111 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A29F:
	dxOut = dx_110
	return ax_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A215_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A2A3(selector ds, byte bArg04, word16 wArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0004:[0..7] Stack +0006:[0..15]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_A2A3_entry:
	byte bArg05_48 = SLICE(wArg04, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2A3:
	msdos_unknown_2144()
	word16 dx_33 = (word16) ptrArg06
	word16 ax_23 = DPB(DPB(ax, 0x44, 8), bArg04, 0)
	branch C l0800_A2C6
	byte bArg05_50 = SLICE(SEQ(bArg05_48, bArg04), byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C6:
	ax_23 = fn0800_8D2B(ds, ax_23)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2BA:
	branch SEQ(bArg05_50, bArg04) != 0x0000 l0800_A2C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2C0:
	ax_23 = dx_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2CA:
	cxOut = wArg0A
	return ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2A3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A2CC(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: sp
// Trashed: sp Top
// Preserved:
fn0800_A2CC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2CC:
	call Mem0[ds:0x26F4:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2CC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A2D0(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: sp
// Trashed: sp Top
// Preserved:
fn0800_A2D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D0:
	call Mem0[ds:0x26F6:word16] (retsize: 2;)
		uses: sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn0800_A2D4(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: sp Top
// Trashed: sp Top
// Preserved:
fn0800_A2D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D4:
	int8 Top_7
	call Mem0[ds:0x26F8:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn0800_A2D8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: sp Top
// Trashed: sp Top
// Preserved:
fn0800_A2D8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A2D8:
	int8 Top_7
	call Mem0[ds:0x26FA:word16] (retsize: 2;)
		uses: sp:fp,Top:0
		defs: Top:Top_7
	return Top_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A2D8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A36D(word16 ax, word16 cx, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cx:[0..15] di:[0..15] ds:[0..15] es:[0..15] si:[0..15]
// LiveOut:
// Trashed: SCZO ax cx si Top
// Preserved: bx di dx sp
fn0800_A36D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A36D:
	byte al_11 = (byte) ax
	branch ax == 0x0000 l0800_A378
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A371:
	Mem14[es:di:byte] = al_11
	branch al_11 != 0x00 l0800_A378
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A377:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A378:
	branch cx == 0x0000 l0800_A394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A37F:
	byte al_40 = Mem38[ds:si:byte]
	branch al_40 == 0x22 l0800_A394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A385:
	branch al_40 != 0x5C l0800_A392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A38B:
	branch Mem38[ds:si + 0x0001:byte] != 0x22 l0800_A392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A390:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A392:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A394:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A36D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bx
// Trashed: C ax bx es Top
// Preserved: SZO bp sp
fn0800_A401_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A401:
	word16 ax_27
	word16 ax_18 = DPB(ax, 0x4A, 8)
	word16 bx_12
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_12) l0800_A415
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A415:
	fn0800_8D2B(ds, ax_18)
	ax_27 = bx_12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A410:
	ax_27 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A41B:
	bxOut = bx_12
	return ax_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A401_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A471(selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: ax bp dx sp
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved: ss
fn0800_A471_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A471:
	word16 sp_151 = fp - 10
	selector es_168 = SLICE(ptrArg02, selector, 16)
	word16 si_169 = (word16) ptrArg02
	word16 ax_118 = 0x0000
	word16 dx_121 = 0x0000
	word16 cx_25 = 0x000A
	word16 bx_172 = DPB(bx, 0x00, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A487:
	byte bl_31 = Mem19[es_168:si_169:byte]
	bx_172 = DPB(bx_172, bl_31, 0) (alias)
	word16 bx_115 = DPB(bx_172, bl_31, 0)
	bx_115 = DPB(bx_172, bl_31, 0) (alias)
	si_169 = si_169 + 0x0001
	branch (Mem19[ds:bx_172 + 0x2251:byte] & 0x01) != 0x00 l0800_A487
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A490:
	word16 bp_124 = 0x0000
	branch bl_31 == 0x2B l0800_A49E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A498:
	branch bl_31 != 0x2D l0800_A4A2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A49D:
	bp_124 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A49E:
	bl_31 = Mem49[es_168:si_169:byte]
	bx_115 = DPB(bx_115, bl_31, 0) (alias)
	si_169 = si_169 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4A2:
	branch bl_31 >u 0x39 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4A7:
	byte bl_56 = bl_31 - 0x30
	bx_115 = DPB(bx_115, bl_56, 0) (alias)
	branch bl_56 <u 0x00 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4AC:
	int32 dx_ax_66 = cx_25 *u ax_118
	ui32 dl_ax_177 = dx_ax_66 + SEQ(SLICE(dx_ax_66, byte, 24), bx_115)
	byte dl_80 = SLICE(dl_ax_177, byte, 16)
	ax_118 = (word16) dl_ax_177
	dx_121 = DPB(SLICE(dx_ax_66, word16, 16), dl_80, 0) (alias)
	branch dl_80 == 0x00 l0800_A49E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4B4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4C8:
	byte bl_86 = Mem157[es_168:si_169:byte]
	si_169 = si_169 + 0x0001
	branch bl_86 >u 0x39 l0800_A4D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D1:
	bx_115 = DPB(bx_115, bl_86 - 0x30, 0) (alias)
	branch bl_86 >=u 0x30 l0800_A4B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4B6:
	int32 dx_ax_97 = ax_118 *u 0x000A
	int32 dx_ax_180 = SEQ((word16) (dx_121 *u 0x000A), (word16) dx_ax_97) + SEQ(SLICE(dx_ax_97, word16, 16), bx_115)
	ax_118 = (word16) dx_ax_180
	dx_121 = SLICE(dx_ax_180, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D6:
	branch bp_124 < 0x0001 l0800_A4E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4D9:
	ax_118 = -ax_118
	dx_121 = -dx_121 - (ax_118 == 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4E0:
	word16 bp_166 = Mem157[ss:sp_151 + 8:word16]
	dxOut = dx_121
	bpOut = bp_166
	return ax_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A471_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_A4F6(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_A4F6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A4F6:
	branch fn0800_A53C(ds, SEQ(wArg04, wArg02), 0x00, out cx_22) != 0xFFFF l0800_A513
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A513:
	branch (wArg06 & 0x0080) != 0x0000 l0800_A520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A51D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A520:
	branch fn0800_A53C(ds, SEQ(wArg04, wArg02), 0x01, out cx_115) == 0xFFFF l0800_A50F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A538:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A50F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A53A:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A4F6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A53C(selector ds, word16 wArg02, byte bArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0006:[8..15]
// LiveOut: ax cx
// Trashed: ax cx dx Top
// Preserved: SCZO bp ds sp
fn0800_A53C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A53C:
	word16 ax_24
	msdos_unknown_2143()
	word16 cx_12 = wArg08
	word16 ax_22 = DPB(DPB(ax, 0x43, 8), bArg06, 0)
	branch C l0800_A553
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A553:
	ax_24 = fn0800_8D2B(ds, ax_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A550:
	ax_24 = wArg08
	cx_12 = ax_22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A557:
	cxOut = cx_12
	return ax_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A53C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A559(word16 ax, selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_A559_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A559:
	word16 ax_20
	branch wArg02 <u Mem7[ds:0x24E8:word16] l0800_A56E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A56E:
	Mem16[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	ax_20 = fn0800_A57F(ax, ds, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A565:
	ax_20 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A57D:
	dxOut = wArg02
	return ax_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A559_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx Top
// Preserved: bp sp
fn0800_A57F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A57F:
	word16 ax_17
	word16 ax_14 = DPB(ax, 0x3E, 8)
	branch msdos_close_file(wArg02) l0800_A597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A597:
	ax_17 = fn0800_8D2B(ds, ax_14)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A58B:
	Mem24[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	ax_17 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A59B:
	return ax_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A57F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A59D(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_A59D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A59D:
	word16 wLoc08_109
	word16 ax_118
	branch wArg02 <u Mem7[ds:0x24E8:word16] l0800_A5B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5B2:
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_A5C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5C4:
	byte dl_23 = (byte) dx
	word16 ax_19 = 0x4400
	dx = DPB(dx, dl_23, 0) (alias)
	branch msdos_ioctl_get_device_info(wArg02, out dx) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5CE:
	branch (dl_23 & 0x80) != 0x00 l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5D3:
	ax_19 = 0x4201
	dx = 0x0000
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5DE:
	ax_19 = 0x4202
	dx = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5F3:
	ax_19 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_A60C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A60C:
	wLoc08_109 = ax_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5FA:
	branch false l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5FF:
	branch false l0800_A606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A601:
	branch false l0800_A608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A608:
	ax_118 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A606:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5BF:
	ax_118 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A5AC:
	wLoc08_109 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A60D:
	ax_118 = fn0800_8D2B(ds, wLoc08_109)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A610:
	dxOut = dx
	return ax_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A59D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A614(selector ds, segptr32 ptrArg02, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax bp cx di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved: D
fn0800_A614_entry:
	word16 wArg02_181 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_182 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A614:
	word16 bp_33 = fp - 2
	word16 sp_122 = fp - 4
	word16 si_106 = 0xFFFF
	branch Mem11[ptrArg02 + 0x0012:word16] == wArg02_181 l0800_A62A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A62A:
	word16 bx_21 = (word16) ptrArg02
	branch Mem11[ptrArg02 + 0x0006:word16] == 0x0000 l0800_A65F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A634:
	branch Mem11[ptrArg02:word16] >= 0x0000 l0800_A647
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A63A:
	word16 ax_32 = fn0800_A6B7(ds, bx_21, wArg04_182, out dx, out bx_230, out bp_33)
	word16 sp_38 = <invalid>
	cx = Mem30[ss:sp_38 + 2:word16]
	sp_122 = sp_38 + 4
	branch ax_32 != 0x0000 l0800_A6B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A647:
	ptr32 es_bx_54 = Mem53[ss:bp_33 + 0x0004:segptr32]
	branch (Mem53[es_bx_54 + 0x0002:word16] & 0x0004) == 0x0000 l0800_A65F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A652:
	word16 sp_62 = sp_122 - 2
	Mem63[ss:sp_62:word16] = Mem53[es_bx_54 + 0x000A:word16]
	Mem66[ss:sp_62 - 2:word16] = Mem63[es_bx_54 + 0x0008:word16]
	fn0800_9E75(ds, Mem66[ss:sp_62:word16], out cx_231, out dx, out bx_232, out ds)
	cx = Mem66[ss:sp_62:word16]
	sp_122 = sp_62 + 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A65F:
	ptr32 es_bx_85 = Mem84[ss:bp_33 + 0x0004:segptr32]
	branch Mem84[es_bx_85 + 0x0004:byte] < 0x00 l0800_A675
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A669:
	word16 ax_91 = (int16) Mem84[es_bx_85 + 0x0004:byte]
	word16 sp_93 = sp_122 - 2
	Mem94[ss:sp_93:word16] = ax_91
	word16 ax_96 = fn0800_A559(ax_91, ds, Mem94[ss:sp_93:word16], out dx)
	cx = Mem94[ss:sp_93:word16]
	si_106 = ax_96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A675:
	ptr32 es_bx_110 = Mem109[ss:bp_33 + 0x0004:segptr32]
	Mem113[es_bx_110 + 0x0002:word16] = 0x0000
	Mem114[es_bx_110 + 0x0006:word16] = 0x0000
	Mem115[es_bx_110:word16] = 0x0000
	Mem116[es_bx_110 + 0x0004:byte] = 0xFF
	branch Mem116[es_bx_110 + 0x0010:word16] == 0x0000 l0800_A6B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A695:
	word16 sp_123 = sp_122 - 2
	Mem124[ss:sp_123:word16] = 0x0000
	Mem126[ss:sp_123 - 2:word16] = 0x0000
	Mem128[ss:sp_123 - 4:word16] = 0x0000
	Mem130[ss:sp_123 - 6:word16] = 0x0000
	Mem133[ss:sp_123 - 8:word16] = Mem130[es_bx_110 + 0x0010:word16]
	word16 dx_139
	word16 ax_135 = fn0800_8E6A(ds, Mem133[ss:sp_123 - 8:word16], Mem133[ss:sp_123 - 6:word16], Mem133[ss:sp_123 - 4:word16], Mem133[ss:sp_123 - 2:word16], Mem133[ss:sp_123:word16], out dx_139, out si_106, out di)
	Mem149[ss:sp_123:word16] = dx_139
	Mem151[ss:sp_123 - 2:word16] = ax_135
	dx = fn0800_97F8(ax_135, ds, Mem151[ss:sp_123 - 2:segptr32])
	cx = Mem151[ss:sp_123:word16]
	Mem165[Mem151[ss:bp_33 + 0x0004:segptr32] + 0x0010:word16] = 0x0000
	sp_122 = sp_123 + 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A627:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6B2:
	word16 si_174 = Mem173[ss:sp_122:word16]
	word16 bp_176 = Mem173[ss:sp_122 + 2:word16]
	cxOut = cx
	dxOut = dx
	bpOut = bp_176
	siOut = si_174
	diOut = di
	dsOut = ds
	return si_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A614_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A6B7(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax bp bx dx sp
// Trashed: SCZO ax bp bx cx dx es sp Top
// Preserved: si
fn0800_A6B7_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6B7:
	word16 bx_107
	word16 ax_103
	branch (wArg02 | wArg04) != 0x0000 l0800_A6C9
	segptr32 ptrArg02_136 = SEQ(wArg04, wArg02)
	word16 wArg02_137 = SLICE(ptrArg02_136, word16, 0)
	word16 wArg04_142 = SLICE(ptrArg02_136, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6C9:
	bx_107 = (word16) ptrArg02_136 (alias)
	branch Mem11[ptrArg02_136 + 0x0012:word16] == wArg02_137 l0800_A6DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6DB:
	bx_107 = (word16) ptrArg02_136 (alias)
	branch Mem11[ptrArg02_136:word16] < 0x0000 l0800_A732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A732:
	word16 ax_32 = Mem11[ptrArg02_136 + 0x0006:word16] + Mem11[ptrArg02_136:word16]
	Mem36[ptrArg02_136:word16] = Mem11[ptrArg02_136:word16] - (ax_32 + 0x0001)
	word16 ax_40 = Mem39[ptrArg02_136 + 0x000A:word16]
	word16 dx_41 = Mem39[ptrArg02_136 + 0x0008:word16]
	Mem42[ptrArg02_136 + 0x000E:word16] = ax_40
	Mem43[ptrArg02_136 + 0x000C:word16] = dx_41
	branch fn0800_C632(ds, (int16) Mem47[ptrArg02_136 + 0x0004:byte], dx_41, ax_40, ax_32 + 0x0001, out dx, out bx_107) == ax_32 + 0x0001 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A765:
	bx_107 = (word16) ptrArg02_136 (alias)
	branch (Mem51[ptrArg02_136 + 0x0002:word16] & 0x0200) != 0x0000 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A770:
	Mem72[ptrArg02_136 + 0x0002:word16] = Mem51[ptrArg02_136 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6E4:
	branch (Mem11[ptrArg02_136 + 0x0002:word16] & 0x0008) != 0x0000 l0800_A701
	segptr32 ptrArg02_143 = SEQ(wArg04_142, wArg02_137)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6EC:
	dx = wArg02_137 + 0x0005
	branch Mem11[ptrArg02_136 + 0x000E:word16] != wArg04_142 l0800_A778
	ptrArg02_143 = SEQ(wArg04_142, wArg02_137)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6FB:
	branch Mem11[ptrArg02_136 + 0x000C:word16] != wArg02_137 + 0x0005 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A701:
	Mem91[ptrArg02_143:word16] = 0x0000
	word16 wArg02_146 = SLICE(ptrArg02_143, word16, 0)
	bx_107 = (word16) ptrArg02_143 (alias)
	dx = wArg02_146 + 0x0005
	branch Mem91[ptrArg02_143 + 0x000E:word16] != SLICE(ptrArg02_143, word16, 16) l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A718:
	branch Mem91[ptrArg02_143 + 0x000C:word16] != wArg02_146 + 0x0005 l0800_A778
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A71E:
	dx = Mem91[ptrArg02_143 + 0x0008:word16]
	Mem101[ptrArg02_143 + 0x000E:word16] = Mem91[ptrArg02_143 + 0x000A:word16]
	Mem102[ptrArg02_143 + 0x000C:word16] = dx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6D5:
	ax_103 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A6C3:
	dx = fn0800_A877(ds, out bx_107)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A778:
	ax_103 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A77A:
	dxOut = dx
	bxOut = bx_107
	bpOut = bp
	return ax_103
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A6B7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A77D(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_A77D_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A77D:
	word16 di_16 = wArg06
	word16 cx_135 = 0x0000
	segptr32 ptrLoc06_154 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A1:
	word16 wLoc06_155 = SLICE(ptrLoc06_154, word16, 0)
	word16 wLoc04_158 = SLICE(ptrLoc06_154, word16, 16)
	word16 wArg0A_148 = SLICE(ptrArg08, word16, 16)
	word16 wArg08_150 = SLICE(ptrArg08, word16, 0)
	branch cx_135 == 0x000A l0800_A7D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A6:
	di_16 = di_16 - 0x0001
	branch di_16 <= 0x0000 l0800_A7D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7A9:
	word16 ax_48
	word16 v17_36 = Mem32[ptrArg08:word16] - 0x0001
	Mem37[ptrArg08:word16] = v17_36
	branch v17_36 < 0x0000 l0800_A7C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7C6:
	ax_48 = fn0800_AEC2(ds, SEQ(wArg0A_148, wArg08_150), out ch_226, out dx_227)
	ptrArg08 = SEQ(wArg0A_148, wArg08_150)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7B1:
	word16 ax_62 = Mem37[ptrArg08 + 0x000E:word16]
	word16 si_63 = Mem37[ptrArg08 + 0x000C:word16]
	Mem65[ptrArg08 + 0x000C:word16] = Mem37[ptrArg08 + 0x000C:word16] + 0x0001
	ax_48 = DPB(DPB(ax_62, Mem65[ax_62:si_63:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7D1:
	byte cl_80 = (byte) ax_48
	cx_135 = ax_48
	cx_135 = DPB(ax_48, cl_80, 0) (alias)
	branch ax_48 != 0xFFFF l0800_A798
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A798:
	Mem83[ptrLoc06_154:byte] = cl_80
	ptrLoc06_154 = SEQ(wLoc04_158, wLoc06_155 + 0x0001)
	Mem32 = Mem85
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7D8:
	word16 ax_113
	word16 dx_112
	branch cx_135 != 0xFFFF l0800_A7F3
	segptr32 ptrLoc06_166 = SEQ(wLoc04_158, wLoc06_155)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7DD:
	branch wLoc04_158 != wArg04 l0800_A7F3
	ptrLoc06_166 = SEQ(wLoc04_158, wLoc06_155)
	ptrLoc06_166 = SEQ(wLoc04_158, wLoc06_155)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7E8:
	branch wLoc06_155 != wArg02 l0800_A7F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7F3:
	Mem105[ptrLoc06_166:byte] = 0x00
	branch (Mem105[ptrArg08 + 0x0002:word16] & 0x0010) == 0x0000 l0800_A80B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A80B:
	dx_112 = wArg04
	ax_113 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A805:
	dx_112 = 0x0000
	ax_113 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A7ED:
	dx_112 = 0x0000
	ax_113 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A811:
	dxOut = dx_112
	return ax_113
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A77D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A817(byte al, selector ds, word16 wArg02, word16 wArg06, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15] Stack +0006:[0..15] Stack +000A:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_A817_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A817:
	word16 ax_53
	word32 es_bx_12 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg06, selector, 16), (word16) ptrArg06)
	word16 bx_17 = (word16) es_bx_12
	word16 cx_32 = msdos_find_first_file(wArg0A, SLICE(ptrArg02, selector, 16), (word16) ptrArg02) | SZDOP
	msdos_set_DTA(SLICE(es_bx_12, selector, 16), bx_17)
	word16 ax_35 = DPB(ax, 0x4E, 8)
	branch fp - 6 l0800_A844
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A844:
	ax_53 = fn0800_8D2B(ds, ax_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A840:
	ax_53 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A848:
	cxOut = cx_32
	dxOut = bx_17
	return ax_53
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A817_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A84A(byte al, selector ds, word16 wArg02, ptr16 & cxOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax cx dx
// Trashed: SCZDOP ax bx cx dx es Top
// Preserved: bp ds sp
fn0800_A84A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A84A:
	word16 ax_49
	word32 es_bx_12 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	word16 bx_17 = (word16) es_bx_12
	word16 cx_28 = msdos_find_next_file() | SZDOP
	msdos_set_DTA(SLICE(es_bx_12, selector, 16), bx_17)
	word16 ax_31 = DPB(ax, 0x4F, 8)
	branch fp - 6 l0800_A871
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A871:
	ax_49 = fn0800_8D2B(ds, ax_31)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A86D:
	ax_49 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A875:
	cxOut = cx_28
	dxOut = bx_17
	return ax_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A84A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A877(selector ds, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: bx dx
// Trashed: SCZO ax bx cx di es si Top
// Preserved: bp sp
fn0800_A877_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A877:
	word16 sp_13 = fp - 0x000A
	word16 si_20 = Mem15[ds:0x24E8:word16]
	segptr32 ptrLoc06_86 = SEQ(ds, 0x2358)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8A8:
	word16 wLoc04_87 = SLICE(ptrLoc06_86, word16, 16)
	word16 wLoc06_91 = SLICE(ptrLoc06_86, word16, 0)
	si_20 = si_20 - 0x0001
	branch si_20 != 0x0000 l0800_A88F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A88F:
	bx = (word16) ptrLoc06_86 (alias)
	branch (Mem32[ptrLoc06_86 + 0x0002:word16] & 0x0003) == 0x0000 l0800_A8A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A89A:
	word16 sp_41 = sp_13 - 2
	Mem42[ss:sp_41:word16] = wLoc04_87
	Mem44[ss:sp_41 - 2:word16] = bx
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	word16 stackArg4 = <invalid>
	fn0800_A6B7(ds, stackArg2, stackArg4, out dx_111, out bx, out bp_112)
	word16 sp_45 = <invalid>
	sp_13 = sp_45 + 4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8A4:
	ptrLoc06_86 = SEQ(wLoc04_87, wLoc06_91 + 0x0014)
	Mem32 = Mem65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8AF:
	bxOut = bx
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A877_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A, ptr16 & clOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31] Stack +000A:[0..31]
// LiveOut: ax cl
// Trashed: SCZO ax bx cl dx es Top
// Preserved: bp di si sp
fn0800_A8B7_entry:
	word16 wArg0A_162 = SLICE(ptrArg0A, word16, 0)
	word16 wArg0C_165 = SLICE(ptrArg0A, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8B7:
	word16 ax_141
	word16 si_107
	word16 dx_32
	word16 di_134 = 0x0000
	byte cl_21 = Mem18[ptrArg0A:byte]
	branch cl_21 != 0x72 l0800_A8D5
	segptr32 ptrArg0A_164 = SEQ(wArg0C_165, wArg0A_162 + 0x0001)
	ptrArg0A_164 = SEQ(wArg0C_165, wArg0A_162 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8D5:
	branch cl_21 != 0x77 l0800_A8DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8DF:
	branch cl_21 != 0x61 l0800_A8EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8EF:
	ax_141 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8E4:
	dx_32 = 0x0902
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8DA:
	dx_32 = 0x0302
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8E7:
	di_134 = 0x0080
	si_107 = 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8CD:
	dx_32 = 0x0001
	si_107 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A8F3:
	word16 wArg0A_169 = SLICE(ptrArg0A_164, word16, 0)
	word16 wArg0C_171 = SLICE(ptrArg0A_164, word16, 16)
	cl_21 = Mem18[ptrArg0A_164:byte]
	branch cl_21 == 0x2B l0800_A914
	ptrArg0A_172 = SEQ(wArg0C_171, wArg0A_169 + 0x0001)
	segptr32 ptrArg0A_172 = SEQ(wArg0C_171, wArg0A_169 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A901:
	branch Mem49[ptrArg0A_172:byte] != 0x2B l0800_A92B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A90A:
	branch cl_21 == 0x74 l0800_A914
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A90F:
	branch cl_21 != 0x62 l0800_A92B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A914:
	branch cl_21 != 0x2B l0800_A91F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A919:
	cl_21 = Mem49[ptrArg0A_172:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A91F:
	dx_32 = dx_32 & 0xFFFC | 0x0004
	di_134 = 0x0180
	si_107 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A92B:
	word16 dx_103
	branch cl_21 != 0x74 l0800_A936
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A936:
	branch cl_21 != 0x62 l0800_A941
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A941:
	dx_103 = dx_32 | Mem49[ds:0x2512:word16] & 0xC000
	branch (dx_103 & 0x8000) == 0x0000 l0800_A953
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A93B:
	dx_103 = dx_32 | 0x8000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A950:
	si_107 = si_107 | 0x0040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A930:
	dx_103 = dx_32 | 0x4000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A953:
	Mem117[ds:0x2354:word16] = 0xC7B5
	Mem131[ptrArg06:word16] = dx_103
	Mem139[ptrArg02:word16] = di_134
	ax_141 = si_107
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A967:
	clOut = cl_21
	return ax_141
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A8B7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_A96D(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, segptr32 ptrArg0C, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..31]
// LiveOut: ax bp cx di ds dx si
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_A96D_entry:
	word16 wArg0E_254 = SLICE(ptrArg0C, word16, 16)
	word16 wArg0C_257 = SLICE(ptrArg0C, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A96D:
	word16 dx_177
	word16 ax_178
	byte cl_30
	word16 ax_28 = fn0800_A8B7(ds, SEQ(ss, fp - 0x0006), SEQ(ss, fp - 0x0004), SEQ(wArg06, wArg04), out cl_30)
	Mem41[ptrArg0C + 0x0002:word16] = ax_28
	word16 bp_155 = fp - 2
	word16 cx_161 = DPB(cx, cl_30, 0)
	branch ax_28 == 0x0000 l0800_A9B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A991:
	branch Mem41[ptrArg0C + 0x0004:byte] >= 0x00 l0800_A9CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A998:
	byte al_77 = (byte) (word16) fn0800_B140(si, di, ds, wArg08, wArg0A, wLoc04 | wArg02, wLoc06, out cx_161, out si, out di)
	Mem80[ptrArg0C + 0x0004:byte] = al_77
	branch al_77 >= 0x00 l0800_A9CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9CD:
	branch fn0800_8D76((int16) Mem87[ptrArg0C + 0x0004:byte]) == 0x0000 l0800_A9E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9DE:
	Mem113[ptrArg0C + 0x0002:word16] = Mem95[ptrArg0C + 0x0002:word16] | 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9E7:
	word16 ax_128
	branch (Mem120[ptrArg0C + 0x0002:word16] & 0x0200) == 0x0000 l0800_A9FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9FB:
	ax_128 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9F6:
	ax_128 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9FD:
	word16 sp_159 = <invalid>
	branch fn0800_BA89(ds, SEQ(wArg0E_254, wArg0C_257), 0x0000, 0x0000, ax_128, 0x0200, out cx_161, out bp_155, out si, out di, out ds) == 0x0000 l0800_AA1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA1F:
	Mem176[Mem150[ss:bp_155 + 0x000E:segptr32] + 0x0010:word16] = 0x0000
	dx_177 = Mem176[ss:bp_155 + 0x0010:word16]
	ax_178 = Mem176[ss:bp_155 + 0x000E:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA12:
	Mem181[ss:sp_159 + 0x000A:word16] = Mem150[ss:bp_155 + 0x0010:word16]
	Mem184[ss:sp_159 + 0x0008:word16] = Mem181[ss:bp_155 + 0x000E:word16]
	fn0800_A614(ds, Mem184[ss:sp_159 + 0x0008:segptr32], out cx_303, out dx_304, out bp_155, out si, out di, out ds)
	word16 sp_189 = <invalid>
	cx_161 = Mem184[ss:sp_189 + 2:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9B9:
	Mem209[ptrArg0C + 0x0004:byte] = 0xFF
	Mem210[ptrArg0C + 0x0002:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_A9C7:
	dx_177 = 0x0000
	ax_178 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA2E:
	word16 bp_222 = Mem220[ss:bp_155:word16]
	cxOut = cx_161
	dxOut = dx_177
	bpOut = bp_222
	siOut = si
	diOut = di
	dsOut = ds
	return ax_178
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_A96D_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AA34(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bx dx es Top
// Preserved: bp sp
fn0800_AA34_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA34:
	segptr32 ptrLoc06_61 = SEQ(ds, 0x2358)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA42:
	word16 wLoc06_62 = SLICE(ptrLoc06_61, word16, 0)
	word16 wLoc04_66 = SLICE(ptrLoc06_61, word16, 16)
	branch Mem16[ptrLoc06_61 + 0x0004:byte] < 0x00 l0800_AA64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA4C:
	branch wLoc06_62 <u (word16) (Mem27[ds:0x24E8:word16] *s 0x0014) + 0x2358 l0800_AA42
	ptrLoc06_61 = SEQ(wLoc04_66, wLoc06_62 + 0x0014)
	ptrLoc06_61 = SEQ(wLoc04_66, wLoc06_62 + 0x0014)
	Mem16 = Mem27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA64:
	word16 dx_46
	word16 ax_47
	word16 wLoc04_68 = SLICE(ptrLoc06_61, word16, 16)
	word16 wLoc06_69 = SLICE(ptrLoc06_61, word16, 0)
	branch Mem40[ptrLoc06_61 + 0x0004:byte] < 0x00 l0800_AA74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA74:
	dx_46 = wLoc04_68
	ax_47 = wLoc06_69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA6E:
	dx_46 = 0x0000
	ax_47 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA7A:
	dxOut = dx_46
	return ax_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AA34_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AA7E(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bp cx di ds dx si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_AA7E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA7E:
	word16 dx_54
	word16 ax_51
	word16 dx_14
	word16 ax_12 = fn0800_AA34(ds, out dx_14)
	word16 bp_56 = fp - 2
	branch (ax_12 | dx_14) != 0x0000 l0800_AA97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA97:
	ax_51 = fn0800_A96D(si, di, ds, 0x0000, wArg06, wArg08, wArg02, wArg04, SEQ(dx_14, ax_12), out cx, out dx_54, out bp_56, out si, out di, out ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AA91:
	dx_54 = 0x0000
	ax_51 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAAF:
	word16 bp_74 = Mem73[ss:bp_56:word16]
	cxOut = cx
	dxOut = dx_54
	bpOut = bp_74
	siOut = si
	diOut = di
	dsOut = ds
	return ax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AA7E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AAB3(word16 dx, selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & chOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_AAB3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAB3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB91:
	branch wArg06 == 0x0000 l0800_AB9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB97:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AABB:
	word16 ax_31
	word16 v10_20 = wArg06 + 0x0001
	wArg06 = v10_20
	branch Mem21[ptrArg02 + 0x0006:word16] <=u v10_20 l0800_AACF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AACF:
	ax_31 = Mem21[ptrArg02 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AACA:
	ax_31 = v10_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAD6:
	word16 di_34 = ax_31
	branch (Mem21[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AB50
	segptr32 ptrArg08_235 = SEQ(wArg0A, wArg08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAE3:
	branch Mem21[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AB50
	ptrArg08_235 = SEQ(wArg0A, wArg08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAEA:
	branch Mem21[ptrArg02 + 0x0006:word16] >=u v10_20 l0800_AB50
	ptrArg08_235 = SEQ(wArg0A, wArg08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAF3:
	branch Mem21[ptrArg02:word16] != 0x0000 l0800_AB50
	ptrArg08_235 = SEQ(wArg0A, wArg08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB50:
	word16 v18_54 = wArg06 - 0x0001
	wArg08 = SLICE(ptrArg08_235, word16, 0) (alias)
	wArg0A = SLICE(ptrArg08_235, word16, 16) (alias)
	word16 wArg04_229 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_231 = SLICE(ptrArg02, word16, 0)
	wArg06 = v18_54
	branch v18_54 == 0x0000 l0800_AB8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB5A:
	di_34 = di_34 - 0x0001
	branch di_34 == 0x0000 l0800_AB8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB5D:
	word16 ax_102
	word16 v19_68 = Mem55[ptrArg02:word16] - 0x0001
	Mem69[ptrArg02:word16] = v19_68
	branch v19_68 < 0x0000 l0800_AB7A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB7A:
	ax_102 = fn0800_AEC2(ds, SEQ(wArg04_229, wArg02_231), out ch_340, out dx_341)
	ptrArg02 = SEQ(wArg04_229, wArg02_231)
	Mem110 = Mem78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB65:
	word16 ax_94 = Mem69[ptrArg02 + 0x000E:word16]
	word16 si_95 = Mem69[ptrArg02 + 0x000C:word16]
	Mem97[ptrArg02 + 0x000C:word16] = Mem69[ptrArg02 + 0x000C:word16] + 0x0001
	ax_102 = DPB(DPB(ax_94, Mem97[ax_94:si_95:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB85:
	byte dl_112 = (byte) ax_102
	dx = ax_102
	dx = DPB(ax_102, dl_112, 0) (alias)
	branch ax_102 != 0xFFFF l0800_AB47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB47:
	Mem115[ptrArg08_235:byte] = dl_112
	ptrArg08_235 = SEQ(wArg0A, wArg08 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB8C:
	branch dx == 0xFFFF l0800_AB3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AAF9:
	wArg06 = v10_20 - 0x0001
	word16 di_128 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB0E:
	branch Mem133[ptrArg02 + 0x0006:word16] <=u wArg06 l0800_AB00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB00:
	di_128 = di_128 + Mem133[ptrArg02 + 0x0006:word16]
	wArg06 = wArg06 - Mem133[ptrArg02 + 0x0006:word16]
	Mem133 = Mem147
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB1A:
	word16 ax_167 = fn0800_8F50(ds, (int16) Mem159[ptrArg02 + 0x0004:byte], SEQ(wArg0A, wArg08), di_128, out ch_342, out dx_343)
	dx = ax_167
	wArg08 = wArg08 + ax_167
	branch ax_167 == di_128 l0800_AB91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB36:
	wArg06 = wArg06 + (di_128 - ax_167)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB3D:
	Mem196[ptrArg02 + 0x0002:word16] = Mem190[ptrArg02 + 0x0002:word16] | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AB9A:
	chOut = <invalid>
	return wArg06
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AAB3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_ABA3(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & chOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax cx di si
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_ABA3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABA3:
	word16 ax_113
	word16 sp_100 = fp - 0x000A
	branch wArg06 != 0x0000 l0800_ABB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABB6:
	word16 dx_28
	word16 ax_27 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out ch_261, out dx_28)
	branch dx_28 >u 0x0001 l0800_ABF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABCD:
	branch dx_28 <u 0x0001 l0800_ABD3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABCF:
	branch Test(UGE,false) l0800_ABF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABF2:
	word16 si_46 = wArg08 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC0B:
	word16 dx_98
	si_46 = si_46 - 0x0001
	branch si_46 == 0x0000 l0800_AC26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC12:
	word16 sp_60 = sp_100 - 2
	Mem61[ss:sp_60:word16] = wArg04
	Mem64[ss:sp_60 - 2:word16] = wArg02
	Mem67[ss:sp_60 - 4:word16] = wArg06
	Mem70[ss:sp_60 - 6:word16] = wArg0C
	Mem73[ss:sp_60 - 8:word16] = wArg0A
	branch fn0800_AAB3(dx_28, ds, Mem73[ss:sp_60 - 8:segptr32], Mem73[ss:sp_60 - 4:word16], Mem73[ss:sp_60 - 2:word16], Mem73[ss:sp_60:word16], out ch_263) == 0x0000 l0800_ABF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABF8:
	sp_100 = <invalid>
	wArg04 = dx_98
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, out ch_264, out dx_98)
	Mem57 = Mem107
	dx_28 = dx_98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC26:
	ax_113 = wArg08 - si_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABD3:
	sp_100 = fp - 0x000A
	ax_113 = (uint16) ((uint32) (uint16) (ax_27 - fn0800_AAB3(dx_28, ds, SEQ(wArg0C, wArg0A), ax_27, wArg02, wArg04, out ch_262)) /u wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ABB2:
	ax_113 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC2B:
	word16 di_167 = Mem166[ss:sp_100:word16]
	word16 si_169 = Mem166[ss:sp_100 + 2:word16]
	chOut = <invalid>
	siOut = si_169
	diOut = di_167
	return ax_113
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_ABA3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AC31(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_AC31_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC31:
	word16 cx_108
	word16 si_29
	branch Mem12[ptrArg02:word16] >= 0x0000 l0800_AC4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC4D:
	int32 dx_ax_22 = (int32) Mem12[ptrArg02:word16]
	word16 dx_24 = SLICE(dx_ax_22, word16, 16)
	word16 ax_26 = ((word16) dx_ax_22 ^ dx_24) - dx_24
	cx_108 = ax_26
	si_29 = ax_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC41:
	word16 cx_31 = Mem12[ptrArg02 + 0x0006:word16] + Mem12[ptrArg02:word16]
	cx_108 = cx_31 + 0x0001
	si_29 = cx_31 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC5C:
	branch (Mem12[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_ACAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC67:
	word16 dx_49 = Mem12[ptrArg02 + 0x000C:word16]
	word16 ax_48 = Mem12[ptrArg02 + 0x000E:word16]
	word16 wLoc06_114 = dx_49
	branch Mem51[ptrArg02:word16] >= 0x0000 l0800_ACA3
	segptr32 ptrLoc06_115 = SEQ(ax_48, dx_49)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACA3:
	word16 wLoc06_116 = SLICE(ptrLoc06_115, word16, 0)
	word16 wLoc04_132 = SLICE(ptrLoc06_115, word16, 16)
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_AC96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC96:
	branch Mem66[ptrLoc06_115:byte] != 0x0A l0800_ACA3
	ptrLoc06_115 = SEQ(wLoc04_132, wLoc06_116 + 0x0001)
	ptrLoc06_115 = SEQ(wLoc04_132, wLoc06_116 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACA2:
	si_29 = si_29 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC7E:
	segptr32 ptrLoc06_120 = SEQ(ax_48, dx_49)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC8D:
	ptrLoc06_120 = SLICE(ptrLoc06_120, word16, 16) (alias)
	cx_108 = cx_108 - 0x0001
	branch cx_108 != 0x0000 l0800_AC80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC80:
	word16 v18_84 = wLoc06_114 - 0x0001
	wLoc06_114 = v18_84
	branch Mem85[SEQ(ptrLoc06_120, v18_84):byte] != 0x0A l0800_AC8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC8C:
	si_29 = si_29 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AC94:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACAA:
	return si_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AC31_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_ACB3(selector ds, word16 wArg02, word16 wArg04, word16 wArg0A, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +000A:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_ACB3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACB3:
	word16 ax_114
	word16 cx_103 = wArg04
	word16 bp_21
	word16 bx_102
	word16 dx_104
	branch fn0800_A6B7(ds, wArg02, wArg04, out dx_104, out bx_102, out bp_21) == 0x0000 l0800_ACCE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACCE:
	branch wArg0A != 0x0001 l0800_ACEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACD3:
	ptr32 es_bx_41 = Mem18[ss:bp_21 + 0x0004:segptr32]
	word16 bx_43 = (word16) es_bx_41
	branch Mem18[es_bx_41:word16] <= 0x0000 l0800_ACEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACDC:
	int32 dx_ax_61 = (int32) fn0800_AC31(SEQ(Mem18[ss:bp_21 + 0x0006:word16], bx_43))
	Mem64[ss:bp_21 + 0x0008:word16] = v19_63
	Mem50[ss:bp_21 + 0x0008:ui32] = SEQ(Mem64[ss:bp_21 + 0x000A:word16], Mem50[ss:bp_21 + 0x0008:word16])
	ui32 v21_v19_130 = Mem50[ss:bp_21 + 0x0008:ui32] - dx_ax_61
	Mem69[ss:bp_21 + 0x000A:word16] = SLICE(v21_v19_130, word16, 16)
	word16 v19_63 = (word16) v21_v19_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACEA:
	ptr32 es_bx_74 = Mem73[ss:bp_21 + 0x0004:segptr32]
	Mem78[es_bx_74 + 0x0002:word16] = Mem73[es_bx_74 + 0x0002:word16] & 0xFE5F
	Mem81[es_bx_74:word16] = 0x0000
	word16 dx_83 = Mem81[es_bx_74 + 0x0008:word16]
	Mem84[es_bx_74 + 0x000E:word16] = Mem81[es_bx_74 + 0x000A:word16]
	Mem85[es_bx_74 + 0x000C:word16] = dx_83
	word16 ax_101 = fn0800_8E29(ds, (int16) Mem95[es_bx_74 + 0x0004:byte], Mem92[ss:bp_21 + 0x0008:word16], Mem89[ss:bp_21 + 0x000A:word16], SLICE(wArg0A, byte, 0), out cx_103, out dx_104, out bx_102)
	branch dx_104 != 0xFFFF l0800_AD2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD20:
	branch ax_101 != 0xFFFF l0800_AD2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2A:
	ax_114 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD25:
	ax_114 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ACC9:
	ax_114 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2C:
	cxOut = cx_103
	dxOut = dx_104
	bxOut = bx_102
	return ax_114
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_ACB3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AD2F(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp sp
fn0800_AD2F_entry:
	word16 wArg04_113 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_115 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD2F:
	word16 dx_22
	word16 ax_19 = fn0800_97B6(ds, (int16) Mem7[ptrArg02 + 0x0004:byte], out dx_22)
	word16 wLoc04_110 = dx_22
	word16 wLoc06_111 = ax_19
	branch dx_22 != 0xFFFF l0800_AD52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD4D:
	branch ax_19 == 0xFFFF l0800_AD7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD52:
	branch Mem30[ptrArg02:word16] >= 0x0000 l0800_AD6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD6B:
	ui32 v23_v22_104 = SEQ(dx_22, v22_62) - (int32) fn0800_AC31(SEQ(wArg04_113, wArg02_115))
	word16 v22_62 = (word16) v23_v22_104
	wLoc06_111 = v22_62
	wLoc04_110 = SLICE(v23_v22_104, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD5B:
	ui32 v19_v17_106 = SEQ(dx_22, v17_87) + (int32) fn0800_AC31(ptrArg02)
	word16 v17_87 = (word16) v19_v17_106
	wLoc06_111 = v17_87
	wLoc04_110 = SLICE(v19_v17_106, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD7B:
	dxOut = wLoc04_110
	return wLoc06_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AD2F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AD85(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax bp
// Trashed: SCZO ax bp bx cx di dx es si sp Top
// Preserved:
fn0800_AD85_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD85:
	word16 ax_113
	word16 bp_111 = fp - 2
	word16 sp_13 = fp - 0x000A
	word16 di_17 = wArg06
	branch wArg06 == 0x0000 l0800_AE07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AD94:
	word16 dx_28
	word16 ax_27 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out ch_255, out dx_28)
	branch dx_28 >u 0x0001 l0800_ADC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADAB:
	branch dx_28 <u 0x0001 l0800_ADB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADAD:
	branch Test(UGE,false) l0800_ADC9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADC9:
	branch wArg08 <=u 0x0000 l0800_AE07
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADD0:
	word16 sp_53 = sp_13 - 2
	Mem54[ss:sp_53:word16] = Mem50[ss:bp_111 + 0x0006:word16]
	Mem57[ss:sp_53 - 2:word16] = Mem54[ss:bp_111 + 0x0004:word16]
	Mem60[ss:sp_53 - 4:word16] = di_17
	Mem63[ss:sp_53 - 6:word16] = Mem60[ss:bp_111 + 0x000E:word16]
	Mem66[ss:sp_53 - 8:word16] = Mem63[ss:bp_111 + 0x000C:word16]
	word16 si_74
	word16 ax_68 = fn0800_B4BE(ds, Mem66[ss:sp_53 - 8:segptr32], Mem66[ss:sp_53 - 4:word16], Mem66[ss:sp_53 - 2:word16], Mem66[ss:sp_53:word16], out bp_111, out si_74, out di_17)
	branch false l0800_ADEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADE6:
	branch ax_68 == di_17 l0800_ADEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADEE:
	word16 dx_97
	word16 ax_95 = fn0800_8CCB(Mem66[ss:bp_111 + 0x0004:word16], 0x0000, Mem66[ss:bp_111 + 0x0006:word16], di_17, out ch_257, out dx_97)
	Mem105[ss:bp_111 + 0x0006:word16] = dx_97
	Mem106[ss:bp_111 + 0x0004:word16] = ax_95
	sp_13 = <invalid>
	branch si_74 + 0x0001 <u Mem106[ss:bp_111 + 0x000A:word16] l0800_ADD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE07:
	ax_113 = Mem112[ss:bp_111 + 0x000A:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADEA:
	ax_113 = si_74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_ADB1:
	word16 di_140
	ax_113 = (uint16) ((uint32) (uint16) fn0800_B4BE(ds, SEQ(wArg0C, wArg0A), ax_27, wArg02, wArg04, out bp_111, out si_256, out di_140) /u di_140)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE0A:
	bpOut = Mem163[ss:bp_111:word16]
	return ax_113
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AD85_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AE10(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: bp sp
// Trashed: SCZO ax bp bx cx dx es si sp Top
// Preserved:
fn0800_AE10_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE10:
	word16 bp_26 = fp - 2
	word16 sp_11 = fp - 0x0008
	word16 si_14 = 0x0014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE40:
	si_14 = si_14 - 0x0001
	branch si_14 != 0x0000 l0800_AE24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE24:
	ptr32 es_bx_28 = Mem27[ss:bp_26 - 0x0004:segptr32]
	word16 bx_30 = (word16) es_bx_28
	branch (Mem27[es_bx_28 + 0x0002:word16] & 0x0300) != 0x0300 l0800_AE3C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE33:
	word16 sp_37 = sp_11 - 2
	Mem38[ss:sp_37:word16] = Mem27[ss:bp_26 - 0x0002:word16]
	Mem40[ss:sp_37 - 2:word16] = bx_30
	fn0800_A6B7(ds, Mem40[ss:sp_37 - 2:word16], Mem40[ss:sp_37:word16], out dx_90, out bx_91, out bp_26)
	word16 sp_48 = <invalid>
	sp_11 = sp_48 + 4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE3C:
	Mem61[ss:bp_26 - 0x0004:word16] = Mem59[ss:bp_26 - 0x0004:word16] + 0x0014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE47:
	return Mem27[ss:bp_26:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AE10_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AE4C(selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax bp dx sp
// Trashed: SCZDO ax bp bx cx dx es si sp Top
// Preserved:
fn0800_AE4C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE4C:
	word16 sp_23 = fp - 2
	word16 bp_17 = fp - 2
	branch (Mem7[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AE5D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE5A:
	bp_17 = fn0800_AE10(ds)
	sp_23 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE5D:
	word16 ax_105
	ptr32 es_bx_31 = Mem7[ss:bp_17 + 0x0004:segptr32]
	word16 sp_36 = sp_23 - 2
	Mem37[ss:sp_36:word16] = Mem7[es_bx_31 + 0x0006:word16]
	word16 ax_38 = Mem37[es_bx_31 + 0x000A:word16]
	word16 dx_39 = Mem37[es_bx_31 + 0x0008:word16]
	Mem40[es_bx_31 + 0x000E:word16] = ax_38
	Mem41[es_bx_31 + 0x000C:word16] = dx_39
	Mem43[ss:sp_36 - 2:word16] = ax_38
	Mem45[ss:sp_36 - 4:word16] = dx_39
	Mem49[ss:sp_36 - 6:word16] = (int16) Mem45[es_bx_31 + 0x0004:byte]
	word16 dx_54
	word16 ax_51 = fn0800_B97F(ds, Mem49[ss:sp_36 - 6:word16], Mem49[ss:sp_36 - 4:word16], Mem49[ss:sp_36 - 2:word16], Mem49[ss:sp_36:word16], out dx_54)
	ptr32 es_bx_62 = Mem49[ss:bp_17 + 0x0004:segptr32]
	Mem65[es_bx_62:word16] = ax_51
	branch ax_51 <= 0x0000 l0800_AE95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE95:
	ptr32 es_bx_69 = Mem65[ss:bp_17 + 0x0004:segptr32]
	branch Mem65[es_bx_69:word16] != 0x0000 l0800_AEAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEAE:
	ptr32 es_bx_74 = Mem65[ss:bp_17 + 0x0004:segptr32]
	Mem77[es_bx_74:word16] = 0x0000
	Mem79[es_bx_74 + 0x0002:word16] = Mem77[es_bx_74 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE9E:
	Mem87[es_bx_69 + 0x0002:word16] = Mem65[es_bx_69 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEBB:
	ax_105 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AE8C:
	Mem90[es_bx_62 + 0x0002:word16] = Mem65[es_bx_62 + 0x0002:word16] & 0xFFDF
	ax_105 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEBE:
	word16 bp_101 = Mem99[ss:sp_36 + 0x0002:word16]
	dxOut = dx_54
	bpOut = bp_101
	return ax_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AE4C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, ptr16 & chOut, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31]
// LiveOut: ax cx dx
// Trashed: SCZO ax bx cx dx es si Top
// Preserved: bp sp
fn0800_AEC2_entry:
	word16 wArg04_41 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEC2:
	Mem13[ptrArg02:word16] = Mem7[ptrArg02:word16] + 0x0001
	word16 dx_25
	word16 ax_21 = fn0800_AED6(ds, (word16) ptrArg02, wArg04_41, out dx_25)
	chOut = <invalid>
	dxOut = dx_25
	return ax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AEC2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AED6(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax dx
// Trashed: SCZO ax bp bx cx dx es si sp Top
// Preserved: D
fn0800_AED6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AED6:
	word16 ax_196
	word16 bp_147 = fp - 2
	word16 sp_58 = fp - 4
	branch (wArg02 | wArg04) != 0x0000 l0800_AEE8
	segptr32 ptrArg02_217 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEE8:
	word16 ax_223
	branch Mem11[ptrArg02_217:word16] <= 0x0000 l0800_AF0B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF0B:
	branch Mem11[ptrArg02_217:word16] < 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF14:
	branch (Mem11[ptrArg02_217 + 0x0002:word16] & 0x0110) != 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF1C:
	branch (Mem11[ptrArg02_217 + 0x0002:word16] & 0x0001) == 0x0000 l0800_AF7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF24:
	Mem37[ptrArg02_217 + 0x0002:word16] = Mem11[ptrArg02_217 + 0x0002:word16] | 0x0080
	branch Mem37[ptrArg02_217 + 0x0006:word16] == 0x0000 l0800_AF43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF43:
	branch (Mem43[Mem43[ss:bp_147 + 0x0004:segptr32] + 0x0002:word16] & 0x0200) == 0x0000 l0800_AF51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF4E:
	bp_147 = fn0800_AE10(ds)
	sp_58 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF51:
	word16 sp_66 = sp_58 - 2
	Mem68[ss:sp_66:word16] = 0x0001
	Mem71[ss:sp_66 - 2:word16] = ds
	Mem74[ss:sp_66 - 4:word16] = 0x4EE4
	Mem82[ss:sp_66 - 6:word16] = (int16) Mem74[Mem74[ss:bp_147 + 0x0004:segptr32] + 0x0004:byte]
	word16 ax_83 = fn0800_B97F(ds, Mem82[ss:sp_66 - 6:word16], Mem82[ss:sp_66 - 4:word16], Mem82[ss:sp_66 - 2:word16], Mem82[ss:sp_66:word16], out dx)
	sp_58 = sp_66 + 0x0002
	branch ax_83 != 0x0000 l0800_AF9E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF9E:
	branch Mem82[ds:0x4EE4:byte] != 0x0D l0800_AFB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFA5:
	branch (Mem82[Mem82[ss:bp_147 + 0x0004:segptr32] + 0x0002:word16] & 0x0040) == 0x0000 l0800_AF43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFB0:
	ptr32 es_bx_109 = Mem82[ss:bp_147 + 0x0004:segptr32]
	Mem113[es_bx_109 + 0x0002:word16] = Mem82[es_bx_109 + 0x0002:word16] & 0xFFDF
	ax_223 = DPB(ax_83, Mem113[ds:0x4EE4:byte], 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF6D:
	Mem124[ss:sp_66:word16] = (int16) Mem82[Mem82[ss:bp_147 + 0x0004:segptr32] + 0x0004:byte]
	branch fn0800_A59D(ds, Mem124[ss:sp_66:word16], out dx) == 0x0001 l0800_AF8A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF8A:
	ptr32 es_bx_137 = Mem124[ss:bp_147 + 0x0004:segptr32]
	Mem145[es_bx_137 + 0x0002:word16] = Mem124[es_bx_137 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF7F:
	ptr32 es_bx_149 = Mem148[ss:bp_147 + 0x0004:segptr32]
	Mem153[es_bx_149 + 0x0002:word16] = Mem148[es_bx_149 + 0x0002:word16] | 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF34:
	branch fn0800_AE4C(ds, ptrArg02_217, out dx, out bp_147) == 0x0000 l0800_AEF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AF3F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEF1:
	ptr32 es_bx_183 = Mem182[ss:bp_147 + 0x0004:segptr32]
	Mem187[es_bx_183:word16] = Mem182[es_bx_183:word16] - 0x0001
	word16 ax_188 = Mem187[es_bx_183 + 0x000E:word16]
	word16 si_189 = Mem187[es_bx_183 + 0x000C:word16]
	Mem191[es_bx_183 + 0x000C:word16] = Mem187[es_bx_183 + 0x000C:word16] + 0x0001
	ax_223 = DPB(ax_188, Mem191[ax_188:si_189:byte], 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFBB:
	ax_196 = DPB(ax_223, 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AEE2:
	ax_196 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFBD:
	dxOut = dx
	return ax_196
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AED6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_AFCB(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_AFCB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFCB:
	word16 ax_127
	word16 dx_129
	selector es_17 = SLICE(ptrArg02, selector, 16)
	word16 di_19 = (word16) ptrArg02
	branch (es_17 | di_19) == 0x0000 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFDC:
	byte ah_25 = Mem15[ptrArg02:byte]
	word16 cx_26 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE5:
	branch cx_26 == 0x0000 l0800_AFE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE5_1:
	di_19 = di_262 + 0x0001
	cx_26 = cx_26 - 0x0001
	di_262 = di_19
	branch Mem15[es_17:di_262:byte] == 0x00 l0800_AFE5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFE7:
	word16 cx_38 = ~cx_26
	branch cx_38 == 0x0001 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFEC:
	ptr32 es_di_46 = Mem15[ds:0x26AA:segptr32]
	word16 di_151 = (word16) es_di_46
	word16 wLoc06_166 = di_151
	branch (SLICE(es_di_46, selector, 16) | di_151) != 0x0000 l0800_B009
	segptr32 ptrLoc06_176 = es_di_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B009:
	ptr32 es_di_63 = Mem62[ds:di_151:segptr32]
	selector es_64 = SLICE(es_di_63, selector, 16)
	word16 di_124 = (word16) es_di_63
	ptrLoc06_176 = SLICE(ptrLoc06_176, word16, 16) (alias)
	word16 cx_79 = cx_38 - 0x0001
	branch (es_64 | di_124) == 0x0000 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B012:
	byte al_71 = Mem62[es_di_63:byte]
	branch al_71 == 0x00 l0800_AFFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B019:
	branch ah_25 != al_71 l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B01D:
	bool Z_113 = SLICE(cond(Mem62[es_64:cx_38 - 0x0001 + di_124:byte] - 0x3D), bool, 2)
	branch Mem62[es_64:cx_38 - 0x0001 + di_124:byte] != 0x3D l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B025:
	selector ds_159 = SLICE(ptrArg02, selector, 16)
	word16 si_160 = (word16) ptrArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B029:
	ptrLoc06_176 = SLICE(ptrLoc06_176, word16, 16) (alias)
	branch cx_79 == 0x0000 l0800_B02B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B029_1:
	Z_113 = SLICE(cond(Mem86[ds_159:si_263:byte] - Mem86[es_64:di_124:byte]), bool, 2) (alias)
	si_160 = si_263 + 0x0001
	di_124 = di_124 + 0x0001
	cx_79 = cx_79 - 0x0001
	si_263 = si_160
	branch Mem86[ds_159:si_263:byte] != Mem86[es_64:di_124:byte] l0800_B029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B02B:
	branch Z_113 l0800_B002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B002:
	word16 v23_120 = wLoc06_166 + 0x0004
	word16 wLoc04_182 = SLICE(ptrLoc06_176, word16, 16)
	wLoc06_166 = v23_120
	di_151 = (word16) SEQ(wLoc04_182, v23_120) (alias)
	ptrLoc06_176 = SEQ(wLoc04_182, v23_120)
	Mem62 = Mem121
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B030:
	ax_127 = di_124 + 0x0001
	dx_129 = es_64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_AFFC:
	dx_129 = 0x0000
	ax_127 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B035:
	dxOut = dx_129
	return ax_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_AFCB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B03B(word16 wArg02, word16 wArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0006:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_B03B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B03B:
	selector es_60 = SLICE(ptrArg02, selector, 16)
	word16 di_30 = (word16) ptrArg02
	selector ds_58 = SLICE(ptrArg06, selector, 16)
	word16 si_26 = (word16) ptrArg06
	word16 cx_20 = wArg0A >>u 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B04E:
	branch cx_20 == 0x0000 l0800_B050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B050:
	branch wArg0A >>u 0x0001 >=u 0x0000 l0800_B053
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B052:
	Mem31[es_60:di_30:byte] = Mem27[ds_58:si_26:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B053:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B03B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B04E_1:
	Mem53[es_60:di_30:word16] = Mem27[ds_58:si_26:word16]
	si_26 = si_26 + 0x0002
	di_30 = di_30 + 0x0002
	cx_20 = cx_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx es Top
// Preserved: bp di sp
fn0800_B05F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B05F:
	word16 ax_59 = DPB(DPB(ax, bArg08, 0), bArg08, 8)
	word16 di_17 = (word16) ptrArg02
	selector es_21 = SLICE(ptrArg02, selector, 16)
	word16 cx_13 = wArg06
	ax_59 = DPB(ax_59, bArg08, 0) (alias)
	word16 ax_46 = DPB(ax_59, bArg08, 0)
	branch (di_17 & 0x0001) == 0x0000 l0800_B079
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B075:
	branch wArg06 == 0x0000 l0800_B080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B077:
	Mem22[ptrArg02:byte] = bArg08
	di_17 = di_17 + 0x0001
	cx_13 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B079:
	word16 cx_27 = cx_13 >>u 0x0001
	cx_29 = cx_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07B:
	word16 cx_29
	ax_46 = DPB(ax_46, bArg08, 0) (alias)
	branch cx_29 == 0x0000 l0800_B07D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07D:
	branch cx_27 >=u 0x0000 l0800_B080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07F:
	Mem34[es_21:di_17:byte] = bArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B080:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B05F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B07B_1:
	Mem48[es_21:di_17:word16] = ax_46
	di_17 = di_17 + 0x0002
	cx_29 = cx_29 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B083(word16 wArg02, word16 wArg04, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp sp
fn0800_B083_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B083:
	fn0800_B05F(SEQ(wArg04, wArg02), wArg08, SLICE(DPB(ax, bArg06, 0), byte, 0))
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B083_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B0A1(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_B0A1_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0A1:
	word16 ax_33
	fn0800_8F2F((byte) wArg02, wArg02, wArg08, wArg04, (byte) wArg06, wArg06, out cx_196, out dx_197, out bx_198)
	bool C_29 = <invalid>
	branch C_29 l0800_B0BE
	segptr32 ptrArg02_134 = SEQ(wArg04, wArg02)
	ptrArg02_134 = SEQ(wArg04, wArg02)
	segptr32 ptrArg06_137 = SEQ(wArg08, wArg06)
	ptrArg06_137 = SEQ(wArg08, wArg06)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0BE:
	ax_33 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0B8:
	ax_33 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0C1:
	word16 si_49 = (word16) ptrArg02_134
	selector ds_63 = SLICE(ptrArg02_134, selector, 16)
	word16 di_52 = (word16) ptrArg06_137
	selector es_68 = SLICE(ptrArg06_137, selector, 16)
	word16 cx_43 = wArg0A
	branch ax_33 == 0x0000 l0800_B0D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0CE:
	si_49 = si_49 + wArg0A - 0x0001
	di_52 = di_52 + wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0D4:
	branch (di_52 & 0x0001) == 0x0000 l0800_B0DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DA:
	branch wArg0A == 0x0000 l0800_B0ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DC:
	Mem69[es_68:di_52:byte] = Mem17[ds_63:si_49:byte]
	si_49 = si_49 + 0x0001
	di_52 = di_52 + 0x0001
	cx_43 = wArg0A - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0DE:
	word16 si_117 = si_49 - ax_33
	word16 di_118 = di_52 - ax_33
	word16 cx_81 = cx_43 >>u 0x0001
	cx_119 = cx_81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E4:
	word16 cx_119
	branch cx_119 == 0x0000 l0800_B0E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E6:
	branch cx_81 >=u 0x0000 l0800_B0ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E8:
	Mem95[es_68:di_118 + ax_33:byte] = Mem92[ds_63:si_117 + ax_33:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0ED:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B0A1_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0E4_1:
	Mem116[es_68:di_118:word16] = Mem92[ds_63:si_117:word16]
	si_117 = si_117 + 0x0002
	di_118 = di_118 + 0x0002
	cx_119 = cx_119 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B0F3(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp sp
fn0800_B0F3_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B0F3:
	fn0800_B0A1(wArg06, wArg08, wArg02, wArg04, wArg0A)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B0F3_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B113(selector ds, word16 wArg02, word16 wArg04, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax cx
// Trashed: C ax cx dx Top
// Preserved: SZO bp ds sp
fn0800_B113_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B113:
	word16 ax_17
	branch msdos_create_truncate_file(wArg02, SLICE(ptrArg04, selector, 16), (word16) ptrArg04, out ax_17) l0800_B126
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B126:
	ax_17 = fn0800_8D2B(ds, ax_17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B124:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B12A:
	cxOut = wArg02
	return ax_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B113_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B12E(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_B12E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B12E:
	word16 ax_16
	msdos_write_file(wArg02, 0x0000, SEQ(ds, 0x0000), out ax_16)
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B12E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_B140(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] si:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax cx di si
// Trashed: SCZO ax bx cx di dx si Top
// Preserved: bp sp
fn0800_B140_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B140:
	word16 si_16 = wArg06
	branch (wArg06 & 0xC000) != 0x0000 l0800_B15C
	segptr32 ptrLoc0A_396 = SEQ(si, di)
	ptrLoc0A_396 = SEQ(si, di)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B154:
	si_16 = wArg06 | Mem15[ds:0x2512:word16] & 0xC000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B15C:
	word16 ax_324
	word16 di_114
	word16 cx_110
	word16 ax_42 = fn0800_A53C(ds, SEQ(wArg04, wArg02), 0x00, out cx_110)
	word16 wLoc0A_429 = SLICE(ptrLoc0A_396, word16, 0)
	word16 wLoc08_437 = SLICE(ptrLoc0A_396, word16, 16)
	word16 wLoc04_369 = ax_42
	branch (si_16 & 0x0100) == 0x0000 l0800_B1F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B174:
	word16 di_52 = wArg08 & Mem46[ds:0x2514:word16]
	branch (di_52 & 0x0180) != 0x0000 l0800_B186
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B17F:
	fn0800_8D2B(ds, 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B186:
	word16 wLoc0C_372
	branch ax_42 != 0xFFFF l0800_B1AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1AF:
	branch (si_16 & 0x0400) == 0x0000 l0800_B1F2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1B5:
	wLoc0C_372 = 0x0050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B18C:
	branch Mem68[ds:0x2516:word16] == 0x0002 l0800_B19D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B19D:
	word16 ax_86
	branch (di_52 & 0x0080) == 0x0000 l0800_B1A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1A7:
	ax_86 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1A3:
	ax_86 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1AA:
	wLoc04_369 = ax_86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1BB:
	branch (si_16 & 0x00F0) == 0x0000 l0800_B1DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1DD:
	word16 ax_109 = fn0800_B113(ds, ax_86, SEQ(wArg04, wArg02), out cx_110)
	di_114 = ax_109
	branch ax_109 >= 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1EF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1C1:
	word16 ax_130 = fn0800_B113(ds, 0x0000, SEQ(wArg04, wArg02), out cx_110)
	di_114 = ax_130
	branch ax_130 >= 0x0000 l0800_B1D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1D6:
	fn0800_A57F(ax_130, ds, ax_130)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1F2:
	word16 ax_163 = fn0800_B2A0(ds, SEQ(wArg04, wArg02), si_16, out cx_110)
	di_114 = ax_163
	branch ax_163 < 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B205:
	word16 ax_184 = fn0800_A2A3(ds, 0x00, ptrLoc0A_396, out cx_512)
	cx_110 = 0x0000
	branch (ax_184 & 0x0080) == 0x0000 l0800_B237
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B237:
	branch (si_16 & 0x0200) == 0x0000 l0800_B241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B23D:
	cx_110 = fn0800_B12E(ds, ax_163)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B216:
	si_16 = si_16 | 0x2000
	branch (si_16 & 0x8000) == 0x0000 l0800_B241
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B220:
	fn0800_A2A3(ds, 0x01, (uint32) (uint16) (ax_184 & 0x00FF | 0x0020), out cx_110)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B241:
	branch (wLoc04_369 & 0x0001) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B248:
	branch (si_16 & 0x0100) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B24E:
	branch (si_16 & 0x00F0) == 0x0000 l0800_B265
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B254:
	fn0800_A53C(ds, SEQ(wArg04, wArg02), 0x01, out cx_110)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B265:
	branch di_114 < 0x0000 l0800_B298
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B269:
	word16 ax_283
	branch (si_16 & 0x0300) == 0x0000 l0800_B274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B274:
	ax_283 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B26F:
	ax_283 = 0x1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B276:
	word16 ax_303
	word16 dx_291 = si_16 & 0xF8FF | ax_283
	branch (wLoc04_369 & 0x0001) == 0x0000 l0800_B28A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B28A:
	ax_303 = 0x0100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B286:
	ax_303 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B28D:
	Mem322[ds:(di_114 << 0x0001) + 0x24EA:word16] = dx_291 | ax_303
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B1D3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B298:
	ax_324 = di_114
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B193:
	wLoc0C_372 = Mem68[ds:0x2516:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B197:
	ax_324 = fn0800_8D2B(ds, wLoc0C_372)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B29A:
	cxOut = cx_110
	siOut = wLoc08_437
	diOut = wLoc0A_429
	return (byte) ax_324
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B140_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..15]
// LiveOut: ax cx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_B2A0_entry:
	byte bArg06_69 = SLICE(wArg06, byte, 0)
	byte bArg07_73 = SLICE(wArg06, byte, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2A0:
	byte al_10 = 0x01
	branch (wArg06 & 0x0002) != 0x0000 l0800_B2BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2B1:
	al_10 = 0x02
	branch (wArg06 & 0x0004) != 0x0000 l0800_B2BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2B9:
	al_10 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2BB:
	word16 ax_42
	word16 cx_85 = DPB(wArg06, bArg06_69 & 0xF0, 0)
	word16 ax_36
	branch msdos_open_file(ptrArg02, al_10 | bArg06_69 & 0xF0, out ax_36) l0800_B2E7
	word16 wArg06_74 = SEQ(bArg07_73, bArg06_69)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2E7:
	ax_42 = fn0800_8D2B(ds, ax_36)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2CD:
	Mem55[ds:(ax_36 << 0x0001) + 0x24EA:word16] = wArg06_74 & 0xB8FF | 0x8000
	ax_42 = ax_36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2EB:
	cxOut = cx_85
	return ax_42
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B2A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B2EF(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax di si
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
fn0800_B2EF_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B2EF:
	word16 di_31
	word16 si_32
	word16 ax_30 = fn0800_9828(cx, dx, bx, ds, fp + 0x0006, SEQ(wArg04, wArg02), out si_32, out di_31)
	siOut = si_32
	diOut = di_31
	return ax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B2EF_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B30A(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx es si Top
// Preserved: bp sp
fn0800_B30A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B30A:
	Mem13[ptrArg04:word16] = Mem7[ptrArg04:word16] - 0x0001
	word16 bx_27
	word16 cx_30
	word16 dx_31
	word16 ax_25 = fn0800_B324(ds, SLICE((int16) bArg02, byte, 0), ptrArg04, out cx_30, out dx_31, out bx_27, out bp_57)
	cxOut = cx_30
	dxOut = dx_31
	bxOut = bx_27
	return ax_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B30A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B324(selector ds, byte bArg02, segptr32 ptrArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..7] Stack +0004:[0..31]
// LiveOut: ax bp bx cx dx sp
// Trashed: SCZO ax bp bx cx dx es si sp Top
// Preserved:
fn0800_B324_entry:
	word16 wArg04_313 = SLICE(ptrArg04, word16, 0)
	word16 wArg06_317 = SLICE(ptrArg04, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B324:
	word16 ax_127
	word16 ax_286
	Mem14[ds:0x4EE6:byte] = bArg02
	word16 bp_155 = fp - 2
	word16 sp_135 = fp - 4
	word16 bx_128 = (word16) ptrArg04
	branch Mem14[ptrArg04:word16] >= 0xFFFF l0800_B389
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B389:
	branch (Mem14[ptrArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_B39C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B394:
	branch (Mem14[ptrArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_B3A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3A6:
	Mem33[ptrArg04 + 0x0002:word16] = Mem14[ptrArg04 + 0x0002:word16] | 0x0100
	word16 bx_31 = (word16) ptrArg04
	branch Mem33[ptrArg04 + 0x0006:word16] == 0x0000 l0800_B421
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B421:
	selector es_38 = SLICE(ptrArg04, selector, 16)
	branch (Mem33[ds:((int16) Mem33[ptrArg04 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B44C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B435:
	fn0800_8E29(ds, (int16) Mem56[es_38:wArg04_313 + 0x0004:byte], 0x0000, 0x0000, 0x02, out cx_421, out dx_422, out bx_423)
	ptrArg04 = SEQ(wArg06_317, wArg04_313)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B44C:
	ptrArg04 = SLICE(ptrArg04, word16, 0) (alias)
	word16 wArg06_329 = SLICE(ptrArg04, word16, 16)
	branch Mem73[ds:0x4EE6:byte] != 0x0A l0800_B478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B453:
	branch (Mem73[ptrArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B478
	ptrArg04 = SEQ(wArg06_329, ptrArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B45E:
	ax_127 = fn0800_C779(ds, (int16) Mem92[ptrArg04 + 0x0004:byte], SEQ(ds, 0x26AE), 0x0001, out cx, out dx, out bx_424)
	branch ax_127 != 0x0001 l0800_B495
	ptrArg04 = SEQ(wArg06_329, ptrArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B478:
	ptrArg04 = SLICE(ptrArg04, word16, 16) (alias)
	ax_127 = fn0800_C779(ds, (int16) Mem118[ptrArg04 + 0x0004:byte], SEQ(ds, 0x4EE6), 0x0001, out cx, out dx, out bx_128)
	sp_135 = fp - 0x0004
	branch ax_127 == 0x0001 l0800_B4A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B495:
	sp_135 = fp - 0x0004
	bx_128 = (word16) ptrArg04 (alias)
	branch (Mem140[ptrArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_B4A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3B6:
	branch Mem33[ptrArg04:word16] == 0x0000 l0800_B3C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3BC:
	word16 ax_154 = fn0800_A6B7(ds, bx_31, wArg06_317, out dx, out bx_128, out bp_155)
	word16 sp_160 = <invalid>
	cx = Mem153[ss:sp_160 + 2:word16]
	sp_135 = sp_160 + 4
	branch ax_154 != 0x0000 l0800_B380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3C9:
	ptr32 es_bx_176 = Mem175[ss:bp_155 + 0x0006:segptr32]
	Mem181[es_bx_176:word16] = -Mem175[es_bx_176 + 0x0006:word16]
	ax_127 = Mem181[es_bx_176 + 0x000E:word16]
	word16 si_183 = Mem181[es_bx_176 + 0x000C:word16]
	Mem185[es_bx_176 + 0x000C:word16] = Mem181[es_bx_176 + 0x000C:word16] + 0x0001
	byte dl_187 = Mem185[ds:0x4EE6:byte]
	Mem189[ax_127:si_183:byte] = dl_187
	bx_128 = (word16) es_bx_176 (alias)
	dx = DPB(dx, dl_187, 0) (alias)
	branch (Mem189[Mem189[ss:bp_155 + 0x0008:selector]:bx_128 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B3F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3F8:
	branch Mem189[ds:0x4EE6:byte] == 0x0A l0800_B409
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3FF:
	branch Mem189[ds:0x4EE6:byte] == 0x0D l0800_B409
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B409:
	word16 sp_204 = sp_135 - 2
	Mem205[ss:sp_204:word16] = Mem189[ss:bp_155 + 0x0008:word16]
	Mem208[ss:sp_204 - 2:word16] = Mem205[ss:bp_155 + 0x0006:word16]
	word16 ax_210 = fn0800_A6B7(ds, Mem208[ss:sp_204 - 2:word16], Mem208[ss:sp_204:word16], out dx, out bx_128, out bp_420)
	word16 sp_216 = <invalid>
	cx = Mem208[ss:sp_216 + 2:word16]
	sp_135 = sp_216 + 4
	ax_127 = ax_210
	branch ax_210 != 0x0000 l0800_B41B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B41B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B418:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B406:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B3F5:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B39C:
	Mem236[ptrArg04 + 0x0002:word16] = Mem231[ptrArg04 + 0x0002:word16] | 0x0010
	sp_135 = fp - 4
	bx_128 = (word16) ptrArg04 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B337:
	Mem240[ptrArg04:word16] = Mem14[ptrArg04:word16] + 0x0001
	ax_127 = Mem240[ptrArg04 + 0x000E:word16]
	word16 si_242 = Mem240[ptrArg04 + 0x000C:word16]
	Mem244[ptrArg04 + 0x000C:word16] = Mem240[ptrArg04 + 0x000C:word16] + 0x0001
	byte dl_245 = Mem244[ds:0x4EE6:byte]
	Mem247[ax_127:si_242:byte] = dl_245
	dx = DPB(dx, dl_245, 0) (alias)
	branch (Mem247[ptrArg04 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B35D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B35D:
	branch Mem247[ds:0x4EE6:byte] == 0x0A l0800_B36E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B364:
	branch Mem247[ds:0x4EE6:byte] == 0x0D l0800_B36E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B36E:
	word16 ax_267 = fn0800_A6B7(ds, wArg04_313, wArg06_317, out dx, out bx_128, out bp_425)
	word16 sp_273 = <invalid>
	cx = Mem265[ss:sp_273 + 2:word16]
	sp_135 = sp_273 + 4
	ax_127 = ax_267
	branch ax_267 != 0x0000 l0800_B380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B380:
	ax_286 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B37D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B36B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B35A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A3:
	ax_286 = DPB(DPB(ax_127, Mem289[ds:0x4EE6:byte], 0), 0x00, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4A8:
	word16 bp_304 = Mem300[ss:sp_135 + 2:word16]
	cxOut = cx
	dxOut = dx
	bxOut = bx_128
	bpOut = bp_304
	return ax_286
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B324_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B4BE(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut: ax bp di si sp
// Trashed: SCZO ax bp bx cx di dx es si sp Top
// Preserved: D
fn0800_B4BE_entry:
	word16 wArg04_453 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_455 = SLICE(ptrArg02, word16, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4BE:
	word16 ax_419
	word16 bp_121 = fp - 2
	word16 sp_103 = fp - 0x0008
	word16 di_16 = wArg06
	branch (Mem17[ptrArg02 + 0x0002:word16] & 0x0008) == 0x0000 l0800_B504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B504:
	word16 bx_26 = (word16) ptrArg02
	branch (Mem17[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B512:
	branch Mem17[ptrArg02 + 0x0006:word16] != 0x0000 l0800_B51C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B51C:
	branch Mem17[ptrArg02 + 0x0006:word16] >=u wArg06 l0800_B583
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B583:
	branch Mem17[ptrArg02:word16] + wArg06 < 0x0000 l0800_B5B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B58D:
	branch Mem17[ptrArg02:word16] != 0x0000 l0800_B59F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B59F:
	word16 sp_56 = <invalid>
	sp_103 = sp_56 + 4
	branch fn0800_A6B7(ds, wArg02_455, wArg04_453, out dx_591, out bx_592, out bp_121) == 0x0000 l0800_B5B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5AE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B593:
	Mem72[ptrArg02:word16] = 0xFFFF - Mem17[ptrArg02 + 0x0006:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5B1:
	word16 sp_74 = sp_103 - 2
	Mem77[ss:sp_74:word16] = wArg06
	Mem81[ss:sp_74 - 2:word16] = Mem77[ss:bp_121 + 0x000C:word16]
	Mem84[ss:sp_74 - 4:word16] = Mem81[ss:bp_121 + 0x000A:word16]
	ptr32 es_bx_85 = Mem84[ss:bp_121 + 0x0004:segptr32]
	Mem90[ss:sp_74 - 6:word16] = Mem84[es_bx_85 + 0x000E:word16]
	Mem93[ss:sp_74 - 8:word16] = Mem90[es_bx_85 + 0x000C:word16]
	fn0800_B03B(Mem93[ss:sp_74 - 8:segptr32], Mem93[ss:sp_74 - 4:segptr32], Mem93[ss:sp_74:word16])
	ptr32 es_bx_104 = Mem93[ss:bp_121 + 0x0004:segptr32]
	Mem109[es_bx_104:word16] = Mem93[es_bx_104:word16] + wArg06
	Mem111[es_bx_104 + 0x000C:word16] = Mem109[es_bx_104 + 0x000C:word16] + wArg06
	sp_103 = sp_74 + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B522:
	branch Mem17[ptrArg02:word16] == 0x0000 l0800_B535
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B528:
	word16 sp_126 = <invalid>
	sp_103 = sp_126 + 4
	branch fn0800_A6B7(ds, bx_26, wArg04_453, out dx_583, out bx_584, out bp_121) != 0x0000 l0800_B4F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B535:
	ptr32 es_bx_142 = Mem141[ss:bp_121 + 0x0004:segptr32]
	selector es_143 = SLICE(es_bx_142, selector, 16)
	branch (Mem141[ds:((int16) Mem141[es_bx_142 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B560
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B549:
	word16 sp_155 = sp_103 - 2
	Mem156[ss:sp_155:word16] = 0x0002
	Mem161[ss:sp_155 - 2:word16] = 0x0000
	Mem163[ss:sp_155 - 4:word16] = 0x0000
	Mem168[ss:sp_155 - 6:word16] = (int16) Mem163[es_143:Mem163[ss:bp_121 + 0x0004:word16] + 0x0004:byte]
	fn0800_8E29(ds, Mem168[ss:sp_155 - 6:word16], Mem168[ss:sp_155 - 4:word16], Mem168[ss:sp_155 - 2:word16], Mem168[ss:sp_155:byte], out cx_588, out dx_589, out bx_590)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B560:
	word16 sp_180 = sp_103 - 2
	Mem184[ss:sp_180:word16] = wArg06
	Mem188[ss:sp_180 - 2:word16] = Mem184[ss:bp_121 + 0x000C:word16]
	Mem191[ss:sp_180 - 4:word16] = Mem188[ss:bp_121 + 0x000A:word16]
	Mem198[ss:sp_180 - 6:word16] = (int16) Mem191[Mem191[ss:bp_121 + 0x0004:segptr32] + 0x0004:byte]
	sp_103 = sp_180 + 0x0002
	branch fn0800_C779(ds, Mem198[ss:sp_180 - 6:word16], Mem198[ss:sp_180 - 4:segptr32], Mem198[ss:sp_180:word16], out cx_585, out dx_586, out bx_587) <u wArg06 l0800_B57D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B57D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B57A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B519:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5DB:
	selector es_212 = SLICE(ptrArg02, selector, 16)
	branch (Mem17[ds:((int16) Mem17[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B5EF:
	fn0800_8E29(ds, (int16) Mem230[es_212:wArg02_455 + 0x0004:byte], 0x0000, 0x0000, 0x02, out cx_580, out dx_581, out bx_582)
	ptrArg02 = SEQ(wArg04_453, wArg02_455)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B606:
	sp_103 = fp - 0x0008
	branch fn0800_C779(ds, (int16) Mem257[ptrArg02 + 0x0004:byte], SEQ(wArg0A, wArg08), wArg06, out cx_577, out dx_578, out bx_579) >=u wArg06 l0800_B69D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B620:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B50F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B625:
	branch Mem17[ptrArg02 + 0x0006:word16] == 0x0000 l0800_B680
	segptr32 ptrArg08_484 = SEQ(wArg0A, wArg08)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B680:
	sp_103 = fp - 0x0008
	branch fn0800_C632(ds, (int16) Mem289[ptrArg02 + 0x0004:byte], wArg08, wArg0A, wArg06, out dx_299, out bx_298) >=u wArg06 l0800_B69D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B69A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B62F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B677:
	word16 wArg08_485 = SLICE(ptrArg08_484, word16, 0)
	word16 wArg0A_495 = SLICE(ptrArg08_484, word16, 16)
	word16 wArg04_480 = SLICE(ptrArg02, word16, 16)
	word16 wArg02_482 = SLICE(ptrArg02, word16, 0)
	sp_103 = fp - 0x0008
	di_16 = di_16 - 0x0001
	branch di_16 != 0x0000 l0800_B631
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B631:
	word16 ax_344
	word16 v19_322 = Mem318[ptrArg02:word16] + 0x0001
	Mem323[ptrArg02:word16] = v19_322
	branch v19_322 >= 0x0000 l0800_B659
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B659:
	ax_344 = fn0800_B30A(ds, SLICE(DPB(di_16, Mem335[ptrArg08_484:byte], 0), byte, 0), SEQ(wArg04_480, wArg02_482), out cx_346, out dx_347, out bx_345)
	ptrArg02 = SEQ(wArg04_480, wArg02_482)
	ptrArg08_484 = SEQ(wArg0A_495, wArg08_485 + 0x0001)
	Mem435 = Mem342
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B639:
	word16 ax_356 = Mem323[ptrArg02 + 0x000E:word16]
	word16 si_357 = Mem323[ptrArg02 + 0x000C:word16]
	Mem359[ptrArg02 + 0x000C:word16] = Mem323[ptrArg02 + 0x000C:word16] + 0x0001
	byte dl_366 = Mem362[ptrArg08_484:byte]
	Mem368[ax_356:si_357:byte] = dl_366
	ax_344 = DPB(DPB(ax_356, dl_366, 0), 0x00, 8) (alias)
	ptrArg08_484 = SEQ(wArg0A_495, wArg08_485 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B66F:
	sp_103 = fp - 0x0008
	branch ax_344 != 0xFFFF l0800_B677
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B674:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B67E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4D7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4FA:
	di_16 = di_16 - 0x0001
	branch di_16 != 0x0000 l0800_B4D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4D9:
	word16 sp_388 = sp_103 - 2
	Mem389[ss:sp_388:word16] = Mem385[ss:bp_121 + 0x0006:word16]
	Mem392[ss:sp_388 - 2:word16] = Mem389[ss:bp_121 + 0x0004:word16]
	ptr32 es_bx_393 = Mem392[ss:bp_121 + 0x000A:segptr32]
	Mem395[ss:bp_121 + 0x000A:word16] = Mem392[ss:bp_121 + 0x000A:word16] + 0x0001
	Mem402[ss:sp_388 - 4:word16] = (int16) Mem395[es_bx_393:byte]
	word16 sp_408 = <invalid>
	sp_103 = sp_408 + 0x0006
	branch fn0800_B324(ds, Mem402[ss:sp_388 - 4:byte], Mem402[ss:sp_388 - 2:segptr32], out cx_409, out dx_410, out bx_406, out bp_121) != 0xFFFF l0800_B4FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B4F5:
	ax_419 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B501:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B69D:
	ax_419 = Mem424[ss:bp_121 - 0x0002:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6A0:
	word16 di_436 = Mem433[ss:sp_103:word16]
	word16 si_438 = Mem433[ss:sp_103 + 2:word16]
	bpOut = Mem433[ss:bp_121:word16]
	siOut = si_438
	diOut = di_436
	return ax_419
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B4BE_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B6A8(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax cx
// Trashed: SCZDO ax cx es Top
// Preserved: bp di ds si sp
fn0800_B6A8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6A8:
	word16 ax_39
	word16 cx_19 = Mem17[ds:0x4EE8:word16]
	selector es_25 = SLICE(ptrArg02, selector, 16)
	word16 di_26 = (word16) ptrArg02
	selector ds_28 = SLICE(ptrArg06, selector, 16)
	word16 si_29 = (word16) ptrArg06
	word16 cx_22 = cx_19 >>u 0x0001
	branch cx_19 >>u 0x0001 >=u 0x0000 l0800_B6C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6BD:
	byte al_27 = Mem17[ptrArg02:byte]
	Mem31[ptrArg02:byte] = Mem17[ptrArg06:byte]
	Mem34[ptrArg06:byte] = al_27
	ax_39 = DPB(ax, al_27, 0) (alias)
	si_29 = si_29 + 0x0001
	di_26 = di_26 + 0x0001
	branch cx_19 >>u 0x0001 == 0x0000 l0800_B6CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6C6:
	ax_39 = Mem38[es_25:di_26:word16]
	Mem43[es_25:di_26:word16] = Mem38[ds_28:si_29:word16]
	si_29 = si_29 + 0x0002
	Mem46[ds_28:si_29 - 0x0002:word16] = ax_39
	di_26 = di_26 + 0x0002
	cx_22 = cx_22 - 0x0001
	branch cx_22 != 0x0000 l0800_B6C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6CF:
	cxOut = cx_22
	return ax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B6A8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B6D6(word16 cx, word16 bx, word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & bxOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: bx cx Top
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_B6D6_entry:
	int8 Top_116 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6D6:
	word16 sp_14 = fp - 0x001A
	word16 si_17 = wArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6E1:
	word16 sp_598
	branch si_17 >u 0x0002 l0800_B726
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B726:
	word16 bx_31 = wArg04 + (word16) (Mem24[ds:0x4EE8:word16] *s (si_17 - 0x0001))
	word16 ax_39 = (word16) (Mem33[ds:0x4EE8:word16] *s (si_17 >>u 0x0001))
	word16 sp_46 = sp_14 - 2
	Mem47[ss:sp_46:word16] = wArg06
	Mem50[ss:sp_46 - 2:word16] = bx_31
	Mem53[ss:sp_46 - 4:word16] = wArg06
	word16 bx_40 = wArg04 + ax_39
	Mem55[ss:sp_46 - 6:word16] = bx_40
	word16 sp_56
	word16 ax_58
	word16 dx_59
	word16 bx_60
	int8 Top_62
	call SEQ(0x0800, Mem55[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_39,bx:bx_40,cx:cx_118,dx:wArg06,sp:sp_46 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_61
		defs: ax:ax_58,bx:bx_60,dx:dx_59,sp:sp_56,Top:Top_62
	word16 wLoc0A_686 = bx_31
	word16 ax_109 = ax_58
	branch ax_58 <= 0x0000 l0800_B775
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B766:
	Mem70[ss:sp_56 + 0x0006:word16] = wArg06
	Mem73[ss:sp_56 + 0x0004:word16] = bx_40
	Mem76[ss:sp_56 + 0x0002:word16] = wArg06
	Mem79[ss:sp_56:word16] = bx_31
	ax_109 = fn0800_B6A8(ds, Mem79[ss:sp_56:segptr32], Mem79[ss:sp_56 + 4:segptr32], out cx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B775:
	word16 cx_144
	word16 sp_146
	word16 sp_160
	Mem95[ss:sp_56 + 0x0006:word16] = wArg06
	Mem98[ss:sp_56 + 0x0004:word16] = wArg04
	Mem101[ss:sp_56 + 0x0002:word16] = wArg06
	Mem104[ss:sp_56:word16] = bx_40
	word16 sp_106
	word16 ax_110
	word16 dx_112
	word16 cx_119
	call SEQ(0x0800, Mem104[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_109,bx:bx_60,cx:cx_117,dx:dx_59,sp:sp_56,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_62
		defs: ax:ax_110,bx:bx_114,cx:cx_119,dx:dx_112,sp:sp_106,Top:Top_116
	branch ax_110 <= 0x0000 l0800_B79A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B79A:
	Mem129[ss:sp_106 + 0x0006:word16] = wArg06
	Mem132[ss:sp_106 + 0x0004:word16] = bx_31
	Mem135[ss:sp_106 + 0x0002:word16] = wArg06
	Mem138[ss:sp_106:word16] = wArg04
	word16 sp_139
	word16 ax_140
	call SEQ(0x0800, Mem138[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_110,bx:bx_114,cx:cx_119,dx:dx_112,sp:sp_106,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:bx_31,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:bx_40,Stack +FFFFFFFE:wArg06,Top:Top_116
		defs: ax:ax_140,bx:bx_142,cx:cx_144,sp:sp_139,Top:Top_143
	sp_146 = sp_139 + 0x0008
	branch ax_140 <= 0x0000 l0800_B7C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7B1:
	Mem152[ss:sp_139 + 0x0006:word16] = wArg06
	Mem155[ss:sp_139 + 0x0004:word16] = wArg04
	Mem158[ss:sp_139 + 0x0002:word16] = wArg06
	Mem161[ss:sp_139:word16] = bx_31
	sp_160 = sp_139
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B78C:
	Mem164[ss:sp_106 + 0x0006:word16] = wArg06
	Mem167[ss:sp_106 + 0x0004:word16] = bx_40
	Mem170[ss:sp_106 + 0x0002:word16] = wArg06
	Mem173[ss:sp_106:word16] = wArg04
	sp_160 = sp_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7BD:
	fn0800_B6A8(ds, Mem177[ss:sp_160:segptr32], Mem177[ss:sp_160 + 4:segptr32], out cx_144)
	sp_146 = sp_160 + 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7C0:
	branch si_17 != 0x0003 l0800_B7D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7D4:
	word16 dx_198 = wArg04 + Mem194[ds:0x4EE8:word16]
	word16 ax_195 = wArg06
	wLoc0C = wArg06
	wLoc0E = dx_198
	wLoc06 = dx_198
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B813:
	word16 sp_209 = sp_146 - 2
	Mem210[ss:sp_209:word16] = wArg06
	Mem213[ss:sp_209 - 2:word16] = wArg04
	Mem216[ss:sp_209 - 4:word16] = wArg06
	Mem219[ss:sp_209 - 6:word16] = wLoc06
	word16 sp_221
	word16 ax_225
	call SEQ(0x0800, Mem219[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_224,bx:bx_228,cx:cx_232,dx:dx_226,sp:sp_209 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_724,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_722,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_716,Stack +FFFFFFFE:wArg06,Top:Top_230
		defs: ax:ax_225,bx:bx_229,cx:cx_233,dx:dx_227,sp:sp_221,Top:Top_231
	sp_146 = sp_221 + 0x0008
	branch ax_225 <= 0x0000 l0800_B7EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7EC:
	branch ax_225 != 0x0000 l0800_B805
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7F0:
	Mem247[ss:sp_221 + 0x0006:word16] = wArg06
	Mem250[ss:sp_221 + 0x0004:word16] = wLoc06
	Mem253[ss:sp_221 + 0x0002:word16] = wArg06
	Mem256[ss:sp_221:word16] = wLoc0E
	fn0800_B6A8(ds, Mem256[ss:sp_221:segptr32], Mem256[ss:sp_221 + 4:segptr32], out cx_144)
	wLoc0E = wLoc0E + Mem256[ds:0x4EE8:word16]
	Mem272 = Mem268
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B805:
	sp_146 = sp_221 + 0x0008
	ax_195 = wLoc06
	branch wLoc06 >=u wLoc0A_686 l0800_B883
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B80D:
	ax_195 = Mem272[ds:0x4EE8:word16]
	wLoc06 = wLoc06 + ax_195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B82C:
	branch wLoc06 >=u wLoc0A_686 l0800_B87B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B834:
	word16 sp_289 = sp_146 - 2
	Mem290[ss:sp_289:word16] = wArg06
	Mem293[ss:sp_289 - 2:word16] = wLoc0A_686
	Mem296[ss:sp_289 - 4:word16] = wArg06
	Mem299[ss:sp_289 - 6:word16] = wArg04
	word16 sp_301
	word16 ax_305
	call SEQ(0x0800, Mem299[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:wLoc06_716,bx:bx_308,cx:cx_312,dx:dx_306,sp:sp_289 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_724,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_730,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_716,Stack +FFFFFFFE:wArg06,Top:Top_310
		defs: ax:ax_305,bx:bx_309,cx:cx_313,dx:dx_307,sp:sp_301,Top:Top_311
	sp_146 = sp_301 + 0x0008
	branch ax_305 >= 0x0000 l0800_B855
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B855:
	Mem324[ss:sp_301 + 0x0006:word16] = wArg06
	Mem327[ss:sp_301 + 0x0004:word16] = wLoc06
	Mem330[ss:sp_301 + 0x0002:word16] = wArg06
	Mem333[ss:sp_301:word16] = wLoc0A_686
	fn0800_B6A8(ds, Mem333[ss:sp_301:segptr32], Mem333[ss:sp_301 + 4:segptr32], out cx_144)
	sp_146 = sp_301 + 0x0008
	branch ax_305 == 0x0000 l0800_B87B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B868:
	word16 ax_347 = Mem333[ds:0x4EE8:word16]
	wLoc06 = wLoc06 + ax_347
	wLoc0A_686 = wLoc0A_686 - ax_347
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B84D:
	word16 v59_354 = wLoc0A_686 - Mem299[ds:0x4EE8:word16]
	wLoc0A_686 = v59_354
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B873:
	branch wLoc06 <u v59_354 l0800_B834
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B87B:
	ax_195 = wLoc06
	branch wLoc06 <u wLoc0A_686 l0800_B813
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B883:
	word16 sp_373 = sp_146 - 2
	Mem374[ss:sp_373:word16] = wArg06
	Mem377[ss:sp_373 - 2:word16] = wArg04
	Mem380[ss:sp_373 - 4:word16] = wArg06
	Mem383[ss:sp_373 - 6:word16] = wLoc06
	word16 sp_386
	word16 ax_394
	call SEQ(0x0800, Mem383[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:ax_393,bx:bx_399,cx:cx_407,dx:dx_395,sp:sp_373 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_775,Stack +FFFFFFF6:wArg06,Stack +FFFFFFF8:wLoc0A_771,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_755,Stack +FFFFFFFE:wArg06,Top:Top_403
		defs: ax:ax_394,sp:sp_386
	branch ax_394 > 0x0000 l0800_B8AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B89A:
	wLoc06 = wLoc06 + Mem383[ds:0x4EE8:word16]
	Mem427 = Mem424
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8AA:
	wLoc04 = wArg06
	wLoc14 = wArg06
	wLoc16 = wLoc06 - Mem427[ds:0x4EE8:word16]
	wLoc10 = wArg06
	wLoc12 = wArg04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8E0:
	branch wLoc12 >=u wLoc0E l0800_B8F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8E8:
	branch wLoc16 >=u wLoc0E l0800_B8C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8C8:
	Mem451[ss:sp_386 + 0x0006:word16] = wArg06
	Mem454[ss:sp_386 + 0x0004:word16] = wLoc12
	Mem457[ss:sp_386 + 0x0002:word16] = wArg06
	Mem460[ss:sp_386:word16] = wLoc16
	fn0800_B6A8(ds, Mem460[ss:sp_386:segptr32], Mem460[ss:sp_386 + 0x0004:segptr32], out cx_943)
	word16 ax_471 = Mem460[ds:0x4EE8:word16]
	wLoc12 = wLoc12 + ax_471
	wLoc16 = wLoc16 - ax_471
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B8F0:
	Mem481[ss:sp_386 + 0x0006:word16] = 0x0000
	Mem485[ss:sp_386 + 0x0004:word16] = Mem481[ds:0x4EE8:word16]
	word16 ax_489 = wLoc06 - wLoc0E
	Mem495[ss:sp_386 + 0x0002:word16] = 0x0000 - (ax_489 <u 0x0000)
	Mem497[ss:sp_386:word16] = ax_489
	word16 ax_498 = fn0800_8BBB(Mem497[ss:sp_386:word16], Mem497[ss:sp_386 + 0x0002:word16], Mem497[ss:sp_386 + 0x0004:word16], Mem497[ss:sp_386 + 0x0006:word16], out cx_939, out dx_940, out bx_941)
	word16 sp_502 = <invalid>
	Mem510[ss:sp_502 - 2:word16] = 0x0000
	Mem513[ss:sp_502 - 4:word16] = Mem510[ds:0x4EE8:word16]
	word16 dx_523 = wArg04 + (word16) (Mem513[ds:0x4EE8:word16] *s si_17) - wLoc06
	Mem529[ss:sp_502 - 6:word16] = 0x0000 - (dx_523 <u 0x0000)
	Mem531[ss:sp_502 - 8:word16] = dx_523
	word16 bx_533
	word16 cx_534
	word16 ax_532 = fn0800_8BBB(Mem531[ss:sp_502 - 8:word16], Mem531[ss:sp_502 - 6:word16], Mem531[ss:sp_502 - 4:word16], Mem531[ss:sp_502 - 2:word16], out cx_534, out dx_942, out bx_533)
	word16 sp_536 = <invalid>
	si_17 = ax_532
	branch ax_532 >=u ax_498 l0800_B93D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B93D:
	Mem546[ss:sp_536 - 2:word16] = wArg06
	Mem549[ss:sp_536 - 4:word16] = wArg04
	Mem551[ss:sp_536 - 6:word16] = ax_498
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	cx = fn0800_B6D6(cx_534, bx_533, fp - 2, ax_532, ax_498, ds, stackArg2, wArg02, wArg04, out bx, out Top_116)
	sp_14 = sp_536
	wArg04 = wLoc06
	Mem24 = Mem569
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B92E:
	Mem572[ss:sp_536 - 2:word16] = wArg06
	Mem575[ss:sp_536 - 4:word16] = wLoc06
	Mem577[ss:sp_536 - 6:word16] = ax_532
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	cx = fn0800_B6D6(cx_534, bx_533, fp - 2, ax_532, ax_498, ds, stackArg2, wArg02, wArg04, out bx, out Top_116)
	sp_14 = sp_536
	si_17 = ax_498
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B7C5:
	word16 sp_589 = sp_146 - 2
	Mem590[ss:sp_589:word16] = wArg06
	Mem593[ss:sp_589 - 2:word16] = wArg04
	Mem596[ss:sp_589 - 4:word16] = wArg06
	Mem599[ss:sp_589 - 6:word16] = bx_40
	sp_598 = sp_589 - 6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6E6:
	branch si_17 == 0x0002 l0800_B6EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6EE:
	word16 dx_604 = wArg04 + Mem24[ds:0x4EE8:word16]
	word16 sp_608 = sp_14 - 2
	Mem609[ss:sp_608:word16] = wArg06
	Mem611[ss:sp_608 - 2:word16] = dx_604
	Mem614[ss:sp_608 - 4:word16] = wArg06
	Mem617[ss:sp_608 - 6:word16] = wArg04
	word16 sp_618
	word16 ax_619
	call SEQ(0x0800, Mem617[ds:0x4EEA:word16]) (retsize: 2;)
		uses: ax:wArg06,bx:bx_621,cx:cx_118,dx:dx_604,sp:sp_608 - 6,Stack +0000:bp,Stack +0004:wArg02,Stack +0006:wArg04_684,Stack +0008:wArg06,Stack +FFFFFFE8:di,Stack +FFFFFFEA:si,Stack +FFFFFFEC:wLoc16_847,Stack +FFFFFFEE:wLoc14_845,Stack +FFFFFFF0:wLoc12_851,Stack +FFFFFFF2:wLoc10_849,Stack +FFFFFFF4:wLoc0E_843,Stack +FFFFFFF6:wLoc0C_841,Stack +FFFFFFF8:dx_604,Stack +FFFFFFFA:wArg06,Stack +FFFFFFFC:wLoc06_839,Stack +FFFFFFFE:wLoc04_837,Top:Top_61
		defs: ax:ax_619,bx:bx_623,cx:cx_625,sp:sp_618,Top:Top_624
	branch ax_619 > 0x0000 l0800_B714
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B714:
	Mem633[ss:sp_618 + 0x0006:word16] = wArg06
	Mem636[ss:sp_618 + 0x0004:word16] = wArg04
	Mem639[ss:sp_618 + 0x0002:word16] = wArg06
	Mem642[ss:sp_618:word16] = dx_604
	sp_598 = sp_618
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B720:
	fn0800_B6A8(ds, Mem646[ss:sp_598:segptr32], Mem646[ss:sp_598 + 4:segptr32], out cx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B711:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B6EB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B956:
	bxOut = bx
	TopOut = Top_116
	return cx
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B6D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_B95E(word16 cx, word16 bx, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: D bp sp
fn0800_B95E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B95E:
	Mem11[ds:0x4EE8:word16] = wArg08
	branch wArg08 == 0x0000 l0800_B97D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B96B:
	Mem17[ds:0x4EEA:word16] = wArg0A
	fn0800_B6D6(cx, bx, fp - 2, si, di, ds, wArg06, wArg02, wArg04, out bx_78, out Top_79)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B97D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B95E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_B97F(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_B97F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B97F:
	word16 ax_174
	branch wArg02 <u Mem15[ds:0x24E8:word16] l0800_B99A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B99A:
	branch wArg08 <u 0x0001 l0800_B9B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9A3:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_B9B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9B5:
	word16 ax_46 = fn0800_8F50(ds, wArg02, SEQ(wArg06, wArg04), wArg08, out ch_346, out dx)
	branch ax_46 <u 0x0001 l0800_B9DD
	segptr32 ptrArg04_232 = SEQ(wArg06, wArg04)
	wArg06 = SLICE(ptrArg04_232, word16, 16) (alias)
	wArg04 = SLICE(ptrArg04_232, word16, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9D0:
	branch (Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_B9E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9E2:
	word16 si_66 = (word16) ptrArg04_232
	word16 cx_117 = ax_46
	selector es_216 = SLICE(ptrArg04_232, selector, 16)
	word16 di_150 = si_66
	si_71 = si_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9ED:
	word16 si_71
	byte al_73 = Mem72[ds:si_71:byte]
	si_71 = si_71 + 0x0001
	branch al_73 == 0x1A l0800_BA21
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA21:
	word16 cx_86 = -cx_117
	fn0800_8E29(ds, wArg02, cx_86, 0x0000 - (cx_86 == 0x0000), 0x01, out cx_100, out dx, out bx_347)
	Mem110[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem97[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x0200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9F3:
	branch al_73 == 0x0D l0800_B9FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FC:
	cx_117 = cx_117 - 0x0001
	branch cx_117 != 0x0000 l0800_B9ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FE:
	fn0800_8F50(ds, wArg02, SEQ(ss, fp - 0x0005), 0x0001, out ch_348, out dx)
	Mem151[es_216:di_150:byte] = bLoc05
	di_150 = di_150 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9F7:
	Mem153[es_216:di_150:byte] = al_73
	di_150 = di_150 + 0x0001
	cx_117 = cx_117 - 0x0001
	branch cx_117 != 0x0000 l0800_B9ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9FA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA19:
	branch di_150 != si_66 l0800_BA1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA1F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA41:
	ax_174 = di_150 - si_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA1D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9DD:
	ax_174 = ax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B9B0:
	ax_174 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_B990:
	ax_174 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA44:
	dxOut = dx
	return ax_174
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_B97F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BA4A(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..31] Stack +0006:[0..31]
// LiveOut: ax
// Trashed: SCZO ax dx es Top
// Preserved: bp di ds sp
fn0800_BA4A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA4A:
	word16 ax_28
	word16 ax_22
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_22) l0800_BA60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA60:
	ax_28 = fn0800_8D2B(ds, ax_22)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA5C:
	ax_28 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA64:
	return ax_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA4A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BA67(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO bx cx dx es Top
// Preserved: bp sp
fn0800_BA67_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA67:
	branch fn0800_ACB3(ds, wArg02, wArg04, 0x0000, out cx_76, out dx_77, out bx_26) != 0x0000 l0800_BA87
	segptr32 ptrArg02_59 = SEQ(wArg04, wArg02)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA7F:
	Mem43[ptrArg02_59 + 0x0002:word16] = Mem23[ptrArg02_59 + 0x0002:word16] & 0xFFEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA87:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA67_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BA89(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & cxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut: ax bp cx di ds si sp
// Trashed: SCZO ax bp bx cx di ds dx es si sp Top
// Preserved:
fn0800_BA89_entry:
	word16 wArg02_228 = SLICE(ptrArg02, word16, 0)
	segptr32 ptrArg02_230 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BA89:
	word16 ax_202
	word16 bp_153 = fp - 2
	word16 sp_12 = fp - 6
	word16 di_15 = wArg0A
	branch Mem14[ptrArg02 + 0x0012:word16] != wArg02_228 l0800_BAAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAA0:
	branch wArg0A > 0x0002 l0800_BAAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAA5:
	branch wArg0C <=u 0x7FFF l0800_BAB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAB1:
	branch Mem14[ds:0x26B2:word16] != 0x0000 l0800_BAC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAB8:
	branch wArg02_228 != 0x236C l0800_BAC7
	ptrArg02_230 = SEQ(ptrArg02_230, wArg02_228)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAC7:
	branch Mem14[ds:0x26B0:word16] != 0x0000 l0800_BADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BACE:
	branch wArg02_228 != 0x2358 l0800_BADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAD5:
	Mem40[ds:0x26B0:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BABF:
	Mem41[ds:0x26B2:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BADB:
	word16 wArg04_237 = SLICE(ptrArg02_230, word16, 16)
	word16 wArg02_241 = SLICE(ptrArg02_230, word16, 0)
	word16 bx_47 = (word16) ptrArg02_230
	branch Mem44[ptrArg02_230:word16] == 0x0000 l0800_BAF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAE4:
	fn0800_ACB3(ds, bx_47, wArg04_237, 0x0001, out cx, out dx_324, out bx_325)
	ptrArg02_230 = SEQ(wArg04_237, wArg02_241)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAF6:
	word16 wArg02_246 = SLICE(ptrArg02_230, word16, 0)
	word16 wArg04_247 = SLICE(ptrArg02_230, word16, 16)
	branch (Mem81[ptrArg02_230 + 0x0002:word16] & 0x0004) == 0x0000 l0800_BB0E
	segptr32 ptrArg02_245 = SEQ(wArg04_247, wArg02_246)
	ptrArg02_245 = SEQ(wArg04_247, wArg02_246)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB01:
	word16 v18_88 = Mem81[ptrArg02_230 + 0x000A:word16]
	fn0800_9E75(ds, v18_88, out cx_326, out dx_327, out bx_328, out ds)
	cx = v18_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB0E:
	Mem117[ptrArg02_245 + 0x0002:word16] = Mem112[ptrArg02_245 + 0x0002:word16] & 0xFFF3
	Mem119[ptrArg02_245 + 0x0006:word16] = 0x0000
	word16 wArg04_250 = SLICE(ptrArg02_245, word16, 16)
	Mem123[ptrArg02_245 + 0x000A:word16] = wArg04_250
	word16 wArg02_251 = SLICE(ptrArg02_245, word16, 0)
	Mem124[ptrArg02_245 + 0x0008:word16] = wArg02_251 + 0x0005
	Mem125[ptrArg02_245 + 0x000E:word16] = wArg04_250
	Mem126[ptrArg02_245 + 0x000C:word16] = wArg02_251 + 0x0005
	sp_12 = fp - 6
	branch wArg0A == 0x0002 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB3A:
	word16 si_137 = wArg0C
	branch wArg0C <=u 0x0000 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB3E:
	Mem143[ds:0x2352:word16] = 0xC7F0
	branch (wArg06 | wArg08) != 0x0000 l0800_BB6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB4C:
	word16 dx_158
	word16 ax_152 = fn0800_9F7F(out dx_158, out bp_153, out si_137, out di_15, out ds)
	word16 sp_161 = <invalid>
	cx = Mem151[ss:sp_161:word16]
	Mem168[ss:bp_153 + 0x000A:word16] = dx_158
	Mem169[ss:bp_153 + 0x0008:word16] = ax_152
	sp_12 = sp_161 + 2
	branch (ax_152 | dx_158) != 0x0000 l0800_BB5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB5E:
	ptr32 es_bx_174 = Mem169[ss:bp_153 + 0x0004:segptr32]
	Mem178[es_bx_174 + 0x0002:word16] = Mem169[es_bx_174 + 0x0002:word16] | 0x0004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB6B:
	ptr32 es_bx_184 = Mem183[ss:bp_153 + 0x0004:segptr32]
	word16 ax_185 = Mem183[ss:bp_153 + 0x000A:word16]
	word16 dx_186 = Mem183[ss:bp_153 + 0x0008:word16]
	Mem189[es_bx_184 + 0x000E:word16] = ax_185
	Mem190[es_bx_184 + 0x000C:word16] = dx_186
	Mem191[es_bx_184 + 0x000A:word16] = ax_185
	Mem192[es_bx_184 + 0x0008:word16] = dx_186
	Mem194[es_bx_184 + 0x0006:word16] = si_137
	branch di_15 != 0x0001 l0800_BB92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB8D:
	Mem199[es_bx_184 + 0x0002:word16] = Mem194[es_bx_184 + 0x0002:word16] | 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB92:
	ax_202 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB5B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BAAB:
	ax_202 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB94:
	word16 sp_217 = sp_12 + 2
	word16 di_216 = Mem213[ss:sp_12:word16]
	word16 si_218 = Mem213[ss:sp_217:word16]
	word16 bp_220 = Mem213[ss:sp_217 + 2:word16]
	cxOut = cx
	bpOut = bp_220
	siOut = si_218
	diOut = di_216
	dsOut = ds
	return ax_202
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BA89_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BB98(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_BB98_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BB98:
	branch (wArg08 | wArg0A) == 0x0000 l0800_BBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBA7:
	branch fn0800_BFC7(SEQ(wArg06, wArg04), out cx_150) <u wArg02 l0800_BBD2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBD2:
	fn0800_BF9E(SEQ(wArg0A, wArg08), SEQ(wArg06, wArg04))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBB6:
	fn0800_C01E(SEQ(wArg0A, wArg08), SEQ(wArg06, wArg04), wArg02)
	Mem90[SEQ(wArg0A, wArg08) + wArg02:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBE4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BB98_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BBE9(word16 bp, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] Stack +0002:[0..31]
// LiveOut:
// Trashed: SCZO ax bp bx cx es sp Top
// Preserved:
fn0800_BBE9_entry:
	word16 wArg02_62 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_67 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBE9:
	branch Mem7[ptrArg02 - 0x0001:byte] != 0x2E l0800_BBFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBF9:
	wArg02_62 = wArg02_62 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BBFC:
	word16 v12_21 = wArg02_62 - 0x0001
	word16 ax_28 = (int16) Mem22[SEQ(wArg04_67, v12_21):byte]
	word16 cx_30 = 0x0004
	word16 bx_31 = 0xBC39
	segptr32 ptrArg02_75 = SEQ(wArg04_67, v12_21)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC0F:
	word16 wArg04_73 = SLICE(ptrArg02_75, word16, 16)
	word16 ax_34 = Mem29[0x0800:bx_31:word16]
	branch ax_34 == ax_28 l0800_BC1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC1E:
	call Mem29[0x0800:bx_31 + 0x0008:word16] (retsize: 2;)
		uses: ax:ax_34,bx:bx_32,cx:cx_44,sp:fp - 0x0004,Stack +0002:ax_28,Stack +0004:bp,Stack +0008:ptrArg02_75,Stack +000A:wArg04_73,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC17:
	bx_31 = bx_31 + 0x0002
	cx_30 = cx_30 - 0x0001
	branch cx_30 != 0x0000 l0800_BC0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC1C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC31:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BBE9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BC49(word16 bp, word16 si, word16 di, segptr32 ptrArg02, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, word16 wArg10, word16 wArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp:[0..15] di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..15] Stack +0010:[0..15] Stack +0012:[0..15] Stack +0014:[0..15]
// LiveOut: bx
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
fn0800_BC49_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC49:
	branch (wArg06 | wArg08) == 0x0000 l0800_BC62
	segptr32 ptrArg06_210 = SEQ(wArg08, wArg06)
	wArg06 = SLICE(ptrArg06_210, word16, 0) (alias)
	wArg08 = SLICE(ptrArg06_210, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC5B:
	Mem25[ptrArg06_210:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC62:
	branch (wArg0A | wArg0C) == 0x0000 l0800_BC71
	segptr32 ptrArg0A_215 = SEQ(wArg0C, wArg0A)
	wArg0A = SLICE(ptrArg0A_215, word16, 0) (alias)
	wArg0C = SLICE(ptrArg0A_215, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC6A:
	Mem37[ptrArg0A_215:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC71:
	branch (wArg0E | wArg10) == 0x0000 l0800_BC80
	segptr32 ptrArg0E_222 = SEQ(wArg10, wArg0E)
	wArg0E = SLICE(ptrArg0E_222, word16, 0) (alias)
	wArg10 = SLICE(ptrArg0E_222, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC79:
	Mem49[ptrArg0E_222:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC80:
	branch (wArg12 | wArg14) == 0x0000 l0800_BC8F
	segptr32 ptrArg12_231 = SEQ(wArg14, wArg12)
	wArg12 = SLICE(ptrArg12_231, word16, 0) (alias)
	wArg14 = SLICE(ptrArg12_231, word16, 16) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC88:
	Mem61[ptrArg12_231:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC8F:
	segptr32 ptrLoc06_243 = SEQ(ss, fp - 0x005A)
	word16 wLoc06_244 = SLICE(ptrLoc06_243, word16, 0)
	word16 wLoc04_251 = SLICE(ptrLoc06_243, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC9D:
	word16 wArg02_235 = SLICE(ptrArg02, word16, 0)
	word16 wArg04_237 = SLICE(ptrArg02, word16, 16)
	branch Mem69[ptrArg02:byte] == 0x20 l0800_BC9A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BC9A:
	ptrArg02 = SEQ(wArg04_237, wArg02_235 + 0x0001)
	Mem69 = Mem76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCA6:
	word16 ax_88 = fn0800_BFC7(ptrArg02, out cx_378)
	word16 si_100 = ax_88
	branch ax_88 <= 0x0050 l0800_BCB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCB6:
	si_100 = 0x0050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCB9:
	Mem110[ptrLoc06_243:byte] = 0x00
	word16 v23_141 = wLoc06_244 + 0x0001 + si_100
	word16 dx_133 = fn0800_C01E(SEQ(wLoc04_251, wLoc06_244 + 0x0001), SEQ(wArg04_237, wArg02_235), si_100)
	Mem146[SEQ(wLoc04_251, v23_141):byte] = 0x00
	word16 wLoc06_256 = v23_141
	segptr32 ptrLoc06_260 = SEQ(wLoc04_251, v23_141)
	segptr32 ptrArg02_367 = SEQ(wArg04_237, wArg02_235)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCE2:
	word16 v24_153 = wLoc06_256 - 0x0001
	word16 wLoc04_261 = SLICE(ptrLoc06_260, word16, 16)
	wLoc06_256 = v24_153
	word16 ax_160 = (int16) Mem154[SEQ(wLoc04_261, v24_153):byte]
	word16 cx_162 = 0x0007
	word16 bx_163 = 0xBE1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCF5:
	word16 wArg04_279 = SLICE(ptrArg02_367, word16, 16)
	word16 ax_166 = Mem161[0x0800:bx_163:word16]
	branch ax_166 == ax_160 l0800_BD04
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BD04:
	word16 bx_176
	call Mem161[0x0800:bx_163 + 0x000E:word16] (retsize: 2;)
		uses: ax:ax_166,bx:bx_164,cx:cx_178,dx:dx_133,sp:fp - 0x005E,Stack +0000:si_116,Stack +0002:di,Stack +0004:si,Stack +0058:ax_160,Stack +005A:v24_153,Stack +005C:wLoc04_261,Stack +005E:bp,Stack +0062:ptrArg02_367,Stack +0064:wArg04_279,Stack +0066:wArg06_320,Stack +0068:wArg08_328,Stack +006A:wArg0A_335,Stack +006C:wArg0C_342,Stack +006E:wArg0E_348,Stack +0070:wArg10_354,Stack +0072:wArg12_359,Stack +0074:wArg14_364,Stack +FFFFFFF8:wLoc06_244 + 0x0001,Stack +FFFFFFFA:wLoc04_251,Stack +FFFFFFFC:wArg02_235,Stack +FFFFFFFE:wArg04_237,Top:0
		defs: bx:bx_176
	return bx_176
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BC49_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BCFD:
	bx_163 = bx_163 + 0x0002
	cx_162 = cx_162 - 0x0001
	branch cx_162 != 0x0000 l0800_BCF5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BD02:
	ptrLoc06_260 = SEQ(wLoc04_261, v24_153)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BE3B(word16 si, word16 di, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, word16 wArg10, word16 wArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] si:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..15] Stack +0010:[0..15] Stack +0012:[0..15] Stack +0014:[0..15]
// LiveOut: bx
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_BE3B_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BE3B:
	return fn0800_BC49(fp - 2, si, di, SEQ(wArg04, wArg02), wArg06, wArg08, wArg0A, wArg0C, wArg0E, wArg10, wArg12, wArg14)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BE3B_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BEA2(word16 cx, word16 dx, selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..31] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: di si
// Trashed: SCZDO ax bx di es si Top
// Preserved: bp sp
fn0800_BEA2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BEA2:
	Mem12[ptrArg02:byte] = 0x00
	word16 di_34
	word16 si_35
	fn0800_9828(cx, dx, (word16) ptrArg02, ds, fp + 0x000A, SEQ(wArg08, wArg06), out si_35, out di_34)
	diOut = di_34
	return si_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BEA2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn0800_BF18(word16 cx, word16 dx, word16 bx, word16 si, word16 di, selector es, selector ds, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: cx di
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_BF18_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF18:
	word16 di_40
	word16 cx_46 = (word16) fn0800_8F97(cx, dx, bx, fp - 2, si, di, es, ds, 0xBEE5, 0xBF0D, fp + 0x0002, ss, wArg06, wArg08, out di_40)
	diOut = di_40
	return (byte) cx_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF18_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BF5F(word16 wArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx Top
// Preserved: bp di ds si sp
fn0800_BF5F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF5F:
	word16 di_20 = (word16) ptrArg02
	selector es_126 = SLICE(ptrArg02, selector, 16)
	word16 cx_25 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF70:
	branch cx_25 == 0x0000 l0800_BF72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF70_1:
	di_20 = di_20 + 0x0001
	cx_25 = cx_25 - 0x0001
	branch Mem18[es_126:di_20:byte] == 0x00 l0800_BF70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF72:
	word16 si_43 = di_20 - 0x0001
	selector es_128 = SLICE(ptrArg06, selector, 16)
	word16 di_129 = (word16) ptrArg06
	word16 cx_47 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7C:
	branch cx_47 == 0x0000 l0800_BF7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7C_2:
	di_129 = di_129 + 0x0001
	cx_47 = cx_47 - 0x0001
	branch Mem41[es_128:di_129:byte] == 0x00 l0800_BF7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF7E:
	word16 cx_58 = ~cx_47
	word16 di_60 = di_129 - cx_58
	word16 di_124 = si_43
	word16 si_123 = di_60
	branch (di_60 & 0x0001) == 0x0000 l0800_BF8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF8D:
	Mem81[es_126:si_43:byte] = Mem67[es_128:di_60:byte]
	si_123 = di_60 + 0x0001
	di_124 = si_43 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF8F:
	word16 cx_87 = cx_58 >>u 0x0001
	cx_125 = cx_87
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF91:
	word16 cx_125
	branch cx_125 == 0x0000 l0800_BF93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF93:
	branch cx_87 >=u 0x0000 l0800_BF96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF95:
	Mem97[es_126:di_124:byte] = Mem93[es_128:si_123:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF96:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF5F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF91_1:
	Mem122[es_126:di_124:word16] = Mem93[es_128:si_123:word16]
	si_123 = si_123 + 0x0002
	di_124 = di_124 + 0x0002
	cx_125 = cx_125 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_BF9E(word16 wArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0006:[0..15]
// LiveOut:
// Trashed: SCZDO ax cx dx es Top
// Preserved: bp di ds si sp
fn0800_BF9E_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BF9E:
	word16 di_17 = (word16) ptrArg06
	selector es_73 = SLICE(ptrArg06, selector, 16)
	word16 si_18 = di_17
	word16 cx_22 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFAE:
	branch cx_22 == 0x0000 l0800_BFB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFAE_1:
	di_17 = di_124 + 0x0001
	cx_22 = cx_22 - 0x0001
	di_124 = di_17
	branch Mem14[es_73:di_124:byte] == 0x00 l0800_BFAE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFB0:
	word16 cx_33 = ~cx_22
	selector es_76 = SLICE(ptrArg02, selector, 16)
	word16 di_68 = (word16) ptrArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBA:
	branch cx_33 == 0x0000 l0800_BFBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BF9E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFBA_2:
	Mem69[es_76:di_68:byte] = Mem52[es_73:si_18:byte]
	si_18 = si_18 + 0x0001
	di_68 = di_68 + 0x0001
	cx_33 = cx_33 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BFC7(word16 wArg02, ptr16 & cxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax cx
// Trashed: SCZDO ax cx es Top
// Preserved: bp di sp
fn0800_BFC7_entry:
	word16 wArg04_64 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFC7:
	word16 di_16 = (word16) ptrArg02
	selector es_58 = SLICE(ptrArg02, selector, 16)
	word16 ax_13 = 0x0000
	branch wArg04_64 != 0x0000 l0800_BFD9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFD5:
	branch di_16 == 0x0000 l0800_BFE3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFD9:
	word16 cx_20 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDD:
	ax_13 = DPB(ax_13, 0x00, 0) (alias)
	ax_13 = DPB(ax_13, 0x00, 0) (alias)
	branch cx_20 == 0x0000 l0800_BFDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDD_1:
	di_16 = di_102 + 0x0001
	cx_20 = cx_20 - 0x0001
	di_102 = di_16
	branch Mem11[es_58:di_102:byte] == 0x00 l0800_BFDD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFDF:
	cx = ax_13
	ax_13 = ~cx_20 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFE3:
	cxOut = cx
	return ax_13
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BFC7_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_BFE6(word16 wArg02, word16 wArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0006:[0..15] Stack +000A:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_BFE6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFE6:
	word16 di_19 = (word16) ptrArg06
	selector es_107 = SLICE(ptrArg06, selector, 16)
	word16 ax_134 = wArg0A
	word16 cx_22 = wArg0A
	branch wArg0A == 0x0000 l0800_C018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFA:
	word16 ax_73 = DPB(wArg0A, 0x00, 0)
	di_30 = di_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFE:
	word16 di_30
	ax_73 = DPB(ax_73, 0x00, 0) (alias)
	ax_73 = DPB(ax_73, 0x00, 0) (alias)
	branch cx_22 == 0x0000 l0800_C000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_BFFE_1:
	di_30 = di_162 + 0x0001
	cx_22 = cx_22 - 0x0001
	di_162 = di_30
	branch Mem14[es_107:di_162:byte] == 0x00 l0800_BFFE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C000:
	word16 bx_39 = wArg0A - cx_22
	word16 cx_41 = bx_39
	word16 di_164 = di_19
	selector ds_108 = SLICE(ptrArg02, selector, 16)
	word16 si_109 = (word16) ptrArg02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C009:
	branch cx_41 == 0x0000 l0800_C00B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C009_2:
	si_109 = si_109 + 0x0001
	di_164 = di_164 + 0x0001
	cx_41 = cx_41 - 0x0001
	branch Mem14[ds_108:si_109:byte] != Mem14[es_107:di_164:byte] l0800_C009
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C00B:
	ax_134 = DPB(DPB(ax_73, Mem14[ds_108:si_109 - 0x0001:byte], 0), 0x00, 8) - DPB(DPB(bx_39, Mem14[es_107:di_164 - 0x0001:byte], 0), 0x00, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C018:
	return ax_134
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_BFE6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C01E(word16 wArg02, word16 wArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15] Stack +0006:[0..15] Stack +000A:[0..15]
// LiveOut: dx
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di ds si sp
fn0800_C01E_entry:
	word16 wArg04_117 = SLICE(ptrArg02, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C01E:
	word16 di_17 = (word16) ptrArg06
	selector es_90 = SLICE(ptrArg06, selector, 16)
	word16 si_18 = di_17
	word16 cx_23 = wArg0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C030:
	branch cx_23 == 0x0000 l0800_C032
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C030_1:
	di_17 = di_150 + 0x0001
	cx_23 = cx_23 - 0x0001
	di_150 = di_17
	branch Mem14[es_90:di_150:byte] == 0x00 l0800_C030
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C032:
	selector es_98 = SLICE(ptrArg02, selector, 16)
	word16 di_76 = (word16) ptrArg02
	word16 cx_55 = wArg0A - cx_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C03E:
	branch cx_55 == 0x0000 l0800_C040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C040:
	word16 cx_58 = cx_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C042:
	branch cx_58 == 0x0000 l0800_C044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C044:
	return wArg04_117
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C01E_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C042_1:
	Mem77[es_98:di_76:byte] = 0x00
	di_76 = di_76 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C03E_2:
	Mem86[es_98:di_76:byte] = Mem82[es_90:si_18:byte]
	si_18 = si_18 + 0x0001
	di_76 = di_76 + 0x0001
	cx_55 = cx_55 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C04F(selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: ax bp cx dx
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
fn0800_C04F_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C04F:
	word16 bp_20 = fn0800_C379(ds)
	word16 dx_30 = Mem13[ds:0x26E2:word16]
	Mem35[ss:bp_20 - 0x0002:word16] = Mem13[ds:0x26E4:word16] + 0x12CE + (dx_30 <u 0xA600)
	Mem36[ss:bp_20 - 0x0004:word16] = dx_30 + 0xA600
	word16 si_40 = Mem36[Mem36[ss:bp_20 + 0x0004:segptr32]:word16]
	int32 dx_ax_46 = (int32) (si_40 + 0xF844 >> 0x0002)
	word16 sp_23 = <invalid>
	Mem49[ss:sp_23 - 2:word16] = (word16) dx_ax_46
	Mem52[ss:sp_23 - 4:word16] = SLICE(dx_ax_46, word16, 16)
	word16 dx_60
	word16 ax_59 = fn0800_8F18(0x1F80, Mem52[ss:sp_23 - 4:word16], 0x0786, Mem52[ss:sp_23 - 2:word16], out ch_398, out dx_60)
	Mem67[ss:bp_20 - 0x0004:word16] = v16_66
	ui32 v17_v16_316 = SEQ(Mem67[ss:bp_20 - 0x0002:word16], Mem52[ss:bp_20 - 0x0004:word16]) + SEQ(dx_60, ax_59)
	Mem71[ss:bp_20 - 0x0002:word16] = SLICE(v17_v16_316, word16, 16)
	int32 dx_ax_76 = (int32) (si_40 + 0xF844 & 0x0003)
	Mem79[ss:sp_23 - 2:word16] = (word16) dx_ax_76
	Mem82[ss:sp_23 - 4:word16] = SLICE(dx_ax_76, word16, 16)
	word16 dx_90
	word16 ax_89 = fn0800_8F18(0x3380, Mem82[ss:sp_23 - 4:word16], 0x01E1, Mem82[ss:sp_23 - 2:word16], out ch_399, out dx_90)
	Mem97[ss:bp_20 - 0x0004:word16] = v19_96
	ui32 v20_v19_318 = SEQ(Mem97[ss:bp_20 - 0x0002:word16], Mem82[ss:bp_20 - 0x0004:word16]) + SEQ(dx_90, ax_89)
	Mem101[ss:bp_20 - 0x0002:word16] = SLICE(v20_v19_318, word16, 16)
	word16 v16_66 = (word16) v17_v16_316
	word16 v19_96 = (word16) v20_v19_318
	branch (si_40 + 0xF844 & 0x0003) == 0x0000 l0800_C0B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0B0:
	Mem106[ss:bp_20 - 0x0004:word16] = v22_105
	0x00015180 = 0x005180
	ui32 v23_v22_319 = SEQ(Mem106[ss:bp_20 - 0x0002:word16], Mem101[ss:bp_20 - 0x0004:word16]) + 0x00015180
	Mem110[ss:bp_20 - 0x0002:word16] = SLICE(v23_v22_319, word16, 16)
	word16 v22_105 = (word16) v23_v22_319
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0B9:
	word16 cx_112 = 0x0000
	word16 si_124 = (int16) Mem116[Mem116[ss:bp_20 + 0x0004:segptr32] + 0x0003:byte] - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0D0:
	branch si_124 > 0x0000 l0800_C0C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0C8:
	si_124 = si_124 - 0x0001
	cx_112 = cx_112 + (int16) Mem116[ds:si_124 + 0x26B4:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0D4:
	ptr32 es_bx_139 = Mem116[ss:bp_20 + 0x0004:segptr32]
	word16 ax_143 = (int16) Mem116[es_bx_139 + 0x0002:byte]
	word16 cx_145 = cx_112 + (ax_143 - 0x0001)
	branch Mem116[es_bx_139 + 0x0003:byte] <= 0x02 l0800_C0EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0E6:
	branch (Mem116[es_bx_139:word16] & 0x0003) != 0x0000 l0800_C0EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0ED:
	cx_145 = cx_145 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C0EE:
	ptr32 es_bx_156 = Mem116[ss:bp_20 + 0x0008:segptr32]
	Mem168[ss:sp_23 - 2:word16] = DPB(DPB(ax_143 - 0x0001, Mem116[es_bx_156 + 0x0001:byte], 0), 0x00, 8)
	word16 ax_176 = (word16) (cx_145 *s 0x0018) + Mem168[ss:sp_23 - 2:word16]
	word16 si_177 = ax_176
	branch Mem168[ds:0x26E6:word16] == 0x0000 l0800_C128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C10B:
	Mem186[ss:sp_23 - 2:word16] = DPB(DPB(ax_176, Mem168[es_bx_156 + 0x0001:byte], 0), 0x00, 8)
	Mem188[ss:sp_23 - 4:word16] = cx_145
	Mem191[ss:sp_23 - 6:word16] = 0x0000
	Mem199[ss:sp_23 - 8:word16] = Mem191[Mem191[ss:bp_20 + 0x0004:segptr32]:word16] + 0xF84E
	branch fn0800_C553(ds, Mem199[ss:sp_23 - 8:word16], Mem199[ss:sp_23 - 6:word16], Mem199[ss:sp_23 - 4:word16], Mem199[ss:sp_23 - 2:byte]) == 0x0000 l0800_C128
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C127:
	si_177 = ax_176 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C128:
	int32 dx_ax_217 = (int32) si_177
	Mem222[ss:sp_23 - 2:word16] = (word16) dx_ax_217
	Mem225[ss:sp_23 - 4:word16] = SLICE(dx_ax_217, word16, 16)
	word16 dx_235
	word16 ax_234 = fn0800_8F18(0x0E10, Mem225[ss:sp_23 - 4:word16], 0x0000, Mem225[ss:sp_23 - 2:word16], out ch_400, out dx_235)
	Mem243[ss:bp_20 - 0x0004:word16] = v26_242
	ui32 v27_v26_321 = SEQ(Mem243[ss:bp_20 - 0x0002:word16], Mem225[ss:bp_20 - 0x0004:word16]) + SEQ(dx_235, ax_234)
	Mem247[ss:bp_20 - 0x0002:word16] = SLICE(v27_v26_321, word16, 16)
	int32 dx_ax_255 = (int32) DPB(DPB(ax_234, Mem247[Mem247[ss:bp_20 + 0x0008:segptr32]:byte], 0), 0x00, 8)
	Mem258[ss:sp_23 - 2:word16] = (word16) dx_ax_255
	Mem261[ss:sp_23 - 4:word16] = SLICE(dx_ax_255, word16, 16)
	word16 dx_271
	word16 ax_270 = fn0800_8F18(0x003C, Mem261[ss:sp_23 - 4:word16], 0x0000, Mem261[ss:sp_23 - 2:word16], out ch_401, out dx_271)
	ptr32 es_bx_277 = Mem261[ss:bp_20 + 0x0008:segptr32]
	word16 bx_286 = DPB(DPB((word16) es_bx_277, Mem261[es_bx_277 + 0x0003:byte], 0), 0x00, 8)
	Mem283[ss:sp_23 - 2:word16] = ax_270
	Mem289[ss:sp_23 - 4:word16] = dx_271
	ui32 bx_cx_324 = SEQ(Mem289[ss:sp_23 - 4:word16], Mem289[ss:sp_23 - 2:word16]) + (int32) bx_286
	Mem302[ss:bp_20 - 0x0004:word16] = v30_301
	ui32 v31_v30_326 = SEQ(Mem302[ss:bp_20 - 0x0002:word16], Mem289[ss:bp_20 - 0x0004:word16]) + bx_cx_324
	Mem306[ss:bp_20 - 0x0002:word16] = SLICE(v31_v30_326, word16, 16)
	word16 dx_308 = Mem306[ss:bp_20 - 0x0002:word16]
	word16 ax_309 = Mem306[ss:bp_20 - 0x0004:word16]
	word16 bp_312 = Mem306[ss:bp_20:word16]
	cxOut = (word16) bx_cx_324
	dxOut = dx_308
	bpOut = bp_312
	word16 v26_242 = (word16) v27_v26_321
	word16 v30_301 = (word16) v31_v30_326
	return ax_309
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C04F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0800_C177(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: bp sp
fn0800_C177_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C177:
	word16 bp_15 = fn0800_C379(ds)
	ax_29 = Mem7[ds:0x26E4:word16] + 0x12CE + (Mem7[ds:0x26E2:word16] <u 0xA600)
	Mem31[ss:bp_15 + 0x0004:word16] = v10_30
	Mem7[ss:bp_15 + 0x0004:ui32] = SEQ(Mem31[ss:bp_15 + 0x0006:word16], Mem7[ss:bp_15 + 0x0004:word16])
	ui32 v11_v10_537 = Mem7[ss:bp_15 + 0x0004:ui32] - SEQ(ax_29, dx_25 + 0xA600)
	Mem35[ss:bp_15 + 0x0006:word16] = SLICE(v11_v10_537, word16, 16)
	Mem39[Mem35[ss:bp_15 + 0x000C:segptr32] + 0x0002:byte] = 0x00
	word16 sp_18 = <invalid>
	Mem45[ss:sp_18 - 2:word16] = 0x0000
	Mem47[ss:sp_18 - 4:word16] = 0x003C
	Mem50[ss:sp_18 - 6:word16] = Mem47[ss:bp_15 + 0x0006:word16]
	Mem53[ss:sp_18 - 8:word16] = Mem50[ss:bp_15 + 0x0004:word16]
	Mem67[Mem53[ss:bp_15 + 0x000C:segptr32] + 0x0003:byte] = (byte) fn0800_8BCA(Mem53[ss:sp_18 - 8:word16], Mem53[ss:sp_18 - 6:word16], Mem53[ss:sp_18 - 4:word16], Mem53[ss:sp_18 - 2:word16], out dx_663)
	word16 sp_58 = <invalid>
	Mem73[ss:sp_58 - 2:word16] = 0x0000
	Mem75[ss:sp_58 - 4:word16] = 0x003C
	Mem78[ss:sp_58 - 6:word16] = Mem75[ss:bp_15 + 0x0006:word16]
	Mem81[ss:sp_58 - 8:word16] = Mem78[ss:bp_15 + 0x0004:word16]
	word16 dx_85
	word16 ax_82 = fn0800_8BBB(Mem81[ss:sp_58 - 8:word16], Mem81[ss:sp_58 - 6:word16], Mem81[ss:sp_58 - 4:word16], Mem81[ss:sp_58 - 2:word16], out cx_664, out dx_85, out bx_665)
	Mem91[ss:bp_15 + 0x0006:word16] = dx_85
	Mem92[ss:bp_15 + 0x0004:word16] = ax_82
	word16 sp_86 = <invalid>
	Mem98[ss:sp_86 - 2:word16] = 0x0000
	Mem100[ss:sp_86 - 4:word16] = 0x003C
	Mem103[ss:sp_86 - 6:word16] = Mem100[ss:bp_15 + 0x0006:word16]
	Mem106[ss:sp_86 - 8:word16] = Mem103[ss:bp_15 + 0x0004:word16]
	Mem120[Mem106[ss:bp_15 + 0x000C:segptr32]:byte] = (byte) fn0800_8BCA(Mem106[ss:sp_86 - 8:word16], Mem106[ss:sp_86 - 6:word16], Mem106[ss:sp_86 - 4:word16], Mem106[ss:sp_86 - 2:word16], out dx_666)
	word16 sp_111 = <invalid>
	Mem126[ss:sp_111 - 2:word16] = 0x0000
	Mem128[ss:sp_111 - 4:word16] = 0x003C
	Mem131[ss:sp_111 - 6:word16] = Mem128[ss:bp_15 + 0x0006:word16]
	Mem134[ss:sp_111 - 8:word16] = Mem131[ss:bp_15 + 0x0004:word16]
	word16 dx_138
	word16 ax_135 = fn0800_8BBB(Mem134[ss:sp_111 - 8:word16], Mem134[ss:sp_111 - 6:word16], Mem134[ss:sp_111 - 4:word16], Mem134[ss:sp_111 - 2:word16], out cx_667, out dx_138, out bx_668)
	Mem144[ss:bp_15 + 0x0006:word16] = dx_138
	Mem145[ss:bp_15 + 0x0004:word16] = ax_135
	word16 sp_139 = <invalid>
	Mem151[ss:sp_139 - 2:word16] = 0x0000
	Mem153[ss:sp_139 - 4:word16] = 0x88F8
	Mem156[ss:sp_139 - 6:word16] = Mem153[ss:bp_15 + 0x0006:word16]
	Mem159[ss:sp_139 - 8:word16] = Mem156[ss:bp_15 + 0x0004:word16]
	Mem175[Mem159[ss:bp_15 + 0x0008:segptr32]:word16] = (fn0800_8BBB(Mem159[ss:sp_139 - 8:word16], Mem159[ss:sp_139 - 6:word16], Mem159[ss:sp_139 - 4:word16], Mem159[ss:sp_139 - 2:word16], out cx_669, out dx_670, out bx_671) << 0x0002) + 0x07BC
	word16 sp_164 = <invalid>
	Mem181[ss:sp_164 - 2:word16] = 0x0000
	Mem183[ss:sp_164 - 4:word16] = 0x88F8
	Mem186[ss:sp_164 - 6:word16] = Mem183[ss:bp_15 + 0x0006:word16]
	Mem189[ss:sp_164 - 8:word16] = Mem186[ss:bp_15 + 0x0004:word16]
	word16 dx_193
	word16 ax_190 = fn0800_8BCA(Mem189[ss:sp_164 - 8:word16], Mem189[ss:sp_164 - 6:word16], Mem189[ss:sp_164 - 4:word16], Mem189[ss:sp_164 - 2:word16], out dx_193)
	Mem199[ss:bp_15 + 0x0006:word16] = dx_193
	Mem200[ss:bp_15 + 0x0004:word16] = ax_190
	word16 v10_30 = (word16) v11_v10_537
	word16 sp_194 = <invalid>
	branch Mem200[ss:bp_15 + 0x0006:word16] < 0x0000 l0800_C26F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C22B:
	branch Mem200[ss:bp_15 + 0x0006:word16] != 0x0000 l0800_C234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C22D:
	branch Mem200[ss:bp_15 + 0x0004:word16] <u 0x2250 l0800_C26F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C234:
	word16 v31_209 = Mem200[ss:bp_15 + 0x0004:word16] - 0x2250
	Mem210[ss:bp_15 + 0x0004:word16] = v31_209
	Mem214[ss:bp_15 + 0x0006:word16] = Mem210[ss:bp_15 + 0x0006:word16] - (v31_209 <u 0x0000)
	ptr32 es_bx_215 = Mem214[ss:bp_15 + 0x0008:segptr32]
	Mem219[es_bx_215:word16] = Mem214[es_bx_215:word16] + 0x0001
	Mem226[ss:sp_194 - 2:word16] = 0x0000
	Mem228[ss:sp_194 - 4:word16] = 0x2238
	Mem231[ss:sp_194 - 6:word16] = Mem228[ss:bp_15 + 0x0006:word16]
	Mem234[ss:sp_194 - 8:word16] = Mem231[ss:bp_15 + 0x0004:word16]
	word16 ax_235 = fn0800_8BBB(Mem234[ss:sp_194 - 8:word16], Mem234[ss:sp_194 - 6:word16], Mem234[ss:sp_194 - 4:word16], Mem234[ss:sp_194 - 2:word16], out cx_672, out dx_673, out bx_674)
	ptr32 es_bx_244 = Mem234[ss:bp_15 + 0x0008:segptr32]
	Mem248[es_bx_244:word16] = Mem234[es_bx_244:word16] + ax_235
	word16 sp_239 = <invalid>
	Mem254[ss:sp_239 - 2:word16] = 0x0000
	Mem256[ss:sp_239 - 4:word16] = 0x2238
	Mem259[ss:sp_239 - 6:word16] = Mem256[ss:bp_15 + 0x0006:word16]
	Mem262[ss:sp_239 - 8:word16] = Mem259[ss:bp_15 + 0x0004:word16]
	word16 dx_266
	word16 ax_263 = fn0800_8BCA(Mem262[ss:sp_239 - 8:word16], Mem262[ss:sp_239 - 6:word16], Mem262[ss:sp_239 - 4:word16], Mem262[ss:sp_239 - 2:word16], out dx_266)
	Mem272[ss:bp_15 + 0x0006:word16] = dx_266
	Mem273[ss:bp_15 + 0x0004:word16] = ax_263
	sp_194 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C26F:
	branch Mem276[ds:0x26E6:word16] == 0x0000 l0800_C2B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C276:
	word16 sp_284 = sp_194 - 2
	Mem286[ss:sp_284:word16] = 0x0000
	Mem288[ss:sp_284 - 2:word16] = 0x0018
	Mem292[ss:sp_284 - 4:word16] = Mem288[ss:bp_15 + 0x0006:word16]
	Mem295[ss:sp_284 - 6:word16] = Mem292[ss:bp_15 + 0x0004:word16]
	word16 sp_300 = <invalid>
	Mem306[ss:sp_300 - 2:word16] = fn0800_8BCA(Mem295[ss:sp_284 - 6:word16], Mem295[ss:sp_284 - 4:word16], Mem295[ss:sp_284 - 2:word16], Mem295[ss:sp_284:word16], out dx_678)
	Mem312[ss:sp_300 - 4:word16] = 0x0000
	Mem314[ss:sp_300 - 6:word16] = 0x0018
	Mem317[ss:sp_300 - 8:word16] = Mem314[ss:bp_15 + 0x0006:word16]
	Mem320[ss:sp_300 - 10:word16] = Mem317[ss:bp_15 + 0x0004:word16]
	word16 sp_325 = <invalid>
	Mem331[ss:sp_325 - 2:word16] = fn0800_8BBB(Mem320[ss:sp_300 - 10:word16], Mem320[ss:sp_300 - 8:word16], Mem320[ss:sp_300 - 6:word16], Mem320[ss:sp_300 - 4:word16], out cx_679, out dx_680, out bx_681)
	Mem334[ss:sp_325 - 4:word16] = 0x0000
	Mem342[ss:sp_325 - 6:word16] = Mem334[Mem334[ss:bp_15 + 0x0008:segptr32]:word16] + 0xF84E
	sp_194 = sp_325 + 0x0002
	branch fn0800_C553(ds, Mem342[ss:sp_325 - 6:word16], Mem342[ss:sp_325 - 4:word16], Mem342[ss:sp_325 - 2:word16], Mem342[ss:sp_325:byte]) == 0x0000 l0800_C2B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2AC:
	word16 v43_356 = Mem342[ss:bp_15 + 0x0004:word16] + 0x0001
	Mem357[ss:bp_15 + 0x0004:word16] = v43_356
	Mem361[ss:bp_15 + 0x0006:word16] = Mem357[ss:bp_15 + 0x0006:word16] + (v43_356 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2B4:
	word16 sp_368 = sp_194 - 2
	Mem370[ss:sp_368:word16] = 0x0000
	Mem372[ss:sp_368 - 2:word16] = 0x0018
	Mem376[ss:sp_368 - 4:word16] = Mem372[ss:bp_15 + 0x0006:word16]
	Mem379[ss:sp_368 - 6:word16] = Mem376[ss:bp_15 + 0x0004:word16]
	Mem393[Mem379[ss:bp_15 + 0x000C:segptr32] + 0x0001:byte] = (byte) fn0800_8BCA(Mem379[ss:sp_368 - 6:word16], Mem379[ss:sp_368 - 4:word16], Mem379[ss:sp_368 - 2:word16], Mem379[ss:sp_368:word16], out dx_675)
	word16 sp_384 = <invalid>
	Mem399[ss:sp_384 - 2:word16] = 0x0000
	Mem401[ss:sp_384 - 4:word16] = 0x0018
	Mem404[ss:sp_384 - 6:word16] = Mem401[ss:bp_15 + 0x0006:word16]
	Mem407[ss:sp_384 - 8:word16] = Mem404[ss:bp_15 + 0x0004:word16]
	word16 dx_411
	word16 ax_408 = fn0800_8BBB(Mem407[ss:sp_384 - 8:word16], Mem407[ss:sp_384 - 6:word16], Mem407[ss:sp_384 - 4:word16], Mem407[ss:sp_384 - 2:word16], out cx_676, out dx_411, out bx_677)
	Mem417[ss:bp_15 + 0x0006:word16] = dx_411
	Mem418[ss:bp_15 + 0x0004:word16] = ax_408
	word16 v49_419 = Mem418[ss:bp_15 + 0x0004:word16] + 0x0001
	Mem420[ss:bp_15 + 0x0004:word16] = v49_419
	Mem424[ss:bp_15 + 0x0006:word16] = Mem420[ss:bp_15 + 0x0006:word16] + (v49_419 <u 0x0000)
	branch (Mem424[Mem424[ss:bp_15 + 0x0008:segptr32]:word16] & 0x0003) != 0x0000 l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2F3:
	branch Mem424[ss:bp_15 + 0x0006:word16] < 0x0000 l0800_C30B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2F9:
	branch Mem424[ss:bp_15 + 0x0006:word16] > 0x0000 l0800_C301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C2FB:
	branch Mem424[ss:bp_15 + 0x0004:word16] <=u 0x003C l0800_C30B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C30B:
	branch Mem424[ss:bp_15 + 0x0006:word16] != 0x0000 l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C311:
	branch Mem424[ss:bp_15 + 0x0004:word16] != 0x003C l0800_C326
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C317:
	ptr32 es_bx_443 = Mem424[ss:bp_15 + 0x0008:segptr32]
	Mem446[es_bx_443 + 0x0003:byte] = 0x02
	Mem447[es_bx_443 + 0x0002:byte] = 0x1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C301:
	word16 v52_451 = Mem424[ss:bp_15 + 0x0004:word16] - 0x0001
	Mem452[ss:bp_15 + 0x0004:word16] = v52_451
	Mem456[ss:bp_15 + 0x0006:word16] = Mem452[ss:bp_15 + 0x0006:word16] - (v52_451 <u 0x0000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C326:
	Mem464[Mem460[ss:bp_15 + 0x0008:segptr32] + 0x0003:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C34D:
	int32 dx_ax_477 = (int32) (int16) Mem467[ds:(int16) Mem467[Mem467[ss:bp_15 + 0x0008:segptr32] + 0x0003:byte] + 0x26B4:byte]
	word16 dx_478 = SLICE(dx_ax_477, word16, 16)
	word16 ax_482 = (word16) dx_ax_477
	branch dx_478 < Mem467[ss:bp_15 + 0x0006:word16] l0800_C330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C362:
	branch dx_478 != Mem467[ss:bp_15 + 0x0006:word16] l0800_C369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C364:
	branch ax_482 <u Mem467[ss:bp_15 + 0x0004:word16] l0800_C330
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C330:
	ptr32 es_bx_488 = Mem467[ss:bp_15 + 0x0008:segptr32]
	int32 dx_ax_497 = (int32) (int16) Mem467[ds:(int16) Mem467[es_bx_488 + 0x0003:byte] + 0x26B4:byte]
	Mem500[ss:bp_15 + 0x0004:word16] = v56_499
	Mem467[ss:bp_15 + 0x0004:ui32] = SEQ(Mem500[ss:bp_15 + 0x0006:word16], Mem467[ss:bp_15 + 0x0004:word16])
	ui32 v57_v56_539 = Mem467[ss:bp_15 + 0x0004:ui32] - dx_ax_497
	Mem505[ss:bp_15 + 0x0006:word16] = SLICE(v57_v56_539, word16, 16)
	selector es_489 = SLICE(es_bx_488, selector, 16)
	word16 bx_507 = Mem505[ss:bp_15 + 0x0008:word16]
	Mem509[es_489:bx_507 + 0x0003:byte] = Mem505[es_489:bx_507 + 0x0003:byte] + 0x01
	word16 v56_499 = (word16) v57_v56_539
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C369:
	ptr32 es_bx_514 = Mem467[ss:bp_15 + 0x0008:segptr32]
	Mem518[es_bx_514 + 0x0003:byte] = Mem467[es_bx_514 + 0x0003:byte] + 0x01
	Mem521[es_bx_514 + 0x0002:byte] = Mem518[ss:bp_15 + 0x0004:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C377:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C177_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C379(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut: bp sp
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
fn0800_C379_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C379:
	word16 dx_21
	word16 ax_20 = fn0800_AFCB(ds, SEQ(ds, 0x26E8), out dx_21)
	word16 bp_193 = fp - 2
	branch (ax_20 | dx_21) != 0x0000 l0800_C397
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C397:
	branch fn0800_BFC7(SEQ(dx_21, ax_20), out cx_478) >=u 0x0004 l0800_C3AA
	segptr32 ptrLoc06_400 = SEQ(dx_21, ax_20)
	word16 wLoc06_401 = SLICE(ptrLoc06_400, word16, 0)
	segptr32 ptrLoc06_402 = SLICE(ptrLoc06_400, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3AA:
	selector es_61 = SLICE(ptrLoc06_400, selector, 16)
	branch ((int16) Mem45[ds:(int16) Mem45[ptrLoc06_400:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3BD:
	branch ((int16) Mem45[ds:(int16) Mem45[es_61:wLoc06_401 + 0x0001:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3D1:
	branch ((int16) Mem45[ds:(int16) Mem45[es_61:wLoc06_401 + 0x0002:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3E5:
	branch Mem45[es_61:wLoc06_401 + 0x0003:byte] == 0x2D l0800_C404
	ptrLoc06_402 = SEQ(ptrLoc06_402, wLoc06_401)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3EF:
	branch Mem45[es_61:wLoc06_401 + 0x0003:byte] == 0x2B l0800_C404
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3F6:
	branch (Mem45[ds:(int16) Mem45[es_61:wLoc06_401 + 0x0003:byte] + 0x2251:byte] & 0x02) == 0x00 l0800_C42C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C404:
	word16 wLoc06_405 = SLICE(ptrLoc06_402, word16, 0)
	word16 wLoc04_412 = SLICE(ptrLoc06_402, word16, 16)
	selector es_104 = SLICE(ptrLoc06_402, selector, 16)
	branch ((int16) Mem45[ds:(int16) Mem45[ptrLoc06_402 + 0x0003:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C418:
	branch ((int16) Mem45[ds:(int16) Mem45[es_104:wLoc06_405 + 0x0004:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C467:
	fn0800_B083(Mem138[ds:0x26DE:word16], Mem134[ds:0x26E0:word16], 0x0004)
	fn0800_C01E(SEQ(Mem162[ds:0x26DC:word16], Mem165[ds:0x26DA:word16]), SEQ(wLoc04_412, wLoc06_405), 0x0003)
	Mem183[Mem168[ds:0x26DA:segptr32] + 0x0003:byte] = 0x00
	word16 sp_200 = <invalid>
	word16 dx_197
	Mem211[ss:sp_200 + 2:word16] = fn0800_A471(ds, SEQ(wLoc04_412, wLoc06_405 + 0x0003), out dx_197, out bp_193)
	Mem213[ss:sp_200:word16] = dx_197
	word16 dx_223
	word16 ax_222 = fn0800_8F18(0x0E10, Mem213[ss:sp_200:word16], 0x0000, Mem213[ss:sp_200 + 2:word16], out ch_479, out dx_223)
	Mem229[ds:0x26E4:word16] = dx_223
	Mem230[ds:0x26E2:word16] = ax_222
	Mem231[ds:0x26E6:word16] = 0x0000
	word16 si_232 = 0x0003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C542:
	branch Mem231[Mem231[ss:bp_193 - 0x0004:segptr32] + si_232:byte] == 0x00 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C54B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4CA:
	branch (Mem231[ds:(int16) Mem231[Mem231[ss:bp_193 - 0x0004:segptr32] + si_232:byte] + 0x2251:byte] & 0x0C) == 0x00 l0800_C541
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C541:
	si_232 = si_232 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4DA:
	word16 ax_255 = Mem231[ss:bp_193 - 0x0004:word16] + si_232
	Mem260[ss:sp_200 + 2:word16] = Mem231[ss:bp_193 - 0x0002:word16]
	Mem262[ss:sp_200:word16] = ax_255
	branch fn0800_BFC7(Mem262[ss:sp_200:segptr32], out cx_480) <u 0x0003 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C4ED:
	ptr32 es_bx_277 = Mem262[ss:bp_193 - 0x0004:segptr32]
	selector es_278 = SLICE(es_bx_277, selector, 16)
	branch ((int16) Mem262[ds:(int16) Mem262[es_278:(word16) es_bx_277 + 0x0001 + si_232:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C501:
	branch ((int16) Mem262[ds:(int16) Mem262[es_278:Mem262[ss:bp_193 - 0x0004:word16] + 0x0002 + si_232:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C515:
	Mem299[ss:sp_200 + 2:word16] = 0x0003
	word16 ax_301 = Mem299[ss:bp_193 - 0x0004:word16] + si_232
	Mem305[ss:sp_200:word16] = Mem299[ss:bp_193 - 0x0002:word16]
	Mem307[ss:sp_200 - 2:word16] = ax_301
	Mem310[ss:sp_200 - 4:word16] = Mem307[ds:0x26E0:word16]
	Mem313[ss:sp_200 - 6:word16] = Mem310[ds:0x26DE:word16]
	fn0800_C01E(Mem313[ss:sp_200 - 6:segptr32], Mem313[ss:sp_200 - 2:segptr32], Mem313[ss:sp_200 + 2:word16])
	Mem329[Mem313[ds:0x26DE:segptr32] + 0x0003:byte] = 0x00
	Mem330[ds:0x26E6:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C3A7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C394:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C42C:
	Mem332[ds:0x26E6:word16] = 0x0001
	Mem333[ds:0x26E4:word16] = 0x0000
	Mem334[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(SEQ(Mem341[ds:0x26DC:word16], Mem344[ds:0x26DA:word16]), SEQ(ds, 0x26EB))
	fn0800_BF9E(SEQ(Mem363[ds:0x26E0:word16], Mem366[ds:0x26DE:word16]), SEQ(ds, 0x26EF))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C54E:
	return Mem383[ss:bp_193:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C379_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..7]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_C553_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C553:
	branch wArg04 != 0x0000 l0800_C589
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C589:
	branch wArg04 <u 0x0003 l0800_C59A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C58F:
	branch (wArg02 + 0x0046 & 0x0003) == 0x0000 l0800_C59D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C59A:
	wArg06 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C59D:
	wArg06 = wArg06 + Mem29[ds:(wArg04 - 0x0001 << 0x0001) + 0x26C0:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C55D:
	word16 si_167 = wArg06
	branch wArg06 <u 0x003B l0800_C572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C566:
	branch (wArg02 + 0x0046 & 0x0003) != 0x0000 l0800_C572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C571:
	si_167 = wArg06 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C572:
	wArg04 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C57C:
	branch Mem55[ds:(wArg04 << 0x0001) + 0x26C0:word16] <=u si_167 l0800_C579
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C579:
	wArg04 = wArg04 + 0x0001
	Mem55 = Mem63
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C587:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5AA:
	word16 ax_140
	branch wArg04 <u 0x0004 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B0:
	branch wArg04 == 0x0004 l0800_C5BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B2:
	branch wArg04 >u 0x000A l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5B8:
	branch wArg04 != 0x000A l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5BA:
	word16 cx_103
	branch wArg02 <= 0x0010 l0800_C5D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5C5:
	branch wArg04 != 0x0004 l0800_C5D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5D4:
	cx_103 = Mem67[ds:(wArg04 << 0x0001) + 0x26C0:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5CB:
	cx_103 = Mem67[ds:(wArg04 << 0x0001) + 0x26BE:word16] + 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5D8:
	branch ((byte) (wArg02 + 0x07B2) & 0x03) == 0x00 l0800_C5E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5E4:
	cx_103 = cx_103 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C5E5:
	word16 cx_126 = cx_103 - (uint16) ((uint32) ((uint16) (((word16) (wArg02 *u 0x016D) + ((wArg02 + 0x0001 >> 0x0002) + cx_103)) + 0x0004)) % 0x0007)
	branch wArg04 != 0x0004 l0800_C61A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C61A:
	branch wArg06 <u cx_126 l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C61E:
	branch wArg06 != cx_126 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C620:
	branch bArg08 >u 0x01 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C60C:
	branch wArg06 >u cx_126 l0800_C626
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C610:
	branch wArg06 != cx_126 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C612:
	branch bArg08 <u 0x02 l0800_C62B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C62B:
	ax_140 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C618:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C626:
	ax_140 = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C62D:
	return ax_140
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C553_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C632(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: ax bx dx
// Trashed: SCZO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_C632_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C632:
	word16 ax_123
	branch wArg02 <u Mem15[ds:0x24E8:word16] l0800_C64E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C64E:
	branch wArg08 >=u 0x0001 l0800_C65C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C65C:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_C677
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C668:
	fn0800_8E29(ds, wArg02, 0x0000, 0x0000, 0x02, out cx_467, out dx_468, out bx_469)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C677:
	branch (Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_C696
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C696:
	Mem62[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem55[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	bx = wArg02 << 0x0001
	word16 wLoc08_295 = wArg08
	segptr32 ptrLoc0E_308 = SEQ(wArg06, wArg04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C727:
	word16 wLoc06_297 = fp - 0x0090
	segptr32 ptrLoc06_312 = SEQ(ss, fp - 0x0090)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C731:
	word16 si_175
	word16 ax_126
	word16 wLoc04_313 = SLICE(ptrLoc06_312, word16, 16)
	word16 wLoc0E_309 = SLICE(ptrLoc0E_308, word16, 0)
	word16 wLoc0C_375 = SLICE(ptrLoc0E_308, word16, 16)
	branch wLoc08_295 == 0x0000 l0800_C73A
	segptr32 ptrLoc06_314 = SEQ(wLoc04_313, wLoc06_297)
	word16 wLoc04_317 = SLICE(ptrLoc06_314, word16, 16)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C73A:
	si_175 = wLoc06_297 - (fp - 0x0090)
	dx = 0x0000 - (si_175 <u 0x0000)
	branch si_175 <=u 0x0000 l0800_C770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C74E:
	word16 ax_108 = fn0800_C779(ds, wArg02, SEQ(ss, fp - 0x0090), si_175, out cx_110, out dx_471, out bx)
	dx = ax_108
	branch ax_108 == si_175 l0800_C770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C770:
	ax_123 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C762:
	branch ax_108 == 0xFFFF l0800_C71A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C767:
	ax_126 = wArg08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C737:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6B4:
	word16 v20_127 = wLoc08_295 - 0x0001
	wLoc08_295 = v20_127
	byte al_134 = Mem131[ptrLoc0E_308:byte]
	branch al_134 != 0x0A l0800_C6D1
	segptr32 ptrLoc06_316 = SEQ(wLoc04_317, wLoc06_297)
	ptrLoc0E_308 = SEQ(wLoc0C_375, wLoc0E_309 + 0x0001)
	ptrLoc0E_308 = SEQ(wLoc0C_375, wLoc0E_309 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6C7:
	Mem141[ptrLoc06_314:byte] = 0x0D
	ptrLoc06_316 = SEQ(wLoc04_317, wLoc06_297 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6D1:
	Mem152[ptrLoc06_316:byte] = al_134
	word16 wLoc06_321 = SLICE(ptrLoc06_316, word16, 0)
	word16 dx_158 = wLoc06_321 + 0x0001 - (fp - 0x0090)
	word16 bx_161 = 0x0000 - (dx_158 <u 0x0000)
	word16 wLoc04_379 = SLICE(ptrLoc06_316, word16, 16)
	wLoc06_297 = wLoc06_321 + 0x0001
	bx = bx_161
	branch bx_161 < 0x0000 l0800_C731
	ptrLoc06_312 = SEQ(wLoc04_379, wLoc06_321 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6EF:
	branch bx_161 != 0x0000 l0800_C6F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6F1:
	branch dx_158 <u 0x0080 l0800_C731
	ptrLoc06_312 = SEQ(wLoc04_379, wLoc06_321 + 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C6F7:
	si_175 = wLoc06_321 + 0x0001 - (fp - 0x0090)
	word16 ax_194 = fn0800_C779(ds, wArg02, SEQ(ss, fp - 0x0090), si_175, out cx_196, out dx_472, out bx)
	dx = ax_194
	branch ax_194 == si_175 l0800_C727
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C715:
	branch ax_194 != 0xFFFF l0800_C71F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C71F:
	ax_126 = wArg08 - v20_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C76A:
	ax_123 = ax_126 + dx - si_175
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C71A:
	ax_123 = 0xFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C76E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C683:
	ax_123 = fn0800_C779(ds, wArg02, SEQ(wArg06, wArg04), wArg08, out cx_470, out dx, out bx)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C657:
	ax_123 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C644:
	ax_123 = fn0800_8D2B(ds, 0x0006)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C773:
	dxOut = dx
	bxOut = bx
	return ax_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C632_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0800_C779(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut: ax bx cx dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp ds sp
fn0800_C779_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C779:
	word16 ax_37
	word16 wLoc04_62
	word16 bx_10 = wArg02 << 0x0001
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0001) == 0x0000 l0800_C78F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C78F:
	bx_10 = wArg02
	cx = wArg08
	dx = (word16) ptrArg04 (alias)
	word16 ax_23
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_23) l0800_C7AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7AF:
	wLoc04_62 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7A0:
	Mem34[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem30[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x1000
	bx_10 = wArg02 << 0x0001
	ax_37 = ax_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C789:
	wLoc04_62 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7B0:
	ax_37 = fn0800_8D2B(ds, wLoc04_62)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800_C7B3:
	cxOut = cx
	dxOut = dx
	bxOut = bx_10
	return ax_37
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0800_C779_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_0ADB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: sp
fn1483_0ADB_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ADB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0ADB_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_0ADC(word16 ax, byte ch, byte cl, byte dh, byte dl, byte bl, byte bh, word16 bp, word16 si, word16 di, selector es, selector ds, byte FPUF, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bl:[0..15] bp:[0..15] bx:[8..15] ch:[0..7] cs:[0..15] cx:[0..7] dh:[0..7] di:[0..15] ds:[0..15] dx:[0..7] es:[0..15] FPUF:[0..7] si:[0..15] ss:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +000A:[0..15]
// LiveOut:
// Trashed: SCZDOP ax bp bx cx di ds dx es si Top
// Preserved: sp
fn1483_0ADC_entry:
	word16 cx_22 = DPB(cx, ch, 8)
	word16 bx_12 = DPB(bx, bl, 0)
	word16 dx_19 = DPB(dx, dh, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ADC:
	selector es_32
	int8 Top_35
	ST45[Top_35:real64] = Mem0[es_32:fn1483_0D3F(ax, ch, cx_22, dh, dx_19, bl, bx_12, bp, si, di, es, ds, FPUF, wLoc02, wArg00, wArg02, wArg04, wArg0A, out es_32, out Top_35) + 0xE086:real32] - ST[Top_35:real64]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0ADC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn1483_0C11(byte al, word32 ecx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bp:[0..15] cs:[0..15] cx:[0..31] di:[0..15] ds:[0..15] ebx:[0..15] ecx:[16..31] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut: Top
// Trashed: SCZDO bp di ds dx eax ebx ecx es si sp ss Top
// Preserved:
l1483_0C11:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C11_entry:
	word16 bx_43 = (word16) ebx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C11:
	branch al != Mem11[ss:si:byte] l1483_0C4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C4D:
	word32 eax_28 = DPB(eax, al + 0x01, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C53_thunk_fn1483_0C55:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg0 = <invalid>
	return fn1483_0C55((word16) eax_28, ds, stackArg0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C1B:
	word32 ecx_60 = DPB(ecx, cx - 0x0001, 0)
	branch al - 0x8C - (al <u Mem11[ss:si:byte]) != 0x00 && cx != 0x0001 l1483_0C6C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C6C:
	__daa(0x55, &0x55)
	word16 dx_68 = <invalid>
	word16 bx_65
	word16 di_66
	selector ds_67
	selector es_70
	word16 si_71
	ui32 dh_ax_152 = SEQ(SLICE(dx_68, byte, 8), fn1483_1BB8(0x55, 0x1955, ecx_60, 0x8000, bx_43, bp, si, di, es, ds, out cx_192, out dl_193, out bx_65, out si_71, out di_66, out es_70, out ds_67)) + SEQ(Mem44[ds_67:si_71 + 0x147C:byte], Mem44[ds_67:bx_65 + 0x3303:word16])
	selector ss_73 = <invalid>
	word16 sp_72 = <invalid>
	word16 di_79 = di_66 + Mem44[ds_67:bx_65:word16]
	word16 ax_80 = (word16) dh_ax_152
	word16 sp_96 = Mem44[ss_73:sp_72:word16]
	word16 v23_99 = Mem44[ds_67:ax_80 + 0x020E + di_79:word16] + di_79
	Mem100[ds_67:ax_80 + 0x020E + di_79:word16] = v23_99
	word32 ecx_69 = <invalid>
	word16 cx_102 = (word16) ecx_69
	byte al_105 = (byte) (bx_65 - 0x0903 - (SLICE(dh_ax_152, byte, 16) <u 0x00))
	byte ch_123 = SLICE(cx_102 - 0x0001, byte, 8)
	word32 ecx_135 = DPB(ecx_69, cx_102 - 0x0001, 0)
	branch v23_99 != 0x0000 && cx_102 != 0x0001 l1483_0C85_thunk_fn1483_0CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C85_thunk_fn1483_0CA0:
	int8 Top_112
	fn1483_0CA0(al_105, Mem100[ss_73:sp_96 + 2:word16], Mem100[ss_73:sp_96 + 4:word16], Mem100[ss_73:sp_96 + 6:word16], out Top_112)
	return Top_112
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C87:
	word16 ax_120 = Mem100[ds_67:ax_80:word16]
	Mem122[ss_73:sp_96:word16] = si_71
	Mem127[es_70:di_79:byte] = Mem122[ds_67:si_71:byte]
	word32 ecx_136 = DPB(ecx_135, ch_123 + (byte) ax_120, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C8F_thunk_fn1483_0C91:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word16 stackArg2 = <invalid>
	word16 stackArg4 = <invalid>
	word16 stackArg6 = <invalid>
	int8 Top_143
	fn1483_0C91(ax_120 * 0x0002, (byte) ecx_136, (word16) ecx_136, ax_80, si_71 + 0x0001, ds_67, stackArg2, stackArg4, stackArg6, out es_198, out Top_143)
	return Top_143
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C11_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C24:
	Mem145[es:di:word16] = 0x1955
// DataOut:
// DataOut (flags):
// SymbolicIn:



int8 fn1483_0C55(word16 ax, selector ds, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] ds:[0..15] Stack +0000:[0..15]
// LiveOut: Top
// Trashed: SCZO ax di dx si sp Top
// Preserved: ax
l1483_0C55:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C55_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C55:
	branch Z l1483_0C55_thunk_fn1483_0C11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C55_thunk_fn1483_0C11:
	return fn1483_0C11((byte) ax, ecx, bx, bp, si, di, es, ds)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C57:
	return 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C55_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0C91(byte al, byte ch, byte cl, word16 bx, word16 si, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] bx:[0..15] ch:[0..7] cx:[0..7] ds:[0..15] si:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es sp Top
// Preserved:
l1483_0C91:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C91_entry:
	byte al_12 = (byte) ax
	word16 cx_23 = DPB(cx, ch, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C91:
	byte al_14 = al_12 + ch
	word16 ax_19 = DPB(ax, al_14, 0)
	branch !OVERFLOW(al_14) l1483_0C96_thunk_fn1483_0C55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C96_thunk_fn1483_0C55:
	int8 Top_31 = fn1483_0C55(ax_19, ds, wArg02)
	esOut = <invalid>
	TopOut = Top_31
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C98:
	branch Mem0[ds:bx + si:word16] *s 0x0018 == 0x0000 && cx_23 != 0x0001 l1483_0CA9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9B_thunk_fn1483_0CA0:
	int8 Top_43
	word16 di_41 = fn1483_0CA0(al_14, wArg02, wArg04, wArg06, out Top_43)
	esOut = <invalid>
	TopOut = Top_43
	return di_41
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9D:
	Mem49[ds:bx + 0x2203 + si:word16] = Mem0[ds:bx + 0x2203 + si:word16] + (cx_23 - 0x0001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0C9D_thunk_fn1483_0CA0:
	int8 Top_57
	word16 di_55 = fn1483_0CA0(al_14, wArg02, wArg04, wArg06, out Top_57)
	esOut = <invalid>
	TopOut = Top_57
	return di_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0C91_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CA0(byte al, word16 wArg00, word16 wArg02, word16 wArg04, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: di Top
// Trashed: SCZO ax bp bx cx di dx Top
// Preserved: sp
l1483_0CA0:
	Mem5[ss:sp - 2:word16] = es
	Mem11[ds:bx + di:word16] = Mem5[ds:bx + di:word16] + si
	call fn1483_FD4E (retsize: 2;)
		uses: ax:DPB(ax, ah + Mem11[ds:bx + si:byte], 8),bp:bp,bx:bx,cx:cx,di:di,ds:ds,dx:dx,es:es,si:si,sp:sp - 2,ss:ss,Top:Top
		defs: ax:ax_18,bx:bx_19,sp:sp_15,Top:Top_26
	ah_36 = SLICE(ax_18, byte, 8) (alias)
	bl_35 = (byte) bx_19 (alias)
	ax_38 = DPB(ax_18, ah_36, 8) (alias)
	ax_97 = DPB(ax_96, ah, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CA9:
	dx_30 = Mem11[ds:si + 0x173E:word16] *s 0x0C62
	Mem33[ds:bx_19:byte] = Mem11[ds:bx_19:byte] + (byte) dx_30
	bl_37 = bl_35 + ah_36
	bx_40 = DPB(bx_19, bl_37, 0) (alias)
	Mem42[ds:bx_40 - 0x0056 + di:byte] = __rol(Mem33[ds:bx_40 - 0x0056 + di:byte], 0xE2)
	v46_43 = (Mem42[ss:bp + 0x007B:word16] & 0x0002) != 0x0000
	Mem44[ss:bp + 0x007B:word16] = __ror(Mem42[ss:bp + 0x007B:word16], 0x01)
	Mem47[ds:bx_40:byte] = Mem44[ds:bx_40:byte] + bl_37 + v46_43
	bx_54 = DPB(bx_19, bl_37 & Mem47[ds:bx_40:byte], 0) (alias)
	Mem51[es:di:byte] = (byte) (ax_38 - 0x32AC)
	Mem56[ds:bx_54:word16] = Mem51[ds:bx_54:word16] + bx_54
	v49_60 = Mem56[ds:di + 0x0015:word16]
	Mem61[ds:di + 0x0015:word16] = ax_38 - 0xBDCB
	call fn1483_4FE0 (retsize: 2;)
		uses: ax:v49_60,bp:bp - 0x0001,bx:bx_54,cx:di + 0x0001 - si,di:di + 0x0001,ds:ds,dx:dx_30,es:es,si:si,sp:sp_15,ss:ss,Top:Top_26
		defs: bx:bx_65,dx:dx_66,Top:Top_68
	Mem71[ds:0xF7E3:word16] = Mem61[ds:0xF7E3:word16] - dx_66
	Mem74[ds:bx_65 + (di + 0x0001):word16] = Mem71[ds:bx_65 + (di + 0x0001):word16] + (bp - 0x0001)
	__inw(0x8B)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CE5:
	TopOut = Top_68
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CA0_entry:
	ax_96 = DPB(ax, al, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CA0:
	call fn1483_FD4E (retsize: 2;)
		uses: ax:DPB(DPB(ax_97, al & Mem0[ds:0x3101:byte], 0), ah + Mem0[ds:bx + si:byte], 8),bp:bp,bx:bx,cx:cx,di:di,ds:ds,dx:dx,es:es,si:si,sp:fp,ss:ss,Stack +0002:wArg00,Stack +0004:wArg02,Stack +0006:wArg04,Top:0
		defs: ax:ax_100,bx:bx_101,sp:sp_95,Top:Top_104
	ah_115 = SLICE(ax_100, byte, 8) (alias)
	bl_114 = (byte) bx_101 (alias)
	ax_117 = DPB(ax_100, ah_115, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CA9_in_fn1483_0CA0:
	dx_108 = Mem0[ds:si + 0x173E:word16] *s 0x0C62
	Mem112[ds:bx_101:byte] = v22
	bl_116 = bl_114 + ah_115
	bx_119 = DPB(bx_101, bl_116, 0) (alias)
	Mem121[ds:bx_119 - 0x0056 + di:byte] = __rol(Mem112[ds:bx_119 - 0x0056 + di:byte], 0xE2)
	Mem123[ss:bp + 0x007B:word16] = __ror(Mem121[ss:bp + 0x007B:word16], 0x01)
	Mem128[ds:bx_119:byte] = v28
	bx_135 = DPB(bx_101, bl_116 & Mem128[ds:bx_119:byte], 0) (alias)
	Mem132[es:di:byte] = (byte) (ax_117 - 0x32AC)
	Mem138[ds:bx_135:word16] = v29
	Mem143[ds:di + 0x0015:word16] = ax_117 - 0xBDCB
	call fn1483_4FE0 (retsize: 2;)
		uses: ax:v30,bp:bp - 0x0001,bx:bx_135,cx:di + 0x0001 - si,di:di + 0x0001,ds:ds,dx:dx_108,es:es,si:si,sp:sp_95,ss:ss,Stack +0002:wArg00,Stack +0004:wArg02,Stack +0006:wArg04,Top:Top_104
		defs: bx:bx_148,Top:Top_151
	Mem155[ds:0xF7E3:word16] = v31
	Mem159[ds:bx_148 + (di + 0x0001):word16] = v32
	__inw(0x8B)
	TopOut = Top_151
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CA0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CED(word16 ax, word16 bx, word16 si, word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg10, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] di:[0..15] ds:[0..15] es:[0..15] si:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +0010:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es si sp Top
// Preserved:
l1483_0CED:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CED_entry:
	byte bl_17 = (byte) bx
	byte al_30 = (byte) ax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CED:
	word16 si_8 = si + Mem0[ds:di:word16]
	word16 v8_10 = Mem0[ds:bx + 0xF7E2 + si_8:word16] + fp
	Mem11[ds:bx + 0xF7E2 + si_8:word16] = v8_10
	Mem15[es:di:word16] = ax
	bool C_26 = SLICE(cond(v8_10), bool, 1)
	word16 bx_24 = DPB(bx, bl_17 + 0x01, 0)
	branch bl_17 != 0x01 l1483_0CE5_in_fn1483_0CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CE5_in_fn1483_0CED:
	esOut = es
	TopOut = 0
	return di + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CF8:
	Mem27[ds:bx_24 + si_8:byte] = __rcr(Mem15[ds:bx_24 + si_8:byte], 0xAC, C_26)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CF9_thunk_fn1483_0CFC:
	selector es_37
	int8 Top_40
	word16 di_35 = fn1483_0CFC(al_30, bl_17 + 0x01, wArg02, wArg04, wArg06, wArg08, wArg0A, wArg10, out es_37, out Top_40)
	esOut = es_37
	TopOut = Top_40
	return di_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CED_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CFA(byte al, byte ch, byte bl, word16 si, selector ds, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0E, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bl:[0..7] ch:[0..7] ds:[0..15] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000E:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es si sp Top
// Preserved:
l1483_0CFA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFA_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFA:
	Mem10[ds:si + 0xD832:byte] = Mem0[ds:si + 0xD832:byte] - ch - C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFA_thunk_fn1483_0CFC:
	selector es_21
	int8 Top_24
	word16 di_19 = fn1483_0CFC(al, bl, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0E, out es_21, out Top_24)
	esOut = es_21
	TopOut = Top_24
	return di_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFA_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0CFC(byte al, byte bl, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0E, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bl:[0..7] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000E:[0..15]
// LiveOut: di es Top
// Trashed: SCZO ax bp bx cx di dx es si sp Top
// Preserved:
l1483_0CFC:
	ax_12 = DPB(ax, Mem0[ds:bx + di:byte], 0) (alias)
	Mem9[ss:bp + si:word16] = 0xD1FF
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
	ch_13 = SLICE(cx, byte, 8) (alias)
	ch_58 = SLICE(cx, byte, 8) (alias)
	cx_14 = DPB(cx, ch_13, 8) (alias)
	cx_59 = DPB(cx, ch_58, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D04_thunk_fn1483_0C91:
	di_24 = fn1483_0C91(ax_12, ch_13, cx_14, bx, si, ds, Mem9[ss:sp + 2:word16], Mem9[ss:sp + 4:word16], Mem9[ss:sp + 6:word16], out es_20, out Top_22)
	esOut = es_20
	TopOut = Top_22
	return di_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D02_thunk_fn1483_0D06:
	di_35 = fn1483_0D06(ax_12, dx, bx, ds, fs, Mem9[ss:sp:word16], Mem9[ss:sp + 4:word16], Mem9[ss:sp + 8:word16], Mem9[ss:sp + 14:word16])
	esOut = es
	TopOut = Top
	return di_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFC_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0CFC:
	bx_52 = DPB(bx, bl ^ al, 0) (alias)
	ax_57 = DPB(ax, Mem0[ds:bx_52 + di:byte], 0) (alias)
	Mem55[ss:bp + si:word16] = 0xD1FF
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D04_thunk_fn1483_0C91:
	di_68 = fn1483_0C91(ax_57, ch_58, cx_59, bx_52, si, ds, wArg02, wArg04, wArg06, out es_64, out Top_66)
	esOut = es_64
	TopOut = Top_66
	return di_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D04_thunk_fn1483_0D06:
	di_77 = fn1483_0D06(ax_57, dx, bx_52, ds, fs, wArg00, wArg04, wArg08, wArg0E)
	esOut = es
	TopOut = 0
	return di_77
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0CFC_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0D06(word16 ax, word16 dx, word16 bx, selector ds, selector fs, word16 wArg00, word16 wArg04, word16 wArg08, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bx:[0..15] ds:[0..15] dx:[0..15] fs:[0..15] Stack +0000:[0..15] Stack +0004:[0..15] Stack +0008:[0..15] Stack +000E:[0..15]
// LiveOut: di
// Trashed: SCZO ax bp bx cx di dx si sp Top
// Preserved:
fn1483_0D06_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D06:
	Mem10[ds:bx + 0xE209:word16] = Mem0[ds:bx + 0xE209:word16] - dx - C
	branch bx == dx l1483_0D2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D11:
	msdos_display_string(SEQ(ds, 0x0D21))
	Mem42[fs:wArg04 + 0x0052 + wArg00:byte] = Mem10[fs:wArg04 + 0x0052 + wArg00:byte] & (byte) wArg0E
	di = wArg00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D2B:
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0D06_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_0D3F(word16 ax, byte ch, byte cl, byte dh, byte dl, byte bl, byte bh, word16 bp, word16 si, word16 di, selector es, selector ds, byte FPUF, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg0C, ptr16 & esOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bl:[0..7] bp:[0..15] bx:[8..15] ch:[0..7] cs:[0..15] cx:[0..7] dh:[0..7] di:[0..15] ds:[0..15] dx:[0..7] es:[0..15] FPUF:[0..7] si:[0..15] ss:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +000C:[0..15]
// LiveOut: di es Top
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn1483_0D3F_entry:
	byte al_13 = (byte) ax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D3F:
	branch P l1483_0D40_thunk_fn1483_0CFA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D40_thunk_fn1483_0CFA:
	selector es_20
	int8 Top_23
	word16 di_18 = fn1483_0CFA(al_13, ch, bl, si, ds, ax, wArg00, wArg02, wArg04, wArg06, wArg0C, out es_20, out Top_23)
	esOut = es_20
	TopOut = Top_23
	return di_18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D42:
	ui16 ax_ch_503 = SEQ(DPB(ax, al_13 + ch, 0), ch) - SEQ(0xFC68, Mem7[ds:(bx_33 + 0x0002) + si:byte])
	byte ch_34 = (byte) ax_ch_503
	word16 ax_38 = SLICE(ax_ch_503, word16, 8)
	word16 bx_33 = DPB(bx, 0xB4, 0)
	word16 cx_104 = DPB(cx, ch_34, 8)
	cx_104 = DPB(cx, ch_34, 8) (alias)
	word16 cx_106 = DPB(cx_104, ch_34, 8)
	byte ah_62 = SLICE(ax_38, byte, 8)
	word16 dx_90 = DPB(dx, dh ^ 0x17, 8)
	branch (dh ^ 0x17) < 0x00 l1483_0D50_thunk_fn1483_0CED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D50_thunk_fn1483_0CED:
	int8 Top_51
	selector es_56
	word16 di_49 = fn1483_0CED(ax_38, bx_33, si, di, es, ds, ax, wArg00, wArg02, wArg04, wArg06, wArg0C, out es_56, out Top_51)
	esOut = es_56
	TopOut = Top_51
	return di_49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D52:
	word16 ax_96 = DPB(ax_38, ah_62 + Mem40[ds:di:byte], 8)
	word16 v19_68 = Mem67[ds:bx_33 + 0x0043 + si:word16]
	Mem70[ds:bx_33 + 0x0043 + si:word16] = bp
	Mem73[ds:di:byte] = Mem70[ds:di:byte] << 0x68
	word16 v22_75 = -Mem73[ss:v19_68 - 0x0006:word16]
	Mem76[ss:v19_68 - 0x0006:word16] = v22_75
	word16 bp_186 = v19_68
	branch !OVERFLOW(v22_75) l1483_0D69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D68_1:
	__syscall(0x04)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D69:
	bool S_403
	Mem85[ds:si + 0x5C87:byte] = ch_34
	word16 sp_94
	word16 ax_97
	word16 cx_107
	word16 bx_109
	word16 dx_110
	int8 Top_117
	byte SCZDOP_120
	call fn1483_8A82 (retsize: 2;)
		uses: ax:ax_96,bp:v19_68,bx:bx_33,cs:cs,cx:cx_106,di:di,ds:ds,dx:dx_90,es:es,FPUF:FPUF,si:si,sp:fp + 0x0008,ss:ss,Stack +0000:wArg06,Stack +0002:es,Stack +0006:wArg0C,Stack +FFFFFFF2:0x0C58,Stack +FFFFFFF4:0x0F5F,Stack +FFFFFFF6:si,Stack +FFFFFFF8:ax,Stack +FFFFFFFA:wArg00,Stack +FFFFFFFC:wArg02,Stack +FFFFFFFE:wArg04,Top:0
		defs: ax:ax_97,bx:bx_109,cx:cx_107,dx:dx_110,SCZDOP:SCZDOP_120,sp:sp_94,Top:Top_117
	Mem123[ss:sp_94 - 2:word16] = ax_97
	Mem125[ss:sp_94 - 4:word16] = cx_107
	Mem127[ss:sp_94 - 6:word16] = dx_110
	Mem129[ss:sp_94 - 8:word16] = bx_109
	Mem131[ss:sp_94 - 10:word16] = sp_94
	Mem133[ss:sp_94 - 12:word16] = v19_68
	Mem135[ss:sp_94 - 14:word16] = si
	Mem137[ss:sp_94 - 16:word16] = di
	word16 bx_139 = bx_109 + Mem137[ds:(bx_109 - 0x0079) + di:word16] + SCZDOP_120
	byte dh_141 = SLICE(dx_110, byte, 8)
	Mem144[ss:v19_68 + 0xF512 + di:byte] = Mem137[ss:v19_68 + 0xF512 + di:byte] + dh_141 + (bx_139 <u 0x0000)
	Mem147[ds:bx_139 + 0x007D:byte] = Mem144[ds:bx_139 + 0x007D:byte] & (byte) ax_97
	byte ch_153 = SLICE(cx_107, byte, 8)
	word16 ax_160 = __aad(si)
	word16 ax_156 = DPB(ax_97 - 0x8747, (byte) (ax_97 - 0x8747) + ch_153 + (ax_97 <u 0x8747), 0)
	word16 v31_161 = Mem147[ds:ax_156 + 0x995D:word16]
	Mem162[ds:ax_156 + 0x995D:word16] = ax_156
	Mem166[ss:sp_94 - 18:word16] = sp_94 - 16
	word16 bx_173 = bx_139 + Mem166[ds:bx_139 + v31_161:word16]
	byte al_167 = (byte) ax_160
	byte bh_384 = SLICE(bx_173, byte, 8)
	byte al_174 = al_167 + 0x2A + ch_153
	byte cl_189 = (byte) (cx_107 - 0x0001)
	byte ah_379 = SLICE(ax_160, byte, 8)
	word16 si_163 = v31_161
	word16 dx_194 = DPB(dx_110, dh_141 - SLICE(bx_139, byte, 8) - (al_167 <u 0x2A), 8)
	byte bl_179 = (byte) bx_173
	bx_173 = DPB(bx_173, bh_384, 8) (alias)
	word16 ax_227 = DPB(ax_160, al_174, 0)
	al_167 = al_174 (alias)
	word16 sp_176 = sp_94 - 16
	word16 cx_219 = DPB(DPB(cx_107 - 0x0001, cl_189, 0), cl_189, 0)
	branch sp_94 - 18 && cx_107 != 0x0001 l1483_0D99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D99:
	byte v37_180 = Mem166[ds:bx_173 + v31_161:byte] - bl_179
	Mem181[ds:bx_173 + v31_161:byte] = v37_180
	byte CZ_184 = SLICE(cond(v37_180), bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9B:
	branch v37_180 < 0x00 l1483_0DF7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF7:
	byte dl_237 = (byte) dx_194
	dx_194 = DPB(dx_194, dl_237, 0) (alias)
	word16 dx_336 = DPB(dx_194, dl_237, 0)
	word16 cx_220 = DPB(cx_219, cl_189, 0)
	word16 cx_221 = DPB(cx_219, cl_189, 0)
	branch CZ_184 l1483_0E14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E14:
	Mem191[ss:bp_186 + di:byte] = Mem188[ss:bp_186 + di:byte] ^ cl_189
	S_403 = SLICE(cond(Mem191[ss:bp_186 + di:byte]), bool, 0) (alias)
	__inw(dx_194)
	branch Mem191[ss:bp_186 + di:byte] != 0x00 l1483_0DA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E19:
	word16 cx_489
	ST199[Top_117:real64] = __rndint(ST198[Top_117:real64])
	word16 sp_202 = sp_176 + 2
	es = Mem191[ss:sp_176:selector]
	Mem211[ss:sp_202 - 0x019E:word16] = sp_202 - 0x001C
	si_163 = si_163 + 0x0001
	byte ah_216 = SLICE(sp_202 + 0x8E04, byte, 8) | Mem211[ss:(sp_202 + 0x0BE9) + si_163:byte]
	bx_173 = bx_173 + 0x0001
	ax_227 = DPB(sp_202 + 0x8E04, ah_216, 8) (alias)
	cl_189 = (byte) (cx_221 - 0x0001) (alias)
	byte ch_261 = SLICE(cx_221 - 0x0001, byte, 8)
	ds = bx_173
	bp_186 = sp_202 - 0x001C
	byte bl_224 = (byte) bx_173
	sp_176 = sp_202 - 0x019E
	byte al_260 = (byte) ax_227
	cx_219 = DPB(cx_221 - 0x0001, cl_189, 0) (alias)
	word16 cx_266 = DPB(cx_489, ch_261, 8)
	branch ah_216 == 0x00 && cx_221 != 0x0001 l1483_0DF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF3:
	Mem226[bx_173:bx_173 + si_163:byte] = Mem211[bx_173:bx_173 + si_163:byte] + bl_224
	CZ_184 = SLICE(cond(ax_227 - (sp_202 - 0x001C)), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E35:
	word16 ax_340
	Mem230[bx_173:bx_173 + si_163:word16] = Mem211[bx_173:bx_173 + si_163:word16] + ax_227
	Mem233[ss:sp_202 - 0x0008:byte] = Mem230[bx_173:si_163:byte]
	Mem236[ss:sp_202 - 0x0007:word16] = 0x0000
	Mem239[ss:sp_202 + 0x0DFA:byte] = v56_238
	Mem242[ss:sp_202 - 0x01A0:word16] = es
	Mem243[ss:sp_202 - 0x0018:word16] = ss
	ui16 v57_v56_504 = SEQ(Mem243[ss:sp_202 + 0x011B:byte], Mem236[ss:sp_202 + 0x0DFA:byte]) + SEQ(0xE8, dl_237)
	Mem246[ss:sp_202 + 0x011B:byte] = SLICE(v57_v56_504, byte, 8)
	Mem252[ss:sp_202 - 0x01A2:word16] = cs
	byte cl_254 = cl_189 - Mem252[bx_173:si_163 + 0x005F:byte]
	Mem256[bx_173:si_163 + 0x6347:byte] = Mem252[bx_173:si_163 + 0x6347:byte] ^ cl_254
	Mem259[ss:sp_202 - 0x01A4:word16] = si_163 + 0x0001
	byte al_262 = al_260 | ch_261
	word16 si_232 = si_163 + 0x0001
	word16 di_234 = 0x0000
	byte v56_238 = (byte) v57_v56_504
	cx_489 = DPB(cx_221 - 0x0001, cl_254, 0) (alias)
	word16 ax_272 = DPB(ax_227, al_262, 0)
	word16 ax_341 = DPB(ax_340, al_262, 0)
	branch al_262 == 0x00 l1483_0ED9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ED9:
	branch cx_266 == 0x0000 l1483_0EEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EEE:
	word16 si_271 = Mem270[bx_173:0x9004:word16]
	Mem276[bx_173:0x0300:word16] = Mem270[bx_173:0x0300:word16] + DPB(ax_272, al_262 | 0x20, 0)
	__cli()
	Mem279[bx_173:0x8602:word16] = Mem276[bx_173:0x8602:word16] + dx_336
	int8 Top_296
	call fn3024_8E10 (retsize: 4;)
		uses: ax:Mem279[bx_203:si_271:word16],bp:sp_202 - 0x001C,bx:bx_209,cs:cs,cx:cx_266,di:di_291,ds:bx_203,dx:dx_336,es:es_201,FPUF:FPUF,si:si_271 + 0x0002,sp:sp_202 - 0x01A4,ss:ss,Stack +0000:si,Stack +0002:ax,Stack +0004:wArg00,Stack +0006:wArg02,Stack +0008:wArg04,Stack +000A:wArg06,Stack +000C:es,Stack +0010:wArg0C,Stack +FFFFFFFC:0x0C58,Stack +FFFFFFFE:0x0F5F,Top:Top_117
		defs: Top:Top_296
	esOut = es
	TopOut = Top_296
	return di_234
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EDB:
	word16 si_301 = si_232 + 0x0002
	word16 cx_322 = DPB(cx_266, 0x2A, 8)
	word16 ax_314 = DPB(__aad(Mem270[bx_173:si_232:word16] + dx_336), 0x00, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EE4:
	ax_314 = DPB(ax_679, Mem310[bx_173:si_301:byte], 0) (alias)
	di_234 = di_234 + ax_314
	Mem320[es:di_234:word16] = Mem310[es:di_234:word16] + dx_336
	si_301 = si_301 + 0x0001
	cx_322 = cx_322 - 0x0001
	ax_679 = ax_314
	branch cx_322 != 0x0000 l1483_0EE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0EEC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0ED6:
	al_262 = Mem320[bx_173:si_301:byte]
	ax_272 = DPB(ax_679, al_262, 0) (alias)
	si_232 = si_301 + 0x0001
	cx_266 = DPB(cx_322, al_262, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E5E:
	Mem328[ss:sp_202 - 0x01A6:word16] = cs
	ax_340 = DPB(ax_272, FPUF, 8) (alias)
	branch (ch_261 | al_262) != 0x00 l1483_0E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E70:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E64:
	__outw(dx_336, ax_341 + 0xE80C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0E72:
	esOut = es
	TopOut = Top_117
	return 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DF9:
	ptr32 ds_bp_360 = Mem188[ss:bp_186 + di:segptr32]
	word16 sp_361 = sp_176 - 2
	Mem363[ss:sp_361:word16] = es
	int8 Top_373
	call fn1483_E62A (retsize: 2;)
		uses: ax:ax_365,bp:(word16) ds_bp_360,bx:bx_203,cs:cs,cx:cx_220,di:di,ds:SLICE(ds_bp_360, selector, 16),dx:dx_194,es:es_362,FPUF:FPUF,si:si_213,sp:sp_361,ss:ss,Stack +0000:ax,Stack +0002:wArg00,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:es,Stack +000E:wArg0C,Stack +FFFFFFFA:0x0C58,Stack +FFFFFFFC:0x0F5F,Stack +FFFFFFFE:si,Top:Top_117
		defs: Top:Top_373
	esOut = es
	TopOut = Top_373
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D97:
	byte v36_381 = Mem166[ds:bx_173 + 0x0028 + di:byte] - ah_379 - (sp_94 - 18)
	Mem382[ds:bx_173 + 0x0028 + di:byte] = v36_381
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9A:
	Mem387[ds:v31_161 + 0x005A:byte] = Mem382[ds:v31_161 + 0x005A:byte] - bh_384 - (v36_381 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0D9D:
	byte al_391 = al_167 | 0x3F
	byte v39_396 = Mem395[ds:di + 0x002D:byte] - al_391
	Mem397[ds:di + 0x002D:byte] = v39_396
	Mem401[es:di:byte] = al_391
	S_403 = SLICE(cond(v39_396), bool, 0) (alias)
	di = di + 0x0001
	branch v39_396 >= 0x00 l1483_0DB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DA7:
	Mem404[es:di + 0x0001:byte] = al_391
	di = di + 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DA8:
	branch S_403 l1483_0DBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DBE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DAA:
	Mem422[ss:bp_186 + si_163:word16] = -Mem412[ss:bp_186 + si_163:word16]
	__cli()
	di = di - 0x0001
	Mem430[ds:bx_173 + 0x0045 + di:word16] = Mem422[ss:sp_176:word16]
	word16 bp_434 = bp_186 + 0x0001
	Mem436[ds:bx_173 + 0xC079 + si_163:word16] = Mem430[ds:bx_173 + 0xC079 + si_163:word16] + bp_434
	sp_176 = sp_176 + 4
	bp_186 = bp_434 - 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DB9:
	Mem449[ds:bx_173 + di:byte] = Mem442[ds:bx_173 + di:byte] >>u 0x01
	Mem455[ds:bx_173 + 0x0002 + di:byte] = Mem449[ds:bx_173 + 0x0002 + di:byte] + cl_189
	sp_176 = sp_176 + 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_0DBF:
	Mem464[ss:sp_176 - 2:word16] = cs
	Mem470[ss:0x0B01:word16] = es
	Mem474[ds:0x8C00:byte] = Mem470[ds:0x8C00:byte] + cl_189
	Mem479[ss:bp_186 + 0x8CC3:word16] = __ror(Mem474[ss:bp_186 + 0x8CC3:word16], cl_189)
	esOut = es
	TopOut = Top_117
	return di
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_0D3F_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_1104(word16 ax, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] di:[0..15] ds:[0..15] dx:[0..7] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1104_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1104_entry:
	word16 sp_2 = fp
	int8 Top_3 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1104:
	word16 dx_31 = DPB(dx, 0x26, 8)
	byte al_12 = (byte) __aam((byte) (ax - 0x5D97)) - 0x75 - (ax <u 0x5D97)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_110D:
	Mem22[ss:bp + 0x450F:word16] = Mem18[ss:bp + 0x450F:word16] + si + (al_12 <u 0x00)
	word16 sp_27 = sp_2 - 2
	Mem29[ss:sp_27:word16] = es
	dx_31 = DPB(dx_31, 0x34, 8) (alias)
	Mem33[ss:bp + 0x005E + si:word16] = dx_31
	Mem38[ds:bx + 0x675E + di:word16] = Mem33[ds:bx + 0x675E + di:word16] - 0x007D
	Mem46[ss:sp_27 - 2:word16] = dx_31
	ST51[Top_3 + 1:real64] = ST50[Top_3 + 1:real64] * lg2(ST50[Top_3:real64] + 1.0)
	ptr32 es_bx_64 = Mem46[ds:0x9F59:segptr32]
	Top_3 = Top_3 + 1
	ST66[Top_3:real64] = scalbn(ST51[Top_3:real64], ST51[Top_3 + 1:real64])
	Mem69[ss:bp + 0x1EC4:word16] = Mem46[ss:bp + 0x1EC4:word16] + bp
	sp_2 = sp_27
	si = 0x9F59
	es = SLICE(es_bx_64, selector, 16) (alias)
	bx = (word16) es_bx_64 (alias)
	di = 0xBFC4
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn1483_1B91(word16 cx, byte bh, byte bl, word16 di, selector ds, selector psegArg00, ptr16 & ecxOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bh:[0..7] bx:[0..7] cx:[0..15] di:[0..15] ds:[0..15] Stack +0000:[0..15]
// LiveOut: SCZO ecx Top
// Trashed: SCZO ax bx di ds dx ecx sp Top
// Preserved:
fn1483_1B91_entry:
	word16 bx_17 = DPB(bx, bh, 8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B91:
	Mem21[ds:bx_17 + 0x10F8 + di:word16] = ~Mem0[ds:bx_17 + 0x10F8 + di:word16]
	word16 v18_35 = Mem30[psegArg00:bx_17 + 0x3201 + di:word16]
	Mem36[psegArg00:bx_17 + 0x3201 + di:word16] = di
	word16 ax_8 = DPB(ax, al - 0x28, 0)
	__inb(0x41)
	__sti()
	Mem47[psegArg00:0xFF1F:word16] = Mem36[psegArg00:0xFF1F:word16] + 0x0001
	ui16 ax_al_62 = SEQ(cx, (byte) (ax_8 ^ 0x2EF9)) - SEQ(0xA587, bh)
	word32 ecx_43 = DPB(ecx, DPB(ax_8 ^ 0x2EF9, (byte) ax_al_62, 0), 0)
	word16 ax_54 = DPB(SLICE(ax_al_62, word16, 8), __inb(fp) - 0xF8 & 0x0A, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB7_thunk_fn1483_1BB9:
	word32 ecx_57
	int8 Top_59
	fn1483_1BB9(ax_54, ecx_43, fp, bx_17, bp, si, v18_35, es, psegArg00, out ecx_57, out dl_74, out bx_75, out si_76, out di_77, out es_78, out ds_79, out Top_59)
	ecxOut = ecx_57
	TopOut = Top_59
	return <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1B91_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_1BB8(byte al, byte ah, word32 ecx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dlOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] ax:[8..15] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..31] di:[0..15] ds:[0..15] dx:[0..15] ecx:[16..31] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bx di ds dx ecx es si sp ss
// Trashed: SCZO ax bp bx di ds dx ecx es si sp ss Top
// Preserved:
fn1483_1BB8_entry:
	word32 ecx_22 = DPB(ecx, cx, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB8:
	word16 ax_16 = DPB(ax, al | Mem0[ds:si:byte], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB8_thunk_fn1483_1BB9:
	word16 bx_28
	word16 di_29
	selector ds_30
	word16 si_33
	selector es_36
	word16 ax_26 = fn1483_1BB9(ax_16, ecx_22, dx, bx, bp, si, di, es, ds, out ecx_32, out dl_49, out bx_28, out si_33, out di_29, out es_36, out ds_30, out Top_50)
	cxOut = <invalid>
	dlOut = <invalid>
	bxOut = bx_28
	siOut = si_33
	diOut = di_29
	esOut = es_36
	dsOut = ds_30
	return ax_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1BB8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn1483_1BB9(word16 ax, word32 ecx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & ecxOut, ptr16 & dlOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut, ptr16 & TopOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..31] di:[0..15] ds:[0..15] dx:[0..15] ecx:[16..31] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bx di ds dx ecx es si sp ss Top
// Trashed: SCZO ax bp bx di ds dx ecx es si sp ss Top
// Preserved:
fn1483_1BB9_entry:
	word32 ecx_238 = DPB(ecx, cx, 0)
	word16 sp_108 = fp
	int8 Top_259 = 0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BB9:
	byte bh_32 = SLICE(bx, byte, 8)
	bx = DPB(bx, bh_32, 8) (alias)
	byte bh_144 = SLICE(bx, byte, 8)
	byte al_125 = (byte) ax
	byte al_184 = (byte) ax
	word32 ecx_234 = DPB(ecx_238, cx, 0)
	byte cl_199 = (byte) cx
	branch C l1483_1BBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BBF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BBC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B38:
	word16 dx_9 = dx - 0x0001
	byte dh_191 = SLICE(dx_9, byte, 8)
	branch dx_9 != 0x0000 l1483_1B7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B3B:
	word16 cx_13 = cx - 0x0001
	word32 ecx_235 = DPB(ecx_238, cx_13, 0)
	branch dx_9 == 0x0000 && cx_13 != 0x0000 l1483_1B6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B3D:
	selector es_16 = Mem6[ss:sp_108:selector]
	word16 sp_17 = sp_108 + 2
	branch si == bx l1483_1B51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B44:
	byte al_34 = (byte) sp_17 + bh_32 + (si <u bx)
	word16 ax_26 = si - 0x0001
	byte ah_56 = SLICE(sp_17, byte, 8)
	word16 ax_50 = DPB(sp_17, al_34, 0)
	branch al_34 == 0x00 l1483_1B13
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B13:
	__sti()
	int8 Top_42
	word32 ecx_49
	word16 ax_51
	word16 bx_52
	call Mem6[0x1483:bx:ptr32] (retsize: 4;)
		uses: ax:ax_50,bx:bx_39,dx:0x02E2,ecx:ecx_48,sp:ax_26,Top:Top_41
		defs: ax:ax_51,bx:bx_52,ecx:ecx_49,Top:Top_42
	ecxOut = ecx_49
	dlOut = <invalid>
	bxOut = bx_52
	siOut = ax
	diOut = di
	esOut = es_16
	dsOut = <invalid>
	TopOut = Top_42
	return ax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B4E:
	Mem58[ds:ax:byte] = Mem6[ds:ax:byte] + ah_56
	Mem61[ss:ax_26 - 2:word16] = cs
	sp_17 = ax_26 - 2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B51:
	es = Mem64[ss:sp_17:selector]
	Mem72[es:0x02FB:byte] = Mem64[ds:ax:byte]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	selector stackArg0 = <invalid>
	word32 ecx_80
	byte SCZO_89 = fn1483_1B91(cx_13, (byte) bx, bx, 0x02FC, ds, stackArg0, out ecx_80, out Top_259)
	__cli()
	Mem92[es:0x02FB:word16] = 0x0A0D
	word16 sp_66 = sp_17 + 2
	bx = Mem92[ss:sp_66 + 0x0008:word16]
	word16 cx_105 = Mem92[ss:sp_66 + 0x000C:word16]
	word16 ax_107 = Mem92[ss:sp_66 + 0x000E:word16]
	word16 di_94 = Mem92[ss:sp_66:word16]
	si = Mem92[ss:sp_66 + 0x0002:word16]
	Mem110[es:di_94:byte] = (byte) ax_107
	word16 v37_117 = Mem110[ds:bx + (di_94 + 0x0001):word16] + bx
	Mem118[ds:bx + (di_94 + 0x0001):word16] = v37_117
	Mem123[ds:di_94 + 0x0001:byte] = __rcl(Mem118[ds:di_94 + 0x0001:byte], (byte) cx_105, SLICE(cond(v37_117), bool, 1))
	ax = ax_107 - 0xECBA - SCZO_89
	bh_144 = SLICE(bx, byte, 8) (alias)
	ecx_235 = DPB(ecx_80, cx_105, 0) (alias)
	sp_108 = sp_66 + 0x0010
	di = di_94 + 0x0001
	al_125 = (byte) ax (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B6D:
	byte al_128 = al_125 & 0x5C
	word16 sp_132 = sp_108 - 2
	Mem135[ss:sp_132:word16] = si
	word16 bx_149 = DPB(bx, bh_144, 8)
	word16 bx_150 = DPB(bx, bh_144, 8)
	word16 ax_141 = DPB(ax, al_128, 0)
	branch al_128 != 0x00 l1483_1BE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1BE8:
	word16 bx_272 = DPB(bx, bh_144 | Mem135[ds:bx_150 + 0x0003:byte], 8)
	Mem155[ss:sp_132 - 2:word16] = es
	ecxOut = ecx_235
	dlOut = <invalid>
	bxOut = bx_272
	siOut = 0x7269
	diOut = di
	esOut = es
	dsOut = <invalid>
	TopOut = Top_259
	return ax_141 - 0x85FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1BB9_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B75:
	Mem161[ss:sp_132 - 2:word16] = 0x6365
	word16 sp_162 = Mem161[ds:bx_149 + 0x726A:word16] *s 0x0046
	cx = Mem161[ss:sp_162 + 0x000C:word16]
	di = Mem161[ss:sp_162:word16]
	si = Mem161[ss:sp_162 + 0x0002:word16]
	bx = Mem161[ss:sp_162 + 0x0008:word16]
	dh_191 = Mem161[sp_162 + 0x000B:byte] (alias)
	cl_199 = (byte) cx (alias)
	ecx_234 = DPB(ecx_235, cx, 0) (alias)
	al_184 = (byte) Mem161[ss:sp_162 + 0x000E:word16] (alias)
	sp_108 = sp_162 + 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1B7F:
	word16 bp_182 = Mem181[ds:si + 0x0065:word16] *s 0x3A64
	Mem188[ss:bp_182 + si:byte] = Mem181[ss:bp_182 + si:byte] & al_184
	byte dh_196 = dh_191 ^ Mem188[ds:bx + di:byte]
	word16 ax_198 = __inw(0x0C)
	Mem203[ds:0x2CF2:byte] = Mem188[ds:0x2CF2:byte] ^ cl_199
	Mem206[ds:di:byte] = Mem203[ds:di:byte] - dh_196
	Mem212[ds:di + 0xEA01:word16] = ~Mem206[ds:di + 0xEA01:word16]
	byte al_207 = (byte) ax_198
	word16 sp_222 = sp_108 - 2
	Mem223[ss:sp_222:word16] = sp_108
	ds = Mem223[ss:sp_222 + 2:selector]
	dx = Mem223[ss:sp_222:word16]
	word16 v34_228 = Mem223[ds:di + 0x0B0A:word16]
	Mem229[ds:di + 0x0B0A:word16] = di
	__inb(0x41)
	__sti()
	Mem242[ds:0xFF1F:word16] = Mem229[ds:0xFF1F:word16] + 0x0001
	word16 ax_213 = DPB(ax_198, al_207 - 0xD9, 0)
	bx = 0xD909
	cx = ax_213
	ecx_238 = DPB(ecx_234, ax_213, 0) (alias)
	sp_108 = sp_222 + 4
	di = v34_228
	ax = DPB(DPB(DPB(cx, 0xAF, 8), cl_199, 0) + 0xA587 + (al_207 <u 0xD9), __inb(dx) - 0xF8 & 0x0A, 0) (alias)
	C = false
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn1483_1C50(byte ah, word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[8..15] dx:[0..15]
// LiveOut:
// Trashed: ax dx sp Top
// Preserved:
fn1483_1C50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l1483_1C50:
	word16 ax_7 = DPB(ax, __inb(dx), 0)
	call ax_7 (retsize: 2;)
		uses: ax:ax_7,dx:dx,sp:fp,Top:0
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn1483_1C50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



