void fn0200(word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r5:[0..15]
// LiveOut:
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn0200_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0200:
	PRINT(0x0F9A)
	word16 r2_3 = 0x0002
	word16 r3_35 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l020C:
	word16 r0_9
	branch TTYIN(out r0_9) l020C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0210:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0212:
	word16 r0_14
	branch TTYIN(out r0_14) l0212
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0216:
	word16 r0_16
	branch TTYIN(out r0_16) l0216
// DataOut:
// DataOut (flags):
// SymbolicIn:

l021A:
	branch r0_9 == 0x0042 l0236
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0236:
	PRINT(0x0FDA)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l023C:
	word16 r0_26
	branch TTYIN(out r0_26) l023C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0220:
	r2_3 = 0x0001
	r3_35 = 0x0001
	branch r0_9 == 0x0049 l0240
// DataOut:
// DataOut (flags):
// SymbolicIn:

l022A:
	r2_3 = 0x0000
	r3_35 = 0x0002
	branch r0_9 == 0x0045 l0240
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0240:
	Mem46[0x0F06:word16] = r2_3
	Mem49[0x0F08:word16] = r3_35
	Mem51[0x0024:word16] = Mem49[0x0024:word16] | 0x1040
	Mem53[0x1166:word16] = 0x1100
	Mem54[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	Mem56[0x0AB4:word16] = Mem54[0x1170:word16]
	Mem57[0x0B5E:word16] = 0x0000
	Mem60[0x1166:word16] = 0x0101
	Mem61[0x1168:word16] = 0x115E
	FnSubfn(0x1166)
	branch Test(ULT,false) l029E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l027A:
	Mem65[0x1166:word16] = 0x0801
	Mem66[0x1168:word16] = 0x0000
	Mem67[0x116A:word16] = 0x0B5E
	Mem68[0x116C:word16] = 0x0001
	Mem69[0x116E:word16] = 0x0000
	FnSubfn(0x1166)
	__syscall(0x88FC)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l029E:
	fn0BD6()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02A2:
	word16 r4_110 = fn0C20(r5, pc, out r5)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02A6:
	word16 r0_93
	branch TTYIN(out r0_93) l02FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02AA:
	branch Mem95[0x0EFA:word16] != 0x0000 l02FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02FC:
	Mem103[0x1166:word16] = 0x1100
	Mem104[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	word16 r0_106 = Mem104[0x1170:word16] - Mem104[0x1172:word16]
	branch r0_106 < 0x0000 l0388
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0388:
	branch r4_110 == 0x1178 l02A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0316:
	Mem115[0x1174:word16] = Mem104[0x1170:word16]
	Mem119[pc + 0x0E52:word16] = Mem115[pc + 0x0E52:word16] + 0x0001
	word16 v34_120 = ~Mem119[0x0EF4:word16]
	Mem121[0x0EF6:word16] = v34_120
	branch v34_120 != 0x0000 l032C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0328:
	Mem127[0x0EF8:word16] = ~Mem121[0x0EF6:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l032C:
	branch Mem131[0x0EFA:word16] == 0x0000 l0352
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0332:
	word16 v40_138 = Mem131[0x0EFA:word16] - 0x0001
	Mem139[0x0EFC:word16] = v40_138
	branch v40_138 != 0x0000 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0338:
	branch Mem139[0x0F18:word16] == 0x0000 l03AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l033E:
	word16 r4_154
	word16 r5_155
	word16 r0_153 = fn0486(r0_106, r4_110, r5, out r4_154, out r5_155)
	Mem160[0x0F16:word16] = 0x0002
	r0_106 = fn0470(r0_153, r4_154, r5_155, out r4_110)
	Mem170[0x0F18:word16] = 0x0078
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0352:
	branch Mem173[0x0EF8:word16] != 0x0000 l036C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0358:
	branch Mem173[0x0F14:word16] <=u 0x0008 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0360:
	word16 v64_183 = Mem173[0x0F16:word16] - 0x0001
	Mem184[0x0F18:word16] = v64_183
	branch v64_183 > 0x0000 l0370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0366:
	Mem186[0x0EFA:word16] = 0x0456
// DataOut:
// DataOut (flags):
// SymbolicIn:

l036C:
	call Mem189[0x0EFA:word16] (retsize: 2;)
		uses: r0:r0_206
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0370:
	word16 r5_224
	word16 r5_246
	word16 r4_249
	r0_106 = fn0998(fn07A6(fn06D6(fn04A0(r4_110, pc, out r5_224), r5_224, pc), pc, out r4_249, out r5_246), r4_249, r5_246, pc, out r4_110, out r5)
	branch r4_110 == 0x1178 l0394
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0394:
	branch Mem267[0x0F12:word16] != 0x0000 l02A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l039A:
	branch Mem267[0x0F02:word16] != 0x0000 l0392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03A0:
	branch Mem267[0x0F18:word16] <= 0x0000 l03AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03AE:
	word16 v50_288 = Mem287[0x0B5A:word16] - Mem287[0x0B5A:word16]
	branch v50_288 <=u 0x0000 l040A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03B6:
	Mem292[0x0B5E:word16] = Mem287[0x0B5A:word16]
	Mem294[0x1166:word16] = 0x0101
	Mem295[0x1168:word16] = 0x115E
	FnSubfn(0x1166)
	branch v50_288 >=u 0x0000 l03E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03CE:
	Mem300[0x1166:word16] = 0x0201
	Mem301[0x1168:word16] = 0x115E
	Mem302[0x116A:word16] = 0x0001
	FnSubfn(0x1166)
	r0_106 = 0x1166
	branch v50_288 <u 0x0000 l040A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03E6:
	Mem306[0x1166:word16] = 0x0901
	Mem307[0x1168:word16] = 0x0000
	Mem308[0x116A:word16] = 0x0B5E
	Mem309[0x116C:word16] = 0x0001
	Mem310[0x116E:word16] = 0x0000
	FnSubfn(0x1166)
	__syscall(0x88FC)
	r0_106 = 0x0601
// DataOut:
// DataOut (flags):
// SymbolicIn:

l040A:
	word16 r4_324
	word16 r5_325
	word16 r0_323 = fn0486(r0_106, r4_110, r5, out r4_324, out r5_325)
	word16 sp_326 = <invalid>
	Mem331[sp_326 - 0x0001:byte] = 0x01
	Mem332[sp_326:byte] = 0x18
	word16 r4_336
	word16 r5_337
	word16 r0_335 = fn0AB6(r0_323, r4_324, r5_325, out r4_336, out r5_337)
	word16 sp_338 = <invalid>
	Mem343[sp_338 - 2:word16] = r5_337
// DataOut:
// DataOut (flags):
// SymbolicIn:

l041C_thunk_fn0AE8:
	fn0AE8(r0_335, r4_336, 0x0420, Mem343[sp_338 - 2:word16], out r0_446, out r4_447, out r5_448)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l03A6:
	Mem353[0x0F1A:word16] = Mem267[0x0F18:word16] + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0386:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l038E:
	r4_110 = fn0AF6(r4_110, r5, out r5)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0392:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02B0:
	Mem365[0x02CB:byte] = r0_93
	word16 r1_366 = 0x02C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02B8:
	r1_366 = r1_449 + 0x0002
	r1_449 = r1_366
	branch Mem365[r1_449:word16] - r0_93 != 0x0000 l02B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l02BC:
	call Mem365[(r1_366 - 0x02C7 << 1) + 0x02CC:ptr16] (retsize: 2;)
		uses: r0:r0_93
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0200_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0234:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0470(word16 r0, word16 r4, word16 r5, ptr16 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0470_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0470:
	word16 r4_14
	word16 r5_15
	word16 r0_13 = fn0AB6(r0, r4, r5, out r4_14, out r5_15)
	word16 sp_16 = <invalid>
	Mem21[sp_16 - 2:word16] = r5_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l047E_thunk_fn0AE8:
	word16 r0_23
	word16 r4_24
	fn0AE8(r0_13, r4_14, 0x0482, Mem21[sp_16 - 2:word16], out r0_23, out r4_24, out r5_33)
	r4Out = r4_24
	return r0_23
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0470_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0486(word16 r0, word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0486_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0486:
	word16 r4_14
	word16 r5_15
	word16 r4_21
	word16 r5_22
	word16 r0_20 = fn0A74(fn0AB6(r0, r4, r5, out r4_14, out r5_15), r4_14, r5_15, out r4_21, out r5_22)
	r4Out = r4_21
	r5Out = r5_22
	return r0_20
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0486_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn04A0(word16 r4, word16 pc, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r4:[0..15]
// LiveOut: r4 r5
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn04A0_entry:
	word16 sp_111 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04A0:
	word16 v5_5 = Mem0[pc + 0x0A52:word16] & Mem0[0x0EF4:word16]
	Mem6[pc + 0x0A52:word16] = v5_5
	branch v5_5 == 0x0000 l04AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04AA:
	word16 r5_10 = Mem6[0x0F04:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04AE:
	word16 r3_15 = (int16) Mem14[r5_10 + 0x0EF0:byte]
	branch r3_15 == 0x0000 l0588
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04B4:
	Mem19[0x0F0C:word16] = r3_15
	word16 r0_20 = (int16) Mem19[r5_10 + 0x0EF3:byte]
	word16 sp_22 = sp_111 - 0x0002
	Mem23[sp_22:word16] = r3_15
	Mem24[sp_22 + 0x0001:byte] = r0_20
	word16 r4_29
	word16 r0_28 = fn0AB6(r0_20, r4, r5_10, out r4_29, out r5_10)
	Mem35[r4_29:byte] = 0x20
	sp_111 = <invalid>
	r4 = r4_29 + 0x0001
	word16 r0_101 = r0_28 - 0x0001
	branch Mem35[0x0F02:word16] > 0x0000 l04D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04D2:
	branch r0_28 - 0x0001 >=u 0x0004 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04D8:
	branch r0_28 - 0x0001 == 0x0002 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04DE:
	Mem53[r5_10 + 0x0EF3:byte] = r0_28 - 0x0001
	branch r0_28 - 0x0001 >u 0x0016 l04EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04E8:
	sp_111 = <invalid>
	branch fn067C(r0_28 - 0x0001, r3_15, r4_29 + 0x0001, r5_10, out r0_101, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04EE:
	word16 r1_70 = r0_101 + 0x0001
	branch r0_101 != 0x0003 l0504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04F8:
	branch Mem53[0x0F02:word16] <= 0x0000 l0504
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04FE:
	sp_111 = <invalid>
	branch fn05D4(r0_101, r3_15, r4, r5_10, pc, out r0_101, out r3_15, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0504:
	word16 sp_106 = <invalid>
	sp_111 = sp_106 + 0x0002
	word16 r0_103
	branch fn064A(r0_101, r1_70, r3_15, r4, r5_10, out r0_103, out r4, out r5_10) l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l050A:
	word16 r2_112 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l050C:
	branch Mem53[r2_112 + 0x0DB8:word16] - r0_103 == 0x0000 l0524
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0512:
	word16 v38_124 = Mem53[r2_112 + 0x0DB8:word16] - r1_70
	branch v38_124 <u 0x0000 l05B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0518:
	branch v38_124 == 0x0000 l0524
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0524:
	r0_103 = Mem53[r2_112 + 0x0DAC:word16]
	word16 r1_131 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l052C:
	word16 r3_136 = Mem135[r0_103:word16]
	branch r3_136 == 0x0000 l05AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0530:
	branch r3_136 < 0x0000 l058A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l058A:
	word16 sp_144 = sp_111 - 0x0001
	Mem145[sp_144:byte] = Mem135[r0_103:byte]
	Mem148[sp_144 + 0x0001:byte] = Mem145[r2_112 + 0x0DB8:byte]
	word16 r4_154
	word16 r5_155
	word16 r4_161
	word16 r5_162
	word16 r0_160 = fn0A74(fn0AB6(r0_103, r4, r5_10, out r4_154, out r5_155), r4_154, r5_155, out r4_161, out r5_162)
	Mem167[r0_160:word16] = 0x0000
	word16 sp_163 = <invalid>
	Mem172[sp_163 - 0x0002:word16] = (int16) Mem167[r5_162 + 0x0EF0:byte] + 0x0001
	Mem174[sp_163 - 0x0001:byte] = Mem172[r5_162 + 0x0EF3:byte]
	r0_103 = fn0AB6(r0_160, r4_161, r5_162, out r4, out r5_10)
	sp_111 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0532:
	branch r3_136 + 0x0004 - Mem135[r5_10 + 0x0EF0:word16] >u 0x0000 l05AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05AE:
	r0_103 = r0_103 + 0x0002
	r1_131 = r1_131 - 0x0001
	branch r1_131 != 0x0000 l052C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l053C:
	branch Mem135[r0_103:word16] - Mem135[r5_10 + 0x0EF0:word16] <u 0x0000 l05B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0542:
	word16 r1_203 = Mem135[r0_103:word16]
	Mem205[r0_103:word16] = Mem135[r0_103:word16] | 0x8000
	word16 r0_206 = r0_103 - Mem205[r2_112 + 0x0DAC:word16]
	Mem208[0x0F0A:word16] = r0_206
	Mem210[r0_206 + 0x0DC4:word16] = Mem208[r0_206 + 0x0DC4:word16] - 0x0001
	word16 sp_211 = sp_111 - 0x0002
	Mem212[sp_211:word16] = r1_203
	Mem214[sp_211 + 0x0001:byte] = Mem212[r2_112 + 0x0DB8:byte]
	word16 r4_218
	word16 r5_219
	word16 r4_225
	word16 r5_226
	fn0A7C(fn0AB6(r0_206, r4, r5_10, out r4_218, out r5_219), r4_218, r5_219, out r4_225, out r5_226)
	Mem236[pc + 0x05F2:word16] = Mem214[pc + 0x05F2:word16] + Mem214[r2_112 + 0x0DD4:word16]
	r4 = fn0B1A(r4_225, r5_226, out r5_10)
	word16 v65_246 = Mem236[0x0F12:word16] - 0x0001
	Mem247[0x0F14:word16] = v65_246
	sp_111 = <invalid>
	branch v65_246 > 0x0000 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0574:
	branch Mem247[0x0F02:word16] > 0x0000 l0584
// DataOut:
// DataOut (flags):
// SymbolicIn:

l057A:
	Mem256[0x0EFA:word16] = 0x0000
	Mem258[0x0EFC:word16] = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0584:
	Mem262[r5_10 + 0x0EF0:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0588:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05CA:
	r5_10 = r5_10 - 0x0001
	branch r5_10 < 0x0000 l05D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05D2:
	r5Out = r5_10
	return r4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05CE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l051A:
	r2_112 = r2_112 + 0x0002
	branch r2_112 >= 0x000A l050C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0522:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05B4:
	word16 sp_281 = sp_111 - 2
	Mem285[sp_281:word16] = r5_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05B4_thunk_fn0AE8:
	word16 r4_292
	word16 r5_293
	fn0AE8(r0_103, r4, 0x05B8, Mem285[sp_281:word16], out r0_358, out r4_292, out r5_293)
	r5Out = r5_293
	return r4_292
// DataOut:
// DataOut (flags):
// SymbolicIn:

l04A8:
	r5Out = r5
	return r4
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn04A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn05D4(word16 r0, word16 r3, word16 r4, word16 r5, word16 pc, ptr16 & r0Out, ptr16 & r3Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r0 r3 r4 r5 sp
// Trashed: NZVC r0 r3 r4 r5 sp
// Preserved:
fn05D4_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05D4:
	word16 v11_10 = 0x0004 - (r3 - Mem5[0x0F02:word16])
	bool Z_105 = SLICE(cond(v11_10), bool, 2)
	branch v11_10 >u 0x0000 l0648
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0648:
	r0Out = r0
	r3Out = r3
	r4Out = r4
	r5Out = r5
	return Z_105
// DataOut:
// DataOut (flags):
// SymbolicIn:

l05E0:
	word16 r4_23
	word16 r5_24
	word16 r4_30
	word16 r5_31
	fn0A7C(fn0AB6(r0, r4, r5, out r4_23, out r5_24), r4_23, r5_24, out r4_30, out r5_31)
	fn0A94()
	word16 r3_43 = __rol(0x0000, 0x0000)
	word16 r3_45 = __rol(r3_43, r3_43)
	word16 r0_47 = Mem17[(r3_45 << 1) + 0x0F2A:word16]
	word16 v23_49 = Mem17[pc + 0x090A:word16] >> 1
	Mem50[pc + 0x090A:word16] = v23_49
	word16 sp_32 = <invalid>
	branch v23_49 <u 0x0000 l060E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l060A:
	r0_47 = r0_47 + 0x00C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l060E:
	Mem59[pc + 0x054A:word16] = Mem50[pc + 0x054A:word16] + r0_47
	Mem64[sp_32 - 0x0001:byte] = Mem59[0x0F02:byte]
	Mem65[sp_32:byte] = 0x04
	word16 r4_71
	word16 r5_72
	word16 r0_70 = fn0AB6(r0_47, r4_30, r5_31, out r4_71, out r5_72)
	word16 sp_73 = <invalid>
	Mem78[sp_73 - 2:word16] = r5_72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0620_thunk_fn0AE8:
	word16 r0_80
	word16 r4_81
	word16 r5_82
	bool Z_85 = fn0AE8(r0_70, r4_71, 0x0624, Mem78[sp_73 - 2:word16], out r0_80, out r4_81, out r5_82)
	r0Out = r0_80
	r3Out = r3_45 << 1
	r4Out = r4_81
	r5Out = r5_82
	return Z_85
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn05D4_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn064A(word16 r0, word16 r1, word16 r3, word16 r4, word16 r5, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r0 r4 r5 sp
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved:
fn064A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l064A:
	word16 r2_33 = Mem0[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l064E:
	bool Z_27
	branch Mem0[r2_33 + 0x0EE6:word16] - r3 != 0x0000 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0654:
	branch Mem0[r2_33 + 0x0EEC:byte] < 0x00 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l065A:
	branch Mem0[r2_33 + 0x0EE9:word16] - r1 == 0x0000 l0670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0670:
	Mem23[r2_33 + 0x0EE6:byte] = 0x00
	Z_27 = true
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0660:
	branch Mem0[r2_33 + 0x0EE9:word16] - r0 != 0x0000 l0676
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0676:
	r2_33 = r2_33 - 0x0001
	Z_27 = SLICE(cond(r2_33), bool, 2) (alias)
	branch r2_33 >= 0x0000 l064E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l067A:
	r0Out = r0
	r4Out = r4
	r5Out = r5
	return Z_27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0666:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0666_thunk_fn0AE8:
	word16 r0_47
	word16 r4_48
	word16 r5_49
	bool Z_52 = fn0AE8(r0, r4, 0x066A, r5, out r0_47, out r4_48, out r5_49)
	r0Out = r0_47
	r4Out = r4_48
	r5Out = r5_49
	return Z_52
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn064A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn067C(word16 r0, word16 r3, word16 r4, word16 r5, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r3:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: Z r0 r4 r5 sp
// Trashed: NZVC r0 r1 r4 r5 sp
// Preserved:
fn067C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l067C:
	word16 r1_8 = (r3 - 0x0001 << 1) + r0
	byte v11_10 = Mem0[r1_8 + 0x0E2A:byte]
	bool Z_15 = SLICE(cond(v11_10), bool, 2)
	branch v11_10 == 0x00 l06A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l068A:
	Mem17[r1_8 + 0x0E2A:byte] = Mem0[r1_8 + 0x0E2A:byte] - 0x01
	word16 r1_18 = (int16) Mem17[r1_8 + 0x0E2A:byte]
	word16 r4_27
	r0 = fn0AB6(r0, r4, r5, out r4_27, out r5)
	byte v21_33 = Mem21[r1_18 + 0x0EE0:byte]
	Mem34[r4_27:byte] = v21_33
	r4 = r4_27 + 0x0001
	Z_15 = SLICE(cond(v21_33), bool, 2) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A0:
	r0Out = r0
	r4Out = r4
	r5Out = r5
	return Z_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn067C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn06A2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r5
// Preserved: sp
fn06A2_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A2:
	branch Mem0[0x0F0A:word16] == 0x0000 l06D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06A8:
	word16 r5_10 = Mem0[0x0F04:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06AC:
	branch Mem0[r5_10 + 0x0EF0:byte] != 0x00 l06D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D0:
	r5_10 = r5_10 - 0x0001
	branch r5_10 >= 0x0000 l06AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06B2:
	word16 r0_24 = Mem0[0x0F14:word16]
	branch r0_24 >u 0x0008 l06D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06BC:
	Mem29[r5_10 + 0x0EF0:byte] = r0_24 + 0x0002
	Mem30[r5_10 + 0x0EF3:byte] = 0x18
	Mem31[0x0F0C:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn06A2_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn06D6(word16 r4, word16 r5, word16 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r4
// Trashed: NZVC r0 r2 r3 r4 r5 sp
// Preserved: r1
fn06D6_entry:
	word16 sp_106 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06D6:
	word16 r2_177 = Mem0[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06DA:
	word16 r3_9 = (int16) Mem8[r2_177 + 0x0EE6:byte]
	branch r3_9 == 0x0000 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06E0:
	word16 v12_14 = Mem8[pc + 0x0812:word16] & Mem8[0x0EF4:word16]
	Mem15[pc + 0x0812:word16] = v12_14
	branch v12_14 != 0x0000 l06F6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06E8:
	branch Mem15[r2_177 + 0x0EEC:byte] <= 0x00 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06EE:
	branch Mem15[0x0EF4:word16] - Mem15[0x0EF4:word16] == 0x0000 l07A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l06F6:
	word16 r0_51
	word16 r0_31 = (int16) Mem15[r2_177 + 0x0EE9:byte]
	branch Mem15[r2_177 + 0x0EEC:byte] < 0x00 l0710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0710:
	word16 sp_42 = sp_106 - 0x0002
	Mem43[sp_42:word16] = r3_9 + 0x0001
	Mem44[sp_42 + 0x0001:byte] = r0_31
	r0_51 = fn0AB6(r0_31, r4, r5, out r4, out r5)
	Mem60[r2_177 + 0x0EEC:word16] = Mem44[r2_177 + 0x0EEC:word16] & ~0x0080
	sp_106 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0700:
	word16 sp_63 = sp_106 - 0x0002
	Mem64[sp_63:word16] = r3_9
	Mem65[sp_63 + 0x0001:byte] = r0_31
	word16 r4_69
	r0_51 = fn0AB6(r0_31, r4, r5, out r4_69, out r5)
	Mem75[r4_69:byte] = 0x20
	sp_106 = <invalid>
	r4 = r4_69 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0724:
	Mem82[r2_177 + 0x0EE9:byte] = Mem80[r2_177 + 0x0EE9:byte] + 0x01
	word16 r0_148 = r0_51 + 0x0001
	branch r0_148 == 0x0019 l0784
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0730:
	branch r0_148 == 0x0018 l0744
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0744:
	branch Mem82[0x0EFA:word16] != 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l074A:
	branch Mem82[0x0F14:word16] - r3_9 <u 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0750:
	branch Mem82[0x0F14:word16] - (r3_9 - 0x0004) >u 0x0000 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l075A:
	word16 sp_107 = sp_106 - 0x0001
	Mem108[sp_107:byte] = Mem82[0x0F14:byte]
	Mem109[sp_107 + 0x0001:byte] = 0x18
	word16 r4_115
	word16 r5_116
	word16 r4_122
	word16 r5_123
	word16 r0_121 = fn0A7C(fn0AB6(r0_148, r4, r5, out r4_115, out r5_116), r4_115, r5_116, out r4_122, out r5_123)
	Mem128[0x0EFA:word16] = 0x0000
	Mem130[0x0EFC:word16] = 0x0005
	Mem132[0x0F1A:word16] = Mem130[0x0F18:word16] - 0x0001
	word16 sp_124 = <invalid>
	Mem135[sp_124 - 2:word16] = r5_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l077A_thunk_fn0AE8:
	word16 r4_138
	fn0AE8(r0_121, r4_122, 0x077E, Mem135[sp_124 - 2:word16], out r0_231, out r4_138, out r5_232)
	return r4_138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0736:
	branch r0_148 >u 0x0016 l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l073C:
	sp_106 = <invalid>
	branch fn067C(r0_148, r3_9, r4, r5, out r0_148, out r4, out r5) l078A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l078A:
	word16 sp_157 = sp_106 - 2
	Mem159[sp_157:word16] = r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l078A_thunk_fn0AE8:
	word16 r4_164
	fn0AE8(r0_148, r4, 0x078E, Mem159[sp_157:word16], out r0_229, out r4_164, out r5_230)
	return r4_164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0742:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0784:
	Mem171[r2_177 + 0x0EE6:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A0:
	r2_177 = r2_177 - 0x0001
	branch r2_177 >= 0x0000 l06DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A4:
	return r4
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn06D6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn07A6(word16 r4, word16 pc, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r4:[0..15]
// LiveOut: r0 r4 r5
// Trashed: NZVC r0 r1 r2 r3 r4 r5 sp
// Preserved:
fn07A6_entry:
	word16 sp_123 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07A6:
	word16 v5_4 = Mem0[0x0F1C:word16] - 0x0001
	Mem5[0x0F1E:word16] = v5_4
	branch v5_4 == 0x0000 l07B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07B0:
	Mem9[0x0F1E:word16] = Mem5[0x0F26:word16]
	r5 = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07B8:
	word16 r2_16 = Mem15[0x0F1A:word16]
	r0 = Mem15[r2_16 + 0x0DB8:word16]
	branch r0 == 0x0000 l0868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07C2:
	branch Mem15[0x0EFC:word16] == 0x0000 l07F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07C8:
	word16 r1_27 = Mem15[r2_16 + 0x0DAC:word16]
	word16 r3_28 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07D0:
	branch Mem32[r1_27:word16] == 0x0000 l07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07D4:
	word16 sp_41 = sp_123 - 0x0001
	Mem42[sp_41:byte] = Mem32[r1_27:byte]
	Mem44[sp_41 + 0x0001:byte] = r0
	word16 r4_50
	word16 r5_51
	r0 = fn0A74(fn0AB6(r0, r4, r5, out r4_50, out r5_51), r4_50, r5_51, out r4, out r5)
	sp_123 = <invalid>
	branch Mem44[r1_27:word16] > 0x0000 l07E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07E6:
	Mem69[r1_27:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07E8:
	r1_27 = r1_27 + 0x0002
	r3_28 = r3_28 - 0x0001
	branch r3_28 != 0x0000 l07D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07EE:
	Mem89[r2_16 + 0x0DB8:word16] = Mem75[r2_16 + 0x0DB8:word16] + 0x0001
	r0 = r0 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07F4:
	word16 r1_154 = Mem94[r2_16 + 0x0DAC:word16]
	word16 r3_159 = 0x0008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07FC:
	branch Mem100[r1_154:word16] <= 0x0000 l0840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0840:
	branch Mem100[r1_154:word16] >= 0x0000 l085A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0844:
	branch Mem100[0x0EFC:word16] != 0x0000 l085A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l084A:
	word16 sp_124 = sp_123 - 0x0001
	Mem125[sp_124:byte] = Mem100[r1_154:byte]
	Mem127[sp_124 + 0x0001:byte] = r0
	word16 r4_133
	word16 r5_134
	r0 = fn0A74(fn0AB6(r0, r4, r5, out r4_133, out r5_134), r4_133, r5_134, out r4, out r5)
	Mem146[r1_154:word16] = 0x0000
	sp_123 = <invalid>
// DataOut:
// DataOut (flags):
// SymbolicIn:

l085A:
	r1_154 = r1_154 + 0x0002
	r3_159 = r3_159 - 0x0001
	branch r3_159 != 0x0000 l07FC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0860:
	branch r5 != 0x0000 l0868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0864:
	Mem172[r2_16 + 0x0DB8:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0868:
	word16 v75_185 = Mem184[pc + 0x06AE:word16] - 0x0002
	Mem186[pc + 0x06AE:word16] = v75_185
	branch v75_185 < 0x0000 l087E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l087E:
	Mem189[0x0F1C:word16] = 0x000A
	Mem191[0x0DAA:word16] = ~Mem189[0x0DA8:word16]
	branch Mem191[0x0EFC:word16] == 0x0000 l0894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0894:
	branch Mem191[0x0EFE:word16] == 0x0000 l08AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l089A:
	Mem205[0x0F22:word16] = -Mem191[0x0F20:word16]
	branch Mem205[0x0F00:word16] != 0x0000 l08AA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08A4:
	Mem212[0x0EFE:word16] = 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l088E:
	Mem215[0x0EFE:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08AA:
	Mem220[0x0F00:word16] = 0x0000
	Mem221[0x0F02:word16] = 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0870:
	branch r5 != 0x0000 l0878
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0878:
	Mem234[0x0F28:word16] = r5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0874:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0800:
	Mem238[r1_154:word16] = Mem100[r1_154:word16] + Mem100[0x0F20:word16]
	branch Mem238[r1_154:word16] >=u 0x0008 l0810
// DataOut:
// DataOut (flags):
// SymbolicIn:

l080A:
	branch Mem238[r1_154:word16] >u 0x0048 l0814
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0810:
	Mem246[0x0F00:word16] = sp_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0814:
	branch r0 != 0x0017 l081E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l081A:
	Mem255[0x0F02:word16] = sp_123
// DataOut:
// DataOut (flags):
// SymbolicIn:

l081E:
	branch r0 >u 0x0016 l0828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0824:
	fn093C(r0, r1_154, r3_159)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0828:
	word16 sp_284 = sp_123 - 0x0001
	Mem285[sp_284:byte] = Mem279[r1_154:byte]
	Mem287[sp_284 + 0x0001:byte] = r0
	word16 r4_295
	word16 r5_296
	word16 r0_294 = fn0AB6(r0, r4, r5 + 0x0001, out r4_295, out r5_296)
	fn096A(r3_159)
	word16 sp_297 = <invalid>
	Mem308[sp_297 - 2:word16] = r5_296
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0838_thunk_fn0AE8:
	word16 r0_310
	word16 r4_311
	word16 r5_312
	fn0AE8(r0_294, r4_295, 0x083C, Mem308[sp_297 - 2:word16], out r0_310, out r4_311, out r5_312)
	r4Out = r4_311
	r5Out = r5_312
	return r0_310
// DataOut:
// DataOut (flags):
// SymbolicIn:

l07AC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08B2:
	branch Mem317[0x0F12:word16] == 0x0000 l08CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08B8:
	word16 v36_327 = Mem317[pc + 0x063A:word16] & Mem317[0x0EF4:word16]
	Mem328[pc + 0x063A:word16] = v36_327
	branch v36_327 == 0x0000 l08CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08C0:
	word16 r2_332 = Mem328[0x0F06:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08C4:
	branch Mem328[r2_332 + 0x0EE6:byte] == 0x00 l08D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08D0:
	word16 r0_349 = fn0A94() & Mem328[0x0F0E:word16]
	branch r0_349 != 0x0000 l093A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08DA:
	word16 r0_353 = fn0A94()
	word16 r1_358 = Mem328[0x0F08:word16]
	branch r1_358 < 0x0000 l08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08E4:
	branch Mem328[r1_358 + 0x0DC4:word16] <= 0x0000 l08EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08EA:
	branch r0_353 << 1 <u 0x0000 l0904
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08EE:
	word16 r1_375 = __rol(0x0000, 0x0000)
	word16 r1_377 = __rol(r1_375, r1_375)
	word16 r1_379 = __rol(r1_377, r1_377)
	r1_358 = r1_379 << 1
	branch Mem328[(r1_379 << 1) + 0x0DC4:word16] <= 0x0000 l08D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0904:
	r0_349 = 0x0DB8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0908:
	r0_349 = r0_349 - 0x0002
	word16 r3_397 = Mem328[r0_349:word16] + r1_358
	branch Mem328[r3_397:word16] <= 0x0000 l0908
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0910:
	Mem411[r2_332 + 0x0EE6:byte] = (int16) Mem328[r3_397:byte] + 0x0002
	Mem413[r2_332 + 0x0EE9:byte] = Mem411[r0_349 + 0x000C:byte]
	Mem414[r2_332 + 0x0EEC:byte] = 0x80
	branch r0_349 == 0x0DAC l0936
// DataOut:
// DataOut (flags):
// SymbolicIn:

l092C:
	r0_349 = fn0A94() & Mem414[0x0F0C:word16]
	branch r0_349 != 0x0000 l093A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0936:
	Mem430[r2_332 + 0x0EEC:byte] = Mem414[r2_332 + 0x0EEC:byte] + 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l093A:
	r4Out = r4
	r5Out = r5
	return r0_349
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08CA:
	r2_332 = r2_332 - 0x0001
	branch r2_332 >= 0x0000 l08C4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l08CE:
	r4Out = r4
	r5Out = r5
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn07A6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn093C(word16 r0, word16 r1, word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15]
// LiveOut:
// Trashed: NZVC
// Preserved: r3 sp
fn093C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l093C:
	word16 r3_7 = Mem5[r1:word16]
	word16 r3_15 = r3_7 - 0x0001
	branch Mem5[0x0F20:word16] < 0x0000 l094C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l094A:
	r3_15 = r3_7 - 0x0002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l094C:
	word16 r3_22 = (r3_15 << 1) + r0 - 0x0016 + 0x0E40
	word16 wLoc04_49 = 0x0007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0958:
	Mem30[r3_22 + 0x0000:byte] = 0x00
	word16 v18_34 = wLoc04_49 - 0x0001
	r3_22 = r3_22 + 0x0002
	wLoc04_49 = v18_34
	branch v18_34 != 0x0000 l0958
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0964:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn093C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn096A(word16 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..15]
// LiveOut:
// Trashed: NZVC r3
// Preserved: sp
fn096A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l096A:
	branch (r3 & 0x0001) != 0x0000 l0984
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0984:
	branch Mem0[0x0DA8:word16] != 0x0000 l0976
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0970:
	branch Mem0[0x0DA8:word16] != 0x0000 l098A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l098A:
	Mem21[0x112D:byte] = 0x5C
	Mem22[0x1131:byte] = 0x2F
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0976:
	Mem25[0x112D:byte] = 0x2F
	Mem26[0x1131:byte] = 0x5C
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn096A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0998(word16 r0, word16 r4, word16 r5, word16 pc, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5
// Trashed: NZVC r0 r2 r4 r5 sp
// Preserved: r1
fn0998_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0998:
	word16 r2_161 = Mem0[0x0F02:word16]
	branch r2_161 > 0x0000 l09E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l099E:
	word16 v10_8 = Mem0[0x0F1E:word16] - 0x0001
	Mem9[0x0F20:word16] = v10_8
	branch v10_8 != 0x0000 l0A1E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A1E:
	branch r2_161 == 0x0000 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A22:
	branch Mem9[0x0F1E:word16] < 0x0028 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09A4:
	Mem21[0x0F20:word16] = 0x0064
	Mem23[0x0F12:word16] = 0x0001
	Mem24[0x0A6A:word16] = 0x1134
	word16 r0_30 = fn0A94()
	r2_161 = 0x0001
	word16 r1_25 = 0x0000
	r0 = r0_30 << 1
	branch r0_30 << 1 >=u 0x0000 l09D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09C2:
	r0 = r0_30 << 2
	branch r0_30 << 2 >=u 0x0000 l09D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09C6:
	Mem42[0x0F12:word16] = Mem24[0x0F10:word16] + 0x0001
	Mem43[0x0A6A:word16] = 0x113D
	r1_25 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09D4:
	branch r0 > 0x0000 l09E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09D8:
	Mem56[0x0F12:word16] = -Mem54[0x0F10:word16]
	Mem61[pc + 0x008A:word16] = Mem56[pc + 0x008A:word16] + r1_25
	r2_161 = 0x004A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09E4:
	branch Mem66[0x0EF4:word16] != 0x0000 l0A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09EA:
	branch Mem66[0x0EF6:word16] != 0x0000 l0A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09F0:
	branch Mem66[0x0F10:word16] < 0x0000 l09FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09FE:
	branch r2_161 == 0x0002 l0A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09F6:
	branch r2_161 == 0x0049 l0A2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A2A:
	word16 r4_114
	word16 r5_115
	word16 r4_121
	word16 r5_122
	word16 r0_120 = fn0A74(fn0AB6(r0, r4, r5, out r4_114, out r5_115), r4_114, r5_115, out r4_121, out r5_122)
	word16 sp_123 = <invalid>
	Mem128[sp_123 - 0x0002:word16] = r2_161
	Mem129[sp_123 - 0x0001:byte] = 0x04
	word16 r4_133
	word16 r5_134
	r0 = fn0A74(fn0AB6(r0_120, r4_121, r5_122, out r4_133, out r5_134), r4_133, r5_134, out r4, out r5)
	Mem146[0x0F04:word16] = 0x0000
	branch Mem146[0x0F12:word16] > 0x0000 l0A5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A54:
	Mem154[0x0EFA:word16] = 0x0000
	Mem156[0x0EFC:word16] = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A5E:
	r4Out = r4
	r5Out = r5
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l09FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A04:
	r2_161 = r2_161 + Mem66[0x0F10:word16]
	word16 r4_173
	word16 r5_174
	r0 = fn0A60(fn0AB6(r0, r4, r5, out r4_173, out r5_174), r4_173, r5_174, out r4, out r5)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A18:
	Mem187[0x0F04:word16] = r2_161
	r4Out = r4
	r5Out = r5
	return r0
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0998_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A60(word16 r0, word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0A60_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A60:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A60_thunk_fn0AE8:
	word16 r0_9
	word16 r4_10
	word16 r5_11
	fn0AE8(r0, r4, 0x0A64, r5, out r0_9, out r4_10, out r5_11)
	r4Out = r4_10
	r5Out = r5_11
	return r0_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A60_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A74(word16 r0, word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0A74_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A74:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A74_thunk_fn0AE8:
	word16 r0_9
	word16 r4_10
	word16 r5_11
	fn0AE8(r0, r4, 0x0A78, r5, out r0_9, out r4_10, out r5_11)
	r4Out = r4_10
	r5Out = r5_11
	return r0_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A74_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A7C(word16 r0, word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0A7C_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A7C:
	Mem6[r4:byte] = Mem0[0x0F24:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A80_thunk_fn0AE8:
	word16 r0_15
	word16 r4_16
	word16 r5_17
	fn0AE8(r0, r4 + 0x0001, 0x0A84, r5, out r0_15, out r4_16, out r5_17)
	r4Out = r4_16
	r5Out = r5_17
	return r0_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A7C_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0A94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: r0
// Trashed: NZVC r0
// Preserved: sp
fn0A94_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0A94:
	word16 r0_11 = ((DPB(__swab(Mem0[0x0AB2:word16]), 0x00, 0) << 1) + Mem0[0x0AB2:word16] << 2) + Mem0[0x0AB2:word16]
	Mem14[0x0AB4:word16] = r0_11 + 0x3619
	return r0_11 + 0x3619
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0A94_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0AB6(word16 r0, word16 r4, word16 r5, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15]
// LiveOut: r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
fn0AB6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AB6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AB6_thunk_fn0AE8:
	word16 r0_9
	word16 r4_10
	word16 r5_11
	fn0AE8(r0, r4, 0x0ABA, r5, out r0_9, out r4_10, out r5_11)
	r4Out = r4_10
	r5Out = r5_11
	return r0_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AB6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



bool fn0AE8(word16 r0, word16 r4, word16 r5, word16 wArg00, ptr16 & r0Out, ptr16 & r4Out, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15] r5:[0..15] Stack +0000:[0..15]
// LiveOut: Z r0 r4 r5 sp
// Trashed: NZV r0 r4 r5 sp
// Preserved:
l0AE8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AE8_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AE8:
	word16 r0_12 = Mem5[r5:word16]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AEC:
	byte v8_14 = Mem13[r0_12:byte]
	Mem17[r4:byte] = v8_14
	r0_12 = r0_12 + 0x0001
	r4 = r4 + 0x0001
	branch v8_14 != 0x00 l0AEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF0:
	word16 r0_33
	byte NZV_34
	call r5 + 0x0002 (retsize: 2;)
		uses: r0:r0,Stack +0000:wArg00,Stack +FFFFFFFE:r0
		defs: NZV:NZV_34,r0:r0_33
	r0Out = r0_33
	r4Out = r4 - 0x0001
	r5Out = wArg00
	return SLICE(NZV_34, bool, 2)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AE8_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0AF6(word16 r4, word16 r5, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..15] r5:[0..15]
// LiveOut: r4 r5
// Trashed: NZVC r0 r4 r5 sp
// Preserved:
fn0AF6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0AF6:
	word16 r4_15
	word16 r5_16
	fn0AB6(Mem0[0x0F14:word16] + 0x0002, r4, r5, out r4_15, out r5_16)
	Mem21[r4_15:byte] = 0x80
	PRINT(0x1178)
	r5Out = r5_16
	return 0x1178
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0AF6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0B1A(word16 r4, word16 r5, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..15] r5:[0..15]
// LiveOut: r4 r5 sp
// Trashed: NZV r0 r3 r4 r5 sp
// Preserved:
fn0B1A_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B1A:
	word16 r4_14
	word16 r5_15
	word16 r0_13 = fn0AB6(Mem0[0x0B5A:word16], r4, r5, out r4_14, out r5_15)
	word16 sp_16 = <invalid>
	Mem21[sp_16 - 2:word16] = r5_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B30_thunk_fn0AE8:
	word16 r4_24
	word16 r5_25
	fn0AE8(r0_13, r4_14, 0x0B34, Mem21[sp_16 - 2:word16], out r0_33, out r4_24, out r5_25)
	r5Out = r5_25
	return r4_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B1A_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0B60(word16 r0, word16 r1, word16 r3, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r1:[0..15] r3:[0..15] r4:[0..15]
// LiveOut:
// Trashed: NZVC r0 r3 r4
// Preserved: r1 r2 r5 sp
fn0B60_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B60:
	word16 wLoc08_138 = 0x0000
	branch r3 < 0x0000 l0B74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B74:
	Mem22[0x0BC8:word16] = 0x0030
	r3 = -r3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B6C:
	Mem25[0x0BC8:word16] = 0x0020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B7C:
	branch r3 == 0x0000 l0BBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B80:
	word16 r2_35 = 0x0BD4 - (r3 << 1)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B88:
	word16 r5_122 = 0x0030
	word16 v16_41 = Mem40[r2_35:word16]
	r2_35 = r2_35 + 0x0002
	branch v16_41 == 0x0000 l0BBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B8E:
	r0 = r0 - v16_41
	branch r0 <u 0x0000 l0B96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B96:
	word16 r5_79
	r0 = r0 + v16_41
	branch wLoc08_138 != 0x0000 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B9C:
	branch r5_122 == 0xFFD0 l0BA4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BA4:
	branch r3 == 0x0001 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BAA:
	branch Mem40[r2_35:word16] == 0x0000 l0BB4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BAE:
	r5_79 = (int16) Mem40[0x0BC6:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BA0:
	wLoc08_138 = wLoc08_138 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BB4:
	r5_79 = r5_122 + 0x0000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BB8:
	Mem92[r4:word16] = r5_79
	r4 = r4 + 0x0002
	r3 = r3 - 0x0001
	branch r3 != 0x0000 l0B88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BBE:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0B60_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0B92:
	r5_122 = r5_122 + 0x0001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0BD6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: NZVC r0 r1 r2
// Preserved: sp
fn0BD6_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BD6:
	Mem3[0x0F1A:word16] = 0x0003
	Mem4[0x0B5C:word16] = 0x0000
	Mem6[0x0F0E:word16] = 0xF800
	Mem7[0x0F10:word16] = 0xE000
	word16 r1_15 = 0x0E56
	word16 r0_25 = 0x0006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BF4:
	word16 r2_12 = 0x000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0BF8:
	Mem16[r1_15:byte] = 0x04
	r1_15 = r1_15 + 0x0001
	r2_12 = r2_12 - 0x0001
	branch r2_12 != 0x0000 l0BF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C00:
	r1_15 = r1_15 + 0x000A
	r0_25 = r0_25 - 0x0001
	branch r0_25 != 0x0000 l0BF4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C08:
	Mem30[0x1166:word16] = 0x1100
	Mem31[0x1168:word16] = 0x1170
	FnSubfn(0x1166)
	Mem33[0x1174:word16] = Mem31[0x1170:word16]
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0BD6_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word16 fn0C20(word16 r5, word16 pc, ptr16 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..15] r5:[0..15]
// LiveOut: r4 r5
// Trashed: NZVC r0 r1 r2 r4 r5 sp
// Preserved:
fn0C20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C20:
	word16 r1_11 = 0x0DB8
	word16 r0_14 = 0x0006
	word16 r2_12 = 0x0005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C2C:
	Mem10[r1_11:word16] = r2_12
	r1_11 = r1_11 + 0x0002
	r2_12 = r2_12 + 0x0002
	r0_14 = r0_14 - 0x0001
	branch r0_14 != 0x0000 l0C2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C36:
	word16 r1_18 = 0x0000
	word16 r0_20 = 0x0008
	word16 r2_21 = 0x000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C40:
	Mem26[r1_18 + 0x0DE0:word16] = r2_21
	Mem27[r1_18 + 0x0DF0:word16] = r2_21
	Mem28[r1_18 + 0x0E00:word16] = r2_21
	Mem29[r1_18 + 0x0E10:word16] = r2_21
	Mem30[r1_18 + 0x0E20:word16] = r2_21
	Mem31[r1_18 + 0x0E30:word16] = r2_21
	Mem32[r1_18 + 0x0DC4:word16] = 0x0006
	r1_18 = r1_18 + 0x0002
	r2_21 = r2_21 + 0x0008
	r0_20 = r0_20 - 0x0001
	branch r0_20 != 0x0000 l0C40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C68:
	word16 r1_43 = 0x0EE6
	word16 r0_44 = 0x0010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C70:
	Mem48[r1_43:word16] = 0x0000
	r1_43 = r1_43 + 0x0002
	r0_44 = r0_44 - 0x0001
	branch r0_44 != 0x0000 l0C70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0C76:
	Mem55[0x0F0A:word16] = 0xFFFF
	Mem56[0x0F14:word16] = 0x0030
	Mem57[0x0F16:word16] = 0x0002
	Mem58[0x0F18:word16] = 0x0078
	Mem59[0x0F1C:word16] = 0x000A
	Mem60[0x0F1E:word16] = 0x0004
	Mem61[0x0F28:word16] = 0x0004
	Mem62[0x0F20:word16] = 0x0064
	Mem63[0x0F22:word16] = 0x0001
	Mem69[pc + 0x025E:word16] = Mem63[pc + 0x025E:word16] << 1
	word16 v17_70 = Mem69[pc + 0x025C:word16] << 1
	Mem71[pc + 0x025C:word16] = v17_70
	branch v17_70 != 0x0000 l0CBA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CB6:
	Mem75[pc + 0x0256:word16] = Mem71[pc + 0x0256:word16] >> 1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CBA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0CBE_thunk_fn0AE8:
	word16 r4_94
	word16 r5_95
	fn0AE8(r0_44, 0x1178, 0x0CC2, r5, out r0_108, out r4_94, out r5_95)
	r5Out = r5_95
	return r4_94
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0C20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0D98(word16 r0, word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..15] r4:[0..15]
// LiveOut:
// Trashed: NZV r0 r1 r2 r4
// Preserved: sp
fn0D98_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D98:
	word16 r1_16 = 0x0046
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0D9C:
	Mem14[r4:byte] = Mem7[(int16) Mem7[r0:byte] + 0x0EE0:byte]
	r0 = r0 + 0x0002
	r4 = r4 + 0x0001
	r1_16 = r1_16 - 0x0001
	branch r1_16 != 0x0000 l0D9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0DA8:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0D98_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



