word64 _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rsp
_init_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000005A0:
	word64 rax_15 = __gmon_start__
	branch __gmon_start__ == 0x0000000000000000 l00000000000005B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000005B0:
	call __gmon_start__ (retsize: 8;)
		uses: rax:__gmon_start__,rsp:fp - 0x0000000000000008
		defs: rax:rax_8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000005B2:
	return rax_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _start(word64 rdx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx:[0..63] Stack +0000:[0..63]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

_start_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000620:
	__align(fp + 8)
	__libc_start_main(0x0000000000000898, qwArg00, fp + 8, 0x0000000000000A70, 0x0000000000000AE0, rdx, fp)
	__hlt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void deregister_tm_clones(word64 rbp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbp:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi
// Preserved: rbp rsp
deregister_tm_clones_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000650:
	branch 0x0000000000201048 == 0x0000000000201048 l0000000000000680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000667:
	branch _ITM_deregisterTMCloneTable == 0x0000000000000000 l0000000000000680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000680:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000673:
	call _ITM_deregisterTMCloneTable (retsize: 8;)
		uses: rax:_ITM_deregisterTMCloneTable,rbp:rbp,rdi:0x0000000000201048,rsp:fp,Stack +0000:rbp
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

deregister_tm_clones_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void register_tm_clones(word64 rbp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbp:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rsi
// Preserved: rbp rsp
register_tm_clones_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000690:
	word64 rsi_8 = 0x0000000000201048 - 0x0000000000201048
	word64 rsi_13 = (rsi_8 >> 0x0000000000000003) + ((rsi_8 >> 0x0000000000000003) >>u 0x000000000000003F)
	branch rsi_13 >> 0x0000000000000001 == 0x0000000000000000 l00000000000006D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000006B8:
	branch _ITM_registerTMCloneTable == 0x0000000000000000 l00000000000006D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000006D0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000006C4:
	call _ITM_registerTMCloneTable (retsize: 8;)
		uses: rax:_ITM_registerTMCloneTable,rbp:rbp,rdi:0x0000000000201048,rsi:rsi_13 >> 0x0000000000000001,rsp:fp,Stack +0000:rbp
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

register_tm_clones_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __do_global_dtors_aux(word64 rax, word64 rbp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[0..63] rbp:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi
// Preserved: rbp rsp
__do_global_dtors_aux_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000006E0:
	branch Mem0[0x0000000000201048:byte] != 0x00 l0000000000000718
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000718:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000006E9:
	branch __cxa_finalize == 0x0000000000000000 l0000000000000703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000006F7:
	call __cxa_finalize (retsize: 8;)
		uses: rax:rax,rbp:fp - 8,rdi:Mem9[0x0000000000201040:word64],rsp:fp - 8,Stack +0008:rbp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000703:
	deregister_tm_clones(fp - 8)
	Mem22[0x0000000000201048:byte] = 0x01
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void frame_dummy(word64 rbp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbp:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rsi
// Preserved: rbp rsp
frame_dummy_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000720:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000725_thunk_register_tm_clones:
	register_tm_clones(rbp)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

frame_dummy_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 _mm_malloc(word64 rbp, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbp:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi
// Preserved: rbp rcx rdi rdx rsi rsp
_mm_malloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000072A:
	word64 rax_39
	word64 qwLoc28_51 = rsi
	branch rsi != 0x0000000000000001 l000000000000074F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000074F:
	branch rsi == 0x0000000000000002 l000000000000075D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000756:
	branch rsi != 0x0000000000000004 l0000000000000765
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000075D:
	qwLoc28_51 = 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000765:
	word64 rax_31
	call posix_memalign (retsize: 8;)
		uses: rax:fp - 0x0000000000000010,rbp:fp - 8,rcx:qwLoc28_55,rdi:fp - 0x0000000000000010,rdx:rdi,rsi:qwLoc28_55,rsp:fp - 0x0000000000000028,Stack +0008:qwLoc28_55,Stack +0010:rdi,Stack +0020:qwLoc10,Stack +0028:rbp
		defs: rax:rax_31
	branch (word32) rax_31 != 0x00000000 l0000000000000786
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000786:
	rax_39 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000780:
	rax_39 = qwLoc10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000741:
	rax_39 = malloc(rdi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000078B:
	return rax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

_mm_malloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _mm_free(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rbp rdi rsp
_mm_free_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000078D:
	free(rdi)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_mm_free_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void vec_add(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO r10 rax rcx rdx
// Preserved: rbp rsp
vec_add_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000007A8:
	__align(fp)
	word64 rax_29 = (uint64) ((uint128) (uint64) rdi /u Mem22[0x0000000000000B00:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000881:
	branch rax_29 >u 0x0000000000000000 l0000000000000820
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000820:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000088B:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

vec_add_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void main(word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  xmm0:[0..127]
// LiveOut:
// Trashed: SCZO r10 rax rcx rdi rdx rsi xmm0
// Preserved: rbp rsp
main_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000898:
	word64 rax_14 = _mm_malloc(fp - 8, 0x0000000000000020, 0x0000000000002000)
	word64 rax_26 = _mm_malloc(fp - 8, 0x0000000000000020, 0x0000000000002000)
	word64 rax_38 = _mm_malloc(fp - 8, 0x0000000000000020, 0x0000000000002000)
	word64 qwLoc10_198 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000093F:
	branch qwLoc10_198 <u 0x0000000000000400 l00000000000008FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000008FD:
	word64 rcx_54 = qwLoc10_198 * 0x0000000000000008 + rax_14
	word32 eax_61 = (word32) qwLoc10_198
	branch qwLoc10_198 < 0x0000000000000000 l0000000000000921
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000921:
	real64 v26_66 = (real64) (qwLoc10_198 >>u 0x0000000000000001 | (uint64) (eax_61 & 0x00000001))
	xmm0 = DPB(xmm0, v26_66 + v26_66, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000091A:
	xmm0 = DPB(xmm0, (real64) qwLoc10_198, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000936:
	Mem75[rcx_54:real64] = (real64) xmm0
	qwLoc10_198 = qwLoc10_198 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000949:
	word64 qwLoc18_204 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000998:
	branch qwLoc18_204 <u 0x0000000000000400 l0000000000000953
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000953:
	word32 eax_97 = (word32) (qwLoc18_204 + 0x0000000000000001)
	word64 rcx_91 = qwLoc18_204 * 0x0000000000000008 + rax_26
	branch qwLoc18_204 < 0x0000000000000001 l000000000000097A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000097A:
	real64 v19_102 = (real64) (qwLoc18_204 + 0x0000000000000001 >>u 0x0000000000000001 | (uint64) (eax_97 & 0x00000001))
	xmm0 = DPB(xmm0, v19_102 + v19_102, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000973:
	xmm0 = DPB(xmm0, (real64) (qwLoc18_204 + 0x0000000000000001), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000000098F:
	Mem111[rcx_91:real64] = (real64) xmm0
	qwLoc18_204 = qwLoc18_204 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000009A2:
	word64 qwLoc20_210 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000009CC:
	branch qwLoc20_210 <u 0x0000000000000400 l00000000000009AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000009AC:
	xmm0 = __xorpd(xmm0, xmm0)
	Mem130[rax_38 + qwLoc20_210 * 0x0000000000000008:real64] = (real64) xmm0
	qwLoc20_210 = qwLoc20_210 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000009D6:
	vec_add(0x0000000000000400)
	word64 qwLoc28_219 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000A2D:
	branch qwLoc28_219 <u 0x0000000000000400 l00000000000009F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000000009F8:
	printf(0x0000000000000AF8, 0x00000000)
	qwLoc28_219 = qwLoc28_219 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000A37:
	_mm_free(rax_14)
	_mm_free(rax_26)
	_mm_free(rax_38)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

main_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __libc_csu_init(word64 rdx, word64 rbx, word64 rbp, word64 rsi, word32 edi, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] rbp:[0..63] rbx:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
__libc_csu_init_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000A70:
	word32 r15d_83 = (word32) (uint64) edi
	word64 rbp_29 = 0x0000000000200DF0 - 0x0000000000200DE8
	word64 rax_33 = _init()
	branch rbp_29 >> 0x0000000000000003 == 0x0000000000000000 l0000000000000AC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000AA6:
	word64 rbx_41 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000AB0:
	call Mem24[0x0000000000200DE8 + rbx_41 * 0x0000000000000008:word64] (retsize: 8;)
		uses: rax:rax_61,rdi:(uint64) r15d_83,rdx:rdx,rsi:rsi,Stack +0010:rbx,Stack +0018:rbp,Stack +0020:r12,Stack +0028:r13,Stack +0030:r14,Stack +0038:r15
		defs: rax:rax_62
	rbx_41 = rbx_41 + 0x0000000000000001
	branch rbp_29 >> 0x0000000000000003 != rbx_41 l0000000000000AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000AC6:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__libc_csu_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
__libc_csu_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000AE0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

__libc_csu_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000000AE4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



