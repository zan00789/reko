void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax
// Preserved: rsp
_init_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402168:
	branch __gmon_start__ == 0x0000000000000000 l000000000040217D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402178:
	call __gmon_start__ (retsize: 8;)
		uses: rax:__gmon_start__,rsp:fp - 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040217D:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_init_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void free()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
free_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

free_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void malloc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
malloc_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

malloc_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00000000004028C0(word64 rsi, word32 edi, word64 r9, word64 r10, word64 r13, word64 r14, word64 r15, selector fs, word128 xmm0, word128 xmm1, word128 xmm2, int8 Top)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] r10:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r9:[0..63] rsi:[0..63] Top:[0..7] xmm0:[0..127] xmm1:[0..127] xmm2:[0..127]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000000004028C0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004028C0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004028C0:
	fn000000000040D6A0(Mem22[rsi:word64])
	setlocale(0x0000000000000006, 0x0000000000416919)
	bindtextdomain(0x0000000000413800, 0x000000000041381C)
	textdomain(0x0000000000413800)
	Mem52[0x000000000061A580:word32] = 0x00000002
	fn0000000000411EE0(0x000000000040A200)
	Mem61[0x000000000061B030:word32] = 0x00000000
	Mem62[0x000000000061B0D0:byte] = 0x01
	Mem63[0x000000000061B180:word64] = 0x0000000000000000
	word32 eax_68 = (word32) (uint64) Mem63[0x000000000061A56C:word32]
	Mem65[0x000000000061B190:word64] = 0x0000000000000000
	Mem66[0x000000000061B188:word64] = 0xFFFFFFFFFFFFFFFF
	Mem67[0x000000000061B0F0:byte] = 0x00
	word64 rbp_1026 = rsi
	word64 rbx_147 = (uint64) edi
	word64 rsp_1032 = fp - 952
	branch eax_68 == 0x00000002 l0000000000403203
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403203:
	Mem4140[0x000000000061B150:word32] = 0x00000002
	fn000000000040E640(0x00000005, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040297B:
	branch eax_68 == 0x00000003 l00000000004029AF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004029AF:
	Mem78[0x000000000061B150:word32] = 0x00000000
	fn000000000040E640(0x00000005, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402980:
	branch (word32) (uint64) (eax_68 - 0x00000001) == 0x00000000 l000000000040298A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040298A:
	branch isatty(0x0000000000000001) == 0x00000000 l00000000004037EC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037EC:
	Mem94[0x000000000061B150:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040299C:
	Mem95[0x000000000061B150:word32] = 0x00000002
	Mem96[0x000000000061B0F0:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004029C5:
	Mem98[0x000000000061B14C:word32] = 0x00000000
	Mem99[0x000000000061B148:word32] = 0x00000000
	Mem100[0x000000000061B147:byte] = 0x00
	Mem101[0x000000000061B145:byte] = 0x00
	Mem102[0x000000000061B144:byte] = 0x00
	Mem103[0x000000000061B12C:word32] = 0x00000000
	Mem104[0x000000000061B114:byte] = 0x00
	Mem105[0x000000000061B110:word32] = 0x00000001
	Mem106[0x000000000061B10E:byte] = 0x00
	Mem107[0x000000000061B10D:byte] = 0x00
	Mem108[0x000000000061B108:word32] = 0x00000000
	Mem109[0x000000000061B100:word64] = 0x0000000000000000
	Mem110[0x000000000061B0F8:word64] = 0x0000000000000000
	Mem111[0x000000000061B17D:byte] = 0x00
	word64 rax_112 = getenv(0x000000000041382E)
	branch rax_112 == 0x0000000000000000 l0000000000402A7F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402A50:
	word64 rax_122 = fn0000000000409E50(rax_112, 0x0000000000000004, 0x0000000000416460, 0x0000000000416480, rax_112)
	byte al_170 = (byte) rax_122
	branch (word32) rax_122 < 0x00000000 l0000000000403786
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403786:
	fn000000000040E930(rax_112, r10, fs, out rbx_147, out rsp_1032, out rbp_1026, out r8_4851, out r9, out r10, out r12_4852, out r13, out r14, out r15)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415B00, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402A6F:
	fn000000000040E640((word32) (uint64) Mem111[DPB(rax_122, (int16) al_170, 0) * 0x0000000000000004 + 0x00416460:word32], 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402A7F:
	Mem185[0x000000000061B0C8:word64] = 0x0000000000000050
	word64 rax_186 = getenv(0x000000000041383C)
	word64 rax_190 = rsp_1032 + 0x0000000000000040
	Mem193[rsp_1032 + 0x0000000000000020:word64] = rax_190
	branch rax_186 == 0x0000000000000000 l0000000000402AB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402AA6:
	branch Mem193[rax_186:byte] != 0x00 l00000000004037B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037B8:
	word64 r12_218
	branch (word32) (word64) fn0000000000410E90(rax_190, 0x00000000, rbx_147, rbp_1026, 0x0000000000000000, rax_186, 0x0000000000000000, r9, rax_186, r13, r14, r15, out rbx_147, out rsp_1032, out rbp_1026, out r9, out r12_218, out r13, out r14, out r15) != 0x00000000 l0000000000403A93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037D2:
	word64 rax_240 = Mem193[rsp_1032 + 0x0000000000000040:word64]
	branch rax_240 == 0x0000000000000000 l0000000000403A93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A93:
	fn000000000040E930(r12_218, r10, fs, out rbx_147, out rsp_1032, out rbp_1026, out r8_4886, out r9, out r10, out r12_4887, out r13, out r14, out r15)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415B48, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037E0:
	Mem283[0x000000000061B0C8:word64] = rax_240
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402AB1:
	word32 eax_291 = ioctl(0x0000000000000001, 0x0000000000005413, 0x00000000)
	word32 ebx_1937 = (word32) rbx_147
	word64 rax_299 = (uint64) eax_291
	branch eax_291 == 0xFFFFFFFF l0000000000402ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402ACC:
	word32 eax_294 = (word32) Mem285[rsp_1032 + 0x0000000000000042:word16]
	word64 rax_300 = DPB(rax_299, eax_294, 0)
	branch (word16) eax_294 == 0x0000 l0000000000402ADD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402AD6:
	Mem301[0x000000000061B0C8:word64] = rax_300
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402ADD:
	word64 rax_303 = getenv(0x0000000000413844)
	Mem307[0x000000000061B0D8:word64] = 0x0000000000000008
	branch rax_303 == 0x0000000000000000 l0000000000402B22
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402AFA:
	ebx_1937 = (word32) rbx_338 (alias)
	rbx_147 = DPB(rbx_338, ebx_1937, 0) (alias)
	word64 r12_331
	word64 rbx_338
	branch (word32) (word64) fn0000000000410E90(Mem307[rsp_1032 + 0x0000000000000020:word64], 0x00000000, rbx_147, rbp_1026, 0x0000000000000000, rax_303, 0x0000000000000000, r9, rax_303, r13, r14, r15, out rbx_338, out rsp_1032, out rbp_1026, out r9, out r12_331, out r13_4853, out r14_4854, out r15) != 0x00000000 l00000000004041BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004041BB:
	fn000000000040E930(r12_331, r10, fs, out rbx_147, out rsp_1032, out rbp_1026, out r8_4855, out r9, out r10, out r12_4856, out r13_4857, out r14_4858, out r15)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415B88, 0x0000000000000005), 0x00000000)
	ebx_1937 = (word32) rbx_147 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B16:
	Mem392[0x000000000061B0D8:word64] = Mem307[rsp_1032 + 0x0000000000000040:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B22:
	word64 rbx_4085 = DPB(rbx_147, ebx_1937, 0)
	word64 r14_1021 = 0x0000000000000000
	word64 r13_3862 = 0x0000000000000000
	byte r13b_4254 = 0x00
	word64 r12_1019 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B30:
	Mem407[rsp_1032 + 0x0000000000000038:word32] = 0xFFFFFFFF
	word64 r8_1113 = rsp_1032 + 0x0000000000000038
	word64 r13_3863 = DPB(r13_3862, r13b_4254, 0)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	word64 r13_4797 = DPB(r13_3862, r13b_4254, 0)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3863 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3863, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_3862, r13b_4254, 0) (alias)
	word64 rbx_4343 = DPB(rbx_4085, ebx_1937, 0)
	word64 rbx_2035 = DPB(rbx_4085, ebx_1937, 0)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	word64 rbx_4321 = DPB(rbx_4085, ebx_1937, 0)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4343 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4343, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	word64 rbx_4350 = DPB(rbx_4085, ebx_1937, 0)
	rbx_4350 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4350, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4085, ebx_1937, 0) (alias)
	word32 eax_408 = getopt_long((uint64) ebx_1937, rbp_1026, 0x0000000000415BC8, 0x0000000000413080, r8_1113)
	branch eax_408 == 0xFFFFFFFF l000000000040321E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040321E:
	branch Mem407[0x000000000061B138:word64] == 0x0000000000000000 l000000000040398A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040398A:
	word64 rax_414 = getenv(0x00000000004138E1)
	word64 r13_422
	word64 rbx_2038
	word64 r14_2550
	fn000000000040C810(rax_414, 0x000000000061B138, 0x000000000061B140, rax_414, r8_1113, r9, r14_1021, rax_414, out rbx_2038, out rsp_1032, out rbp_1026, out r8_1113, out r9, out r12_1019, out r13_422, out r14_2550, out r15)
	ebx_1937 = (word32) rbx_2038 (alias)
	byte r14b_455 = (byte) r14_2550
	r13b_4254 = (byte) r13_422 (alias)
	rbx_2038 = DPB(rbx_2038, ebx_1937, 0) (alias)
	word64 rbx_2037 = DPB(rbx_2038, ebx_1937, 0)
	rbx_2037 = DPB(rbx_2038, ebx_1937, 0) (alias)
	rbx_2035 = DPB(rbx_2037, ebx_1937, 0) (alias)
	rbx_2035 = DPB(rbx_2037, ebx_1937, 0) (alias)
	r14_2550 = DPB(r14_2550, r14b_455, 0) (alias)
	word64 r14_2549 = DPB(r14_2550, r14b_455, 0)
	r14_2549 = DPB(r14_2550, r14b_455, 0) (alias)
	r14_1021 = DPB(r14_2549, r14b_455, 0) (alias)
	branch r15 == 0x0000000000000000 l0000000000404531
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404531:
	branch getenv(0x00000000004138E4) != 0x0000000000000000 l00000000004039B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404544:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004039B2:
	Mem450[0x000000000061B134:word32] = (word32) (uint64) Mem407[0x000000000061B140:word32]
	Mem452[0x000000000061A560:word64] = Mem450[0x000000000061B138:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004039CC:
	branch r14b_455 == 0x00 l000000000040322C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004039D5:
	Mem459[0x000000000061B140:word32] = 0x00000000
	Mem460[0x000000000061B138:word64] = 0x0000000000000400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040322C:
	word64 rbx_2026
	word64 rbx_2025
	word64 rbx_2034 = DPB(rbx_2035, ebx_1937, 0)
	rbx_2034 = DPB(rbx_2035, ebx_1937, 0) (alias)
	word64 rbx_2033 = DPB(rbx_2034, ebx_1937, 0)
	rbx_2033 = DPB(rbx_2034, ebx_1937, 0) (alias)
	word64 rbx_2032 = DPB(rbx_2033, ebx_1937, 0)
	rbx_2032 = DPB(rbx_2033, ebx_1937, 0) (alias)
	rbx_2032 = DPB(rbx_2033, ebx_1937, 0) (alias)
	word64 rbx_2031 = DPB(rbx_2032, ebx_1937, 0)
	rbx_2031 = DPB(rbx_2032, ebx_1937, 0) (alias)
	rbx_2031 = DPB(rbx_2032, ebx_1937, 0) (alias)
	word64 rbx_2030 = DPB(rbx_2031, ebx_1937, 0)
	rbx_2030 = DPB(rbx_2031, ebx_1937, 0) (alias)
	rbx_2017 = DPB(rbx_2031, ebx_1937, 0) (alias)
	rbx_2030 = DPB(rbx_2031, ebx_1937, 0) (alias)
	word64 rbx_2017 = DPB(rbx_2030, ebx_1937, 0)
	word64 rbx_2028 = DPB(rbx_2017, ebx_1937, 0)
	word64 rbx_2061 = DPB(rbx_2017, ebx_1937, 0)
	rbx_2061 = DPB(rbx_2017, ebx_1937, 0) (alias)
	rbx_2028 = DPB(rbx_2061, ebx_1937, 0) (alias)
	word64 rbx_2027 = DPB(rbx_2028, ebx_1937, 0)
	rbx_2017 = DPB(rbx_2025, ebx_1937, 0) (alias)
	rbx_2067 = DPB(rbx_2025, ebx_1937, 0) (alias)
	rbx_2068 = DPB(rbx_2027, ebx_1937, 0) (alias)
	rbx_2069 = DPB(rbx_2026, ebx_1937, 0) (alias)
	rbx_2070 = DPB(rbx_2026, ebx_1937, 0) (alias)
	word64 rbx_1117 = DPB(rbx_2025, ebx_1937, 0)
	word64 rbx_2023 = DPB(rbx_2025, ebx_1937, 0)
	word64 rbx_2022 = DPB(rbx_2025, ebx_1937, 0)
	rbx_2022 = DPB(rbx_2025, ebx_1937, 0) (alias)
	rbx_2022 = DPB(rbx_2025, ebx_1937, 0) (alias)
	rbx_2022 = DPB(rbx_2025, ebx_1937, 0) (alias)
	rbx_2022 = DPB(rbx_2025, ebx_1937, 0) (alias)
	word64 rbx_2021 = DPB(rbx_2025, ebx_1937, 0)
	rbx_2021 = DPB(rbx_2025, ebx_1937, 0) (alias)
	word64 rdx_463 = Mem461[0x000000000061B0C8:word64]
	word64 rax_464 = 0x0000000000000001
	branch rdx_463 >u 0x0000000000000002 l00000000004037FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004037FB:
	rax_464 = (uint64) ((uint128) (uint64) rdx_463 /u 0x0000000000000003)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403242:
	Mem480[0x000000000061B020:word64] = rax_464
	word64 rsi_4253
	word64 rax_481 = fn000000000040E600(0x0000000000000000, out rsi_4253)
	Mem490[0x000000000061B0E8:word64] = rax_481
	branch (word32) (word64) fn000000000040E630(rax_481) == 0x00000005 l000000000040426C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040426C:
	rsi_4253 = fn000000000040E650(0x00000001, 0x0000000000000020, Mem490[0x000000000061B0E8:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403268:
	word64 rax_514 = (uint64) Mem490[0x000000000061B12C:word32]
	branch (word32) rax_514 <=u 0x00000001 l00000000004032A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403273:
	r14_1021 = rax_514 + 0x00000000004138ED
	byte al_521 = (byte) (word32) Mem490[rax_514 + 0x00000000004138ED:byte]
	branch al_521 == 0x00 l00000000004032A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403289:
	r14_1021 = r14_1021 + 0x0000000000000001
	rsi_4253 = fn000000000040E650(0x00000001, DPB(rsi_4253, (int32) al_521, 0), Mem490[0x000000000061B0E8:word64])
	al_521 = (byte) (word32) Mem490[r14_1021:byte] (alias)
	branch al_521 != 0x00 l0000000000403289
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032A9:
	word64 rax_554 = fn000000000040E600(0x0000000000000000, out rsi_4885)
	Mem565[0x000000000061B0E0:word64] = rax_554
	fn000000000040E650(0x00000001, 0x000000000000003A, rax_554)
	branch Mem565[0x000000000061B130:byte] == 0x00 l00000000004032E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032D2:
	branch Mem565[0x000000000061B150:word32] == 0x00000000 l00000000004032E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032DB:
	Mem581[0x000000000061B130:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032E2:
	word64 rax_585 = (uint64) ((word32) (uint64) Mem582[0x000000000061B14C:word32] - 0x00000001)
	branch (word32) rax_585 <=u 0x00000001 l0000000000403965
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403965:
	branch r13b_4254 != 0x00 l00000000004032F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040396E:
	branch Mem582[0x000000000061B150:word32] == 0x00000000 l000000000040380D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040397B:
	Mem604[0x000000000061B148:word32] = 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004032F4:
	branch Mem605[0x000000000061B150:word32] == 0x00000000 l000000000040380D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040380D:
	bool Z_4292 = SLICE(cond(r12_1019), bool, 2)
	branch r12_1019 == 0x0000000000000000 l00000000004045C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045C6:
	word64 rax_623 = getenv(0x00000000004138F5)
	r12_1019 = rax_623
	Z_4292 = SLICE(cond(rax_623), bool, 2) (alias)
	rax_585 = 0x0000000000413827
	branch rax_623 != 0x0000000000000000 l00000000004045DF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045DB_1:
	r12_1019 = 0x0000000000413827
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045DF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403816:
	r14_1021 = 0x0000000000412CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040383E:
	word64 rsi_633 = r12_1019
	word64 rdi_635 = 0x0000000000412CA0
	word64 rcx_637 = 0x0000000000000006
	rbx_2026 = rbx_2068
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403847:
	rbx_2025 = rbx_2070
	branch rcx_637 == 0x0000000000000000 l0000000000403849
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403847_1:
	Z_4292 = SLICE(cond(Mem4290[rsi_4889:byte] - Mem4290[rdi_4890:byte]), bool, 2) (alias)
	rsi_633 = rsi_4889 + 0x0000000000000001
	rdi_635 = rdi_4890 + 0x0000000000000001
	rcx_637 = rcx_637 - 0x0000000000000001
	rsi_4889 = rsi_633
	rdi_4890 = rdi_635
	rbx_2025 = rbx_2069
	rbx_2026 = rbx_2069
	branch Mem4290[rsi_4889:byte] != Mem4290[rdi_4890:byte] l0000000000403847
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403849:
	branch Z_4292 l0000000000403828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403828:
	rax_585 = fn000000000040AB70(0x0000000000000002)
	branch (byte) rax_585 == 0x00 l0000000000403301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040383A:
	r12_1019 = r12_1019 + 0x0000000000000006
	Z_4292 = SLICE(cond(r12_1019), bool, 2) (alias)
	rbx_2027 = rbx_2067
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040384B:
	branch Mem4290[r12_1019:byte] == 0x2B l00000000004043D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043D9:
	word64 r13_1098
	word64 r12_1090 = r12_1019 + 0x0000000000000001
	word64 rax_1093 = strchr(r12_1090, 0x000000000000000A)
	r14_1021 = rax_1093
	branch rax_1093 == 0x0000000000000000 l000000000040444F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040444F:
	r13_1098 = r12_1090
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043F2:
	r13_1098 = rax_1093 + 0x0000000000000001
	branch strchr(rax_1093 + 0x0000000000000001, 0x000000000000000A) == 0x0000000000000000 l0000000000404438
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404408:
	r15 = fn000000000040EC10(r12_1090, r10, fs, out rbx_1117, out rsp_1032, out rbp_1026, out r8_1113, out r9, out r10, out r12_1090, out r13_1098, out r14_1021, out r15_4863)
	error(0x0000000000000002, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000413900, 0x0000000000000005), 0x00000000)
	ebx_1937 = (word32) rbx_1117 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404438:
	Mem1141[r14_1021:byte] = 0x00
	rbx_2023 = DPB(rbx_1117, ebx_1937, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040443C:
	Mem1144[0x000000000061A3D0:word64] = r12_1090
	Mem1147[0x000000000061A3D8:word64] = r13_1098
	rbx_2022 = DPB(rbx_2023, ebx_1937, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403856:
	word64 rax_682 = fn0000000000409E50(rax_585, 0x0000000000000004, 0x00000000004136F0, 0x0000000000413700, r12_1019)
	branch rax_682 < 0x0000000000000000 l0000000000404564
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404564:
	fn0000000000409F80(rax_682, 0x000000000041391D, r10, fs, out r15_4888)
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413928, 0x0000000000000005), Mem4290[0x000000000061A650:word64])
	word64 rbx_754 = 0x0000000000413700
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040459C:
	branch Mem4290[rbx_754:word64] == 0x0000000000000000 l00000000004031D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031D6:
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415BF8, 0x0000000000000005), Mem4290[0x000000000061A650:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045A8:
	__fprintf_chk(Mem4290[0x000000000061A650:word64], 0x0000000000000001, 0x000000000041393E, 0x00000000)
	rbx_754 = rbx_754 + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403876:
	branch rax_682 == 0x0000000000000001 l0000000000404549
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404549:
	Mem782[0x000000000061A3D8:word64] = 0x0000000000413966
	Mem783[0x000000000061A3D0:word64] = 0x0000000000413966
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403880:
	branch rax_682 <= 0x0000000000000001 l0000000000404465
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404465:
	branch rax_682 != 0x0000000000000000 l00000000004038A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040446E:
	Mem788[0x000000000061A3D8:word64] = 0x000000000041394E
	Mem789[0x000000000061A3D0:word64] = 0x000000000041394E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403886:
	branch rax_682 == 0x0000000000000002 l00000000004045F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045F3:
	Mem792[0x000000000061A3D0:word64] = 0x0000000000413975
	Mem793[0x000000000061A3D8:word64] = 0x0000000000413969
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403890:
	branch rax_682 != 0x0000000000000003 l00000000004038A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403896:
	branch (byte) fn000000000040AB70(0x0000000000000002) != 0x00 l000000000040460E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040460E:
	word64 rax_812 = dcgettext(0x0000000000000000, Mem4290[0x000000000061A3D0:word64], 0x0000000000000002)
	word64 rsi_813 = Mem4290[0x000000000061A3D8:word64]
	Mem819[0x000000000061A3D0:word64] = rax_812
	Mem821[0x000000000061A3D8:word64] = dcgettext(0x0000000000000000, rsi_813, 0x0000000000000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004038A8:
	rbx_2021 = DPB(rbx_2022, ebx_1937, 0) (alias)
	branch strstr(Mem1148[0x000000000061A3D0:word64], 0x0000000000413766) == 0x0000000000000000 l0000000000404484
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404484:
	rbx_2021 = DPB(rbx_2021, ebx_1937, 0) (alias)
	rbx_2017 = DPB(rbx_2021, ebx_1937, 0) (alias)
	branch strstr(Mem1155[0x000000000061A3D8:word64], 0x0000000000413766) != 0x0000000000000000 l00000000004038C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040449E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004038C2:
	word64 rbx_2018
	Mem1162[0x000000000061A748:word64] = 0x0000000000000005
	word64 rbx_2020 = DPB(rbx_2021, ebx_1937, 0)
	rbx_2093 = DPB(rbx_2018, ebx_1937, 0) (alias)
	rbx_2094 = DPB(rbx_2020, ebx_1937, 0) (alias)
	rbx_2096 = DPB(rbx_2018, ebx_1937, 0) (alias)
	rbx_2097 = DPB(rbx_2018, ebx_1937, 0) (alias)
	rbx_2017 = DPB(rbx_2018, ebx_1937, 0) (alias)
	word64 rbx_2102 = DPB(rbx_2018, ebx_1937, 0)
	rbx_2102 = DPB(rbx_2018, ebx_1937, 0) (alias)
	rbx_2017 = DPB(rbx_2102, ebx_1937, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004038CD:
	r14_1021 = Mem1163[0x000000000061A748:word64]
	Mem1166[0x000000000061A748:word64] = 0x0000000000000000
	word64 r13_1165 = 0x000000000061A760
	word32 r12d_1168 = 0x0002000E
	rbx_2018 = rbx_2094
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004038EB:
	Mem1172[rsp_1032 + 0x0000000000000040:word64] = r14_1021
	word64 rax_1173 = nl_langinfo((uint64) r12d_1168)
	fn000000000040CDC0(rax_1173, Mem1172[rsp_1032 + 0x0000000000000020:word64], 0x00000000000000A1, r13_1165, rax_1173, 0x00000000, 0x00000000)
	r9 = 0x0000000000000000
	r8_1113 = 0x0000000000000000
	branch false l0000000000404356
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404356:
	Mem1196[0x000000000061A748:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040391F:
	word64 rax_1197 = Mem1172[rsp_1032 + 0x0000000000000040:word64]
	rbx_2018 = rbx_2096
	branch Mem1172[0x000000000061A748:word64] <u rax_1197 l0000000000403933
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040392B_1:
	rax_1197 = Mem1172[0x000000000061A748:word64]
	rbx_2018 = rbx_2097
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403933:
	Mem1208[0x000000000061A748:word64] = rax_1197
	r12d_1168 = (word32) (uint64) (r12d_1168 + 0x00000001) (alias)
	r13_1165 = r13_1165 + 161
	branch r12d_1168 != 0x0002001A l00000000004038EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040394E:
	rbx_2020 = rbx_2093
	branch rax_1197 <u r14_1021 l00000000004038CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403957:
	branch rax_1197 != 0x0000000000000000 l0000000000403301
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403960:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404361:
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415C30, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403301:
	word64 r12_1230 = (uint64) Mem1227[0x000000000061A620:word32]
	word32 r12d_1990 = (word32) r12_1230
	word64 rbx_2016 = DPB(rbx_2017, ebx_1937, 0)
	word64 rbx_1329 = DPB(rbx_2017, ebx_1937, 0)
	rbx_1329 = DPB(rbx_2017, ebx_1937, 0) (alias)
	word64 r12_1327 = DPB(r12_1230, r12d_1990, 0)
	r12_1327 = DPB(r12_1230, r12d_1990, 0) (alias)
	branch Mem1227[0x000000000061B129:byte] != 0x00 l0000000000403AC5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AC5:
	word64 rax_1233 = getenv(0x000000000041397F)
	Mem1258[rsp_1032 + 0x0000000000000038:word64] = rax_1233
	branch rax_1233 == 0x0000000000000000 l0000000000403AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AD9:
	branch Mem1258[rax_1233:byte] != 0x00 l00000000004044FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044FA:
	Mem1263[rsp_1032 + 0x0000000000000030:word16] = 0x3F3F
	Mem1264[rsp_1032 + 0x0000000000000032:byte] = 0x00
	word64 rax_1269 = fn0000000000410E30(rax_1233, rax_1233)
	Mem1281[0x000000000061B118:word64] = rax_1269
	Mem1282[rsp_1032 + 0x0000000000000040:word64] = rax_1269
	word64 r13_1265 = 0x0000000000000000
	word32 edx_1278 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040451F:
	branch edx_1278 >u 0x00000005 l0000000000402985
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404528:
	ebx_1937 = (word32) rbx_4894 (alias)
	ebx_1937 = (word32) rbx_4894 (alias)
	r12d_1990 = (word32) r12_4892 (alias)
	r12d_1990 = (word32) r12_4892 (alias)
	word64 rbx_2111 = DPB(rbx_4894, ebx_1937, 0)
	rbx_2113 = DPB(rbx_2111, ebx_1937, 0) (alias)
	rbx_1329 = DPB(rbx_2111, ebx_1937, 0) (alias)
	rbx_1329 = DPB(rbx_4894, ebx_1937, 0) (alias)
	rbx_1329 = DPB(rbx_4894, ebx_1937, 0) (alias)
	word64 r12_2577 = DPB(r12_4892, r12d_1990, 0)
	r12_2579 = DPB(r12_2577, r12d_1990, 0) (alias)
	r12_1327 = DPB(r12_2577, r12d_1990, 0) (alias)
	r12_1327 = DPB(r12_4892, r12d_1990, 0) (alias)
	r12_1327 = DPB(r12_4892, r12d_1990, 0) (alias)
	switch (edx_1278) { l0000000000404703 l00000000004046D6 l000000000040473B l0000000000404690 l0000000000402985 l0000000000404647 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404647:
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415D98, 0x0000000000000005), 0x00000000)
	free(Mem1299[0x000000000061B118:word64])
	word64 rdi_1301 = Mem1299[0x000000000061B120:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404679:
	branch rdi_1301 == 0x0000000000000000 l0000000000404787
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404787:
	Mem1306[0x000000000061B129:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404682:
	word64 r13_1308 = Mem1299[rdi_1301 + 0x0000000000000020:word64]
	free(rdi_1301)
	rdi_1301 = r13_1308
	rbx_2111 = rbx_2113
	r12_2577 = r12_2579
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404690:
	word64 rax_1311 = Mem1299[rsp_1032 + 0x0000000000000038:word64]
	Mem1313[rsp_1032 + 0x0000000000000038:word64] = rax_1311 + 0x0000000000000001
	edx_1278 = 0x00000005 (alias)
	branch Mem1313[rax_1311:byte] != 0x3D l0000000000404528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004046AC:
	word64 rdi_1318 = Mem1313[rsp_1032 + 0x0000000000000020:word64]
	Mem1325[r13_1265 + 0x0000000000000018:word64] = Mem1313[rsp_1032 + 0x0000000000000040:word64]
	edx_1278 = (word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((byte) ((word64) fn00000000004049E0(r13_1265 + 0x0000000000000010, 0x00, rbx_4894, rbp_4893, rsp_1032 + 0x0000000000000038, rdi_1318, r12_4892, r14_1021, out rbx_1329, out rsp_1032, out rbp_1026, out r8_1113, out r9, out r10, out r12_1327, out r14_1021)) - 0x01), bool, 1)) & 0x00000005) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040473B:
	word64 rax_1357 = Mem1299[rsp_1032 + 0x0000000000000038:word64]
	Mem1360[rsp_1032 + 0x0000000000000038:word64] = rax_1357 + 0x0000000000000001
	r15 = 0x0000000000000000
	edx_1278 = 0x00000005 (alias)
	branch Mem1360[rax_1357:byte] != 0x3D l0000000000404528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040475A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404772:
	word64 rsi_1366 = Mem1360[r15 * 0x0000000000000008 + 0x004135E0:word64]
	word64 r14_1368 = (int64) (word32) r15
	branch rsi_1366 != 0x0000000000000000 l000000000040475C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040475C:
	r15 = r15 + 0x0000000000000001
	branch strcmp(rsp_1032 + 0x0000000000000030, rsi_1366) == 0x00000000 l0000000000404828
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404828:
	word64 rdi_1381 = Mem1360[rsp_1032 + 0x0000000000000020:word64]
	word64 rcx_1382 = (r14_1368 << 0x0000000000000004) + 0x000000000061A3E0
	Mem1388[rcx_1382 + 0x0000000000000008:word64] = Mem1360[rsp_1032 + 0x0000000000000040:word64]
	edx_1278 = 0x00000000 (alias)
	r12_4892 = r12_1327
	rbp_4893 = rbp_1026
	rbx_4894 = rbx_1329
	branch (byte) (word64) fn00000000004049E0(rcx_1382, 0x00, rbx_4894, rbp_4893, rsp_1032 + 0x0000000000000038, rdi_1381, r12_4892, r14_1368 << 0x0000000000000004, out rbx_1329, out rsp_1032, out rbp_1026, out r8_1113, out r9, out r10, out r12_1327, out r14_1021) != 0x00 l0000000000404528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404782:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404857:
	r14_1021 = fn000000000040E930(rsp_1032 + 0x0000000000000030, r10, fs, out rbx_1329, out rsp_1032, out rbp_1026, out r8_1113, out r9, out r10, out r12_1327, out r13_1265, out r14_4865, out r15)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x00000000004139FB, 0x0000000000000005), 0x00000000)
	edx_1278 = 0x00000005 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004046D6:
	word64 rax_1458 = Mem1299[rsp_1032 + 0x0000000000000038:word64]
	edx_1278 = 0x00000005 (alias)
	branch Mem1299[rax_1458:byte] == 0x00 l0000000000404528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004046E9:
	Mem1463[rsp_1032 + 0x0000000000000038:word64] = rax_1458 + 0x0000000000000001
	Mem1467[rsp_1032 + 0x0000000000000031:byte] = (byte) (word32) Mem1463[rax_1458:byte]
	edx_1278 = 0x00000002 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404703:
	word64 rax_1468 = Mem1299[rsp_1032 + 0x0000000000000038:word64]
	byte cl_1470 = (byte) (word32) Mem1299[rax_1468:byte]
	branch cl_1470 == 0x2A l00000000004047D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004047D4:
	word64 rbx_1475
	word64 rsp_1477
	word64 rax_1474 = fn0000000000410C40(rbx_4894, out rbx_1475, out rsp_1477)
	word64 rax_1483 = Mem1299[0x000000000061B120:word64]
	word64 rdi_1484 = Mem1299[rsp_1477 + 0x0000000000000020:word64]
	Mem1489[rsp_1477 + 0x0000000000000038:word64] = Mem1299[rsp_1477 + 0x0000000000000038:word64] + 0x0000000000000001
	Mem1491[0x000000000061B120:word64] = rax_1474
	Mem1492[rax_1474 + 0x0000000000000020:word64] = rax_1483
	Mem1494[rax_1474 + 0x0000000000000008:word64] = Mem1492[rsp_1477 + 0x0000000000000040:word64]
	r13_1265 = rax_1474
	edx_1278 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((byte) ((word64) fn00000000004049E0(rax_1474, 0x01, rbx_1475, rbp_4893, rsp_1477 + 0x0000000000000038, rdi_1484, r12_4892, r14_1021, out rbx_1329, out rsp_1032, out rbp_1026, out r8_1113, out r9, out r10, out r12_1327, out r14_1021)) - 0x01), bool, 1)) & 0x00000002) + 0x00000003) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404714:
	branch cl_1470 == 0x3A l00000000004047C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004047C6:
	Mem1528[rsp_1032 + 0x0000000000000038:word64] = rax_1468 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040471D:
	branch cl_1470 == 0x00 l000000000040478E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040478E:
	r12_1327 = DPB(r12_1327, r12d_1990, 0) (alias)
	r12_1327 = DPB(r12_1327, r12d_1990, 0) (alias)
	r12_1327 = DPB(r12_1327, r12d_1990, 0) (alias)
	rbx_1329 = DPB(rbx_1329, ebx_1937, 0) (alias)
	rbx_1329 = DPB(rbx_1329, ebx_1937, 0) (alias)
	rbx_1329 = DPB(rbx_1329, ebx_1937, 0) (alias)
	branch Mem1532[0x000000000061A450:word64] != 0x0000000000000006 l0000000000403AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040479C:
	branch strncmp(Mem1532[0x000000000061A458:word64], 0x0000000000413989, 0x0000000000000006) != 0x00000000 l0000000000403AE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004047BA:
	Mem1542[0x000000000061B198:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404721:
	Mem1544[rsp_1032 + 0x0000000000000038:word64] = rax_1468 + 0x0000000000000001
	Mem1548[rsp_1032 + 0x0000000000000030:byte] = (byte) (word32) Mem1544[rax_1468:byte]
	edx_1278 = 0x00000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AE2:
	word64 r12_2599
	word64 rbx_2133
	r12_1230 = DPB(r12_1327, r12d_1990, 0) (alias)
	word64 r12_2588 = DPB(r12_1327, r12d_1990, 0)
	r12_2588 = DPB(r12_1327, r12d_1990, 0) (alias)
	r12_2588 = DPB(r12_1327, r12d_1990, 0) (alias)
	r12_2588 = DPB(r12_2588, r12d_1990, 0) (alias)
	r12_2588 = DPB(r12_2588, r12d_1990, 0) (alias)
	r12_2588 = DPB(r12_2588, r12d_1990, 0) (alias)
	r12_1230 = DPB(r12_2588, r12d_1990, 0) (alias)
	word64 r12_2602 = DPB(r12_2588, r12d_1990, 0)
	r12_2605 = DPB(r12_2602, r12d_1990, 0) (alias)
	r12_2606 = DPB(r12_2602, r12d_1990, 0) (alias)
	word64 r12_2601 = DPB(r12_2602, r12d_1990, 0)
	r12_2609 = DPB(r12_2601, r12d_1990, 0) (alias)
	word64 r12_2598 = DPB(r12_2601, r12d_1990, 0)
	r12_2612 = DPB(r12_2598, r12d_1990, 0) (alias)
	r12_2613 = DPB(r12_2598, r12d_1990, 0) (alias)
	r12_2614 = DPB(r12_2598, r12d_1990, 0) (alias)
	r12_2615 = DPB(r12_2599, r12d_1990, 0) (alias)
	r12_1230 = DPB(r12_2598, r12d_1990, 0) (alias)
	rbx_2016 = DPB(rbx_1329, ebx_1937, 0) (alias)
	word64 rbx_2122 = DPB(rbx_1329, ebx_1937, 0)
	rbx_2122 = DPB(rbx_1329, ebx_1937, 0) (alias)
	rbx_2122 = DPB(rbx_1329, ebx_1937, 0) (alias)
	rbx_2122 = DPB(rbx_2122, ebx_1937, 0) (alias)
	rbx_2122 = DPB(rbx_2122, ebx_1937, 0) (alias)
	rbx_2122 = DPB(rbx_2122, ebx_1937, 0) (alias)
	rbx_2016 = DPB(rbx_2122, ebx_1937, 0) (alias)
	word64 rbx_2136 = DPB(rbx_2122, ebx_1937, 0)
	rbx_2139 = DPB(rbx_2136, ebx_1937, 0) (alias)
	rbx_2140 = DPB(rbx_2136, ebx_1937, 0) (alias)
	word64 rbx_2135 = DPB(rbx_2136, ebx_1937, 0)
	rbx_2143 = DPB(rbx_2135, ebx_1937, 0) (alias)
	word64 rbx_2132 = DPB(rbx_2135, ebx_1937, 0)
	rbx_2146 = DPB(rbx_2132, ebx_1937, 0) (alias)
	rbx_2147 = DPB(rbx_2132, ebx_1937, 0) (alias)
	rbx_2148 = DPB(rbx_2132, ebx_1937, 0) (alias)
	rbx_2149 = DPB(rbx_2133, ebx_1937, 0) (alias)
	rbx_2016 = DPB(rbx_2132, ebx_1937, 0) (alias)
	branch Mem1549[0x000000000061B129:byte] == 0x00 l0000000000403315
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AEF:
	branch (byte) fn0000000000404CD0(0x0000000D) != 0x00 l0000000000403B2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403AFD:
	branch (byte) fn0000000000404CD0(0x0000000E) == 0x00 l0000000000403B14
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B0B:
	branch Mem1549[0x000000000061B198:byte] != 0x00 l0000000000403B2B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B14:
	branch (byte) fn0000000000404CD0(0x0000000C) == 0x00 l0000000000403B32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B22:
	branch Mem1549[0x000000000061B150:word32] != 0x00000000 l0000000000403B32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B2B:
	Mem1602[0x000000000061B115:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B32:
	branch tcgetpgrp(0x0000000000000001) < 0x00000000 l0000000000403315
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B44:
	sigemptyset(0x000000000061B040)
	word64 r13_1609 = 0x0000000000412CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B51:
	word32 r14d_1620 = (word32) (uint64) Mem1685[r13_1609 + 0x0000000000000000:word32]
	sigaction((uint64) r14d_1620, 0x0000000000000000, Mem1685[rsp_1032 + 0x0000000000000020:word64])
	rbx_2136 = rbx_2139
	r12_2602 = r12_2605
	branch Mem1685[rsp_1032 + 0x0000000000000040:word64] == 0x0000000000000001 l0000000000403B7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B6F:
	sigaddset(0x000000000061B040, (uint64) r14d_1620)
	rbx_2136 = rbx_2140
	r12_2602 = r12_2606
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B7C:
	r13_1609 = r13_1609 + 0x0000000000000004
	branch r13_1609 != 0xFFFFFFFFFFBED370 l0000000000403B51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B86:
	word64 rdi_1633 = rsp_1032 + 0x0000000000000048
	word64 rsi_1634 = 0x000000000061B040
	word64 rcx_1635 = 0x0000000000000020
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B95:
	branch rcx_1635 == 0x0000000000000000 l0000000000403B97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B97:
	Mem1638[rsp_1032 + 0x00000000000000C8:word32] = 0x10000000
	word64 r13_1643 = DPB(r13_1609, 0x00, 0) + 0x0000000000412CC0
	r14_1021 = 0x00000000004049B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BAB:
	r15 = (uint64) Mem1644[r13_1643 + 0x0000000000000000:word32]
	word32 r15d_1647 = (word32) r15
	word64 r15_2523 = DPB(r15, r15d_1647, 0)
	r15_2523 = DPB(r15, r15d_1647, 0) (alias)
	r15 = DPB(r15_2523, r15d_1647, 0) (alias)
	rbx_2132 = rbx_2146
	r12_2598 = r12_2612
	branch sigismember(0x000000000061B040, (uint64) r15d_1647) == 0x00000000 l0000000000403BE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BC3:
	word64 rsi_1654 = Mem1644[rsp_1032 + 0x0000000000000020:word64]
	word64 rax_1656 = 0x00000000004057F0
	rbx_2133 = rbx_2147
	r12_2599 = r12_2613
	branch r15d_1647 == 0x00000014 l0000000000403BD5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BD1_1:
	rax_1656 = 0x00000000004049B0
	rbx_2133 = rbx_2148
	r12_2599 = r12_2614
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BD5:
	Mem1668[rsp_1032 + 0x0000000000000040:word64] = rax_1656
	sigaction((uint64) r15d_1647, rsi_1654, 0x0000000000000000)
	rbx_2132 = rbx_2149
	r12_2598 = r12_2615
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BE4:
	r13_1643 = r13_1643 + 0x0000000000000004
	branch r13_1643 != 0xFFFFFFFFFFBED370 l0000000000403BAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BEE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403B95_1:
	Mem1680[rdi_1633:word32] = Mem1677[rsi_1634:word32]
	rsi_1634 = rsi_1634 + 0x0000000000000004
	rdi_1633 = rdi_1633 + 0x0000000000000004
	rcx_1635 = rcx_1635 - 0x0000000000000001
	rbx_2135 = rbx_2143
	r12_2601 = r12_2609
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403315:
	word64 r12_2571 = DPB(r12_1230, r12d_1990, 0)
	word64 r12_2619 = DPB(r12_1230, r12d_1990, 0)
	r12_2619 = DPB(r12_1230, r12d_1990, 0) (alias)
	r12_2619 = DPB(r12_1230, r12d_1990, 0) (alias)
	r12_2571 = DPB(r12_2619, r12d_1990, 0) (alias)
	word64 r12_2570 = DPB(r12_2571, r12d_1990, 0)
	r12_2570 = DPB(r12_2571, r12d_1990, 0) (alias)
	word64 r12_2627 = DPB(r12_2570, r12d_1990, 0)
	r12_2627 = DPB(r12_2570, r12d_1990, 0) (alias)
	r12_2627 = DPB(r12_2570, r12d_1990, 0) (alias)
	r12_2627 = DPB(r12_2570, r12d_1990, 0) (alias)
	r12_2627 = DPB(r12_2570, r12d_1990, 0) (alias)
	word64 r12_2569 = DPB(r12_2570, r12d_1990, 0)
	r12_2569 = DPB(r12_2570, r12d_1990, 0) (alias)
	r12_2569 = DPB(r12_2570, r12d_1990, 0) (alias)
	r12_2569 = DPB(r12_2570, r12d_1990, 0) (alias)
	r12_2569 = DPB(r12_2627, r12d_1990, 0) (alias)
	r12_2569 = DPB(r12_2569, r12d_1990, 0) (alias)
	word64 r12_2568 = DPB(r12_2569, r12d_1990, 0)
	r12_2568 = DPB(r12_2569, r12d_1990, 0) (alias)
	word64 r12_2374 = DPB(r12_2568, r12d_1990, 0)
	word64 rbx_2015 = DPB(rbx_2016, ebx_1937, 0)
	word64 rbx_2153 = DPB(rbx_2016, ebx_1937, 0)
	rbx_2153 = DPB(rbx_2016, ebx_1937, 0) (alias)
	rbx_2153 = DPB(rbx_2016, ebx_1937, 0) (alias)
	rbx_2015 = DPB(rbx_2153, ebx_1937, 0) (alias)
	word64 rbx_2014 = DPB(rbx_2015, ebx_1937, 0)
	rbx_2014 = DPB(rbx_2015, ebx_1937, 0) (alias)
	word64 rbx_2161 = DPB(rbx_2014, ebx_1937, 0)
	rbx_2161 = DPB(rbx_2014, ebx_1937, 0) (alias)
	rbx_2161 = DPB(rbx_2014, ebx_1937, 0) (alias)
	rbx_2161 = DPB(rbx_2014, ebx_1937, 0) (alias)
	rbx_2161 = DPB(rbx_2014, ebx_1937, 0) (alias)
	word64 rbx_2013 = DPB(rbx_2014, ebx_1937, 0)
	rbx_2013 = DPB(rbx_2014, ebx_1937, 0) (alias)
	rbx_2013 = DPB(rbx_2014, ebx_1937, 0) (alias)
	rbx_2013 = DPB(rbx_2014, ebx_1937, 0) (alias)
	rbx_2013 = DPB(rbx_2161, ebx_1937, 0) (alias)
	rbx_2013 = DPB(rbx_2013, ebx_1937, 0) (alias)
	word64 rbx_2012 = DPB(rbx_2013, ebx_1937, 0)
	rbx_2012 = DPB(rbx_2013, ebx_1937, 0) (alias)
	word64 rbx_2176 = DPB(rbx_2012, ebx_1937, 0)
	branch Mem1684[0x000000000061B110:word32] == 0x00000001 l0000000000403A39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A39:
	word32 eax_1701 = 0x00000002
	branch Mem1684[0x000000000061B10D:byte] != 0x00 l0000000000403A5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A47:
	branch Mem1684[0x000000000061B12C:word32] == 0x00000003 l0000000000403A5F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A50:
	eax_1701 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond(Mem1684[0x000000000061B150:word32] - 0x00000001), bool, 1)) & 0xFFFFFFFE) + 0x00000004) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A5F:
	Mem1705[0x000000000061B110:word32] = eax_1701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403322:
	branch Mem1706[0x000000000061B10E:byte] != 0x00 l00000000004039EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004039EF:
	word64 rax_1852 = fn000000000040B400(0x0000000000404990, 0x0000000000404980, 0x0000000000000000, 0x000000000000001E, 0x00000000004049D0, xmm0, xmm1, xmm2, out r9, out xmm0, out xmm1, out xmm2)
	Mem1870[0x000000000061B1C8:word64] = rax_1852
	branch rax_1852 == 0x0000000000000000 l00000000004043BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A1B:
	_obstack_begin(0x000000000061AF00, 0x0000000000000000, 0x0000000000000000, 0x0000000000402640, 0x00000000004021F0)
	r8_1113 = 0x00000000004021F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040332F:
	byte al_1909
	word32 eax_1883 = (word32) (uint64) Mem1881[0x000000000061B148:word32]
	branch eax_1883 == 0x00000004 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040333E:
	branch eax_1883 == 0x00000002 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403347:
	branch Mem1881[0x000000000061B150:word32] == 0x00000000 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403354:
	branch Mem1881[0x000000000061B17D:byte] != 0x00 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403361:
	branch Mem1881[0x000000000061B144:byte] != 0x00 l000000000040377A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040377A:
	Mem1894[0x000000000061B0C1:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040336E:
	Mem1896[0x000000000061B0C1:byte] = 0x00
	al_1909 = 0x01 (alias)
	branch Mem1881[0x000000000061B10E:byte] != 0x00 l00000000004033A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403383:
	branch Mem1896[0x000000000061B129:byte] != 0x00 l00000000004033A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040338C:
	branch Mem1896[0x000000000061B12C:word32] != 0x00000000 l00000000004033A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403395:
	branch Mem1896[0x000000000061B10C:byte] != 0x00 l00000000004033A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040339E:
	al_1909 = 0x00 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004033A0:
	Mem1912[0x000000000061B0C0:byte] = al_1909
	Mem1914[0x000000000061B0C0:byte] = Mem1912[0x000000000061B0C0:byte] & 0x01
	branch Mem1914[0x000000000061B130:byte] == 0x00 l00000000004033E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004033B6:
	_obstack_begin(0x000000000061AFC0, 0x0000000000000000, 0x0000000000000000, 0x0000000000402640, 0x00000000004021F0)
	_obstack_begin(0x000000000061AF60, 0x0000000000000000, 0x0000000000000000, 0x0000000000402640, 0x00000000004021F0)
	r8_1113 = 0x00000000004021F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004033E8:
	Mem1984[0x000000000061B1B8:word64] = 0x0000000000000064
	word64 rbx_2178
	word64 rsp_2180
	word64 rax_2177 = fn0000000000410C40(rbx_2176, out rbx_2178, out rsp_2180)
	Mem2185[0x000000000061B1B0:word64] = 0x0000000000000000
	Mem2186[0x000000000061B1C0:word64] = rax_2177
	fn0000000000404DD0()
	word64 r13_2009 = (uint64) ((word32) (uint64) ebx_1937 - r12d_1990)
	branch (word32) r13_2009 <= 0x00000000 l00000000004042A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042A0:
	branch Mem2186[0x000000000061B10D:byte] == 0x00 l00000000004043A5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043A5:
	fn0000000000404D20(0x00000001, rbx_2178, 0x0000000000000000, 0x0000000000413990)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042AD:
	fn0000000000407EA0(0x0000000000416919, 0x00000001, rbx_2178, rbp_1026, 0x00000003, 0x0000000000413990, r10, fs, Top, out rbx_4870, out rsp_2180, out rbp_1026, out r8_1113, out r9, out r10, out r12_2374, out r13_2009, out r14_1021, out r15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403423:
	rbp_1026 = rbp_1026 + (int64) r12d_1990 * 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040342B:
	fn0000000000407EA0(0x0000000000416919, 0x00000001, rbx_2178, rbp_1026 + 0x0000000000000008, 0x00000000, Mem2186[rbp_1026:word64], r10, fs, Top, out rbx_2178, out rsp_2180, out rbp_1026, out r8_1113, out r9, out r10, out r12_2374, out r13_2009, out r14_1021, out r15)
	branch (word32) rbx_2178 > (word32) r12_2374 l000000000040342B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040344D:
	word64 r13_2688
	word32 r13d_2728 = (word32) r13_2009
	branch Mem2186[0x000000000061B1B0:word64] != 0x0000000000000000 l0000000000404200
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404200:
	word64 r13_2649
	word64 rbx_2645 = fn0000000000404E80(r8_1113, r12_2374, r13_2009, r14_1021, r15, out rsp_2180, out rbp_1026, out r8_1113, out r12_2374, out r13_2649, out r14_4864, out r15)
	r13d_2728 = (word32) r13_2649 (alias)
	branch Mem2186[0x000000000061B10D:byte] == 0x00 l0000000000404454
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404454:
	fn0000000000405090(rbx_2645, 0x01, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404212:
	branch Mem2186[0x000000000061B1B0:word64] == 0x0000000000000000 l000000000040345B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404220:
	rsp_2180 = fn00000000004079F0(r10, r15, fs, Top, out rbp_1026, out r8_1113, out r9, out r10, out r12_2374, out r13_2688, out r14_4869, out r15)
	branch Mem2186[0x000000000061B190:word64] == 0x0000000000000000 l00000000004044B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044B5:
	Mem2709[rsp_2180 + 0x0000000000000018:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404233:
	word64 rdi_2710 = Mem2186[0x000000000061A610:word64]
	word64 rax_2711 = Mem2186[rdi_2710 + 0x0000000000000028:word64]
	branch rax_2711 >=u Mem2186[rdi_2710 + 0x0000000000000030:word64] l00000000004044A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044A3:
	__overflow(rdi_2710, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404248:
	Mem2717[rdi_2710 + 0x0000000000000028:word64] = rax_2711 + 0x0000000000000001
	Mem2718[rax_2711:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404253:
	word64 rax_2720 = Mem2719[0x000000000061B190:word64]
	Mem2722[0x000000000061B018:word64] = Mem2719[0x000000000061B018:word64] + 0x0000000000000001
	Mem2725[rsp_2180 + 0x0000000000000018:word64] = rax_2720
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040345B:
	word64 rax_2727 = Mem2186[0x000000000061B190:word64]
	Mem2738[rsp_2180 + 0x0000000000000018:word64] = rax_2727
	r13_2688 = (uint64) (r13d_2728 - 0x00000001)
	branch (word32) r13_2688 > 0x00000000 l00000000004034D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040346D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404385:
	branch rax_2727 == 0x0000000000000000 l00000000004034D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040438E:
	branch Mem2738[rax_2727 + 0x0000000000000018:word64] != 0x0000000000000000 l00000000004034D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404399:
	Mem2745[0x000000000061B0D0:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034D2:
	branch Mem2747[rsp_2180 + 0x0000000000000018:word64] == 0x0000000000000000 l00000000004040B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040B5:
	branch Mem2747[0x000000000061B129:byte] == 0x00 l0000000000404152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040C2:
	branch Mem2747[0x000000000061B128:byte] == 0x00 l00000000004040ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040CB:
	branch Mem2747[0x000000000061A3E0:word64] == 0x0000000000000002 l00000000004042CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042CB:
	branch memcmp(Mem2747[0x000000000061A3E8:word64], 0x00000000004139E1, 0x0000000000000002) != 0x00000000 l00000000004040D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042E9:
	branch Mem2747[0x000000000061A3F0:word64] != 0x0000000000000001 l00000000004040D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004042F7:
	branch Mem2747[Mem2747[0x000000000061A3F8:word64]:byte] != 0x6D l00000000004040D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404307:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040D9:
	fn0000000000406440(0x000000000061A3E0, out ecx_4881)
	fn0000000000406440(0x000000000061A3F0, out ecx_4882)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004040ED:
	fflush_unlocked(Mem2747[0x000000000061A610:word64])
	word64 rbx_2791 = 0x0000000000412CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040410D:
	rbp_1026 = (uint64) Mem2747[rbx_2791:word32]
	word32 ebp_2797 = (word32) rbp_1026
	rbp_1026 = DPB(rbp_1026, ebp_2797, 0) (alias)
	branch sigismember(0x000000000061B040, (uint64) ebp_2797) == 0x00000000 l0000000000404100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040411F:
	signal((uint64) ebp_2797, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404100:
	rbx_2791 = rbx_2791 + 0x0000000000000004
	branch rbx_2791 == 0x0000000000412CF0 l000000000040412A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040412A:
	word32 ebx_2815 = (word32) (uint64) Mem2747[0x000000000061B034:word32]
	branch ebx_2815 == 0x00000000 l0000000000404143
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404134:
	raise(0x0000000000000013)
	ebx_2815 = (word32) (uint64) (ebx_2815 - 0x00000001) (alias)
	branch ebx_2815 != 0x00000000 l0000000000404134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404143:
	word64 rdi_2828 = (uint64) Mem2747[0x000000000061B038:word32]
	branch (word32) rdi_2828 == 0x00000000 l0000000000404152
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040414D:
	raise(rdi_2828)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404152:
	branch Mem2747[0x000000000061B130:byte] != 0x00 l000000000040430C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040430C:
	fn0000000000405630(0x000000000061AFC0, 0x00000000004139E4)
	fn0000000000405630(0x000000000061AF60, 0x00000000004139EE)
	fn000000000040E630(Mem2747[0x000000000061B0E8:word64])
	__printf_chk(0x0000000000000001, 0x0000000000415D40, 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040415F:
	word64 rbx_2876 = Mem2747[0x000000000061B1C8:word64]
	branch rbx_2876 == 0x0000000000000000 l00000000004041F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040416F:
	word64 rax_2881 = fn000000000040AFB0(rbx_2876)
	branch rax_2881 == 0x0000000000000000 l00000000004041ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004041ED:
	fn000000000040B640(rax_2881, rbx_2876, rbp_1026, rbx_2876, r12_2374)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004041F5:
	exit((uint64) Mem2747[0x000000000061B030:word32])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040417C:
	__assert_fail(0x0000000000415D68, 0x0000000000413736, 0x00000000000005DC, 0x0000000000412CA7)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034DE:
	word64 r14_2919
	word64 rcx_2913 = Mem2747[rsp_2180 + 0x0000000000000018:word64]
	Mem2916[0x000000000061B190:word64] = Mem2747[rcx_2913 + 0x0000000000000018:word64]
	branch Mem2747[0x000000000061B1C8:word64] == 0x0000000000000000 l0000000000403FB5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403FB5:
	r14_2919 = Mem2916[Mem2916[rsp_2180 + 0x0000000000000018:word64]:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034FC:
	r14_2919 = Mem2916[rcx_2913:word64]
	branch r14_2919 == 0x0000000000000000 l0000000000403FC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403FC2:
	word64 rax_2924 = Mem2916[0x000000000061AF18:word64]
	branch (word32) (rax_2924 - Mem2916[0x000000000061AF10:word64]) <=u 0x0000000F l00000000004044C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044C3:
	__assert_fail(0x0000000000415C58, 0x0000000000413736, 0x00000000000003D5, 0x0000000000412C38)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403FDC:
	branch Mem2916[0x000000000061AF20:word64] - rax_2924 >= 0xFFFFFFFFFFFFFFF0 l0000000000404002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403FEC:
	_obstack_newchunk(0x000000000061AF00, 0x00000000FFFFFFF0)
	rax_2924 = Mem2916[0x000000000061AF18:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404002:
	word64 rsi_2945 = Mem2916[rsp_2180 + 0x0000000000000020:word64]
	word64 rdi_2946 = Mem2916[0x000000000061B1C8:word64]
	Mem2947[0x000000000061AF18:word64] = rax_2924 - 0x0000000000000010
	word64 rax_2949 = Mem2947[rax_2924 - 0x0000000000000008:word64]
	Mem2950[rsp_2180 + 0x0000000000000040:word64] = Mem2947[rax_2924 - 0x0000000000000010:word64]
	Mem2951[rsp_2180 + 0x0000000000000048:word64] = rax_2949
	word64 rax_2971 = fn000000000040BB90(rax_2949, rbp_1026, rsi_2945, rdi_2946, r8_1113, r9, r10, r12_2374, r13_2688, r14_2919, xmm0, xmm1, xmm2, out r8_1113, out r9, out r10, out xmm0, out xmm1, out xmm2)
	branch rax_2971 == 0x0000000000000000 l0000000000404287
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404287:
	__assert_fail(0x0000000000413992, 0x0000000000413736, 0x000000000000059D, 0x0000000000412CA7)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404039:
	free(rax_2971)
	word64 rbx_2994 = Mem2951[rsp_2180 + 0x0000000000000018:word64]
	free(Mem2951[rbx_2994:word64])
	free(Mem2951[rbx_2994 + 0x0000000000000008:word64])
	free(rbx_2994)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403508:
	word64 rax_3000 = Mem2916[rsp_2180 + 0x0000000000000018:word64]
	word64 rbx_3002 = Mem2916[rax_3000 + 0x0000000000000008:word64]
	Mem3004[rsp_2180 + 0x000000000000002F:byte] = (byte) (word32) Mem2916[rax_3000 + 0x0000000000000010:byte]
	word64 rax_3005 = __errno_location()
	Mem3008[rax_3005:word32] = 0x00000000
	word64 rax_3010 = opendir(r14_2919)
	r12_2374 = rax_3005
	word64 r13_3013 = rax_3010
	branch rax_3010 == 0x0000000000000000 l0000000000404195
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404195:
	dcgettext(0x0000000000000000, 0x0000000000413998, 0x0000000000000005)
	fn0000000000405810(r14_2919, r10, fs, out r8_1113, out r9, out r10, out r13_2688, out r14_4866, out r15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040353B:
	branch Mem3008[0x000000000061B1C8:word64] == 0x0000000000000000 l00000000004035FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403549:
	byte al_3064
	word32 eax_3047 = dirfd(rax_3010)
	word64 rdx_3050 = Mem3008[rsp_2180 + 0x0000000000000020:word64]
	branch eax_3047 < 0x00000000 l0000000000403E95
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E95:
	al_3064 = (byte) (uint64) (__xstat(0x0000000000000001, r14_2919, rdx_3050) >>u 0x0000001F) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040355E:
	al_3064 = (byte) (uint64) (__fxstat(0x0000000000000001, (uint64) eax_3047, rdx_3050) >>u 0x0000001F) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040356D:
	branch al_3064 != 0x00 l0000000000403478
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403478:
	dcgettext(0x0000000000000000, 0x0000000000415CE8, 0x0000000000000005)
	fn0000000000405810(r14_2919, r10, fs, out r8_1113, out r9, out r10, out r13_2688, out r14_4867, out r15)
	closedir(r13_2688)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403575:
	word64 rdx_3104 = Mem3008[rsp_2180 + 0x0000000000000040:word64]
	Mem3106[rsp_2180 + 0x0000000000000010:word64] = Mem3008[rsp_2180 + 0x0000000000000048:word64]
	Mem3107[rsp_2180 + 0x0000000000000008:word64] = rdx_3104
	word64 rax_3109 = fn0000000000410C40(rbx_3002, out rbx_3002, out rsp_2180)
	word64 rdx_3118 = Mem3107[rsp_2180 + 0x0000000000000008:word64]
	word64 rdi_3120 = Mem3107[0x000000000061B1C8:word64]
	Mem3122[rax_3109:word64] = Mem3107[rsp_2180 + 0x0000000000000010:word64]
	Mem3123[rax_3109 + 0x0000000000000008:word64] = rdx_3118
	word64 rax_3138 = fn000000000040BB50(rax_3109, rax_3109, rdi_3120, r8_1113, r9, r10, rax_3010, r14_2919, xmm0, xmm1, xmm2, out r8_1113, out r9, out r10, out xmm0, out xmm1, out xmm2)
	branch rax_3138 == 0x0000000000000000 l00000000004043BB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043BB:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004035BF:
	branch rax_3109 != rax_3138 l0000000000403EE2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403EE2:
	free(rax_3109)
	fn000000000040EAB0(r14_2919, r10, fs, out rbp_1026, out r8_1113, out r9, out r10, out r12_2374, out r13_2688, out r14_4868, out r15)
	error(0x0000000000000000, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000415D10, 0x0000000000000005), 0x00000000)
	closedir(r13_2688)
	Mem3193[0x000000000061B030:word32] = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004035C8:
	rax_3010 = Mem3123[0x000000000061AF18:word64]
	branch Mem3123[0x000000000061AF20:word64] - rax_3010 <= 0x000000000000000F l0000000000404064
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404064:
	_obstack_newchunk(0x000000000061AF00, 0x0000000000000010)
	rax_3010 = Mem3123[0x000000000061AF18:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004035E3:
	Mem3204[0x000000000061AF18:word64] = rax_3010 + 0x0000000000000010
	Mem3207[rax_3010 + 0x0000000000000008:word64] = Mem3204[rsp_2180 + 0x0000000000000040:word64]
	Mem3209[rax_3010:word64] = Mem3207[rsp_2180 + 0x0000000000000048:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004035FF:
	branch Mem3210[0x000000000061B10E:byte] != 0x00 l0000000000403615
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403608:
	branch Mem3210[0x000000000061B0D0:byte] == 0x00 l00000000004036D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403615:
	branch Mem3210[0x000000000061A3C0:byte] != 0x00 l0000000000403646
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040361E:
	word64 rdi_3218 = Mem3210[0x000000000061A610:word64]
	rax_3010 = Mem3210[rdi_3218 + 0x0000000000000028:word64]
	branch rax_3010 >=u Mem3210[rdi_3218 + 0x0000000000000030:word64] l00000000004045E4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004045E4:
	rax_3010 = DPB(rax_3010, __overflow(rdi_3218, 0x000000000000000A), 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403633:
	Mem3225[rdi_3218 + 0x0000000000000028:word64] = rax_3010 + 0x0000000000000001
	Mem3226[rax_3010:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040363E:
	Mem3229[0x000000000061B018:word64] = Mem3227[0x000000000061B018:word64] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403646:
	Mem3233[0x000000000061A3C0:byte] = 0x00
	branch Mem3231[0x000000000061B130:byte] != 0x00 l0000000000403F2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403F2E:
	rax_3010 = DPB(rax_3010, fwrite_unlocked(0x0000000000413771, 0x0000000000000001, 0x0000000000000002, Mem3233[0x000000000061A610:word64]), 0) (alias)
	Mem3241[0x000000000061B018:word64] = Mem3233[0x000000000061B018:word64] + 0x0000000000000002
	branch Mem3241[0x000000000061B130:byte] == 0x00 l000000000040365A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403F5E:
	rax_3010 = Mem3241[0x000000000061AF78:word64]
	branch Mem3241[0x000000000061AF80:word64] <u rax_3010 + 0x0000000000000008 l000000000040407F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040407F:
	_obstack_newchunk(0x000000000061AF60, 0x0000000000000008)
	rax_3010 = Mem3241[0x000000000061AF78:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403F76:
	Mem3254[rax_3010:word64] = Mem3241[0x000000000061B018:word64]
	Mem3256[0x000000000061AF78:word64] = Mem3254[0x000000000061AF78:word64] + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040365A:
	word64 rdx_3268 = Mem3267[0x000000000061B0E0:word64]
	word64 rdi_3269 = Mem3267[0x000000000061A610:word64]
	branch rbx_3002 != 0x0000000000000000 l000000000040366F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040366B_1:
	rbx_3002 = r14_2919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040366F:
	fn00000000004052D0(0x0000000000000000, rdx_3268, rbx_3002, rdi_3269, r10, rax_3005, fs, out r8_1113, out r9, out r10)
	Mem3334[0x000000000061B018:word64] = Mem3267[0x000000000061B018:word64] + rax_3010
	branch Mem3334[0x000000000061B130:byte] == 0x00 l00000000004036B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403689:
	word64 rax_3337 = Mem3334[0x000000000061AF78:word64]
	branch Mem3334[0x000000000061AF80:word64] <u rax_3337 + 0x0000000000000008 l000000000040409A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040409A:
	_obstack_newchunk(0x000000000061AF60, 0x0000000000000008)
	rax_3337 = Mem3334[0x000000000061AF78:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004036A1:
	Mem3347[rax_3337:word64] = Mem3334[0x000000000061B018:word64]
	Mem3349[0x000000000061AF78:word64] = Mem3347[0x000000000061AF78:word64] + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004036B3:
	fwrite_unlocked(0x000000000041393B, 0x0000000000000001, 0x0000000000000002, Mem3351[0x000000000061A610:word64])
	Mem3358[0x000000000061B018:word64] = Mem3351[0x000000000061B018:word64] + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004036D6:
	fn0000000000404DD0()
	word32 eax_3377 = (word32) Mem3376[rsp_2180 + 0x000000000000002F:byte]
	Mem3378[rsp_2180 + 0x0000000000000008:word64] = 0x0000000000000000
	Mem3379[rsp_2180 + 0x0000000000000010:word32] = eax_3377
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004036F0:
	Mem3381[r12_2374:word32] = 0x00000000
	word64 rax_3384 = readdir(r13_3013)
	branch rax_3384 == 0x0000000000000000 l0000000000403CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403CC0:
	branch (word32) (uint64) Mem3381[r12_2374:word32] == 0x00000000 l0000000000403CF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403CC8:
	dcgettext(0x0000000000000000, 0x00000000004139B1, 0x0000000000000005)
	fn0000000000405810(r14_2919, r10, fs, out r8_1113, out r9, out r10, out r13_3013, out r14_2919, out r15)
	branch Mem3381[r12_2374:word32] == 0x0000004B l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403CF3:
	branch closedir(r13_3013) != 0x00000000 l0000000000403EBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403EBC:
	dcgettext(0x0000000000000000, 0x00000000004139C6, 0x0000000000000005)
	fn0000000000405810(r14_2919, r10, fs, out r8_1113, out r9, out r10, out r13_3013, out r14_2919, out r15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D03:
	word64 r14_3480
	word64 rbx_3475 = fn0000000000404E80(r8_1113, r12_2374, r13_3013, r14_2919, r15, out rsp_2180, out rbp_1026, out r8_1113, out r12_2374, out r13_2688, out r14_3480, out r15)
	branch Mem3381[0x000000000061B10E:byte] != 0x00 l0000000000403EAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403EAA:
	fn0000000000405090(rbx_3475, (byte) (word32) Mem3381[rsp_2180 + 0x000000000000002F:byte], r14_3480)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D15:
	branch (word32) (uint64) Mem3381[0x000000000061B150:word32] == 0x00000000 l0000000000403D2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D1F:
	branch Mem3381[0x000000000061B144:byte] == 0x00 l0000000000403E00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D2C:
	branch Mem3381[0x000000000061B130:byte] != 0x00 l0000000000403F8D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403F8D:
	fwrite_unlocked(0x0000000000413771, 0x0000000000000001, 0x0000000000000002, Mem3381[0x000000000061A610:word64])
	Mem3522[0x000000000061B018:word64] = Mem3381[0x000000000061B018:word64] + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D39:
	word64 rax_3527 = dcgettext(0x0000000000000000, 0x00000000004139DB, 0x0000000000000005)
	fputs_unlocked(rax_3527, Mem3528[0x000000000061A610:word64])
	word64 rax_3536 = DPB(rax_3527, strlen(rax_3527), 0)
	word64 rdi_3535 = Mem3528[0x000000000061A610:word64]
	Mem3538[0x000000000061B018:word64] = Mem3528[0x000000000061B018:word64] + rax_3536
	word64 rax_3539 = Mem3538[rdi_3535 + 0x0000000000000028:word64]
	branch rax_3539 >=u Mem3538[rdi_3535 + 0x0000000000000030:word64] l00000000004044EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044EB:
	__overflow(rdi_3535, 0x0000000000000020)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D80:
	Mem3545[rdi_3535 + 0x0000000000000028:word64] = rax_3539 + 0x0000000000000001
	Mem3546[rax_3539:byte] = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403D8B:
	word64 r8_3548 = Mem3547[0x000000000061B138:word64]
	word32 edx_3560 = (word32) (uint64) Mem3547[0x000000000061B140:word32]
	word64 rdi_3555 = Mem3547[rsp_2180 + 0x0000000000000008:word64]
	Mem3558[0x000000000061B018:word64] = Mem3547[0x000000000061B018:word64] + 0x0000000000000001
	word64 rax_3576 = fn000000000040BD70(0x0000000000000200, edx_3560, rsp_2180 + 0x00000000000000E0, rdi_3555, r8_3548, fs, Top, out r8_1113, out r9)
	fputs_unlocked(rax_3576, Mem3558[0x000000000061A610:word64])
	word64 rax_3592 = DPB(rax_3576, strlen(rax_3576), 0)
	word64 rdi_3591 = Mem3558[0x000000000061A610:word64]
	Mem3594[0x000000000061B018:word64] = Mem3558[0x000000000061B018:word64] + rax_3592
	word64 rax_3595 = Mem3594[rdi_3591 + 0x0000000000000028:word64]
	branch rax_3595 >=u Mem3594[rdi_3591 + 0x0000000000000030:word64] l00000000004044DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004044DC:
	__overflow(rdi_3591, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403DED:
	Mem3601[rdi_3591 + 0x0000000000000028:word64] = rax_3595 + 0x0000000000000001
	Mem3602[rax_3595:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403DF8:
	Mem3605[0x000000000061B018:word64] = Mem3603[0x000000000061B018:word64] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E00:
	branch Mem3607[0x000000000061B1B0:word64] == 0x0000000000000000 l00000000004034A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E0E:
	rsp_2180 = fn00000000004079F0(r10, r15, fs, Top, out rbp_1026, out r8_1113, out r9, out r10, out r12_2374, out r13_2688, out r14_4880, out r15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034A1:
	word64 rbx_3651 = Mem3650[rsp_2180 + 0x0000000000000018:word64]
	free(Mem3650[rbx_3651:word64])
	free(Mem3650[rbx_3651 + 0x0000000000000008:word64])
	free(rbx_3651)
	Mem3655[0x000000000061B0D0:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004034C6:
	Mem3659[rsp_2180 + 0x0000000000000018:word64] = Mem3656[0x000000000061B190:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040370C:
	word32 eax_3662 = (word32) (uint64) Mem3381[0x000000000061B108:word32]
	branch eax_3662 == 0x00000002 l0000000000403C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040371F:
	branch Mem3381[rax_3384 + 0x0000000000000013:byte] == 0x2E l0000000000403C58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C58:
	branch eax_3662 == 0x00000000 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C60:
	branch Mem3381[rax_3384 + 0x0000000000000014 + (uint64) (Mem3381[rax_3384 + 0x0000000000000014:byte] == 0x2E):byte] == 0x00 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C74:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403729:
	branch eax_3662 != 0x00000000 l0000000000403C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403731:
	r15 = Mem3381[0x000000000061B0F8:word64]
	branch r15 != 0x0000000000000000 l0000000000403755
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403755:
	branch fnmatch(Mem3381[r15:word64], rax_3384 + 0x0000000000000013, 0x0000000000000004) != 0x00000000 l0000000000403748
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403748:
	r15 = Mem3381[r15 + 0x0000000000000008:word64]
	branch r15 == 0x0000000000000000 l0000000000403C78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403769:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040373D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C78:
	r15 = Mem3381[0x000000000061B100:word64]
	branch r15 != 0x0000000000000000 l0000000000403C9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C9D:
	branch fnmatch(Mem3381[r15:word64], rax_3384 + 0x0000000000000013, 0x0000000000000004) != 0x00000000 l0000000000403C90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C90:
	r15 = Mem3381[r15 + 0x0000000000000008:word64]
	branch r15 == 0x0000000000000000 l0000000000403E20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403CB1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C84:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E20:
	word64 rax_3724 = (uint64) ((word32) Mem3381[rax_3384 + 0x0000000000000012:byte] - 0x00000001)
	word32 esi_3746 = 0x00000000
	byte al_3725 = (byte) rax_3724
	branch al_3725 >u 0x0D l0000000000403E37
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E2D:
	esi_3746 = (word32) (uint64) Mem3381[DPB(rax_3724, (word32) al_3725, 0) * 0x0000000000000004 + 0x00412C00:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E37:
	word64 rsp_3778
	Mem3786[rsp_3778 + 0x0000000000000008:word64] = Mem3381[rsp_3778 + 0x0000000000000008:word64] + fn0000000000407EA0(r14_2919, 0x00000000, rax_3384 + 0x0000000000000013, rax_3384, esi_3746, rax_3384 + 0x0000000000000013, r10, fs, Top, out rbx_4871, out rsp_3778, out rbp_4872, out r8_1113, out r9, out r10, out r12_2374, out r13_3013, out r14_2919, out r15)
	branch Mem3786[0x000000000061B150:word32] != 0x00000001 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E56:
	branch Mem3786[0x000000000061B148:word32] != 0xFFFFFFFF l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E63:
	branch Mem3786[0x000000000061B144:byte] != 0x00 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E70:
	branch Mem3786[0x000000000061B10E:byte] != 0x00 l0000000000403770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403E7D:
	word64 r15_3803
	fn0000000000404E80(r8_1113, r12_2374, r13_3013, r14_2919, r15, out rsp_4873, out rbp_4874, out r8_4875, out r12_4876, out r13_4877, out r14_4878, out r15_3803)
	fn00000000004079F0(r10, r15_3803, fs, Top, out rbp_4879, out r8_1113, out r9, out r10, out r12_2374, out r13_3013, out r14_2919, out r15)
	fn0000000000404DD0()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403770:
	fn0000000000406490()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B5A:
	word64 rax_822 = (uint64) (eax_408 + 0x00000083)
	word32 eax_823 = (word32) rax_822
	word64 rax_833 = DPB(rax_822, eax_823, 0)
	branch eax_823 >u 0x00000112 l00000000004031F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B6A:
	rbx_4897 = rbx_4343
	r13_4900 = r13_3863
	switch (eax_823) { l0000000000402DFF l0000000000402DF8 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402DDC l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402DC0 l0000000000402D75 l0000000000402D66 l0000000000402D5A l00000000004031F9 l0000000000402D4B l0000000000402D3F l0000000000402D30 l0000000000402D05 l00000000004031F9 l00000000004031F9 l0000000000402CF6 l00000000004031F9 l0000000000402CE8 l00000000004031F9 l00000000004031F9 l0000000000402CD7 l0000000000402CCB l0000000000402CB6 l0000000000402C85 l0000000000402C70 l00000000004031F9 l00000000004031F9 l0000000000402C5B l00000000004031F9 l0000000000402C4F l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402C40 l0000000000402C2F l0000000000402C20 l0000000000402C14 l00000000004031F9 l0000000000402BDA l0000000000402BC4 l0000000000402B95 l0000000000402B8C l00000000004031F9 l0000000000402B84 l0000000000402B78 l00000000004031C7 l0000000000402B71 l00000000004031B1 l00000000004031A2 l0000000000403196 l000000000040318A l000000000040317E l0000000000403169 l000000000040315A l0000000000403145 l00000000004030DC l00000000004030CD l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004030C1 l0000000000403084 l000000000040302E l000000000040301F l0000000000403010 l0000000000402FD6 l0000000000402FC1 l0000000000402FB5 l0000000000402F8A l0000000000402F50 l0000000000402F15 l0000000000402F09 l0000000000402EDA l0000000000402E9A l0000000000402E60 l0000000000402E54 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E54:
	r12_1019 = Mem407[0x000000000061A640:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E60:
	Mem856[0x000000000061B14C:word32] = (word32) (uint64) Mem407[fn000000000040A120(rax_833, 0x0000000000412F50, 0x0000000000412F80, Mem407[0x000000000061A640:word64], 0x0000000000413883, 0x0000000000000004, r10, fs, out rbx_4085, out rsp_1032, out rbp_1026, out r9, out r10, out r12_1019, out r13_3862, out r14_1021, out r15) * 0x0000000000000004 + 0x00412F50:word32]
	ebx_1937 = (word32) rbx_4085 (alias)
	r13b_4254 = (byte) r13_3862 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E9A:
	Mem886[0x000000000061B148:word32] = (word32) (uint64) Mem407[fn000000000040A120(rax_833, 0x0000000000412FB0, 0x0000000000412FE0, Mem407[0x000000000061A640:word64], 0x000000000041387C, 0x0000000000000004, r10, fs, out rbx_4085, out rsp_1032, out rbp_1026, out r9, out r10, out r12_1019, out r13_3862, out r14_1021, out r15) * 0x0000000000000004 + 0x00412FB0:word32]
	ebx_1937 = (word32) rbx_4085 (alias)
	r13b_4254 = (byte) r13_3862 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402EDA:
	Mem887[0x000000000061B140:word32] = 0x00000090
	Mem888[0x000000000061B134:word32] = 0x00000090
	Mem889[0x000000000061B138:word64] = 0x0000000000000001
	Mem890[0x000000000061A560:word64] = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402F09:
	Mem891[0x000000000061B0F0:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402F15:
	fn000000000040E640((word32) (uint64) Mem407[fn000000000040A120(rax_833, 0x0000000000416460, 0x0000000000416480, Mem407[0x000000000061A640:word64], 0x00000000004138AD, 0x0000000000000004, r10, fs, out rbx_4085, out rsp_1032, out rbp_1026, out r9, out r10, out r12_1019, out r13_3862, out r14_1021, out r15) * 0x0000000000000004 + 0x00416460:word32], 0x0000000000000000)
	ebx_1937 = (word32) rbx_4085 (alias)
	r13b_4254 = (byte) r13_3862 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402F50:
	Mem957[0x000000000061B12C:word32] = (word32) (uint64) Mem407[fn000000000040A120(rax_833, 0x00000000004136B0, 0x00000000004136C0, Mem407[0x000000000061A640:word64], 0x000000000041389B, 0x0000000000000004, r10, fs, out rbx_4085, out rsp_1032, out rbp_1026, out r9, out r10, out r12_1019, out r13_3862, out r14_1021, out r15) * 0x0000000000000004 + 0x004136B0:word32]
	ebx_1937 = (word32) rbx_4085 (alias)
	r13b_4254 = (byte) r13_3862 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402F8A:
	word64 rax_961 = fn0000000000410C40(rbx_4343, out rbx_4085, out rsp_1032)
	Mem970[rax_961:word64] = Mem407[0x000000000061A640:word64]
	word64 rdx_971 = Mem970[0x000000000061B0F8:word64]
	Mem972[0x000000000061B0F8:word64] = rax_961
	Mem973[rax_961 + 0x0000000000000008:word64] = rdx_971
	ebx_1937 = (word32) rbx_4085 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402FB5:
	Mem974[0x000000000061B10C:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402FC1:
	Mem975[0x000000000061B150:word32] = 0x00000000
	r12_1019 = 0x0000000000413813
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402FD6:
	Mem1005[0x000000000061B150:word32] = (word32) (uint64) Mem407[fn000000000040A120(rax_833, 0x0000000000413010, 0x0000000000413040, Mem407[0x000000000061A640:word64], 0x000000000041388A, 0x0000000000000004, r10, fs, out rbx_4085, out rsp_1032, out rbp_1026, out r9, out r10, out r12_1019, out r13_3862, out r14_1021, out r15) * 0x0000000000000004 + 0x00413010:word32]
	ebx_1937 = (word32) rbx_4085 (alias)
	r13b_4254 = (byte) r13_3862 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403010:
	Mem1006[0x000000000061B12C:word32] = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040301F:
	Mem1007[0x000000000061B110:word32] = 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040302E:
	word64 rbx_1027
	word64 r13_1020
	word64 rsi_1008 = Mem407[0x000000000061A640:word64]
	branch rsi_1008 == 0x0000000000000000 l0000000000403A7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040303E:
	ebx_1937 = (word32) rbx_1027 (alias)
	r13b_4254 = (byte) r13_1020 (alias)
	rbx_4321 = DPB(rbx_1027, ebx_1937, 0) (alias)
	rbx_4321 = DPB(rbx_1027, ebx_1937, 0) (alias)
	rbx_4085 = DPB(rbx_4321, ebx_1937, 0) (alias)
	r13_4797 = DPB(r13_1020, r13b_4254, 0) (alias)
	r13_4797 = DPB(r13_1020, r13b_4254, 0) (alias)
	r13_3862 = DPB(r13_4797, r13b_4254, 0) (alias)
	word32 eax_1038 = (word32) (uint64) Mem407[fn000000000040A120(rax_833, 0x0000000000412EC0, 0x0000000000412F00, rsi_1008, 0x0000000000413893, 0x0000000000000004, r10, fs, out rbx_1027, out rsp_1032, out rbp_1026, out r9, out r10, out r12_1019, out r13_1020, out r14_1021, out r15) * 0x0000000000000004 + 0x00412EC0:word32]
	rbx_4321 = rbx_1027
	r13_4797 = r13_1020
	branch eax_1038 == 0x00000001 l0000000000403A7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040306F:
	rbx_4895 = rbx_4321
	r13_4898 = r13_4797
	branch eax_1038 == 0x00000002 l0000000000403A6A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A6A:
	rbx_4896 = rbx_4321
	r13_4899 = r13_4797
	branch isatty(0x0000000000000001) == 0x00000000 l0000000000403078
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403A7C:
	Mem1048[0x000000000061B129:byte] = 0x01
	Mem1049[0x000000000061B0D8:word64] = 0x0000000000000000
	r13_3862 = DPB(r13_4797, r13b_4254, 0) (alias)
	rbx_4085 = DPB(rbx_4321, ebx_1937, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403078:
	Mem1050[0x000000000061B129:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403084:
	ebx_1937 = (word32) rbx_1059 (alias)
	r13b_4254 = (byte) r13_1056 (alias)
	word64 r13_1056
	word64 rbx_1059
	word32 eax_1073 = (word32) (word64) fn000000000040C810(rax_833, 0x000000000061B138, 0x000000000061B140, Mem407[0x000000000061A640:word64], r8_1113, r9, r14_1021, r15, out rbx_1059, out rsp_1032, out rbp_1026, out r8_4860, out r9, out r12_1019, out r13_1056, out r14_1021, out r15)
	rbx_4085 = DPB(rbx_1059, ebx_1937, 0) (alias)
	r13_3862 = DPB(r13_1056, r13b_4254, 0) (alias)
	branch eax_1073 != 0x00000000 l00000000004043C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004043C0:
	fn00000000004112D0((word32) (uint64) Mem407[rsp_1032 + 0x0000000000000038:word32], (word32) (uint64) eax_1073)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030A2:
	Mem3848[0x000000000061B134:word32] = (word32) (uint64) Mem407[0x000000000061B140:word32]
	Mem3850[0x000000000061A560:word64] = Mem3848[0x000000000061B138:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030C1:
	Mem3851[0x000000000061B146:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030CD:
	Mem3852[0x000000000061B150:word32] = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030DC:
	ebx_1937 = (word32) rbx_3871 (alias)
	r13b_4254 = (byte) r13_3865 (alias)
	word64 rbx_3902 = DPB(rbx_3871, ebx_1937, 0)
	word64 r13_3895 = DPB(r13_3865, r13b_4254, 0)
	word64 r13_3865
	word64 rbx_3871
	branch (word32) (word64) fn0000000000410E90(Mem407[rsp_1032 + 0x0000000000000020:word64], 0x00000000, rbx_4343, rbp_1026, 0x0000000000000000, Mem407[0x000000000061A640:word64], 0x0000000000000000, r9, r12_1019, r13_3863, r14_1021, r15, out rbx_3871, out rsp_1032, out rbp_1026, out r9, out r12_1019, out r13_3865, out r14_1021, out r15) != 0x00000000 l0000000000403100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004030F8:
	branch Mem407[rsp_1032 + 0x0000000000000040:word64] != 0x0000000000000000 l0000000000403134
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403100:
	r15 = fn000000000040E930(Mem407[0x000000000061A640:word64], r10, fs, out rbx_3902, out rsp_1032, out rbp_1026, out r8_4861, out r9, out r10, out r12_1019, out r13_3895, out r14_1021, out r15_4862)
	error(0x0000000000000002, 0x0000000000000000, dcgettext(0x0000000000000000, 0x000000000041384C, 0x0000000000000005), 0x00000000)
	ebx_1937 = (word32) rbx_3902 (alias)
	r13b_4254 = (byte) r13_3895 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403134:
	Mem3928[0x000000000061B0C8:word64] = Mem407[rsp_1032 + 0x0000000000000040:word64]
	r13_3862 = DPB(r13_3895, r13b_4254, 0) (alias)
	rbx_4085 = DPB(rbx_3902, ebx_1937, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403145:
	Mem3929[0x000000000061B148:word32] = 0x00000003
	r13_3862 = 0x0000000000000001
	r13b_4254 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040315A:
	Mem3931[0x000000000061B14C:word32] = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403169:
	Mem3932[0x000000000061B148:word32] = 0x00000004
	r13_3862 = 0x0000000000000001
	r13b_4254 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040317E:
	Mem3934[0x000000000061B144:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040318A:
	Mem3935[0x000000000061B147:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403196:
	Mem3936[0x000000000061B0F0:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031A2:
	Mem3937[0x000000000061B12C:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031B1:
	Mem3938[0x000000000061B150:word32] = 0x00000000
	Mem3939[0x000000000061A568:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B71:
	Mem3940[0x000000000061B145:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031C7:
	Mem3941[0x000000000061B150:word32] = 0x00000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B78:
	Mem3942[0x000000000061B150:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B84:
	r14_1021 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B8C:
	Mem3944[0x000000000061B114:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402B95:
	Mem3945[0x000000000061B140:word32] = 0x000000B0
	Mem3946[0x000000000061B134:word32] = 0x000000B0
	Mem3947[0x000000000061B138:word64] = 0x0000000000000001
	Mem3948[0x000000000061A560:word64] = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402BC4:
	Mem3949[0x000000000061B150:word32] = 0x00000000
	Mem3950[0x000000000061A569:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402BDA:
	Mem3952[0x000000000061B108:word32] = 0x00000002
	Mem3953[0x000000000061B148:word32] = 0xFFFFFFFF
	branch Mem407[0x000000000061B150:word32] == 0x00000000 l0000000000403C36
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403C36:
	Mem3964[0x000000000061B150:word32] = (word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond(isatty(0x0000000000000001) - 0x00000001), bool, 1)) + 0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402BFB:
	Mem3965[0x000000000061B144:byte] = 0x00
	Mem3966[0x000000000061B129:byte] = 0x00
	r13_3862 = 0x0000000000000001
	r13b_4254 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C14:
	Mem3968[0x000000000061B10D:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C20:
	Mem3969[0x000000000061B14C:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C2F:
	fn000000000040E640(0x00000005, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C40:
	Mem3981[0x000000000061B108:word32] = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C4F:
	Mem3982[0x000000000061B17D:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C5B:
	Mem3983[0x000000000061B148:word32] = 0x00000001
	r13_3862 = 0x0000000000000001
	r13b_4254 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C70:
	Mem3985[0x000000000061B148:word32] = 0xFFFFFFFF
	r13_3862 = 0x0000000000000001
	r13b_4254 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402C85:
	word64 r13_4022
	word64 rbx_4029
	ebx_1937 = (word32) rbx_4003 (alias)
	r13b_4254 = (byte) r13_3997 (alias)
	rbx_4029 = rbx_4003
	r13_4022 = r13_3997
	word64 r13_3997
	word64 rbx_4003
	branch (word32) (word64) fn0000000000410E90(Mem407[rsp_1032 + 0x0000000000000020:word64], 0x00000000, rbx_4343, rbp_1026, 0x0000000000000000, Mem407[0x000000000061A640:word64], 0x0000000000000000, r9, r12_1019, r13_3863, r14_1021, r15, out rbx_4003, out rsp_1032, out rbp_1026, out r9, out r12_1019, out r13_3997, out r14_1021, out r15) != 0x00000000 l0000000000403BFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BFD:
	r15 = fn000000000040E930(Mem407[0x000000000061A640:word64], r10, fs, out rbx_4029, out rsp_1032, out rbp_1026, out r8_4883, out r9, out r10, out r12_1019, out r13_4022, out r14_1021, out r15_4884)
	error(0x0000000000000002, 0x0000000000000000, dcgettext(0x0000000000000000, 0x0000000000413867, 0x0000000000000005), 0x00000000)
	ebx_1937 = (word32) rbx_4029 (alias)
	r13b_4254 = (byte) r13_4022 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CA5:
	Mem4055[0x000000000061B0D8:word64] = Mem407[rsp_1032 + 0x0000000000000040:word64]
	r13_3862 = DPB(r13_4022, r13b_4254, 0) (alias)
	rbx_4085 = DPB(rbx_4029, ebx_1937, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CB6:
	Mem4056[0x000000000061B148:word32] = 0x00000002
	r13_3862 = 0x0000000000000001
	r13b_4254 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CCB:
	Mem4058[0x000000000061B10E:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CD7:
	fn000000000040E640(0x00000003, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CE8:
	fn000000000040E640(0x00000000, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402CF6:
	Mem4081[0x000000000061B110:word32] = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D05:
	r15 = Mem407[0x000000000061A640:word64]
	word64 rax_4084 = fn0000000000410C40(rbx_4343, out rbx_4085, out rsp_1032)
	word64 rdx_4092 = Mem407[0x000000000061B100:word64]
	Mem4093[rax_4084:word64] = r15
	Mem4094[rax_4084 + 0x0000000000000008:word64] = rdx_4092
	Mem4095[0x000000000061B100:word64] = rax_4084
	ebx_1937 = (word32) rbx_4085 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D30:
	Mem4096[0x000000000061B110:word32] = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D3F:
	Mem4097[0x000000000061A568:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D4B:
	Mem4098[0x000000000061B12C:word32] = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D5A:
	Mem4099[0x000000000061B130:byte] = 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D66:
	Mem4100[0x000000000061B150:word32] = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402D75:
	word64 rbx_4103
	word64 rax_4102 = fn0000000000410C40(rbx_4343, out rbx_4103, out rsp_4859)
	word64 rdx_4110 = Mem407[0x000000000061B100:word64]
	Mem4111[rax_4102:word64] = 0x0000000000413864
	Mem4113[0x000000000061B100:word64] = rax_4102
	Mem4114[rax_4102 + 0x0000000000000008:word64] = rdx_4110
	word64 rax_4115 = fn0000000000410C40(rbx_4103, out rbx_4085, out rsp_1032)
	word64 rdx_4123 = Mem4114[0x000000000061B100:word64]
	Mem4124[rax_4115:word64] = 0x0000000000413863
	Mem4125[rax_4115 + 0x0000000000000008:word64] = rdx_4123
	Mem4126[0x000000000061B100:word64] = rax_4115
	ebx_1937 = (word32) rbx_4085 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DC0:
	branch Mem407[0x000000000061B108:word32] != 0x00000000 l0000000000402B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DCD:
	Mem4129[0x000000000061B108:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DDC:
	branch Mem407[0x000000000061B150:word32] == 0x00000000 l0000000000402B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DE9:
	Mem4132[0x000000000061B150:word32] = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004031F9:
	fn0000000000409750(0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DF8:
	fn0000000000409750(0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402DFF:
	word64 rsi_4156
	word32 eax_4153 = (word32) (uint64) Mem407[0x000000000061A56C:word32]
	word64 rcx_4152 = Mem407[0x000000000061A570:word64]
	branch eax_4153 == 0x00000001 l0000000000403BF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000403BF3:
	rsi_4156 = 0x0000000000413807
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E15:
	rsi_4156 = 0x000000000041380F
	branch eax_4153 == 0x00000002 l0000000000402E26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E22_1:
	rsi_4156 = 0x000000000041380E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402E26:
	word64 rdi_4163 = Mem407[0x000000000061A610:word64]
	Mem4165[rsp_1032:word64] = 0x0000000000000000
	fn0000000000410B30(0x00, rcx_4152, rbx_4343, rbp_1026, rsi_4156, rdi_4163, r12_1019, r13_3863, r14_1021, r15)
	exit(0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000402985:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000404890(word64 rdx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx:[0..63] Stack +0000:[0..63]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000404890_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404890_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404890:
	__align(fp + 8)
	__libc_start_main(0x00000000004028C0, qwArg00, fp + 8, 0x0000000000411E60, 0x0000000000411ED0, rdx, fp)
	__hlt()
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00000000004048C0(word64 rbp, word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63] rbp:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rdi
// Preserved: rbp rsp
fn00000000004048C0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004048C0:
	branch false l00000000004048D7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004048D7:
	branch 0x0000000000000000 == 0x0000000000000000 l00000000004048D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004048E1:
	call 0x0000000000000000 (retsize: 8;)
		uses: r8:r8 - 6399480,rax:0x0000000000000000,rdi:0x000000000061A5F8,Stack +0000:rbp
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004048D5:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004048C0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn00000000004049E0(word64 rcx, byte dl, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r12, word64 r14, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl:[0..7] r12:[0..63] r14:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r10 r12 r14 r8 r9 rax rbp rbx rsp
// Trashed: SCZO dl r10 r11 r12 r14 r8 r9 rax rbp rbx rcx rdi rsi rsp
// Preserved:
fn00000000004049E0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004049E0:
	word64 qwLoc08_448 = r14
	word64 r8_114 = Mem5[rsi:word64]
	word64 r9_10 = Mem5[rdi:word64]
	word64 r10_106 = 0x0000000000000000
	word64 r11_12 = 0x0000000000000000
	word64 qwLoc10_449 = r12
	word64 r12_19 = 0x0000000000000000
	word64 qwLoc18_450 = rbp
	word64 rbp_226 = rcx
	word64 rsp_193 = fp - 32
	word64 qwLoc20_451 = rbx
	word64 rbx_230 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A06:
	word64 rax_154
	word64 rax_284
	word64 rax_243
	word64 rax_127
	byte al_144
	word32 eax_121
	word32 eax_177
	byte SZO_147
	byte al_132
	word32 r11d_116 = (word32) r11_12
	byte r11b_364 = (byte) r11d_116
	r11_12 = DPB(r11_12, r11d_116, 0) (alias)
	rax_123 = 0x0000000000000000 (alias)
	rax_123 = 0x0000000000000000 (alias)
	word64 rax_123 = 0x0000000000000000
	rax_123 = 0x0000000000000000 (alias)
	branch 0xFFFFFFFE == 0x00000000 l0000000000404A59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A59:
	rax_123 = DPB(rax_123, (word32) Mem120[r8_114:byte], 0) (alias)
	r11b_364 = (byte) r11_12 (alias)
	rcx = DPB(rcx, rax_123 - 0x0000000000000030, 0) (alias)
	branch (byte) (rax_123 - 0x0000000000000030) <=u 0x07 l0000000000404A50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A50:
	r11_12 = DPB(r11_12, rax_123 - 0x0000000000000030 + r11_12 * 0x0000000000000008, 0) (alias)
	r8_114 = r8_114 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A0B:
	branch false l0000000000404B20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B20:
	branch true l0000000000404A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A11:
	branch 0xFFFFFFFD == 0x00000000 l0000000000404AE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AE0:
	rax_123 = DPB(rax_123, (word32) Mem120[r8_114:byte], 0) (alias)
	word32 r11d_363 = DPB(r11d_116, r11b_364, 0)
	r11_12 = DPB(r11_12, r11b_364, 0) (alias)
	byte cl_56 = (byte) (rax_123 - 0x0000000000000030)
	rcx = DPB(rcx, rax_123 - 0x0000000000000030, 0) (alias)
	branch cl_56 >u 0x36 l0000000000404A65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AF0:
	r14 = rbx_230 << cl_56
	r11b_364 = (byte) r11d_363 (alias)
	word32 r14d_89 = (word32) r14
	word32 r11d_112 = DPB(r11d_363, r11b_364, 0)
	r11_12 = DPB(r11_12, r11b_364, 0) (alias)
	rcx = DPB(rcx, cl_56, 0) (alias)
	r14 = DPB(r14, r14d_89, 0) (alias)
	branch ((word32) r14 & 0x007E0000) != 0x00000000 l0000000000404B78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B78:
	word64 r11_70 = (uint64) (r11d_363 << 0x00000004)
	r8_114 = r8_114 + 0x0000000000000001
	rax_123 = DPB(rax_123, (word32) Mem120[r8_114:byte], 0) (alias)
	r11d_363 = rax_123 - 0x0000000000000037 + r11_70
	cl_56 = (byte) (rax_123 - 0x0000000000000030) (alias)
	r11b_364 = (byte) r11d_363 (alias)
	r11_12 = DPB(r11_70, r11d_363, 0) (alias)
	r11_12 = DPB(r11_70, r11d_363, 0) (alias)
	rcx = DPB(rcx, rax_123 - 0x0000000000000030, 0) (alias)
	rcx = DPB(rcx, cl_56, 0) (alias)
	branch cl_56 >u 0x36 l0000000000404A65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B95:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AFF:
	branch (r14 & r12_19) != 0x0000000000000000 l0000000000404AD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AD0:
	word64 r11_85 = (uint64) (r11d_363 << 0x00000004)
	r11d_116 = rax_123 - 0x0000000000000057 + r11_85
	r8_114 = r8_114 + 0x0000000000000001
	r11b_364 = (byte) r11d_116 (alias)
	r11_12 = DPB(r11_85, r11d_116, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B04:
	branch (r14d_89 & 0x000003FF) == 0x00000000 l0000000000404A65
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A65:
	Mem103[r9_10:byte] = r11b_364
	r11_12 = DPB(r11_12, r11b_364, 0) (alias)
	r10_106 = r10_106 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B11:
	word64 r11_113 = (uint64) (r11d_112 << 0x00000004)
	r11d_116 = rax_123 - 0x0000000000000030 + r11_113
	r8_114 = r8_114 + 0x0000000000000001
	r11b_364 = (byte) r11d_116 (alias)
	r11_12 = DPB(r11_113, r11d_116, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A1A:
	branch true l0000000000404A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A22:
	eax_121 = (word32) Mem120[r8_114:byte]
	rax_127 = (uint64) eax_121 (alias)
	al_132 = (byte) eax_121 (alias)
	rcx = DPB(rcx, rax_127 - 0x0000000000000040, 0) (alias)
	branch (byte) (rax_127 - 0x0000000000000040) <=u 0x3E l0000000000404AA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A2E:
	rax_123 = DPB(rax_127, al_132, 0) (alias)
	branch al_132 == 0x3F l0000000000404CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CB0:
	Mem136[r9_10:byte] = 0x7F
	r10_106 = r10_106 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A70:
	word32 eax_143 = (word32) Mem142[r8_114:byte]
	al_144 = (byte) eax_143 (alias)
	rax_123 = DPB(rax_123, eax_143, 0) (alias)
	SZO_147 = SLICE(cond(al_144 - 0x3D), bool, 4) (alias)
	branch al_144 == 0x3D l0000000000404ABA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A78:
	rax_123 = DPB(rax_123, al_144, 0) (alias)
	rax_243 = DPB(rax_123, al_144, 0) (alias)
	rax_243 = DPB(rax_123, al_144, 0) (alias)
	branch SZO_147 l0000000000404B40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B40:
	branch al_144 == 0x00 l0000000000404B48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B44:
	branch al_144 != 0x3A l0000000000404B60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B48:
	rax_154 = 0x0000000000000005
	eax_177 = 0x00000005 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A7E:
	branch al_144 == 0x5C l0000000000404CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CA0:
	r8_114 = r8_114 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B29:
	word32 eax_163 = (word32) Mem161[r8_114:byte]
	byte al_164 = (byte) eax_163
	word64 rax_210 = DPB(rax_123, al_164, 0)
	branch al_164 >u 0x78 l0000000000404C90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404C90:
	word64 r11_167 = (uint64) eax_163
	byte r11b_168 = (byte) r11_167
	r11_12 = DPB(r11_167, r11b_168, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404BD0:
	Mem171[r9_10:byte] = r11b_168
	r10_106 = r10_106 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
	eax_177 = 0x00000000 (alias)
	rax_154 = 0x0000000000000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404BB0:
	r8_114 = r8_114 + 0x0000000000000001
	branch false l0000000000404A06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404BBD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B4D:
	rax_284 = DPB(rax_154, eax_177 != 0x00000006, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B35:
	word64 rcx_192 = DPB(rcx, (word32) al_164, 0)
	word64 r8_199
	word64 rax_211
	word64 r9_212
	word64 r10_217
	call Mem161[rcx_192 * 0x0000000000000008 + 0x00411F40:word64] (retsize: 8;)
		uses: dl:dl_233,r10:r10_172,r11:r11_218,r8:r8_160,r9:r9_169,rax:rax_210,rcx:rcx_192,rdi:rdi_213,rsi:rsi_200,Stack +0000:qwLoc08_452,Stack +FFFFFFE8:qwLoc20_461,Stack +FFFFFFF0:qwLoc18_458,Stack +FFFFFFF8:qwLoc10_455
		defs: r10:r10_217,r8:r8_199,r9:r9_212,rax:rax_211
	rbxOut = rbx_230
	rspOut = rsp_193
	rbpOut = rbp_226
	r8Out = r8_199
	r9Out = r9_212
	r10Out = r10_217
	r12Out = r12_19
	r14Out = r14
	return (byte) rax_211
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A86:
	branch al_144 != 0x5E l0000000000404B60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A8E:
	r8_114 = r8_114 + 0x0000000000000001
	eax_121 = (word32) Mem162[r8_114:byte]
	rax_127 = DPB(rax_123, eax_121, 0) (alias)
	al_132 = (byte) eax_121 (alias)
	rcx = DPB(rcx, rax_127 - 0x0000000000000040, 0) (alias)
	branch (byte) (rax_127 - 0x0000000000000040) >u 0x3E l0000000000404A2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A9E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AA0:
	word64 rax_250 = (uint64) (eax_121 & 0x0000001F)
	Mem257[r9_10:byte] = (byte) rax_250
	r8_114 = r8_114 + 0x0000000000000001
	word32 eax_258 = (word32) Mem257[r8_114:byte]
	al_144 = (byte) eax_258 (alias)
	r10_106 = r10_106 + 0x0000000000000001
	rax_123 = DPB(rax_250, eax_258, 0) (alias)
	r9_10 = r9_10 + 0x0000000000000001
	SZO_147 = SLICE(cond(al_144 - 0x3D), bool, 4) (alias)
	branch al_144 != 0x3D l0000000000404A78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404ABA:
	rax_243 = DPB(rax_123, al_144, 0) (alias)
	branch dl == 0x00 l0000000000404B60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404B60:
	Mem274[r9_10:byte] = al_144
	rax_123 = DPB(rax_243, al_144, 0) (alias)
	r8_114 = r8_114 + 0x0000000000000001
	r10_106 = r10_106 + 0x0000000000000001
	r9_10 = r9_10 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404AC2:
	rax_284 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A36:
	rax_284 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404A38:
	Mem304[rdi:word64] = r9_10
	Mem321[rsi:word64] = r8_114
	Mem337[rbp_226:word64] = r10_106
	word64 rsp_351 = rsp_193 + 8
	word64 rbp_352 = Mem337[rsp_351:word64]
	word64 r12_354 = Mem337[rsp_351 + 8:word64]
	word64 r14_356 = Mem337[rsp_351 + 16:word64]
	rbxOut = Mem337[rsp_193:word64]
	rspOut = rsp_351 + 24
	rbpOut = rbp_352
	r8Out = r8_114
	r9Out = r9_10
	r10Out = r10_106
	r12Out = r12_354
	r14Out = r14_356
	return (byte) rax_284
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004049E0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000404CD0(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn0000000000404CD0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CD0:
	word64 rdi_4 = (uint64) edi
	word64 rax_19 = 0x0000000000000000
	word64 rdx_8 = Mem0[(rdi_4 << 0x0000000000000004) + 0x000000000061A3E0:word64]
	word64 rsi_24 = Mem0[(rdi_4 << 0x0000000000000004) + 0x000000000061A3E8:word64]
	branch rdx_8 == 0x0000000000000000 l0000000000404CFC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CEB:
	branch rdx_8 == 0x0000000000000001 l0000000000404D10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D10:
	return (uint64) (Mem0[rsi_24:byte] != 0x30)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CF1:
	bool Z_20 = SLICE(cond(rdx_8 - 0x0000000000000002), bool, 2)
	rax_19 = 0x0000000000000001
	branch rdx_8 == 0x0000000000000002 l0000000000404D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D00:
	word64 rdi_21 = 0x0000000000413733
	word64 rcx_22 = 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D0A:
	branch rcx_22 == 0x0000000000000000 l0000000000404D0C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D0A_1:
	Z_20 = SLICE(cond(Mem0[rsi_84:byte] - Mem0[rdi_85:byte]), bool, 2) (alias)
	rsi_24 = rsi_84 + 0x0000000000000001
	rdi_21 = rdi_85 + 0x0000000000000001
	rcx_22 = rcx_22 - 0x0000000000000001
	rsi_84 = rsi_24
	rdi_85 = rdi_21
	branch Mem0[rsi_84:byte] != Mem0[rdi_85:byte] l0000000000404D0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D0C:
	return DPB(0x0000000000000001, Z_20, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404CFC:
	return rax_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404CD0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000404D20(word32 edx, word64 rbx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] rbx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 r13 rbp rbx rsp
fn0000000000404D20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D20:
	byte r13b_69 = (byte) (uint64) edx
	word64 rax_24 = fn0000000000410C40(rbx, out rbx_110, out rsp_111)
	word64 rax_33 = 0x0000000000000000
	branch rsi == 0x0000000000000000 l0000000000404D4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D47:
	rax_33 = fn0000000000410E30(0x0000000000000000, rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D4F:
	Mem48[rax_24 + 0x0000000000000008:word64] = rax_33
	word64 rax_49 = 0x0000000000000000
	branch rdi == 0x0000000000000000 l0000000000404D62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D5A:
	rax_49 = fn0000000000410E30(0x0000000000000000, rdi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D62:
	Mem65[rax_24:word64] = rax_49
	word64 rax_66 = Mem65[0x000000000061B190:word64]
	Mem70[rax_24 + 0x0000000000000010:byte] = r13b_69
	Mem71[0x000000000061B190:word64] = rax_24
	Mem72[rax_24 + 0x0000000000000018:word64] = rax_66
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404D20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000404D90(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rdi
// Preserved: rbx rsp
fn0000000000404D90_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404D90:
	free(Mem5[rdi:word64])
	free(Mem5[rdi + 0x0000000000000008:word64])
	word64 rdi_10 = Mem5[rdi + 0x00000000000000A8:word64]
	branch rdi_10 == 0x000000000061A56A l0000000000404DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DC0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DB5:
	freecon(rdi_10)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404D90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000404DD0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi
// Preserved: rbx rsp
fn0000000000404DD0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DD0:
	word64 rbx_11 = 0x0000000000000000
	branch Mem5[0x000000000061B1B0:word64] == 0x0000000000000000 l0000000000404DFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DDD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DE0:
	fn0000000000404D90(Mem5[Mem5[0x000000000061B1A8:word64] + rbx_11 * 0x0000000000000008:word64])
	rbx_11 = rbx_11 + 0x0000000000000001
	branch Mem5[0x000000000061B1B0:word64] >u rbx_11 l0000000000404DE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404DFD:
	Mem22[0x000000000061B1B0:word64] = 0x0000000000000000
	Mem23[0x000000000061B17C:byte] = 0x00
	Mem24[0x000000000061B178:word32] = 0x00000000
	Mem25[0x000000000061B174:word32] = 0x00000000
	Mem26[0x000000000061B170:word32] = 0x00000000
	Mem27[0x000000000061B168:word32] = 0x00000000
	Mem28[0x000000000061B164:word32] = 0x00000000
	Mem29[0x000000000061B160:word32] = 0x00000000
	Mem30[0x000000000061B16C:word32] = 0x00000000
	Mem31[0x000000000061B15C:word32] = 0x00000000
	Mem32[0x000000000061B158:word32] = 0x00000000
	Mem33[0x000000000061B154:word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404DD0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000404E80(word64 r8, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[32..63]
// LiveOut: r12 r13 r14 r15 r8 rbp rbx rsp
// Trashed: SCZO r12 r13 r14 r15 r8 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn0000000000404E80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404E80:
	word64 rbx_10 = Mem8[0x000000000061B1B0:word64]
	word64 rsp_206 = fp - 0x0000000000000018
	word64 rbp_12 = rbx_10
	word64 rax_115 = (rbx_10 >>u 0x0000000000000001) + rbx_10
	branch rax_115 >u Mem8[0x000000000061B1A0:word64] l0000000000404F98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F98:
	free(Mem8[0x000000000061B1A8:word64])
	branch rbx_10 >u 0x00000000AAAAAAAA l0000000000404FF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404FF8:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404FB3:
	word64 rax_24 = fn0000000000410C40(rbx_10, out rbx_10, out rsp_206)
	rbp_12 = Mem8[0x000000000061B1B0:word64]
	Mem33[0x000000000061B1A8:word64] = rax_24
	Mem35[0x000000000061B1A0:word64] = rbp_12 * 0x0000000000000003
	rax_115 = rbp_12 * 0x0000000000000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EA6:
	branch rbp_12 == 0x0000000000000000 l0000000000404ED3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EAB:
	rax_115 = Mem40[0x000000000061B1A8:word64]
	word64 rdx_42 = Mem40[0x000000000061B1C0:word64]
	word64 rcx_43 = rax_115 + rbp_12 * 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EC0:
	Mem46[rax_115:word64] = rdx_42
	rax_115 = rax_115 + 0x0000000000000008
	rdx_42 = rdx_42 + 192
	branch rax_115 != rcx_43 l0000000000404EC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404ED3:
	branch Mem52[0x000000000061B148:word32] == 0xFFFFFFFF l0000000000404F8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EE0:
	word64 rsi_147
	word64 rdi_143
	word32 ecx_92
	word32 eax_56 = _setjmp(0x000000000061A680)
	byte al_101 = (byte) eax_56
	word64 rax_114 = DPB(rax_115, al_101, 0)
	branch eax_56 == 0x00000000 l0000000000404F40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F40:
	ecx_92 = (word32) (uint64) Mem52[0x000000000061B148:word32] (alias)
	rsi_147 = Mem52[0x000000000061B1B0:word64]
	rdi_143 = Mem52[0x000000000061B1A8:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EEE:
	word64 r8_63 = (uint64) Mem52[0x000000000061B148:word32]
	word32 r8d_64 = (word32) r8_63
	word64 r8_129 = DPB(r8_63, r8d_64, 0)
	r8_129 = DPB(r8_63, r8d_64, 0) (alias)
	r8 = DPB(r8_129, r8d_64, 0) (alias)
	branch r8d_64 == 0x00000003 l0000000000404FDF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404FDF:
	__assert_fail(0x000000000041373F, 0x0000000000413736, 0x0000000000000DDB, 0x0000000000412C95)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404EFF:
	rsi_147 = Mem52[0x000000000061B1B0:word64]
	rdi_143 = Mem52[0x000000000061B1A8:word64]
	branch rsi_147 == 0x0000000000000000 l0000000000404F33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F12:
	word64 rdx_76 = Mem52[0x000000000061B1C0:word64]
	word64 rcx_77 = rdi_143 + rsi_147 * 0x0000000000000008
	word64 rax_78 = rdi_143
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F20:
	Mem81[rax_78:word64] = rdx_76
	rax_78 = rax_78 + 0x0000000000000008
	rdx_76 = rdx_76 + 192
	branch rax_78 != rcx_77 l0000000000404F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F33:
	ecx_92 = (word32) (uint64) r8d_64 (alias)
	rax_114 = 0x0000000000000001
	al_101 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F54:
	word64 rax_113 = DPB(rax_114, al_101, 0)
	rax_113 = DPB(rax_114, al_101, 0) (alias)
	word32 edx_107 = 0x00000000
	branch ecx_92 != 0x00000004 l0000000000404F60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F59_1:
	edx_107 = Mem97[0x000000000061B14C:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F60:
	r8 = DPB(r8, (word32) Mem97[0x000000000061B10C:byte], 0) (alias)
	rsp_206 = fn000000000040D690(Mem97[(r8 + (DPB(rax_113, (word32) Mem97[0x000000000061B147:byte], 0) + (DPB(rax_113, (int16) al_101, 0) + (uint64) (edx_107 + ecx_92) * 0x0000000000000002) * 0x0000000000000002) * 0x0000000000000002) * 0x0000000000000008 + 0x00412D00:word64], rbx_10, rbp_12, rsi_147, rdi_143, r12, r13, r14, r15, out r12, out r13, out r14, out r15)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000404F8C:
	word64 rsp_215 = rsp_206 + 0x0000000000000008
	word64 rbx_218 = Mem217[rsp_215:word64]
	word64 rbp_220 = Mem217[rsp_215 + 8:word64]
	rspOut = rsp_215 + 16
	rbpOut = rbp_220
	r8Out = r8
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return rbx_218
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000404E80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000405090(word64 rbx, byte sil, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbx:[0..63] rdi:[0..63] sil:[0..7]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000405090_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405090:
	word32 r14d_10 = (word32) sil
	branch rdi == 0x0000000000000000 l00000000004050C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050AA:
	branch Mem24[0x000000000061B1C8:word64] == 0x0000000000000000 l00000000004050C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050B4:
	fn0000000000404D20(0x00000000, rbx, rdi, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050C0:
	word64 rbx_212 = Mem24[0x000000000061B1B0:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405108:
	branch rbx_212 == 0x0000000000000000 l00000000004051A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051A8:
	word64 rdx_58
	word64 rdi_54 = Mem24[0x000000000061B1B0:word64]
	branch rdi_54 == 0x0000000000000000 l00000000004051F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051F7:
	rdx_58 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051B4:
	word64 rsi_62 = Mem24[0x000000000061B1A8:word64]
	rdx_58 = 0x0000000000000000
	word64 rax_64 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051C0:
	word64 rcx_71 = Mem70[rsi_62 + rax_64 * 0x0000000000000008:word64]
	Mem74[rsi_62 + rdx_58 * 0x0000000000000008:word64] = rcx_71
	rax_64 = rax_64 + 0x0000000000000001
	rdx_58 = rdx_58 + DPB(rcx_71, (word32) (Mem70[rcx_71 + 0x00000000000000A0:word32] != 0x00000009), 0)
	branch rax_64 != rdi_54 l00000000004051C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004051E1:
	Mem85[0x000000000061B1B0:word64] = rdx_58
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405090_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405111:
	word64 rbp_104 = Mem24[Mem24[0x000000000061B1A8:word64]:word64]
	word32 eax_106 = (word32) (uint64) Mem24[rbp_104 + 0x00000000000000A0:word32]
	branch eax_106 == 0x00000009 l000000000040512C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405127:
	branch eax_106 != 0x00000003 l0000000000405100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040512C:
	word64 r15_117 = Mem24[rbp_104:word64]
	branch rdi == 0x0000000000000000 l00000000004050E2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405135:
	word64 rax_120 = fn000000000040A390(r15_117)
	branch Mem24[rax_120:byte] != 0x2E l00000000004050D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405142:
	byte al_136 = (byte) (word32) Mem24[rax_120 + 0x0000000000000001 + (uint64) (Mem24[rax_120 + 0x0000000000000001:byte] == 0x2E):byte]
	branch al_136 == 0x2F l0000000000405100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405154:
	branch al_136 == 0x00 l0000000000405100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405158:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050D8:
	branch Mem24[r15_117:byte] != 0x2F l0000000000405160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405160:
	word64 rax_153 = fn000000000040A610(0x0000000000000000, r15_117, rdi)
	fn0000000000404D20((word32) (uint64) r14d_10, rbx_212, Mem24[rbp_104 + 0x0000000000000008:word64], rax_153)
	free(rax_153)
	branch Mem24[rbp_104 + 0x00000000000000A0:word32] != 0x00000009 l0000000000405100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050E2:
	fn0000000000404D20((word32) (uint64) r14d_10, rbx_212, Mem24[rbp_104 + 0x0000000000000008:word64], r15_117)
	branch Mem24[rbp_104 + 0x00000000000000A0:word32] == 0x00000009 l0000000000405194
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405194:
	fn0000000000404D90(rbp_104)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004050FE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405100:
	rbx_212 = rbx_212 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000405200(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000405200_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405200:
	word64 rbx_12 = rdi
	branch rdi <u rsi l000000000040526B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040526B:
	word64 rcx_17 = Mem16[0x000000000061B0D8:word64]
	branch rcx_17 != 0x0000000000000000 l0000000000405220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405220:
	word64 rsi_25 = rbx_12 + 0x0000000000000001
	branch (uint64) ((uint128) (uint64) rsi /u rcx_17) <=u (uint64) ((uint128) ((uint64) rsi_25) /u rcx_17) l00000000004052A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004052A8:
	rbx_12 = rsi_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040523C:
	word64 rdi_40 = Mem16[0x000000000061A610:word64]
	word64 rax_41 = Mem16[rdi_40 + 0x0000000000000028:word64]
	branch rax_41 >=u Mem16[rdi_40 + 0x0000000000000030:word64] l00000000004052B9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004052B9:
	__overflow(rdi_40, 0x0000000000000009)
	rcx_17 = Mem16[0x000000000061B0D8:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040524D:
	Mem48[rdi_40 + 0x0000000000000028:word64] = rax_41 + 0x0000000000000001
	Mem49[rax_41:byte] = 0x09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405258:
	rbx_12 = rbx_12 + rcx_17 - (uint64) ((uint128) ((uint64) rbx_12) % rcx_17)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405277:
	rbx_12 = rbx_12 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040527B:
	word64 rdi_64 = Mem16[0x000000000061A610:word64]
	word64 rdx_65 = Mem16[rdi_64 + 0x0000000000000028:word64]
	branch rdx_65 >=u Mem16[rdi_64 + 0x0000000000000030:word64] l00000000004052AD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004052AD:
	__overflow(rdi_64, 0x0000000000000020)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405266:
	branch rsi <=u rbx_12 l000000000040529C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040528C:
	Mem79[rdi_64 + 0x0000000000000028:word64] = rdx_65 + 0x0000000000000001
	Mem80[rdx_65:byte] = 0x20
	branch rsi >u rbx_12 l000000000040526B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405211:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040529C:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405200_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00000000004052D0(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r10, word64 r12, selector fs, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r12:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r8 r9 rcx
// Trashed: SCZO r10 r11 r8 r9 rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn00000000004052D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004052D0:
	word64 rax_37 = Mem34[fs:0x00000028:word64]
	word64 rsi_110
	word64 r9_47
	word64 r8_46
	word64 r10_44
	word64 rax_48 = fn000000000040E6F0(0xFFFFFFFFFFFFFFFF, rsi, 0x0000000000002000, fp + 0xFFFFFFFFFFFFDFB8, rdx, r10, fs, out rsi_110, out r8_46, out r9_47, out r10_44)
	word64 rbx_130 = rax_48
	word64 rax_58 = fp + 0xFFFFFFFFFFFFDFB8
	word64 qwLoc2070_435 = fp + 0xFFFFFFFFFFFFDFB8
	branch rax_48 >u 0x0000000000001FFF l0000000000405590
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405590:
	word64 v24_71 = fp - 8328 - (rax_48 + 0x000000000000001F & 0xFFFFFFFFFFFFFFF0) + 0x000000000000000F & 0xFFFFFFFFFFFFFFF0
	qwLoc2070_435 = v24_71
	rax_58 = fn000000000040E6F0(0xFFFFFFFFFFFFFFFF, rsi, rax_48 + 0x0000000000000001, v24_71, rdx, r10_44, fs, out rsi_110, out r8_46, out r9_47, out r10_44)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405343:
	word64 rdx_422
	branch Mem89[0x000000000061B0F0:byte] != 0x00 l0000000000405412
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405412:
	word64 rax_150 = DPB(rax_58, __ctype_get_mb_cur_max(), 0)
	branch rax_150 <=u 0x0000000000000001 l00000000004055D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055D1:
	word64 r12_100 = qwLoc2070_435 + rax_48
	branch qwLoc2070_435 >=u r12_100 l0000000000405602
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055E1:
	word64 rax_103 = __ctype_b_loc()
	word64 rdx_104 = qwLoc2070_435
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055E9:
	rsi_110 = DPB(rsi_110, (word32) Mem106[rdx_104:byte], 0) (alias)
	branch (Mem106[Mem106[rax_103:word64] + 0x0000000000000001 + rsi_110 * 0x0000000000000002:byte] & 0x40) != 0x00 l00000000004055F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055F6:
	Mem115[rdx_104:byte] = 0x3F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004055F9:
	rdx_104 = rdx_104 + 0x0000000000000001
	branch rdx_104 != r12_100 l00000000004055E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405602:
	r12 = rax_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405421:
	word64 r15_126 = qwLoc2070_435
	word64 r13_127 = qwLoc2070_435 + rax_48
	branch qwLoc2070_435 >=u r13_127 l0000000000405612
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405612:
	rbx_130 = 0x0000000000000000
	r12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405435:
	word64 rbx_135 = qwLoc2070_435
	r12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405440:
	byte al_143 = (byte) (word32) Mem141[r15_126:byte]
	rax_150 = DPB(rax_150, al_143, 0) (alias)
	rax_150 = DPB(rax_150, al_143, 0) (alias)
	rax_150 = DPB(rax_150, al_143, 0) (alias)
	branch al_143 > 0x3F l0000000000405520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405520:
	branch al_143 < 0x41 l0000000000405460
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405528:
	branch al_143 <= 0x5F l0000000000405538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040552C:
	branch (byte) (rax_150 - 0x0000000000000061) >u 0x1D l0000000000405460
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040544C:
	branch al_143 >= 0x25 l0000000000405538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405454:
	branch (byte) (rax_150 - 0x0000000000000020) <=u 0x03 l0000000000405538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405538:
	Mem172[rbx_135:byte] = al_143
	rax_150 = DPB(rax_150, al_143, 0) (alias)
	r15_126 = r15_126 + 0x0000000000000001
	r12 = r12 + 0x0000000000000001
	rbx_135 = rbx_135 + 0x0000000000000001
	branch r15_126 <u r13_127 l0000000000405440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040554F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405460:
	Mem214 = Mem183
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405470:
	rax_150 = DPB(rax_150, mbrtowc(fp + 0xFFFFFFFFFFFFDFA4, r15_126, r13_127 - r15_126, fp + 0xFFFFFFFFFFFFDFA8), 0) (alias)
	word64 r14_196 = rax_150
	branch rax_150 == 0xFFFFFFFFFFFFFFFF l0000000000405551
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405551:
	Mem200[rbx_135:byte] = 0x3F
	r15_126 = r15_126 + 0x0000000000000001
	r12 = r12 + 0x0000000000000001
	rbx_135 = rbx_135 + 0x0000000000000001
	branch r15_126 <u r13_127 l0000000000405440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405569:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405499:
	branch rax_150 == 0xFFFFFFFFFFFFFFFE l000000000040556B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040556B:
	Mem209[rbx_135:byte] = 0x3F
	r15_126 = r13_127
	r12 = r12 + 0x0000000000000001
	rbx_135 = rbx_135 + 0x0000000000000001
	branch false l0000000000405440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405582:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054A3:
	word64 rdi_215 = (uint64) dwLoc205C
	branch rax_150 != 0x0000000000000000 l00000000004054B5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054B1_1:
	r14_196 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054B5:
	word32 eax_222 = wcwidth(rdi_215)
	byte al_249 = (byte) eax_222
	word64 rax_257 = DPB(0x0000000000000001, eax_222, 0)
	branch eax_222 < 0x00000000 l0000000000405510
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405510:
	Mem227[rbx_135:byte] = 0x3F
	r15_126 = r15_126 + r14_196
	r12 = r12 + 0x0000000000000001
	rbx_135 = rbx_135 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054BE:
	word64 rsi_235 = r15_126 + r14_196
	word64 rdx_236 = rbx_135
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054C8:
	r15_126 = r15_126 + 0x0000000000000001
	rdx_236 = rdx_236 + 0x0000000000000001
	Mem246[rdx_236 - 0x0000000000000001:byte] = (byte) (word32) Mem239[r15_126 - 0x0000000000000001:byte]
	branch r15_126 != rsi_235 l00000000004054C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054DD:
	rax_257 = DPB(rax_257, (int16) al_249, 0) (alias)
	rbx_135 = rbx_135 + r14_196
	r12 = r12 + rax_257
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054E5:
	word32 eax_267 = mbsinit(fp + 0xFFFFFFFFFFFFDFA8)
	rax_150 = DPB(rax_257, eax_267, 0) (alias)
	branch eax_267 == 0x00000000 l0000000000405470
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004054F9:
	branch r15_126 <u r13_127 l0000000000405440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405502:
	rbx_130 = rbx_135 - qwLoc2070_435
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405350:
	branch rcx == 0x0000000000000000 l0000000000405379
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040535A:
	branch DPB(rax_58, __ctype_get_mb_cur_max(), 0) <=u 0x0000000000000001 l00000000004053CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053CD:
	word64 r13_292 = qwLoc2070_435 + rax_48
	branch qwLoc2070_435 >=u r13_292 l000000000040560A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040560A:
	r12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053E1:
	r12 = 0x0000000000000000
	word64 rcx_304 = Mem89[__ctype_b_loc():word64]
	word64 rax_305 = qwLoc2070_435
	rdx_310 = rdx_422
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053F0:
	word64 rdx_310
	word16 dx_313 = (word16) (word32) Mem89[rcx_304 + DPB(rdx_310, (word32) Mem89[rax_305:byte], 0) * 0x0000000000000002:word16]
	rdx_310 = DPB(rdx_422, dx_313 & 0x4000, 0) (alias)
	r12 = r12 - 0xFF - ((dx_313 & 0x4000) <u 0x0001)
	rax_305 = rax_305 + 0x0000000000000001
	branch rax_305 != r13_292 l00000000004053F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040540D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405365:
	r12 = (int64) (word32) fn000000000040D240(0x00000000, rax_48, qwLoc2070_435, fs)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405379:
	branch rdi == 0x0000000000000000 l0000000000405399
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405385:
	fwrite_unlocked(qwLoc2070_435, 0x0000000000000001, rbx_130, rdi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405399:
	branch rcx == 0x0000000000000000 l00000000004053A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053A5:
	Mem370[rcx:word64] = r12
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053A8:
	branch (rax_37 ^ Mem375[fs:0x00000028:word64]) != 0x0000000000000000 l000000000040561C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040561C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004053BE:
	r8Out = r8_46
	r9Out = r9_47
	r10Out = r10_44
	return (word32) rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004052D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000405630(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn0000000000405630_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405630:
	word64 rax_13 = Mem11[rsi + 0x0000000000000018:word64]
	word64 rbp_14 = Mem11[rsi + 0x0000000000000010:word64]
	word64 r12_18 = (uint64) ((word32) (rax_13 - rbp_14) >>u 0x00000003)
	branch r12_18 == 0x0000000000000000 l00000000004056DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040564F:
	branch rax_13 == rbp_14 l00000000004056E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056E6:
	Mem25[rsi + 0x0000000000000050:byte] = Mem11[rsi + 0x0000000000000050:byte] | 0x02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405658:
	word64 rcx_30 = (int64) Mem29[rsi + 0x0000000000000030:word32]
	word64 rcx_35 = Mem29[rsi + 0x0000000000000020:word64]
	word64 rdx_40 = (int64) (word32) (uint64) ~(word32) (uint64) (word32) rcx_30 & rax_13 + rcx_30
	word64 rax_41 = Mem29[rsi + 0x0000000000000008:word64]
	Mem43[rsi + 0x0000000000000018:word64] = rdx_40
	branch rdx_40 - rax_41 > rcx_35 - rax_41 l00000000004056E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056E0:
	Mem48[rsi + 0x0000000000000018:word64] = rcx_35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405683:
	Mem56[rsi + 0x0000000000000010:word64] = Mem50[rsi + 0x0000000000000018:word64]
	fputs_unlocked(rdi, Mem56[0x000000000061A610:word64])
	word64 rbx_52 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056A0:
	__printf_chk(0x0000000000000001, 0x0000000000413759, 0x00000000)
	rbx_52 = rbx_52 + 0x0000000000000001
	branch r12_18 >u rbx_52 l00000000004056A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056BF:
	word64 rdi_74 = Mem56[0x000000000061A610:word64]
	word64 rax_75 = Mem56[rdi_74 + 0x0000000000000028:word64]
	branch rax_75 >=u Mem56[rdi_74 + 0x0000000000000030:word64] l00000000004056EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056EF:
	__overflow(rdi_74, 0x000000000000000A)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056D0:
	Mem90[rdi_74 + 0x0000000000000028:word64] = rax_75 + 0x0000000000000001
	Mem91[rax_75:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004056DB:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405630_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405700(word64 rax, word32 edx, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] fs:[0..15] rax:[0..63] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000405700_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405700:
	word64 rbp_26
	word32 ebx_25 = (word32) (uint64) edx
	branch rdi == 0x0000000000000000 l0000000000405780
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405780:
	__printf_chk(0x0000000000000001, 0x000000000041375E, 0x00000000)
	rbp_26 = (int64) ebx_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405710:
	word32 eax_42 = (word32) fn000000000040D420(rax, 0x00000000, rdi, fs)
	word64 rsi_41 = Mem10[0x000000000061A610:word64]
	word32 ebx_44 = (word32) (uint64) (ebx_25 - eax_42)
	branch ebx_44 >= 0x00000000 l0000000000405728
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405725_1:
	ebx_44 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405728:
	fputs_unlocked(rdi, rsi_41)
	rbp_26 = (int64) ebx_44 + (uint64) strlen(rdi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405740:
	word64 rdi_64 = Mem63[0x000000000061A610:word64]
	word64 rcx_65 = Mem63[rdi_64 + 0x0000000000000028:word64]
	branch rcx_65 >=u Mem63[rdi_64 + 0x0000000000000030:word64] l0000000000405799
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405799:
	__overflow(rdi_64, 0x0000000000000020)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405751:
	Mem71[rdi_64 + 0x0000000000000028:word64] = rcx_65 + 0x0000000000000001
	Mem72[rcx_65:byte] = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040575C:
	ebx_44 = (word32) (uint64) (ebx_44 - 0x00000001) (alias)
	branch ebx_44 != 0xFFFFFFFF l0000000000405740
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405764:
	word64 rax_85 = rbp_26 + 0x0000000000000001 + Mem79[0x000000000061B018:word64]
	Mem86[0x000000000061B018:word64] = rax_85
	return rax_85
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405700_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn00000000004057B0(byte dl, word32 esi, word32 edi, selector fs, ptr64 & rbxOut, ptr64 & rspOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl:[0..7] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: rax rbx rsp
// Trashed: SCZO rax rbx rcx rdi rdx rsi rsp
// Preserved: r12 rbp
fn00000000004057B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057B0:
	word64 rax_14 = 0x0000000000413764
	word64 rsp_26 = fp - 0x0000000000000018
	branch dl == 0x00 l00000000004057CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057C0:
	rax_14 = 0x0000000000000000
	branch Mem5[0x000000000061B145:byte] == 0x00 l00000000004057E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057E0:
	rax_14 = fn000000000040C9B0(edi, out rsp_26, out r12_65)
	esi = (word32) (uint64) Mem18[rsp_26 + 0x000000000000000C:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057CB:
	word64 rsp_33 = rsp_26 + 0x0000000000000010
	word32 edx_45 = (word32) (uint64) esi
	word64 rbx_41 = Mem40[rsp_33:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004057D8_thunk_fn0000000000405700:
	word64 rax_48 = fn0000000000405700(rax_14, edx_45, rax_14, fs)
	rbxOut = rbx_41
	rspOut = rsp_33 + 8
	return rax_48
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004057B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405810(word64 rdx, word64 r10, selector fs, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdx:[0..63]
// LiveOut: r10 r13 r14 r15 r8 r9 rax
// Trashed: SCZO r10 r11 r13 r14 r15 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn0000000000405810_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405810:
	word64 r12_22
	error(0x0000000000000000, (uint64) Mem15[__errno_location():word32], fn000000000040EAB0(rdx, r10, fs, out rbp_123, out r8_26, out r9_27, out r10_20, out r12_22, out r13_23, out r14_24, out r15_25), 0x00000000)
	word64 rax_43 = 0x0000000000000000
	branch (byte) r12_22 == 0x00 l0000000000405850
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405850:
	rax_43 = (uint64) Mem15[0x000000000061B030:word32]
	branch (word32) rax_43 != 0x00000000 l000000000040584A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040585A:
	Mem59[0x000000000061B030:word32] = 0x00000001
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r13Out = <invalid>
	r14Out = <invalid>
	r15Out = <invalid>
	return rax_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405840:
	Mem62[0x000000000061B030:word32] = 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040584A:
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r13Out = <invalid>
	r14Out = <invalid>
	r15Out = <invalid>
	return rax_43
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405810_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405C20(word32 ecx, word32 edx, word32 esi, byte dil, ptr64 & rsiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dil:[0..7] ecx:[1..31] edx:[0..31] esi:[0..31]
// LiveOut: rax rsi
// Trashed: SCZO rax rcx rsi
// Preserved: rsp
fn0000000000405C20_entry:
	word64 rsi_134 = DPB(rsi, esi, 0)
	rsi_134 = DPB(rsi, esi, 0) (alias)
	word64 rsi_142 = DPB(rsi, esi, 0)
	rsi_142 = DPB(rsi, esi, 0) (alias)
	rsi_134 = DPB(rsi_142, esi, 0) (alias)
	word64 rsi_146 = DPB(rsi_142, esi, 0)
	rsi_134 = DPB(rsi_142, esi, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C20:
	word64 rax_122
	byte cl_34
	branch dil == 0x00 l0000000000405C40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C40:
	rax_122 = 0x0000000000000000
	branch edx == 0x00000005 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C47:
	cl_34 = (byte) (uint64) (DPB(ecx, edx == 0x00000009, 0) | (word32) (edx == 0x00000003)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C25:
	word32 eax_29 = (word32) (uint64) ((word32) (uint64) esi & 0x0000F000)
	branch eax_29 != 0x00008000 l0000000000405CA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CA0:
	cl_34 = eax_29 == 0x00004000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C55:
	rax_122 = 0x000000000000002F
	branch cl_34 != 0x00 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C5E:
	branch Mem0[0x000000000061B12C:word32] == 0x00000001 l0000000000405CF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CF0:
	rsiOut = rsi_146
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C6B:
	word32 eax_75
	branch dil == 0x00 l0000000000405CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CC0:
	rax_122 = 0x0000000000000040
	branch edx == 0x00000006 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CCE:
	rax_122 = 0x000000000000007C
	branch edx == 0x00000001 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CDC:
	eax_75 = DPB(0x0000007C, edx == 0x00000007, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C70:
	rsi_134 = (uint64) (esi & 0x0000F000)
	word32 esi_66 = (word32) rsi_134
	rsi_134 = DPB(rsi_134, esi_66, 0) (alias)
	rsi_134 = DPB(rsi_134, esi_66, 0) (alias)
	rax_122 = 0x0000000000000040
	branch esi_66 == 0x0000A000 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C83:
	rax_122 = 0x000000000000007C
	branch esi_66 == 0x00001000 l0000000000405C3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C90:
	eax_75 = DPB(0x0000007C, esi_66 == 0x0000C000, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CE2:
	rsiOut = rsi_134
	return (uint64) ((word32) (uint64) -eax_75 & 0x0000003D)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C33:
	rax_122 = 0x0000000000000000
	branch Mem0[0x000000000061B12C:word32] == 0x00000003 l0000000000405CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405CB0:
	word64 rsi_89 = (uint64) (esi & 0x00000049)
	rsiOut = rsi_89
	return (uint64) ((word32) (uint64) ~(word32) (uint64) (0x00000000 - SLICE(cond((word32) rsi_89 - 0x00000001), bool, 1)) & 0x0000002A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405C3E:
	rsiOut = rsi_134
	return rax_122
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405C20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405D00(word32 ecx, word32 edx, word32 esi, byte dil)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dil:[0..7] ecx:[0..31] edx:[0..31] esi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn0000000000405D00_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D00:
	word64 rsi_14
	word64 rax_12 = fn0000000000405C20(ecx, edx, esi, (byte) (word32) dil, out rsi_14)
	byte bl_29 = (byte) (uint64) (word32) rax_12
	branch (byte) rax_12 == 0x00 l0000000000405D33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D10:
	word64 rdi_25 = Mem5[0x000000000061A610:word64]
	rax_12 = Mem5[rdi_25 + 0x0000000000000028:word64]
	branch rax_12 >=u Mem5[rdi_25 + 0x0000000000000030:word64] l0000000000405D3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D3A:
	rax_12 = DPB(rax_12, __overflow(rdi_25, DPB(rsi_14, (word32) bl_29, 0)), 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D21:
	Mem34[rdi_25 + 0x0000000000000028:word64] = rax_12 + 0x0000000000000001
	Mem35[rax_12:byte] = bl_29
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D2B:
	Mem38[0x000000000061B018:word64] = Mem36[0x000000000061B018:word64] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D33:
	return DPB(rax_12, bl_29 != 0x00, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405D00_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405D50(word64 rdi, word64 r10, word64 r12, selector fs, int8 Top, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r12:[0..63] rdi:[0..63] Top:[0..7]
// LiveOut: r10 r8 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000405D50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D50:
	word64 rbx_102 = 0x0000000000000000
	word64 rax_14 = Mem10[fs:0x00000028:word64]
	word64 rax_16 = 0x0000000000000000
	branch Mem15[0x000000000061B114:byte] == 0x00 l0000000000405D92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D7A:
	branch Mem15[0x000000000061B150:word32] == 0x00000004 l0000000000405EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405EA0:
	word64 rax_23 = fn000000000040CD70(fp - 0x00000000000002B8, Mem15[rdi + 0x0000000000000018:word64])
	rax_16 = DPB(rax_23, strlen(rax_23), 0) (alias)
	rbx_102 = rax_16 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D87:
	rbx_102 = (int64) Mem15[0x000000000061B178:word32] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D92:
	branch Mem15[0x000000000061B144:byte] == 0x00 l0000000000405DB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405D9B:
	branch Mem15[0x000000000061B150:word32] == 0x00000004 l0000000000405E58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E58:
	rax_16 = 0x0000000000000002
	branch Mem15[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000405DB3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E6A:
	word64 rax_61 = fn000000000040BD70(0x0000000000000200, (word32) (uint64) Mem15[0x000000000061B140:word32], fp - 0x00000000000002B8, Mem15[rdi + 0x0000000000000050:word64], Mem15[0x000000000061B138:word64], fs, Top, out r8_236, out r9_237)
	rax_16 = DPB(rax_61, strlen(rax_61), 0) + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DA8:
	rax_16 = (int64) Mem15[0x000000000061B174:word32] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DB3:
	rbx_102 = rbx_102 + rax_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DB6:
	branch Mem15[0x000000000061B17D:byte] == 0x00 l0000000000405DD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DBF:
	word64 rax_103
	branch Mem15[0x000000000061B150:word32] == 0x00000004 l0000000000405E40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E40:
	rax_103 = DPB(rax_16, strlen(Mem15[rdi + 0x00000000000000A8:word64]), 0) + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DC8:
	rax_103 = (int64) Mem15[0x000000000061B16C:word32] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DD3:
	rbx_102 = rbx_102 + rax_103
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DD6:
	word64 r10_137
	word64 r8_139
	word64 r9_140
	word32 ecx_161 = (word32) (word64) fn00000000004052D0(fp - 0x00000000000002C0, Mem15[0x000000000061B0E8:word64], Mem15[rdi:word64], 0x0000000000000000, r10, r12, fs, out r8_139, out r9_140, out r10_137)
	word64 rbx_151 = rbx_102 + qwLoc02C0
	branch (word32) (uint64) Mem15[0x000000000061B12C:word32] == 0x00000000 l0000000000405E1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405DFC:
	word64 rax_163 = fn0000000000405C20(ecx_161, (word32) (uint64) Mem15[rdi + 0x00000000000000A0:word32], (word32) (uint64) Mem15[rdi + 0x0000000000000028:word32], (byte) (word32) Mem15[rdi + 0x00000000000000B0:byte], out rsi_238)
	rbx_151 = rbx_151 + DPB(rax_163, (word32) ((byte) rax_163 != 0x00), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E1C:
	branch (rax_14 ^ Mem15[fs:0x00000028:word64]) != 0x0000000000000000 l0000000000405EBF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405EBF:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405E36:
	r8Out = r8_139
	r9Out = r9_140
	r10Out = r10_137
	return rbx_151
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405D50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000405ED0(word32 edi, word64 r10, int8 Top, ptr64 & rspOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] r10:[0..63] Top:[0..7]
// LiveOut: r10 r12 r8 r9 rax rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
l00000000004061A2_thunk_fn00000000004061B0:
	word64 r12_96
	word64 rsp_103
	word64 rax_97 = fn00000000004061B0(edi, fs, out rbx_516, out rsp_103, out rbp_517, out r12_96)
	rspOut = rsp_103
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r12Out = r12_96
	return rax_97
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405ED0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405ED0:
	word64 rdx_6 = Mem5[0x000000000061B1B0:word64]
	word64 rax_7 = Mem5[0x000000000061B020:word64]
	word64 r12_16 = (uint64) edi
	word64 rsp_113 = fp - 40
	word64 rbx_111 = rdx_6
	branch rax_7 >u rdx_6 l0000000000405EF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405EEF_1:
	rbx_111 = rax_7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405EF3:
	word64 r8_145
	word64 rsi_146
	word64 rax_137
	branch rbx_111 <=u Mem22[0x000000000061A660:word64] l00000000004060C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060C8:
	rax_137 = 0x0000000000000000
	r8_145 = rdx_6
	rsi_146 = Mem22[0x000000000061B028:word64]
	branch rbx_111 == 0x0000000000000000 l0000000000406004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060DD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F00:
	word64 rbx_109
	word64 rbp_46
	word64 rdi_39 = Mem22[0x000000000061B028:word64]
	branch rbx_111 <u rax_7 >>u 0x0000000000000001 l0000000000406170
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406170:
	branch rbx_111 >u 0x0000000055555555 l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040617F:
	Mem57[0x000000000061B028:word64] = fn0000000000410C90(rbx_111, rdi_39, out rbx_109)
	rbp_46 = rbx_111 * 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F16:
	branch rax_7 >u 0x00000000AAAAAAAA l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F29:
	word64 rax_64 = fn0000000000410C90(rbx_111, rdi_39, out rbx_109)
	rbp_46 = Mem22[0x000000000061B020:word64]
	Mem72[0x000000000061B028:word64] = rax_64
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F44:
	word64 rax_74 = Mem73[0x000000000061A660:word64]
	word64 rsi_77 = rbp_46 + 0x0000000000000001 + rax_74
	word64 rdi_78 = rbp_46 - rax_74
	word64 rcx_80 = rsi_77 *s rdi_78
	branch rbp_46 >u rsi_77 l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F66:
	branch rsi_77 != (uint64) ((uint128) ((uint64) rcx_80) /u rdi_78) l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F77:
	branch rcx_80 >>u 0x0000000000000001 >u 0x00000000FFFFFFFF l000000000040619D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040619D:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405F8D:
	word64 rax_110 = fn0000000000410C40(rbx_109, out rbx_111, out rsp_113)
	word64 rcx_118 = Mem73[0x000000000061A660:word64]
	branch rbp_46 <=u rcx_118 l0000000000405FE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405FA6:
	word64 rsi_121 = Mem73[0x000000000061B028:word64]
	word64 rcx_124 = rcx_118 * 0x0000000000000008 + 0x00000008
	word64 rdx_125 = rsi_121 + rcx_118 * 0x0000000000000018 + 0x0000000000000010
	word64 rsi_126 = rsi_121 + rbp_46 * 0x0000000000000018
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405FD0:
	Mem129[rdx_125 + 0x0000000000000000:word64] = rax_110
	rdx_125 = rdx_125 + 0x0000000000000018
	rax_110 = rax_110 + rcx_124
	rcx_124 = rcx_124 + 0x0000000000000008
	branch rdx_125 != rsi_126 l0000000000405FD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405FE4:
	Mem144[0x000000000061A660:word64] = rbp_46
	rax_137 = 0x0000000000000000
	r8_145 = Mem144[0x000000000061B1B0:word64]
	rsi_146 = Mem144[0x000000000061B028:word64]
	branch rbx_111 != 0x0000000000000000 l00000000004060E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060E0:
	word64 rcx_152 = Mem151[rsi_146 + 0x0000000000000010:word64]
	Mem153[rsi_146:byte] = 0x01
	word64 rdi_149 = rax_137 + 0x0000000000000001
	Mem155[rsi_146 + 0x0000000000000008:word64] = rdi_149 * 0x0000000000000003
	word64 rdx_156 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060F8:
	Mem162[rcx_152 + rdx_156 * 0x0000000000000008:word64] = 0x0000000000000003
	rdx_156 = rdx_156 + 0x0000000000000001
	branch rdx_156 <=u rax_137 l00000000004060F8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406109:
	rsi_146 = rsi_146 + 0x0000000000000018
	branch rdi_149 == rbx_111 l0000000000406004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406116:
	rax_137 = rdi_149
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406004:
	word64 rbp_175 = 0x0000000000000000
	branch r8_145 == 0x0000000000000000 l000000000040612D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040600F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406010:
	word64 rax_194 = fn0000000000405D50(Mem182[Mem182[0x000000000061B1A8:word64] + rbp_175 * 0x0000000000000008:word64], r10, r12_16, fs, Top, out r8_145, out r9, out r10)
	byte r12b_220 = (byte) r12_16
	word64 r14_207 = Mem182[0x000000000061B1B0:word64]
	branch rbx_111 == 0x0000000000000000 l0000000000406120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406033:
	word64 r13_209 = Mem182[0x000000000061B0C8:word64]
	word64 rsi_210 = Mem182[0x000000000061B028:word64]
	word64 rcx_211 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060A7:
	r12_16 = DPB(r12_16, r12b_220, 0) (alias)
	r12_16 = DPB(r12_16, r12b_220, 0) (alias)
	r9 = rcx_518 - 0x0000000000000001
	branch Mem214[rsi_210:byte] == 0x00 l000000000040609A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060B3:
	branch r12b_220 != 0x00 l0000000000406050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406050:
	r10 = (uint64) ((uint128) (uint64) rbp_175 /u (uint64) ((uint128) ((uint64) ((r14_207 - 0x0000000000000001) + rcx_518)) /u rcx_518))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004060B8:
	r10 = (uint64) ((uint128) (uint64) rbp_175 % rcx_518)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040606A:
	word64 rax_264 = Mem214[rsi_210 + 0x0000000000000010:word64] + r10 * 0x0000000000000008
	word64 rdx_260 = rax_194 + (uint64) (r9 != r10) * 0x0000000000000002
	r9 = Mem214[rax_264:word64]
	branch rdx_260 <=u r9 l000000000040609A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406086:
	r10 = rdx_260 - r9
	Mem271[rsi_210 + 0x0000000000000008:word64] = Mem214[rsi_210 + 0x0000000000000008:word64] + r10
	Mem272[rax_264:word64] = rdx_260
	Mem277[rsi_210:byte] = Mem272[rsi_210 + 0x0000000000000008:word64] <u r13_209
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040609A:
	r12b_220 = (byte) r12_16 (alias)
	r8_145 = rcx_518
	rsi_210 = rsi_210 + 0x0000000000000018
	rcx_211 = rcx_518 + 0x0000000000000001
	rcx_518 = rcx_211
	branch rbx_111 <=u rcx_518 l0000000000406120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406120:
	rbp_175 = rbp_175 + 0x0000000000000001
	branch rbp_175 <u r14_207 l0000000000406010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040612D:
	branch rbx_111 <=u 0x0000000000000001 l0000000000406164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406133:
	word64 rdx_309 = Mem305[0x000000000061B028:word64]
	word64 rax_310 = rbx_111 * 0x0000000000000003
	branch Mem305[rdx_309 - 0x0000000000000018 + (rax_310 << 0x0000000000000003):byte] != 0x00 l0000000000406164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406149:
	word64 rax_314 = (rax_310 << 0x0000000000000003) + rdx_309
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040615A:
	rbx_111 = rbx_111 - 0x0000000000000001
	branch rbx_111 != 0x0000000000000001 l0000000000406150
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406150:
	rax_314 = rax_314 - 0x0000000000000018
	branch Mem305[rax_314 - 0x0000000000000018:byte] != 0x00 l0000000000406164
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406164:
	word64 rsp_343 = rsp_113 + 8
	word64 r12_346 = Mem305[rsp_343 + 8:word64]
	rspOut = rsp_343 + 32
	r8Out = r8_145
	r9Out = r9
	r10Out = r10
	r12Out = r12_346
	return rbx_111
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000405ED0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn00000000004061B0(word32 edi, selector fs, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15]
// LiveOut: r12 rax rbp rbx rsp
// Trashed: SCZO r12 rax rbp rbx rdi rdx rsi rsp
// Preserved: r8 rcx
fn00000000004061B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004061B0:
	word32 edx_111
	word64 rsp_11 = fp - 0x0000000000000038
	branch Mem14[0x000000000061B145:byte] == 0x00 l0000000000406248
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406248:
	word64 rax_19 = fn000000000040C9B0(edi, out rsp_11, out r12)
	branch rax_19 == 0x0000000000000000 l00000000004061D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406259:
	word32 eax_46 = (word32) fn000000000040D420(rax_19, 0x00000000, rax_19, fs)
	edx_111 = 0x00000000 (alias)
	branch eax_46 < 0x00000000 l0000000000406267
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406264_1:
	edx_111 = eax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406267:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004061D1:
	__sprintf_chk(rsp_11, 0x0000000000000001, 0x0000000000000015, 0x000000000041375A, 0x00000000)
	word32 ebx_109 = (word32) rsp_11
	word64 rax_100 = rsp_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004061F3:
	word64 rcx_69 = (uint64) Mem14[rax_100:word32]
	word32 edx_78 = (word32) (uint64) ((word32) (uint64) (rcx_69 + 0xFFFFFFFFFEFEFEFF & (word32) ((uint64) (~((word32) rcx_69)))) & 0x80808080)
	rax_100 = rax_100 + 0x0000000000000004
	byte dl_95 = (byte) edx_78
	branch edx_78 == 0x00000000 l00000000004061F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040620B:
	word32 ecx_88 = (word32) (uint64) ((word32) (uint64) edx_78 >>u 0x00000010)
	branch (edx_78 & 0x00008080) != 0x00000000 l0000000000406219
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406216_1:
	dl_95 = (byte) ecx_88 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406219:
	branch (edx_78 & 0x00008080) != 0x00000000 l0000000000406221
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040621D_1:
	rax_100 = rax_100 + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406221:
	edx_111 = (word32) (uint64) ((word32) (uint64) (word32) (rax_100 - 0x03 - (dl_95 * 0x02 <u 0x00)) - ebx_109) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040622B:
	word64 rax_135 = (uint64) edx_111
	branch (Mem14[rsp_11 + 0x0000000000000018:word64] ^ Mem14[fs:0x00000028:word64]) != 0x0000000000000000 l0000000000406269
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406269:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040623D:
	word64 rsp_137 = rsp_11 + 0x0000000000000028
	word64 rbp_141 = Mem14[rsp_137 + 8:word64]
	rbxOut = Mem14[rsp_137:word64]
	rspOut = rsp_137 + 16
	rbpOut = rbp_141
	r12Out = r12
	return rax_135
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004061B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000406400()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rdi
// Preserved: rsp
fn0000000000406400_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406400:
	branch Mem0[0x000000000061A408:word64] == 0x0000000000000000 l0000000000406418
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406418:
	fn0000000000406440(0x000000000061A3E0, out ecx_36)
	fn0000000000406440(0x000000000061A410, out ecx_37)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406439_thunk_fn0000000000406440:
	fn0000000000406440(0x000000000061A3F0, out ecx_39)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040640A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040640F_thunk_fn0000000000406440:
	fn0000000000406440(0x000000000061A400, out ecx_38)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406400_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000406440(word64 rdi, ptr64 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: eax rcx
// Trashed: SCZO eax rcx rdi rdx rsi
// Preserved: rsp
fn0000000000406440_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406440:
	branch Mem0[0x000000000061B128:byte] == 0x00 l0000000000406470
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406470:
	Mem9[0x000000000061B128:byte] = 0x01
	fn0000000000406400()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040644D:
	word32 eax_30 = fwrite_unlocked(Mem22[rdi + 0x0000000000000008:word64], Mem22[rdi:word64], 0x0000000000000001, Mem22[0x000000000061A610:word64])
	ecxOut = <invalid>
	return eax_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406440_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000406490()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi
// Preserved: rbx rcx rsp
fn0000000000406490_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406490:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064EF:
	branch (word32) (uint64) Mem8[0x000000000061B038:word32] != 0x00000000 l0000000000406503
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064F9:
	branch (word32) (uint64) Mem8[0x000000000061B034:word32] == 0x00000000 l0000000000406538
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406538:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406490_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406503:
	branch Mem8[0x000000000061B128:byte] == 0x00 l00000000004064A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040650C:
	fn0000000000406440(0x000000000061A3E0, out ecx_107)
	fn0000000000406440(0x000000000061A3F0, out ecx_108)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064A0:
	fflush_unlocked(Mem8[0x000000000061A610:word64])
	sigprocmask(0x0000000000000000, 0x000000000061B040, fp + 0xFFFFFFFFFFFFFF78)
	word32 ebx_66 = (word32) (uint64) Mem8[0x000000000061B038:word32]
	word32 eax_58 = (word32) (uint64) Mem8[0x000000000061B034:word32]
	branch eax_58 == 0x00000000 l0000000000406528
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406528:
	signal((uint64) ebx_66, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064CB:
	Mem73[0x000000000061B034:word32] = (word32) (uint64) (eax_58 - 0x00000001)
	ebx_66 = 0x00000013 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004064D9:
	raise((uint64) ebx_66)
	sigprocmask(0x0000000000000002, fp + 0xFFFFFFFFFFFFFF78, 0x0000000000000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000406540(word64 rax, word64 rcx, word64 rdx, byte sil, word64 rdi, word64 r10, selector fs, ptr64 & ecxOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rax:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] sil:[0..7]
// LiveOut: r10 r8 r9 rax rcx
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000406540_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406540:
	byte r14b_683
	word64 rbp_389
	word32 edx_287
	word32 r14d_315
	word32 r15d_258
	word64 rdx_31 = Mem24[rdi:word64]
	word64 r12_32 = Mem24[rdi + 0x0000000000000008:word64]
	branch sil == 0x00 l00000000004069BD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069BD:
	branch Mem24[0x000000000061B129:byte] != 0x00 l00000000004069D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069D8:
	word32 r14d_38
	branch Mem24[0x000000000061B198:byte] == 0x00 l0000000000406A08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A08:
	r14d_38 = (word32) Mem24[rdi + 0x00000000000000B1:byte]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069E1:
	branch Mem24[rdi + 0x00000000000000B1:byte] == 0x00 l0000000000406A20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A20:
	r14d_38 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A10:
	r15d_258 = (word32) (uint64) Mem24[rdi + 0x0000000000000028:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069EA:
	r15d_258 = (word32) (uint64) Mem24[rdi + 0x00000000000000A4:word32] (alias)
	r14d_38 = 0x00000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069F7:
	r14d_315 = (word32) (uint64) (r14d_38 ^ 0x00000001) (alias)
	r12_32 = rdx_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069C6:
	r12_32 = rdx_31
	r14b_683 = 0x00 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406567:
	branch Mem24[0x000000000061B129:byte] != 0x00 l0000000000406580
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406580:
	r14d_315 = (word32) Mem24[rdi + 0x00000000000000B1:byte]
	r15d_258 = (word32) (uint64) Mem24[rdi + 0x00000000000000A4:word32] (alias)
	branch (byte) r14d_315 != 0x00 l00000000004065B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406594:
	edx_287 = 0x0000000C (alias)
	branch (byte) fn0000000000404CD0(0x0000000C) != 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065AB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065B0:
	word64 rax_145
	byte r15b_237 = (byte) r15d_258
	byte r14b_322 = (byte) r14d_315
	r15d_258 = DPB(r15d_258, r15b_237, 0) (alias)
	word32 r15d_261 = DPB(r15d_258, r15b_237, 0)
	branch Mem24[rdi + 0x00000000000000B0:byte] != 0x00 l0000000000406628
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406628:
	word32 eax_103 = (word32) (uint64) ((word32) (uint64) r15d_258 & 0x0000F000)
	branch eax_103 == 0x00008000 l0000000000406868
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406868:
	branch (r15d_258 & 0x00000800) == 0x00000000 l00000000004068B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406871:
	branch (byte) fn0000000000404CD0(0x00000010) == 0x00 l00000000004068B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068B8:
	branch (r15d_258 & 0x00000400) == 0x00000000 l000000000040693B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068C1:
	branch (byte) fn0000000000404CD0(0x00000011) == 0x00 l000000000040693B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040693B:
	rax_145 = fn0000000000404CD0(0x00000015)
	branch (byte) rax_145 == 0x00 l000000000040695C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406949:
	branch Mem24[rdi + 0x00000000000000B8:byte] == 0x00 l000000000040695C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040695C:
	branch (word32) (uint64) (r15d_258 & 0x00000049) == 0x00000000 l000000000040697A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406962:
	rax_145 = fn0000000000404CD0(0x0000000E)
	branch (byte) rax_145 == 0x00 l000000000040697A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040697A:
	branch Mem24[rdi + 0x0000000000000020:word64] <=u 0x0000000000000001 l00000000004065CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406985:
	rax_145 = fn0000000000404CD0(0x00000016)
	branch (byte) rax_145 == 0x00 l00000000004065CF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406997:
	edx_287 = 0x00000016 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406970:
	edx_287 = 0x0000000E (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406952:
	edx_287 = 0x00000015 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068CF:
	edx_287 = 0x00000011 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040687F:
	edx_287 = 0x00000010 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040663B:
	branch eax_103 == 0x00004000 l00000000004068E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068E0:
	branch (word32) (uint64) ((word32) (uint64) r15d_258 & 0x00000202) == 0x00000202 l00000000004069A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069A1:
	edx_287 = 0x00000014 (alias)
	branch (byte) fn0000000000404CD0(0x00000014) != 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004069B8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068F3:
	branch (r15b_237 & 0x02) == 0x00 l0000000000406910
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068F9:
	edx_287 = 0x00000013 (alias)
	branch (byte) fn0000000000404CD0(0x00000013) != 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406910:
	edx_287 = 0x00000006 (alias)
	branch (word32) (uint64) (r15d_261 & 0x00000200) == 0x00000000 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406922:
	edx_287 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((byte) fn0000000000404CD0(0x00000012) - 0x01), bool, 1)) & 0xFFFFFFF4) + 0x00000012) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406646:
	branch eax_103 == 0x0000A000 l0000000000406859
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406859:
	edx_287 = 0x00000007 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406651:
	edx_287 = 0x00000008 (alias)
	branch eax_103 == 0x00001000 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040665D:
	edx_287 = 0x00000009 (alias)
	branch eax_103 == 0x0000C000 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406666:
	edx_287 = 0x0000000A (alias)
	branch eax_103 == 0x00006000 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040666F:
	word64 rdx_305 = (uint64) (eax_103 != 0x00002000)
	edx_287 = rdx_305 + 0x000000000000000B + rdx_305
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065B9:
	rax_145 = (uint64) Mem24[rdi + 0x00000000000000A0:word32]
	word32 eax_316 = (word32) rax_145
	edx_287 = (word32) (uint64) Mem24[rax_145 * 0x0000000000000004 + 0x00412C60:word32] (alias)
	branch edx_287 != 0x00000005 l0000000000406680
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406680:
	r14b_322 = (byte) (uint64) (r14d_315 & DPB(eax_316, edx_287 == 0x00000007, 0)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406689:
	branch r14b_322 == 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040668E:
	edx_287 = 0x0000000D (alias)
	branch Mem24[0x000000000061B198:byte] != 0x00 l00000000004066B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040669C:
	edx_287 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((byte) fn0000000000404CD0(0x0000000D) - 0x01), bool, 1)) & 0xFFFFFFFA) + 0x0000000D) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065CF:
	word64 rax_366 = DPB(rax_145, strlen(r12_32), 0)
	word64 rbp_362 = Mem24[0x000000000061B120:word64]
	word64 r15_368 = r12_32 + rax_366
	branch rbp_362 == 0x0000000000000000 l0000000000406619
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065EA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065F0:
	word64 rdx_374 = Mem24[rbp_362:word64]
	branch rax_366 <u rdx_374 l0000000000406610
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004065F9:
	branch strncmp(r15_368 - rdx_374, Mem24[rbp_362 + 0x0000000000000008:word64], rdx_374) == 0x00000000 l00000000004068A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068A0:
	branch rbp_362 == 0x0000000000000000 l0000000000406619
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004068A9:
	rbp_389 = rbp_362 + 0x0000000000000010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406610:
	rbp_362 = Mem24[rbp_362 + 0x0000000000000020:word64]
	branch rbp_362 != 0x0000000000000000 l00000000004065F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406619:
	edx_287 = 0x00000005 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066B0:
	rbp_389 = ((uint64) edx_287 << 0x0000000000000004) + 6398944
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066C0:
	branch Mem24[rbp_389 + 0x0000000000000008:word64] == 0x0000000000000000 l0000000000406890
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406890:
	rax = fn0000000000404CD0(0x00000004)
	r14b_683 = (byte) (uint64) (word32) rax (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066D0:
	word64 rax_440 = fn0000000000404CD0(0x00000004)
	branch (byte) rax_440 != 0x00 l0000000000406840
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406840:
	fn0000000000406440(0x000000000061A3E0, out ecx_962)
	rax_440 = DPB(rax_440, fn0000000000406440(0x000000000061A3F0, out ecx_963), 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066DD:
	fn0000000000406440(0x000000000061A3E0, out ecx_964)
	fn0000000000406440(rbp_389, out ecx_965)
	r14b_683 = 0x01 (alias)
	rax = DPB(rax_440, fn0000000000406440(0x000000000061A3F0, out ecx_966), 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406570:
	r14b_683 = 0x00 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004066FF:
	word64 rbp_604
	word64 r9_590
	word64 r10_587
	word64 r8_589
	branch rdx == 0x0000000000000000 l00000000004067D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004067D8:
	fn00000000004052D0(0x0000000000000000, Mem24[0x000000000061B0E8:word64], r12_32, Mem24[0x000000000061A610:word64], r10, r12_32, fs, out r8_589, out r9_590, out r10_587)
	Mem606[0x000000000061B018:word64] = Mem24[0x000000000061B018:word64] + rax
	rbp_604 = rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406708:
	branch Mem24[0x000000000061B130:byte] == 0x00 l0000000000406732
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406711:
	rax = Mem24[rdx + 0x0000000000000018:word64]
	branch Mem24[rdx + 0x0000000000000020:word64] <u rax + 0x0000000000000008 l0000000000406820
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406820:
	_obstack_newchunk(rdx, 0x0000000000000008)
	rax = Mem24[rdx + 0x0000000000000018:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406723:
	Mem620[rax:word64] = Mem24[0x000000000061B018:word64]
	Mem623[rdx + 0x0000000000000018:word64] = Mem620[rdx + 0x0000000000000018:word64] + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406732:
	fn00000000004052D0(0x0000000000000000, Mem625[0x000000000061B0E8:word64], r12_32, Mem625[0x000000000061A610:word64], r10, r12_32, fs, out r8_589, out r9_590, out r10_587)
	word64 rdx_653 = rax + Mem625[0x000000000061B018:word64]
	Mem656[0x000000000061B018:word64] = rdx_653
	rbp_604 = rax
	branch Mem625[0x000000000061B130:byte] == 0x00 l0000000000406781
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406767:
	word64 rax_659 = Mem656[rdx + 0x0000000000000018:word64]
	branch Mem656[rdx + 0x0000000000000020:word64] <u rax_659 + 0x0000000000000008 l0000000000406800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406800:
	_obstack_newchunk(rdx, 0x0000000000000008)
	rax_659 = Mem656[rdx + 0x0000000000000018:word64]
	rdx_653 = Mem656[0x000000000061B018:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406779:
	Mem669[rax_659:word64] = rdx_653
	Mem672[rdx + 0x0000000000000018:word64] = Mem669[rdx + 0x0000000000000018:word64] + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406781:
	fn0000000000406490()
	branch r14b_683 != 0x00 l00000000004067A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004067A0:
	fn0000000000406400()
	word64 rcx_700 = Mem699[0x000000000061B0C8:word64]
	branch (uint64) ((uint128) (uint64) rcx /u rcx_700) == (uint64) ((uint128) ((uint64) ((rbp_604 - 0x0000000000000001) + rcx)) /u rcx_700) l000000000040678B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004067C6:
	fn0000000000406440(0x000000000061A550, out ecx_967)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040678B:
	ecxOut = <invalid>
	r8Out = r8_589
	r9Out = r9_590
	r10Out = r10_587
	return rbp_604
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406540_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000406A30()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn0000000000406A30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A30:
	branch Mem0[0x000000000061B129:byte] == 0x00 l0000000000406A4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A39:
	rax = fn0000000000404CD0(0x00000004)
	branch (byte) rax != 0x00 l0000000000406A58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A58:
	fn0000000000406440(0x000000000061A3E0, out ecx_91)
	fn0000000000406440(0x000000000061A420, out ecx_92)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A75_thunk_fn0000000000406440:
	return DPB(rax, fn0000000000406440(0x000000000061A3F0, out ecx_93), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A4B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A4F:
	return rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406A30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000406A80(word32 ecx, word64 rdx, word64 rsi, word64 rdi, word64 r14, word64 r15, selector fs, ptr64 & r10Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15] r14:[0..63] r15:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r15 rax
// Trashed: SCZO r10 r11 r15 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 rbp rbx rsp
fn0000000000406A80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406A80:
	word64 r13_10 = (uint64) ecx
	word32 r13d_69 = (word32) r13_10
	r13_10 = DPB(r13_10, r13d_69, 0) (alias)
	r13_10 = DPB(r13_10, r13d_69, 0) (alias)
	r13_10 = DPB(r13_10, r13d_69, 0) (alias)
	word64 r13_83 = DPB(r13_10, r13d_69, 0)
	word64 rbx_25 = rsi
	word64 rax_28 = Mem23[fs:0x00000028:word64]
	branch Mem29[0x000000000061A748:word64] == 0x0000000000000000 l0000000000406ADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406AB8:
	word64 rax_35 = strstr(rsi, 0x0000000000413766)
	r14 = rax_35
	branch rax_35 == 0x0000000000000000 l0000000000406ADB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406ACD:
	branch DPB(rax_35, strlen(rsi), 0) <=u 0x0000000000000065 l0000000000406B20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406B20:
	word64 rax_51 = __mempcpy_chk(fp - 312, rsi, rax_35 - rsi, 0x0000000000000105)
	word64 rcx_52 = (int64) Mem29[rdx + 0x0000000000000010:word32]
	strcpy(stpcpy(rax_51, rcx_52 + 0x000000000061A760 + rcx_52 * 0x00000000000000A0), rax_35 + 0x0000000000000002)
	rbx_25 = fp - 312
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406ADB:
	word64 r10_85
	word64 r15_90
	word64 rax_93 = fn0000000000410600(rdx, rbx_25, rbx_25, rdx, 0x00000000000003E9, rdi, 0x00000000, rdi, r13_83, r14, r15, fs, out r10_85, out r15_90)
	branch (rax_28 ^ Mem29[fs:0x00000028:word64]) != 0x0000000000000000 l0000000000406B66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406B66:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406B07:
	r10Out = r10_85
	r15Out = r15_90
	return rax_93
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406A80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000406B70(word64 rdi, word64 r10, word64 r15, selector fs, int8 Top, ptr64 & rspOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r15:[0..63] rdi:[0..63] Top:[0..7]
// LiveOut: r10 r15 r8 r9 rbx rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved: fs Top
fn0000000000406B70_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406B70:
	word64 rax_100
	word32 eax_67
	bool C_87
	word64 rbx_22 = rdi
	word64 rsp_1201 = fp - 4840
	branch Mem26[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000406E00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E00:
	branch Mem26[0x000000000061B17C:byte] == 0x00 l0000000000406BC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BA4:
	fn000000000040A600(fp - 0x00000000000012A8, rdi + 0x0000000000000010)
	branch Mem26[0x000000000061B17C:byte] != 0x00 l0000000000406E41
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E41:
	word32 eax_58 = (word32) (uint64) Mem56[rdi + 0x00000000000000B4:word32]
	branch eax_58 == 0x00000001 l0000000000407138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407138:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E50:
	branch eax_58 != 0x00000002 l0000000000406BC7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E59:
	eax_67 = (word32) (uint64) Mem56[0x000000000061B14C:word32] (alias)
	C_87 = SLICE(cond(eax_67 - 0x00000001), bool, 1) (alias)
	branch eax_67 != 0x00000001 l0000000000406BD6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E6D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BC2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BC7:
	eax_67 = (word32) (uint64) Mem72[0x000000000061B14C:word32] (alias)
	C_87 = SLICE(cond(eax_67 - 0x00000001), bool, 1) (alias)
	branch eax_67 == 0x00000001 l0000000000406E70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E70:
	rax_100 = Mem80[rdi + 0x0000000000000080:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BD6:
	branch C_87 l0000000000407040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407040:
	rax_100 = Mem91[rdi + 0x0000000000000070:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BDC:
	branch eax_67 != 0x00000002 l0000000000406E90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E90:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BE5:
	rax_100 = Mem91[rdi + 0x0000000000000060:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406BF7:
	word64 rbp_108 = fp - 0x0000000000000E88
	branch Mem104[0x000000000061B114:byte] != 0x00 l0000000000407060
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407060:
	branch Mem104[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000407085
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040706F:
	word64 rdi_114 = Mem104[rdi + 0x0000000000000018:word64]
	branch rdi_114 == 0x0000000000000000 l0000000000407085
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407078:
	fn000000000040CD70(fp - 0x0000000000001278, rdi_114)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407085:
	__sprintf_chk(fp - 0x0000000000000E88, 0x0000000000000001, 0x0000000000000E3B, 0x0000000000413779, 0x00000000)
	word64 rdx_142 = fp - 0x0000000000000E88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070B0:
	word64 rcx_145 = (uint64) Mem104[rdx_142:word32]
	word64 rax_153 = (uint64) ((word32) (uint64) (rcx_145 + 0xFFFFFFFFFEFEFEFF & (word32) ((uint64) (~((word32) rcx_145)))) & 0x80808080)
	word32 eax_154 = (word32) rax_153
	rdx_142 = rdx_142 + 0x0000000000000004
	byte al_171 = (byte) eax_154
	word64 rax_251 = DPB(rax_153, eax_154, 0)
	branch eax_154 == 0x00000000 l00000000004070B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070C7:
	word64 rbp_159 = rdx_142 + 0x0000000000000002
	word32 ecx_165 = (word32) (uint64) ((word32) (uint64) eax_154 >>u 0x00000010)
	branch (eax_154 & 0x00008080) != 0x00000000 l00000000004070D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070D5_1:
	al_171 = (byte) ecx_165 (alias)
	rax_251 = DPB(rax_153, ecx_165, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070D8:
	word64 rax_250 = DPB(rax_251, al_171, 0)
	rax_250 = DPB(rax_251, al_171, 0) (alias)
	branch (eax_154 & 0x00008080) == 0x00000000 l00000000004070DC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070D8_1:
	rbp_159 = rdx_142
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070DC:
	byte al_174 = al_171 * 0x02
	rax_100 = DPB(rax_250, al_174, 0) (alias)
	rbp_108 = rbp_159 - 0x03 - (al_174 <u 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C0F:
	word64 r12_1040 = fp - 0x0000000000000E88
	branch Mem104[0x000000000061B144:byte] == 0x00 l0000000000406C8F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C18:
	word64 r14_1229 = 0x0000000000413764
	branch Mem104[rdi + 0x00000000000000B0:byte] != 0x00 l0000000000407288
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407288:
	rax_100 = fn000000000040BD70(0x0000000000000200, (word32) (uint64) Mem104[0x000000000061B140:word32], fp - 0x0000000000001278, Mem104[rdi + 0x0000000000000050:word64], Mem104[0x000000000061B138:word64], fs, Top, out r8_1324, out r9_1325)
	r14_1229 = rax_100
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C2B:
	word64 rdx_295
	r15 = (uint64) (word32) ((uint64) Mem104[0x000000000061B174:word32] - fn000000000040D420(rax_100, 0x00000000, r14_1229, fs))
	word32 r15d_269 = (word32) r15
	word32 eax_273 = (word32) (uint64) r15d_269
	branch r15d_269 <= 0x00000000 l0000000000406F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C4B:
	word64 rax_274 = (uint64) (eax_273 - 0x00000001)
	byte al_289 = (byte) rax_274
	word64 rcx_280 = rbp_108 + 0x0000000000000001 + (uint64) ((word32) rax_274)
	word64 rdx_281 = rbp_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C60:
	rdx_281 = rdx_281 + 0x0000000000000001
	Mem284[rdx_281 - 0x0000000000000001:byte] = 0x20
	branch rdx_281 != rcx_280 l0000000000406C60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C6D:
	rdx_295 = rbp_108 + 0x0000000000000001 + DPB(rax_274, (int16) al_289, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C74:
	r14_1229 = r14_1229 + 0x0000000000000001
	byte al_302 = (byte) (word32) Mem298[r14_1229 - 0x0000000000000001:byte]
	rbp_108 = rdx_295 + 0x0000000000000001
	Mem305[rbp_108 - 0x0000000000000001:byte] = al_302
	branch al_302 != 0x00 l0000000000406F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F50:
	rdx_295 = rbp_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C8C:
	Mem309[rdx_295:byte] = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406C8F:
	word64 rax_317 = 0x0000000000413764
	branch Mem315[rbx_22 + 0x00000000000000B0:byte] != 0x00 l0000000000407120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407120:
	rax_317 = fn000000000040CD70(rsp_1201 + 0x0000000000000070, Mem315[rbx_22 + 0x0000000000000020:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406CA1:
	Mem342[rsp_1201:word64] = rax_317
	__sprintf_chk(rbp_108, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000413769, 0x00000000)
	word64 rax_368 = (uint64) strlen(rbp_108)
	word64 rbp_1227 = rbp_108 + rax_368
	branch Mem342[0x000000000061B130:byte] != 0x00 l00000000004070F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004070F0:
	rax_368 = DPB(rax_368, fwrite_unlocked(0x0000000000413771, 0x0000000000000001, 0x0000000000000002, Mem342[0x000000000061A610:word64]), 0) (alias)
	Mem378[0x000000000061B018:word64] = Mem342[0x000000000061B018:word64] + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406CE2:
	branch Mem380[0x000000000061A569:byte] != 0x00 l0000000000406D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406CEB:
	branch Mem380[0x000000000061A568:byte] != 0x00 l0000000000406D08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406CF4:
	branch Mem380[0x000000000061B146:byte] == 0x00 l0000000000407148
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407148:
	branch Mem380[0x000000000061B17D:byte] == 0x00 l0000000000406D58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407155:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D01:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D08:
	rax_368 = DPB(rax_368, fputs_unlocked(r12_1040, Mem380[0x000000000061A610:word64]), 0) (alias)
	Mem409[0x000000000061B018:word64] = Mem380[0x000000000061B018:word64] + (rbp_1227 - r12_1040)
	branch Mem409[0x000000000061A569:byte] != 0x00 l0000000000407248
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407248:
	word64 rsp_434
	rax_368 = fn00000000004057B0((byte) (word32) Mem409[rbx_22 + 0x00000000000000B0:byte], (word32) (uint64) Mem409[0x000000000061B168:word32], (word32) (uint64) Mem409[rbx_22 + 0x000000000000002C:word32], fs, out rbx_22, out rsp_434)
	rsp_1201 = rsp_434 + 0xFFFFFFFFFFFFFFF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D2E:
	branch Mem409[0x000000000061A568:byte] != 0x00 l0000000000407210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407210:
	word64 rax_445 = (uint64) Mem409[rbx_22 + 0x0000000000000030:word32]
	word32 eax_448 = (word32) rax_445
	rax_445 = DPB(rax_445, eax_448, 0) (alias)
	word64 rdi_446 = 0x0000000000413764
	word32 edx_459 = (word32) (uint64) Mem409[0x000000000061B164:word32]
	word64 rsi_449 = (uint64) eax_448
	branch Mem409[rbx_22 + 0x00000000000000B0:byte] == 0x00 l0000000000407238
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407229:
	rdi_446 = 0x0000000000000000
	branch Mem409[0x000000000061B145:byte] == 0x00 l0000000000407415
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407415:
	Mem458[rsp_1201 + 0x0000000000000018:word64] = rsi_449
	Mem460[rsp_1201 + 0x0000000000000010:word32] = edx_459
	rax_445 = fn000000000040CB40((word32) (uint64) eax_448, out rbx_22, out rsp_1201, out rbp_1328, out r12_1040)
	rdi_446 = rax_445
	edx_459 = (word32) (uint64) Mem460[rsp_1201 + 0x0000000000000010:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407238:
	rax_368 = fn0000000000405700(rax_445, edx_459, rdi_446, fs)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D3B:
	branch Mem493[0x000000000061B146:byte] != 0x00 l00000000004071D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004071D0:
	rbp_1227 = r12_1040
	word64 rsp_516
	rax_368 = fn00000000004057B0((byte) (word32) Mem493[rbx_22 + 0x00000000000000B0:byte], (word32) (uint64) Mem493[0x000000000061B160:word32], (word32) (uint64) Mem493[rbx_22 + 0x000000000000002C:word32], fs, out rbx_22, out rsp_516)
	rsp_1201 = rsp_516 + 0xFFFFFFFFFFFFFFF8
	branch Mem493[0x000000000061B17D:byte] == 0x00 l0000000000406D58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D48:
	rbp_1227 = r12_1040
	branch Mem493[0x000000000061B17D:byte] != 0x00 l00000000004071F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004071F5:
	rbp_1227 = r12_1040
	rax_368 = fn0000000000405700(rax_368, (word32) (uint64) Mem493[0x000000000061B16C:word32], Mem493[rbx_22 + 0x00000000000000A8:word64], fs)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D58:
	word64 r14_557
	word64 r13_656
	branch Mem554[rbx_22 + 0x00000000000000B0:byte] == 0x00 l0000000000406F60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F60:
	r14_557 = 0x0000000000413764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D65:
	branch (word32) (uint64) ((word32) (uint64) Mem554[rbx_22 + 0x0000000000000028:word32] & 0x0000B000) == 0x00002000 l00000000004072B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004072B0:
	word64 rax_564 = Mem554[rbx_22 + 0x0000000000000038:word64]
	word32 r13d_627 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) (0xFFFFFFFE - Mem554[0x000000000061B15C:word32]) - Mem554[0x000000000061B158:word32]) + Mem554[0x000000000061B154:word32])
	word64 rax_589 = fn000000000040CD70(rsp_1201 + 0x0000000000000070, (uint64) (DPB((word32) (rax_564 >>u 0x000000000000000C), (byte) (rax_564 >>u 0x000000000000000C) & 0x00, 0) | (word32) ((byte) rax_564)))
	word64 r14_601 = (uint64) Mem554[0x000000000061B158:word32]
	word64 rdx_598 = Mem554[rbx_22 + 0x0000000000000038:word64]
	fn000000000040CD70(rsp_1201 + 0x0000000000000050, (uint64) ((word32) (uint64) ((word32) (rdx_598 >>u 0x0000000000000020) & 0xFFFFF000) | (word32) ((uint64) ((word32) ((uint64) ((word32) (rdx_598 >>u 0x0000000000000008))) & 0x00000FFF))))
	word32 r14d_641 = (word32) r14_601
	r15 = rax_589
	r14_601 = DPB(r14_601, r14d_641, 0) (alias)
	r14_557 = DPB(r14_601, r14d_641, 0) (alias)
	branch r13d_627 < 0x00000000 l0000000000407328
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407324_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407328:
	Mem639[rsp_1201 + 0x0000000000000008:word64] = rax_589
	Mem642[rsp_1201:word32] = r14d_641
	__sprintf_chk(rbp_1227, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000413774, 0x00000000)
	r13_656 = rbp_1227 + 0x0000000000000001 + (int64) Mem642[0x000000000061B154:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D78:
	rax_368 = fn000000000040BD70(0x0000000000000001, (word32) (uint64) Mem554[0x000000000061B134:word32], rsp_1201 + 0x0000000000000070, Mem554[rbx_22 + 0x0000000000000040:word64], Mem554[0x000000000061A560:word64], fs, Top, out r8_1326, out r9_1327)
	r14_557 = rax_368
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406D9B:
	word32 r13d_711 = (word32) (uint64) (word32) ((uint64) Mem554[0x000000000061B154:word32] - fn000000000040D420(rax_368, 0x00000000, r14_557, fs))
	word32 eax_715 = (word32) (uint64) r13d_711
	branch r13d_711 <= 0x00000000 l0000000000406DDC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DB7:
	word64 rax_716 = (uint64) (eax_715 - 0x00000001)
	byte al_730 = (byte) rax_716
	word64 rcx_721 = rbp_1227 + 0x0000000000000001 + (uint64) ((word32) rax_716)
	word64 rdx_722 = rbp_1227
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DC8:
	rdx_722 = rdx_722 + 0x0000000000000001
	Mem725[rdx_722 - 0x0000000000000001:byte] = 0x20
	branch rdx_722 != rcx_721 l0000000000406DC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DD5:
	rbp_1227 = rbp_1227 + 0x0000000000000001 + DPB(rax_716, (int16) al_730, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DDC:
	r14_557 = r14_557 + 0x0000000000000001
	byte al_743 = (byte) (word32) Mem739[r14_557 - 0x0000000000000001:byte]
	r13_656 = rbp_1227 + 0x0000000000000001
	Mem746[r13_656 - 0x0000000000000001:byte] = al_743
	branch al_743 == 0x00 l0000000000406E98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E98:
	Mem748[rbp_1227:byte] = 0x20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406E9C:
	word64 rax_1016
	word64 r13_1017
	word64 r9_917
	word64 rax_752 = localtime(rsp_1201 + 0x0000000000000030)
	Mem754[r13_656:byte] = 0x01
	branch Mem754[rbx_22 + 0x00000000000000B0:byte] == 0x00 l0000000000406F80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EB8:
	branch rax_752 == 0x0000000000000000 l0000000000407364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EC1:
	word32 r8d_803
	word64 rdi_765 = Mem754[0x000000000061B188:word64]
	word32 edi_770 = (word32) rdi_765
	word64 rdx_763 = Mem754[0x000000000061B180:word64]
	word64 rsi_764 = Mem754[rsp_1201 + 0x0000000000000030:word64]
	word64 rdi_790 = DPB(rdi_765, edi_770, 0)
	rdi_790 = DPB(rdi_765, edi_770, 0) (alias)
	word32 ecx_771 = (word32) Mem754[rsp_1201 + 0x0000000000000038:word64]
	branch rsi_764 > rdx_763 l0000000000407380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EE2:
	branch rsi_764 < rdx_763 l0000000000406EEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EE4:
	branch edi_770 < ecx_771 l0000000000407380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407380:
	Mem777[rsp_1201 + 0x0000000000000010:word64] = rax_752
	fn000000000040AB30(0x000000000061B180)
	rdx_763 = Mem777[0x000000000061B180:word64]
	r8d_803 = (word32) Mem777[0x000000000061B188:word64] (alias)
	rsi_764 = Mem777[rsp_1201 + 0x0000000000000030:word64]
	ecx_771 = (word32) Mem777[rsp_1201 + 0x0000000000000038:word64] (alias)
	rax_752 = Mem777[rsp_1201 + 0x0000000000000010:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EEC:
	r8d_803 = (word32) rdi_790 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EEF:
	word32 edi_825
	word64 rdi_796 = rdx_763 + 0xFFFFFFFFFF0F3D54
	branch rdi_796 >= rsi_764 l0000000000407268
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407268:
	edi_825 = 0x00000000 (alias)
	branch rdi_796 > rsi_764 l0000000000406F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407273:
	branch r8d_803 >= ecx_771 l0000000000406F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040727C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406EFF:
	edi_825 = 0x00000001 (alias)
	branch rdx_763 > rsi_764 l0000000000406F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F09:
	edi_825 = 0x00000000 (alias)
	branch rdx_763 < rsi_764 l0000000000406F20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F0E:
	edi_825 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) ecx_771 - r8d_803) >>u 0x0000001F) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F20:
	word64 rax_878 = fn0000000000406A80(ecx_771, rax_752, Mem839[(int64) edi_825 * 0x0000000000000008 + 0x0061A3D0:word64], r13_656, r14_557, r15, fs, out r10, out r15)
	branch rax_878 == 0x0000000000000000 l0000000000406F6B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F6B:
	branch Mem839[r13_656:byte] == 0x00 l0000000000406F3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F72:
	branch Mem839[rbx_22 + 0x00000000000000B0:byte] != 0x00 l0000000000407364
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407364:
	r9_917 = fn000000000040CCD0(rsp_1201 + 0x0000000000000050, Mem904[rsp_1201 + 0x0000000000000030:word64])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F7F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F80:
	r9_917 = 0x0000000000413764
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F86:
	branch (word32) (uint64) Mem919[0x000000000061A3C4:word32] < 0x00000000 l00000000004073B1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004073B1:
	Mem930[rsp_1201 + 0x0000000000000010:word64] = r9_917
	Mem931[rsp_1201 + 0x0000000000000028:word64] = 0x0000000000000000
	word64 rax_932 = localtime(rsp_1201 + 0x0000000000000028)
	branch rax_932 == 0x0000000000000000 l0000000000407403
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004073D3:
	word64 rax_958 = fn0000000000406A80(0x00000000, rax_932, Mem931[0x000000000061A3D0:word64], rsp_1201 + 0x0000000000000070, r14_557, r15, fs, out r10, out r15_1331)
	word32 r8d_991 = (word32) (uint64) Mem931[0x000000000061A3C4:word32]
	word64 r9_970 = Mem931[rsp_1201 + 0x0000000000000010:word64]
	branch rax_958 != 0x0000000000000000 l0000000000407436
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407436:
	Mem978[rsp_1201 + 0x0000000000000010:word64] = r9_970
	word32 eax_988 = (word32) fn000000000040D240(0x00000000, rax_958, rsp_1201 + 0x0000000000000070, fs)
	Mem989[0x000000000061A3C4:word32] = eax_988
	rsp_1201 = rsp_1201 + 0x0000000000000008
	r8d_991 = (word32) (uint64) eax_988 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004073FA:
	branch r8d_991 >= 0x00000000 l0000000000406F96
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407403:
	Mem997[0x000000000061A3C4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F96:
	__sprintf_chk(r13_656, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000413779, 0x00000000)
	rax_1016 = (uint64) strlen(r13_656) (alias)
	r13_1017 = r13_656 + rax_1016
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406F3B:
	rax_1016 = rax_878 + r13_656
	Mem1024[rax_1016:byte] = 0x20
	Mem1025[rax_1016 + 0x0000000000000001:byte] = 0x00
	r13_1017 = rax_1016 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406FBC:
	word64 r13_1049 = r13_1017 - r12_1040
	word64 rax_1110 = DPB(rax_1016, fputs_unlocked(r12_1040, Mem1026[0x000000000061A610:word64]), 0)
	Mem1065[0x000000000061B018:word64] = Mem1026[0x000000000061B018:word64] + r13_1049
	word64 rcx_1115 = <invalid>
	word64 r10_1111
	word64 r8_1113
	word64 r9_1114
	word64 rax_1119 = fn0000000000406540(rax_1110, r13_1049, 0x000000000061AFC0, 0x00, rbx_22, r10, fs, out ecx_1329, out r8_1113, out r9_1114, out r10_1111)
	word32 ecx_1189 = (word32) rcx_1115
	word32 edx_1126 = (word32) (uint64) Mem1065[rbx_22 + 0x00000000000000A0:word32]
	branch edx_1126 == 0x00000006 l0000000000407160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407160:
	branch Mem1065[rbx_22 + 0x0000000000000008:word64] == 0x0000000000000000 l0000000000407012
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040716B:
	word64 rax_1144 = DPB(rax_1119, fwrite_unlocked(0x000000000041377E, 0x0000000000000001, 0x0000000000000004, Mem1065[0x000000000061A610:word64]), 0)
	Mem1141[0x000000000061B018:word64] = Mem1065[0x000000000061B018:word64] + 0x0000000000000004
	fn0000000000406540(rax_1144, r13_1049 + 0x0000000000000004 + rax_1119, 0x0000000000000000, 0x01, rbx_22, r10_1111, fs, out ecx_1330, out r8_1113, out r9_1114, out r10_1111)
	word64 rcx_1149 = <invalid>
	word32 ecx_1170 = (word32) rcx_1149
	branch (word32) (uint64) Mem1141[0x000000000061B12C:word32] == 0x00000000 l0000000000407012
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004071B0:
	fn0000000000405D00(ecx_1170, 0x00000000, (word32) (uint64) Mem1141[rbx_22 + 0x00000000000000A4:word32], 0x01)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406FF9:
	branch (word32) (uint64) Mem1065[0x000000000061B12C:word32] == 0x00000000 l0000000000407012
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407003:
	fn0000000000405D00(ecx_1189, edx_1126, (word32) (uint64) Mem1065[rbx_22 + 0x0000000000000028:word32], (byte) (word32) Mem1065[rbx_22 + 0x00000000000000B0:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407012:
	branch (Mem1206[rsp_1201 + 0x00000000000012A8:word64] ^ Mem1206[fs:0x00000028:word64]) != 0x0000000000000000 l000000000040745A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040745A:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407029:
	word64 rsp_1213 = rsp_1201 + 4792
	word64 rbx_1215 = Mem1206[rsp_1213:word64]
	word64 r15_1225 = Mem1206[rsp_1213 + 40:word64]
	rspOut = rsp_1213 + 48
	r8Out = r8_1113
	r9Out = r9_1114
	r10Out = r10_1111
	r15Out = r15_1225
	return rbx_1215
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000406B70_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000406DF5:
	rbp_1227 = r13_656
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000407870(word64 rsi, word64 rdi, word64 r10, selector fs, int8 Top, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63] rsi:[0..63] Top:[0..7]
// LiveOut: r10 r8 r9
// Trashed: SCZO r10 r11 r8 r9 rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000407870_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407870:
	word64 rax_15 = Mem10[fs:0x00000028:word64]
	word64 rax_166 = fn0000000000406A30()
	branch Mem16[0x000000000061B114:byte] != 0x00 l0000000000407970
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407970:
	branch Mem16[rdi + 0x00000000000000B0:byte] == 0x00 l0000000000407992
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040797E:
	word64 rdi_35 = Mem16[rdi + 0x0000000000000018:word64]
	branch rdi_35 == 0x0000000000000000 l0000000000407992
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407987:
	fn000000000040CD70(fp - 696, rdi_35)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407992:
	branch Mem16[0x000000000061B150:word32] == 0x00000004 l00000000004079A7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079A0_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079A7:
	rax_166 = (uint64) __printf_chk(0x0000000000000001, 0x0000000000413779, 0x00000000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078A4:
	branch Mem16[0x000000000061B144:byte] == 0x00 l00000000004078E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078AD:
	branch Mem16[rdi + 0x00000000000000B0:byte] != 0x00 l00000000004079C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079C0:
	fn000000000040BD70(0x0000000000000200, (word32) (uint64) Mem16[0x000000000061B140:word32], fp - 696, Mem16[rdi + 0x0000000000000050:word64], Mem16[0x000000000061B138:word64], fs, Top, out r8_278, out r9_279)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078BF:
	branch Mem16[0x000000000061B150:word32] == 0x00000004 l00000000004078D4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078CD_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078D4:
	rax_166 = (uint64) __printf_chk(0x0000000000000001, 0x0000000000413779, 0x00000000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078E0:
	branch Mem16[0x000000000061B17D:byte] == 0x00 l0000000000407911
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078E9:
	branch Mem16[0x000000000061B150:word32] == 0x00000004 l0000000000407900
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004078F9_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407900:
	rax_166 = (uint64) __printf_chk(0x0000000000000001, 0x0000000000413779, 0x00000000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407911:
	word64 r10_172
	word64 r8_174
	word64 r9_175
	fn0000000000406540(rax_166, rsi, 0x0000000000000000, 0x00, rdi, r10, fs, out ecx_280, out r8_174, out r9_175, out r10_172)
	word64 rcx_176 = <invalid>
	word32 ecx_198 = (word32) rcx_176
	branch (word32) (uint64) Mem16[0x000000000061B12C:word32] == 0x00000000 l0000000000407948
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040792D:
	fn0000000000405D00(ecx_198, (word32) (uint64) Mem16[rdi + 0x00000000000000A0:word32], (word32) (uint64) Mem16[rdi + 0x0000000000000028:word32], (byte) (word32) Mem16[rdi + 0x00000000000000B0:byte])
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407948:
	branch (rax_15 ^ Mem16[fs:0x00000028:word64]) != 0x0000000000000000 l00000000004079E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079E6:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407962:
	r9Out = r9_175
	r10Out = r10_172
	return r8_174
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000407870_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn00000000004079F0(word64 r10, word64 r15, selector fs, int8 Top, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r15:[0..63] Top:[0..7]
// LiveOut: r10 r12 r13 r14 r15 r8 r9 rbp rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn00000000004079F0_entry:
	word64 rsp_2 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079F0:
	branch Mem0[0x000000000061B150:word32] >u 0x00000004 l0000000000407A46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004079F9:
	word64 rsp_158 = fp - 0x0000000000000068
	switch (Mem23[0x000000000061B150:word32]) { l0000000000407C01 l0000000000407C75 l0000000000407CDA l0000000000407A48 l0000000000407B31 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B31:
	branch Mem23[0x000000000061B1B0:word64] == 0x0000000000000000 l0000000000407A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B3F:
	word64 r13_35 = Mem23[Mem23[0x000000000061B1A8:word64]:word64]
	word64 rbx_30 = 0x0000000000000000
	word64 r12_102 = 0x0000000000000000
	word64 r10_40
	word64 rbp_100 = fn0000000000405D50(r13_35, r10, 0x0000000000000000, fs, Top, out r8_805, out r9_806, out r10_40)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B60:
	rbx_30 = rbx_30 + 0x0000000000000001
	r8 = fn0000000000407870(r12_102, r13_35, r10_40, fs, Top, out r9, out r10)
	r12_102 = rbp_100
	branch rbx_30 >=u Mem76[0x000000000061B1B0:word64] l0000000000407A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B7F:
	r13_35 = Mem76[Mem76[0x000000000061B1A8:word64] + rbx_30 * 0x0000000000000008:word64]
	word64 rax_88 = fn0000000000405D50(r13_35, r10, rbp_100, fs, Top, out r8_807, out r9_808, out r10_40)
	branch rbx_30 == 0x0000000000000000 l0000000000407E00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E00:
	rbp_100 = rbp_100 + rax_88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B9B:
	byte r14b_139
	word32 r15d_131
	r12_102 = rbp_100 + 0x0000000000000002
	branch rax_88 >=u Mem76[0x000000000061B0C8:word64] l0000000000407E10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E10:
	r15d_131 = 0x0000000A (alias)
	r14b_139 = 0x0A (alias)
	r12_102 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BB0:
	r15d_131 = 0x00000020 (alias)
	r14b_139 = 0x20 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BBC:
	word64 rdi_116 = Mem76[0x000000000061A610:word64]
	rbp_100 = rax_88
	word64 rax_117 = Mem76[rdi_116 + 0x0000000000000028:word64]
	branch rax_117 >=u Mem76[rdi_116 + 0x0000000000000030:word64] l0000000000407E8B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E8B:
	__overflow(rdi_116, 0x000000000000002C)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BD1:
	Mem123[rdi_116 + 0x0000000000000028:word64] = rax_117 + 0x0000000000000001
	Mem124[rax_117:byte] = 0x2C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BDC:
	word64 rdi_126 = Mem125[0x000000000061A610:word64]
	word64 rax_127 = Mem125[rdi_126 + 0x0000000000000028:word64]
	branch rax_127 >=u Mem125[rdi_126 + 0x0000000000000030:word64] l0000000000407E7E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E7E:
	__overflow(rdi_126, (uint64) r15d_131)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407BF1:
	Mem137[rdi_126 + 0x0000000000000028:word64] = rax_127 + 0x0000000000000001
	Mem142[rax_127:byte] = r14b_139
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A48:
	word64 r12_149
	word64 r10_159
	word64 rax_153 = fn0000000000405ED0(0x00000000, r10, Top, out rsp_158, out r8_801, out r9_802, out r10_159, out r12_149)
	word64 r14_171 = Mem23[0x000000000061B028:word64] - 0x0000000000000018 + rax_153 * 0x0000000000000018
	word64 rbx_173 = Mem23[Mem23[0x000000000061B1A8:word64]:word64]
	word64 r10_175
	Mem188[rsp_158 + 0x0000000000000008:word64] = fn0000000000405D50(rbx_173, r10_159, r12_149, fs, Top, out r8_803, out r9_804, out r10_175)
	word64 r12_196 = Mem188[Mem188[r14_171 + 0x0000000000000010:word64]:word64]
	r8 = fn0000000000407870(0x0000000000000000, rbx_173, r10_175, fs, Top, out r9, out r10)
	word64 r15_144 = 0x0000000000000000
	word64 rbx_195 = 0x0000000000000001
	word64 rcx_210 = Mem188[rsp_158 + 0x0000000000000008:word64]
	branch Mem188[0x000000000061B1B0:word64] >u 0x0000000000000001 l0000000000407B0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B0D:
	word64 rdx_218 = (uint64) ((uint128) (uint64) rbx_195 % rax_153)
	branch rdx_218 == 0x0000000000000000 l0000000000407AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407AB0:
	word64 rdi_225 = Mem224[0x000000000061A610:word64]
	word64 rax_226 = Mem224[rdi_225 + 0x0000000000000028:word64]
	branch rax_226 >=u Mem224[rdi_225 + 0x0000000000000030:word64] l0000000000407E27
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E27:
	__overflow(rdi_225, 0x000000000000000A)
	r15_144 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407AC5:
	Mem240[rdi_225 + 0x0000000000000028:word64] = rax_226 + 0x0000000000000001
	Mem241[rax_226:byte] = 0x0A
	r15_144 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407B1D:
	word64 r12_244 = r12_196 + r15_144
	fn0000000000405200(r12_244, rcx_210 + r15_144)
	r15_144 = r12_244
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407AD3:
	word64 r12_264 = Mem259[Mem259[0x000000000061B1A8:word64] + rbx_195 * 0x0000000000000008:word64]
	word64 r10_274
	fn0000000000407870(r15_144, r12_264, r10, fs, Top, out r9_811, out r10_274)
	rcx_210 = fn0000000000405D50(r12_264, r10_274, r12_264, fs, Top, out r8, out r9, out r10)
	rbx_195 = rbx_195 + 0x0000000000000001
	r12_196 = Mem259[Mem259[r14_171 + 0x0000000000000010:word64] + rdx_218 * 0x0000000000000008:word64]
	branch rbx_195 >=u Mem259[0x000000000061B1B0:word64] l0000000000407A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407AA1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A18:
	word64 rdi_309 = Mem308[0x000000000061A610:word64]
	word64 rax_310 = Mem308[rdi_309 + 0x0000000000000028:word64]
	branch rax_310 >=u Mem308[rdi_309 + 0x0000000000000030:word64] l0000000000407E39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E39:
	word64 rsp_319 = rsp_158 + 0x0000000000000038
	word64 rbp_324 = Mem308[rsp_319 + 8:word64]
	word64 r12_326 = Mem308[rsp_319 + 16:word64]
	word64 r13_328 = Mem308[rsp_319 + 24:word64]
	word64 r14_330 = Mem308[rsp_319 + 32:word64]
	word64 r15_332 = Mem308[rsp_319 + 40:word64]
	__overflow(rdi_309, 0x000000000000000A)
	rbpOut = rbp_324
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r12Out = r12_326
	r13Out = r13_328
	r14Out = r14_330
	r15Out = r15_332
	return rsp_319 + 48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A2D:
	Mem336[rdi_309 + 0x0000000000000028:word64] = rax_310 + 0x0000000000000001
	Mem337[rax_310:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407CDA:
	word64 rax_344 = fn0000000000405ED0(0x00000001, r10, Top, out rsp_158, out r8, out r9, out r10, out r12_800)
	word128 rdx_rax_365 = (uint128) (uint64) Mem23[0x000000000061B1B0:word64]
	word64 rdx_367 = (uint64) (rdx_rax_365 % rax_344)
	word64 r15_362 = Mem23[0x000000000061B028:word64] - 0x0000000000000018 + rax_344 * 0x0000000000000018
	word64 rdx_374 = DPB(rdx_367, (word32) (rdx_367 != 0x0000000000000000), 0) + (uint64) (rdx_rax_365 /u rax_344)
	Mem376[rsp_158 + 0x0000000000000018:word64] = rdx_374
	branch rdx_374 == 0x0000000000000000 l0000000000407A38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407D1A:
	Mem379[rsp_158 + 0x0000000000000028:word64] = 0x0000000000000000
	Mem380[rsp_158 + 0x0000000000000020:word64] = rdx_374 * 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407D30:
	word64 rax_383 = Mem382[rsp_158 + 0x0000000000000028:word64]
	word64 rbp_384 = 0x0000000000000000
	word64 rbx_385 = 0x0000000000000000
	word64 r13_389 = rax_383 * 0x0000000000000008
	word64 r12_390 = rax_383
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407D6B:
	word64 r14_394 = Mem391[Mem391[0x000000000061B1A8:word64] + r13_389:word64]
	word64 r10_400
	Mem414[rsp_158 + 0x0000000000000008:word64] = fn0000000000405D50(r14_394, r10, r12_390, fs, Top, out r8_809, out r9_810, out r10_400)
	Mem424[rsp_158 + 0x0000000000000010:word64] = Mem414[Mem414[r15_362 + 0x0000000000000010:word64] + rbp_384:word64]
	r8 = fn0000000000407870(rbx_385, r14_394, r10_400, fs, Top, out r9, out r10)
	rbp_384 = rbp_384 + 0x0000000000000008
	r12_390 = r12_390 + Mem424[rsp_158 + 0x0000000000000018:word64]
	r13_389 = r13_389 + Mem424[rsp_158 + 0x0000000000000020:word64]
	branch r12_390 <u Mem424[0x000000000061B1B0:word64] l0000000000407D50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407D50:
	word64 r14_443 = Mem424[rsp_158 + 0x0000000000000010:word64] + rbx_385
	fn0000000000405200(r14_443, Mem424[rsp_158 + 0x0000000000000008:word64] + rbx_385)
	rbx_385 = r14_443
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407DB2:
	word64 rdi_457 = Mem424[0x000000000061A610:word64]
	word64 rax_458 = Mem424[rdi_457 + 0x0000000000000028:word64]
	branch rax_458 >=u Mem424[rdi_457 + 0x0000000000000030:word64] l0000000000407E51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E51:
	__overflow(rdi_457, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407DC7:
	Mem464[rdi_457 + 0x0000000000000028:word64] = rax_458 + 0x0000000000000001
	Mem465[rax_458:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407DD2:
	Mem469[rsp_158 + 0x0000000000000028:word64] = Mem467[rsp_158 + 0x0000000000000028:word64] + 0x0000000000000001
	branch Mem469[rsp_158 + 0x0000000000000028:word64] != Mem469[rsp_158 + 0x0000000000000018:word64] l0000000000407D30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407DE8:
	rbp = Mem469[rsp_158 + 0x0000000000000040:word64]
	r12 = Mem469[rsp_158 + 0x0000000000000048:word64]
	r13 = Mem469[rsp_158 + 0x0000000000000050:word64]
	r14 = Mem469[rsp_158 + 0x0000000000000058:word64]
	r15 = Mem469[rsp_158 + 0x0000000000000060:word64]
	rsp_2 = rsp_158 + 0x0000000000000068
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C75:
	word64 rbx_487 = 0x0000000000000000
	branch Mem23[0x000000000061B1B0:word64] == 0x0000000000000000 l0000000000407A38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C85:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C88:
	r8 = fn0000000000407870(0x0000000000000000, Mem490[Mem490[0x000000000061B1A8:word64] + rbx_487 * 0x0000000000000008:word64], r10, fs, Top, out r9, out r10)
	word64 rdi_513 = Mem490[0x000000000061A610:word64]
	word64 rax_514 = Mem490[rdi_513 + 0x0000000000000028:word64]
	branch rax_514 >=u Mem490[rdi_513 + 0x0000000000000030:word64] l0000000000407E60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E60:
	__overflow(rdi_513, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407CAF:
	Mem520[rdi_513 + 0x0000000000000028:word64] = rax_514 + 0x0000000000000001
	Mem521[rax_514:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407CBA:
	rbx_487 = rbx_487 + 0x0000000000000001
	branch Mem524[0x000000000061B1B0:word64] >u rbx_487 l0000000000407C88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407CC7:
	rsp_2 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C01:
	word64 rbx_543 = 0x0000000000000000
	branch Mem23[0x000000000061B1B0:word64] == 0x0000000000000000 l0000000000407A38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A38:
	word64 rsp_547 = rsp_158 + 0x0000000000000038
	rbp = Mem549[rsp_547 + 8:word64]
	r12 = Mem549[rsp_547 + 16:word64]
	r13 = Mem549[rsp_547 + 24:word64]
	r14 = Mem549[rsp_547 + 32:word64]
	r15 = Mem549[rsp_547 + 40:word64]
	rsp_2 = rsp_547 + 48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C11:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C18:
	fn0000000000406A30()
	word64 rsp_594
	word64 rbx_589 = fn0000000000406B70(Mem571[Mem571[0x000000000061B1A8:word64] + rbx_543 * 0x0000000000000008:word64], r10, r15, fs, Top, out rsp_594, out r8, out r9, out r10, out r15)
	word64 rdi_599 = Mem571[0x000000000061A610:word64]
	word64 rax_600 = Mem571[rdi_599 + 0x0000000000000028:word64]
	branch rax_600 >=u Mem571[rdi_599 + 0x0000000000000030:word64] l0000000000407E6F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407E6F:
	__overflow(rdi_599, 0x000000000000000A)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C42:
	Mem606[rdi_599 + 0x0000000000000028:word64] = rax_600 + 0x0000000000000001
	Mem607[rax_600:byte] = 0x0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C4D:
	Mem610[0x000000000061B018:word64] = Mem608[0x000000000061B018:word64] + 0x0000000000000001
	rbx_543 = rbx_589 + 0x0000000000000001
	branch Mem610[0x000000000061B1B0:word64] >u rbx_589 + 0x0000000000000001 l0000000000407C18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407C62:
	rbp = Mem610[rsp_594 + 0x0000000000000040:word64]
	r12 = Mem610[rsp_594 + 0x0000000000000048:word64]
	r13 = Mem610[rsp_594 + 0x0000000000000050:word64]
	r14 = Mem610[rsp_594 + 0x0000000000000058:word64]
	r15 = Mem610[rsp_594 + 0x0000000000000060:word64]
	rsp_2 = rsp_594 + 0x0000000000000068
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407A46:
	rbpOut = rbp
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return rsp_2
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004079F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000407EA0(word64 rcx, byte dl, word64 rbx, word64 rbp, word32 esi, word64 rdi, word64 r10, selector fs, int8 Top, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..7] esi:[0..31] fs:[0..15] r10:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] Top:[0..7]
// LiveOut: r10 r12 r13 r14 r15 r8 r9 rax rbp rbx rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
l0000000000408CE8:
	branch dl != 0x00 l0000000000408CAF
	def dl
	def al
	def rsi
	def Mem0
	def rsp
	def r8
	def r9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CAF:
	branch al != 0x00 l0000000000408CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CB3:
	rax_53 = 0x0000000000000001
	branch dl == 0x00 l0000000000408CC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CC0:
	rcx_59 = Mem0[rsi + 0x0000000000000068:word64]
	eax_69 = (word32) Mem0[rdi + 0x0000000000000070:word64] (alias)
	edx_68 = (word32) Mem0[rsi + 0x0000000000000070:word64] (alias)
	branch Mem0[rdi + 0x0000000000000068:word64] > rcx_59 l0000000000408CF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CD2:
	branch Mem0[rdi + 0x0000000000000068:word64] < rcx_59 l0000000000408D00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408D00:
	rbxOut = rbx
	rspOut = rsp
	rbpOut = rbp
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CD4:
	edx_71 = (word32) (uint64) (edx_68 - eax_69) (alias)
	branch edx_71 != 0x00000000 l0000000000408D06
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408D06:
	rbxOut = rbx
	rspOut = rsp
	rbpOut = rbp
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (uint64) edx_71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CD8:
	rsi_75 = Mem0[rsi:word64]
	rdi_76 = Mem0[rdi:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000405020:
	Mem81[rsp - 8:word64] = rbp
	Mem85[rsp - 16:word64] = rbx
	rax_88 = __errno_location()
	Mem89[rax_88:word32] = 0x00000000
	rbx_93 = Mem89[rsp - 0x0000000000000010:word64]
	rbp_96 = Mem89[rsp - 0x0000000000000008:word64]
	rax_2572 = DPB(rax_88, strcoll(rdi_76, rsi_75), 0) (alias)
	rbxOut = rbx_93
	rspOut = rsp
	rbpOut = rbp_96
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return rax_2572
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CBC:
	rbxOut = rbx
	rspOut = rsp
	rbpOut = rbp
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CEC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408CF0:
	rbxOut = rbx
	rspOut = rsp
	rbpOut = rbp
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000407EA0_entry:
	def fp
	def rbp
	def r15
	def r14
	def r13
	def esi
	def r12
	def rbx
	def rdi
	def edx
	def rcx
	def fs
	def r10
	def Top
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407EA0:
	rbp_6 = fp - 8
	r13d_2153 = (word32) (uint64) esi (alias)
	rbx_25 = rdi
	bLoc038C_2263 = SLICE(edx, byte, 0) (alias)
	rcx_35 = Mem33[0x000000000061B1B0:word64]
	r9_37 = Mem33[0x000000000061B1C0:word64]
	branch rcx_35 == Mem33[0x000000000061B1B8:word64] l0000000000408400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408400:
	rdi_40 = Mem33[0x000000000061B1C0:word64]
	branch rcx_35 >u 0x00000000AAAAAAAA l0000000000408C7B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C7B:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040841A:
	rax_103 = fn0000000000410C90(rdi, rdi_40, out rbx_104)
	Mem111[0x000000000061B1B8:word64] = Mem100[0x000000000061B1B8:word64] << 0x0000000000000001
	Mem113[0x000000000061B1C0:word64] = rax_103
	r9_114 = rax_103
	rcx_115 = Mem113[0x000000000061B1B0:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407EED:
	rbx_2161 = PHI((rbx_25, l0000000000407EA0), (rbx_104, l000000000040841A))
	r9_121 = PHI((r9_37, l0000000000407EA0), (r9_114, l000000000040841A))
	rcx_117 = PHI((rcx_35, l0000000000407EA0), (rcx_115, l000000000040841A))
	rcx_118 = rcx_117 * 0x0000000000000003
	r14_122 = r9_121 + (rcx_118 << 0x0000000000000006)
	esi_142 = 0x000000C0 (alias)
	rdi_126 = r14_122
	dil_132 = (byte) r14_122 (alias)
	branch ((byte) r14_122 & 0x01) != 0x00 l0000000000408A18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A18:
	Mem128[r14_122:byte] = 0x00
	rdi_129 = r14_122 + 0x0000000000000001
	dil_133 = (byte) (r14_122 + 0x0000000000000001) (alias)
	esi_143 = 0x000000BF (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F0B:
	esi_141 = PHI((esi_142, l0000000000407EED), (esi_143, l0000000000408A18))
	rdi_138 = PHI((rdi_126, l0000000000407EED), (rdi_129, l0000000000408A18))
	dil_131 = PHI((dil_132, l0000000000407EED), (dil_133, l0000000000408A18))
	rdi_139 = DPB(rdi_138, dil_131, 0) (alias)
	rdi_155 = DPB(rdi_138, dil_131, 0) (alias)
	branch (dil_131 & 0x02) != 0x00 l00000000004089E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089E0:
	Mem146[rdi_139:word16] = 0x0000
	r9_137 = 0x0000000000000000
	rdi_140 = rdi_139 + 0x0000000000000002
	esi_158 = (word32) (uint64) (esi_141 - 0x00000002) (alias)
	branch ((byte) (rdi_139 + 0x0000000000000002) & 0x04) == 0x00 l0000000000407F1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089F9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F15:
	branch (dil_131 & 0x04) != 0x00 l0000000000408A00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A00:
	r9_2503 = PHI((r9_121, l0000000000407F15), (r9_137, l00000000004089F9))
	esi_157 = PHI((esi_141, l0000000000407F15), (esi_158, l00000000004089F9))
	rdi_154 = PHI((rdi_155, l0000000000407F15), (rdi_140, l00000000004089F9))
	Mem156[rdi_154:word32] = 0x00000000
	esi_163 = (word32) (uint64) (esi_157 - 0x00000004) (alias)
	rdi_160 = rdi_154 + 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F1F:
	r9_2501 = PHI((r9_121, l0000000000407F15), (r9_2503, l0000000000408A00), (r9_137, l00000000004089E0))
	rdi_2138 = PHI((rdi_155, l0000000000407F15), (rdi_160, l0000000000408A00), (rdi_140, l00000000004089E0))
	esi_162 = PHI((esi_141, l0000000000407F15), (esi_163, l0000000000408A00), (esi_158, l00000000004089E0))
	sil_168 = (byte) esi_162 (alias)
	esi_2139 = DPB(esi_189, sil_168, 0) (alias)
	rax_165 = 0x0000000000000000
	rcx_167 = (uint64) ((word32) (uint64) esi_162 >>u 0x00000003)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F2A:
	esi_189 = PHI((esi_162, l0000000000407F1F), (esi_2139, l0000000000407F2A_1))
	rdi_173 = PHI((rdi_2138, l0000000000407F1F), (rdi_2135, l0000000000407F2A_1))
	rcx_171 = PHI((rcx_167, l0000000000407F1F), (rcx_2136, l0000000000407F2A_1))
	esi_192 = DPB(esi_189, sil_168, 0) (alias)
	esi_193 = DPB(esi_189, sil_168, 0) (alias)
	branch rcx_171 == 0x0000000000000000 l0000000000407F2D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F2D:
	branch (sil_168 & 0x04) != 0x00 l0000000000408360
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408360:
	Mem174[rdi_173:word32] = 0x00000000
	rdi_175 = rdi_173 + 0x0000000000000004
	branch (sil_168 & 0x02) == 0x00 l0000000000407F3D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408374:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F33:
	branch (sil_168 & 0x02) != 0x00 l0000000000408340
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408340:
	esi_188 = PHI((esi_192, l0000000000407F33), (esi_193, l0000000000408374))
	rdi_184 = PHI((rdi_173, l0000000000407F33), (rdi_175, l0000000000408374))
	rdi_185 = rdi_184 + 0x0000000000000002
	Mem187[rdi_185 - 0x0000000000000002:word16] = 0x0000
	r8_183 = 0x0000000000000000
	branch (word32) (uint64) (esi_188 & 0x00000001) == 0x00000000 l0000000000407F46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408355:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F3D:
	rdi_206 = PHI((rdi_173, l0000000000407F33), (rdi_175, l0000000000408360))
	esi_199 = PHI((esi_192, l0000000000407F33), (esi_193, l0000000000408360))
	branch (word32) (uint64) (esi_199 & 0x00000001) != 0x00000000 l0000000000408338
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408338:
	r8_2426 = PHI((r8, l0000000000407F3D), (r8_183, l0000000000408355))
	rdi_205 = PHI((rdi_206, l0000000000407F3D), (rdi_185, l0000000000408355))
	Mem207[rdi_205:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F46:
	r8_2419 = PHI((r8, l0000000000407F3D), (r8_2426, l0000000000408338), (r8_183, l0000000000408340))
	Mem222[r14_122 + 0x0000000000000018:word64] = 0x0000000000000000
	Mem228[r14_122 + 0x00000000000000A0:word32] = r13d_2153
	branch bLoc038C_2263 == 0x00 l0000000000408220
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408220:
	branch Mem228[0x000000000061B0C1:byte] != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040822D:
	branch r13d_2153 == 0x00000003 l0000000000408910
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408910:
	branch Mem228[0x000000000061B129:byte] == 0x00 l0000000000408237
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040891D:
	rax_244 = fn0000000000404CD0(0x00000013)
	branch (byte) rax_244 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040893D:
	rax_260 = fn0000000000404CD0(0x00000012)
	branch (byte) rax_260 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408956:
	rax_276 = fn0000000000404CD0(0x00000014)
	branch (byte) rax_276 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040896F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408237:
	rax_463 = PHI((rax_165, l000000000040822D), (rax_165, l0000000000408910), (rax_276, l000000000040896F))
	Mem290 = PHI((Mem228, l000000000040822D), (Mem228, l0000000000408910), (Mem242, l000000000040896F))
	eax_291 = (word32) Mem290[0x000000000061B114:byte]
	al_292 = (byte) eax_291 (alias)
	rax_464 = DPB(rax_463, eax_291, 0) (alias)
	rax_465 = DPB(rax_463, al_292, 0) (alias)
	rax_466 = DPB(rax_462, al_292, 0) (alias)
	rax_467 = DPB(rax_462, al_292, 0) (alias)
	rax_469 = DPB(rax_468, al_292, 0) (alias)
	rax_470 = DPB(rax_468, al_292, 0) (alias)
	rax_471 = DPB(rax_468, al_292, 0) (alias)
	rax_472 = DPB(rax_468, al_292, 0) (alias)
	rax_473 = DPB(rax_461, al_292, 0) (alias)
	branch al_292 == 0x00 l0000000000408818
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408818:
	branch Mem290[0x000000000061B0C0:byte] != 0x00 l0000000000408246
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408246:
	rax_462 = PHI((rax_464, l0000000000408237), (rax_465, l0000000000408818))
	branch r13d_2153 == 0x00000000 l0000000000408255
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040824F:
	branch r13d_2153 != 0x00000006 l0000000000408280
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408255:
	rax_468 = PHI((rax_466, l0000000000408246), (rax_467, l000000000040824F))
	ecx_309 = (word32) (uint64) Mem290[0x000000000061B110:word32] (alias)
	branch ecx_309 == 0x00000005 l0000000000408BD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BD0:
	ecx_446 = 0x00000005 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408264:
	branch Mem290[0x000000000061B198:byte] != 0x00 l0000000000407F68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408271:
	branch Mem290[0x000000000061B115:byte] != 0x00 l0000000000407F68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040827E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408280:
	rax_461 = PHI((rax_467, l000000000040824F), (rax_472, l000000000040827E))
	branch al_292 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408288:
	branch Mem290[0x000000000061B0C0:byte] == 0x00 l0000000000408825
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408825:
	rax_2032 = PHI((rax_473, l0000000000408288), (rax_465, l0000000000408818))
	r12_326 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408295:
	branch r13d_2153 == 0x00000000 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040829E:
	r12_335 = 0x0000000000000000
	branch r13d_2153 != 0x00000005 l00000000004081E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082AB:
	branch Mem290[0x000000000061B12C:word32] == 0x00000003 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082B8:
	branch Mem290[0x000000000061B129:byte] == 0x00 l00000000004081E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082C5:
	rax_355 = fn0000000000404CD0(0x0000000E)
	branch (byte) rax_355 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082E5:
	rax_371 = fn0000000000404CD0(0x00000010)
	branch (byte) rax_371 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004082FE:
	rax_387 = fn0000000000404CD0(0x00000011)
	branch (byte) rax_387 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408317:
	rax_403 = fn0000000000404CD0(0x00000015)
	branch (byte) rax_403 != 0x00 l0000000000407F62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408330:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F62:
	rax_455 = PHI((rax_165, l0000000000407F46), (rax_165, l0000000000408220), (rax_473, l0000000000408280), (rax_473, l0000000000408295), (rax_473, l00000000004082AB), (rax_355, l00000000004082C5), (rax_371, l00000000004082E5), (rax_387, l00000000004082FE), (rax_403, l0000000000408317), (rax_244, l000000000040891D), (rax_260, l000000000040893D), (rax_276, l0000000000408956))
	Mem417 = PHI((Mem228, l0000000000407F46), (Mem228, l0000000000408220), (Mem290, l0000000000408280), (Mem290, l0000000000408295), (Mem290, l00000000004082AB), (Mem353, l00000000004082C5), (Mem353, l00000000004082E5), (Mem353, l00000000004082FE), (Mem353, l0000000000408317), (Mem242, l000000000040891D), (Mem242, l000000000040893D), (Mem242, l0000000000408956))
	ecx_445 = (word32) (uint64) Mem417[0x000000000061B110:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F68:
	rax_454 = PHI((rax_455, l0000000000407F62), (rax_470, l0000000000408264), (rax_471, l0000000000408271), (rax_469, l0000000000408BD0))
	ecx_444 = PHI((ecx_445, l0000000000407F62), (ecx_309, l0000000000408264), (ecx_309, l0000000000408271), (ecx_446, l0000000000408BD0))
	Mem430 = PHI((Mem417, l0000000000407F62), (Mem290, l0000000000408264), (Mem290, l0000000000408271), (Mem290, l0000000000408BD0))
	esi_431 = (word32) Mem430[rbx_2161:byte]
	r12_432 = rbx_2161
	branch (byte) esi_431 == 0x2F l0000000000407F81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F74:
	r15b_439 = (byte) (word32) Mem430[rcx:byte] (alias)
	branch r15b_439 != 0x00 l0000000000408670
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408670:
	rax_497 = fp - 936 - ((DPB(rax_454, strlen(rbx_2161), 0) + 0x0000000000000020) + DPB(rax_454, strlen(rcx), 0) & 0xFFFFFFFFFFFFFFF0) + 0x000000000000000F & 0xFFFFFFFFFFFFFFF0
	sil_532 = (byte) (uint64) esi_431 (alias)
	ecx_560 = (word32) (uint64) ecx_444 (alias)
	r12_499 = rax_497
	branch r15b_439 == 0x2E l0000000000408B30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B30:
	branch Mem451[rcx + 0x0000000000000001:byte] == 0x00 l0000000000408705
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B3A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086D2:
	rsi_504 = rcx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086D8:
	r15b_509 = PHI((r15b_439, l00000000004086D2), (r15b_512, l00000000004086D8))
	rsi_507 = PHI((rsi_504, l00000000004086D2), (rsi_508, l00000000004086D8))
	rax_505 = PHI((rax_497, l00000000004086D2), (rax_506, l00000000004086D8))
	rax_506 = rax_505 + 0x0000000000000001
	Mem510[rax_506 - 0x0000000000000001:byte] = r15b_509
	rsi_508 = rsi_507 + 0x0000000000000001
	r15b_512 = (byte) (word32) Mem510[rsi_508:byte] (alias)
	branch r15b_512 != 0x00 l00000000004086D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086ED:
	branch rcx >=u rsi_508 l0000000000408702
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086F5:
	branch Mem510[rsi_508 - 0x0000000000000001:byte] == 0x2F l0000000000408702
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004086FB:
	Mem524[rax_506:byte] = 0x2F
	rax_522 = rax_506 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408702:
	rax_551 = PHI((rax_506, l00000000004086ED), (rax_506, l00000000004086F5), (rax_522, l00000000004086FB))
	Mem528 = PHI((Mem510, l00000000004086ED), (Mem510, l00000000004086F5), (Mem524, l00000000004086FB))
	sil_531 = (byte) (word32) Mem528[rbx_2161:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408705:
	rax_550 = PHI((rax_551, l0000000000408702), (rax_497, l0000000000408B30))
	sil_530 = PHI((sil_531, l0000000000408702), (sil_532, l0000000000408B30))
	branch sil_530 == 0x00 l0000000000408724
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040870A:
	rdx_537 = rbx_2161
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408710:
	sil_542 = PHI((sil_530, l000000000040870A), (sil_545, l0000000000408710))
	rdx_540 = PHI((rdx_537, l000000000040870A), (rdx_541, l0000000000408710))
	rax_538 = PHI((rax_550, l000000000040870A), (rax_539, l0000000000408710))
	rax_539 = rax_538 + 0x0000000000000001
	Mem543[rax_539 - 0x0000000000000001:byte] = sil_542
	rdx_541 = rdx_540 + 0x0000000000000001
	sil_545 = (byte) (word32) Mem543[rdx_541:byte] (alias)
	branch sil_545 != 0x00 l0000000000408710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408724:
	rax_549 = PHI((rax_539, l0000000000408710), (rax_550, l0000000000408705))
	Mem552[rax_549:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F81:
	r12_589 = PHI((r12_432, l0000000000407F74), (r12_432, l0000000000407F68), (r12_499, l0000000000408724))
	Mem572 = PHI((Mem430, l0000000000407F74), (Mem430, l0000000000407F68), (Mem552, l0000000000408724))
	ecx_553 = PHI((ecx_444, l0000000000407F74), (ecx_444, l0000000000407F68), (ecx_560, l0000000000408724))
	branch ecx_553 <u 0x00000003 l0000000000407FFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F86:
	branch ecx_553 <=u 0x00000004 l0000000000407FF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407FF0:
	branch bLoc038C_2263 != 0x00 l00000000004088B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004088B0:
	eax_600 = __xstat(0x0000000000000001, r12_589, r14_122 + 0x0000000000000010)
	r15_588 = r14_122 + 0x0000000000000010
	edx_647 = (word32) (uint64) eax_600 (alias)
	esi_700 = 0x00000001 (alias)
	branch (word32) (uint64) ecx_553 == 0x00000003 l0000000000408015
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004088E0:
	branch eax_600 < 0x00000000 l0000000000408B5E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B5E:
	edx_650 = (word32) (uint64) eax_600 (alias)
	al_615 = Mem610[__errno_location():word32] == 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004088E8:
	al_622 = (word32) (uint64) ((word32) (uint64) Mem598[r14_122 + 0x0000000000000028:word32] & 0x0000F000) != 0x00004000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004088F9:
	Mem1967 = PHI((Mem598, l00000000004088E8), (Mem610, l0000000000408B5E))
	edx_649 = PHI((edx_647, l00000000004088E8), (edx_650, l0000000000408B5E))
	al_623 = PHI((al_622, l00000000004088E8), (al_615, l0000000000408B5E))
	esi_701 = 0x00000001 (alias)
	branch al_623 == 0x00 l0000000000408015
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408906:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F8B:
	branch ecx_553 != 0x00000005 l0000000000407FFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407FFD:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408001:
	Mem1965 = PHI((Mem572, l0000000000407FFD), (Mem1967, l0000000000408906))
	r15_632 = r9_121 + (rcx_118 << 0x0000000000000006) + 0x0000000000000010
	esi_642 = 0x00000000 (alias)
	edx_648 = (word32) (uint64) __lxstat(0x0000000000000001, r12_589, r15_632) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408015:
	Mem1964 = PHI((Mem598, l00000000004088B0), (Mem1965, l0000000000408001), (Mem1967, l00000000004088F9))
	r15_926 = PHI((r15_588, l00000000004088B0), (r15_632, l0000000000408001), (r15_588, l00000000004088F9))
	esi_699 = PHI((esi_700, l00000000004088B0), (esi_642, l0000000000408001), (esi_701, l00000000004088F9))
	edx_646 = PHI((edx_647, l00000000004088B0), (edx_648, l0000000000408001), (edx_649, l00000000004088F9))
	branch edx_646 != 0x00000000 l0000000000407FB1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F92:
	r15_654 = r14_122 + 0x0000000000000010
	edx_661 = (word32) (uint64) __xstat(0x0000000000000001, r12_589, r14_122 + 0x0000000000000010) (alias)
	esi_698 = 0x00000001 (alias)
	branch edx_661 == 0x00000000 l0000000000408019
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408019:
	r15_925 = PHI((r15_654, l0000000000407F92), (r15_926, l0000000000408015))
	edx_710 = PHI((edx_661, l0000000000407F92), (edx_646, l0000000000408015))
	esi_697 = PHI((esi_698, l0000000000407F92), (esi_699, l0000000000408015))
	Mem684[r14_122 + 0x00000000000000B0:byte] = 0x01
	sil_780 = (byte) esi_697 (alias)
	sil_781 = (byte) esi_697 (alias)
	branch r13d_2153 == 0x00000005 l0000000000408380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040802B:
	branch (word32) (uint64) ((word32) (uint64) Mem684[r14_122 + 0x0000000000000028:word32] & 0x0000F000) == 0x00008000 l0000000000408380
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408380:
	branch Mem684[0x000000000061B129:byte] == 0x00 l000000000040803F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040838D:
	rsi_726 = (uint64) esi_697
	edx_738 = (word32) (uint64) edx_710 (alias)
	esi_736 = (word32) rsi_726 (alias)
	sil_782 = (byte) rsi_726 (alias)
	branch (byte) fn0000000000404CD0(0x00000015) == 0x00 l000000000040803F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004083B7:
	r13_729 = Mem711[r14_122 + 0x0000000000000010:word64]
	r13d_1014 = (word32) r13_729 (alias)
	r13d_1015 = (word32) r13_729 (alias)
	branch r13_729 == Mem711[0x000000000061A678:word64] l0000000000408C1F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C1F:
	Mem734[__errno_location():word32] = 0x0000005F
	edx_764 = (word32) (uint64) edx_710 (alias)
	sil_785 = (byte) (uint64) esi_697 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004083C8:
	Mem743[__errno_location():word32] = 0x0000005F
	Mem744[0x000000000061A678:word64] = r13_729
	sil_784 = (byte) (uint64) esi_736 (alias)
	edx_763 = (word32) (uint64) edx_738 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004083F2:
	r13d_1013 = PHI((r13d_1014, l00000000004083C8), (r13d_1015, l0000000000408C1F))
	sil_783 = PHI((sil_784, l00000000004083C8), (sil_785, l0000000000408C1F))
	edx_762 = PHI((edx_763, l00000000004083C8), (edx_764, l0000000000408C1F))
	Mem746[r14_122 + 0x00000000000000B8:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040803F:
	r13d_1011 = PHI((r13d_2153, l000000000040802B), (r13d_2153, l0000000000408380), (r13d_2153, l000000000040838D), (r13d_1013, l00000000004083F2))
	sil_779 = PHI((sil_780, l000000000040802B), (sil_781, l0000000000408380), (sil_782, l000000000040838D), (sil_783, l00000000004083F2))
	edx_761 = PHI((edx_710, l000000000040802B), (edx_710, l0000000000408380), (edx_738, l000000000040838D), (edx_762, l00000000004083F2))
	Mem747 = PHI((Mem684, l000000000040802B), (Mem684, l0000000000408380), (Mem711, l000000000040838D), (Mem746, l00000000004083F2))
	branch (word32) (uint64) Mem747[0x000000000061B150:word32] == 0x00000000 l0000000000408056
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408049:
	branch Mem747[0x000000000061B17D:byte] == 0x00 l00000000004080EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408056:
	branch Mem747[r14_122 + 0x0000000000000010:word64] == Mem747[0x000000000061A670:word64] l0000000000408C52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C52:
	Mem775[__errno_location():word32] = 0x0000005F
	Mem777[r14_122 + 0x00000000000000A8:word64] = 0x000000000061A56A
	r13d_772 = 0x00000000 (alias)
	r13b_993 = 0x00 (alias)
	edx_901 = (word32) (uint64) edx_761 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040806D:
	branch sil_779 == 0x00 l0000000000408458
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408458:
	eax_806 = (word32) (word64) fn0000000000411840(r14_122 + 0x00000000000000A8, r12_589) (alias)
	Z_876 = SLICE(cond(eax_806), bool, 2) (alias)
	edx_827 = (word32) (uint64) edx_761 (alias)
	branch eax_806 >= 0x00000000 l0000000000408093
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408080:
	eax_820 = (word32) (word64) fn0000000000411820(r14_122 + 0x00000000000000A8, r12_589) (alias)
	Z_875 = SLICE(cond(eax_820), bool, 2) (alias)
	edx_826 = (word32) (uint64) edx_761 (alias)
	branch eax_820 < 0x00000000 l000000000040846B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040846B:
	edx_825 = PHI((edx_826, l0000000000408080), (edx_827, l0000000000408458))
	eax_833 = (word32) (uint64) Mem829[__errno_location():word32] (alias)
	edx_900 = (word32) (uint64) edx_825 (alias)
	branch eax_833 == 0x00000016 l000000000040848C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408483:
	branch eax_833 != 0x00000026 l00000000004089C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089C0:
	branch eax_833 != 0x0000005F l0000000000408497
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089C9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040848C:
	Mem844[0x000000000061A670:word64] = Mem829[r14_122 + 0x0000000000000010:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408497:
	Mem849[r14_122 + 0x00000000000000A8:word64] = 0x000000000061A56A
	branch eax_833 == 0x0000005F l00000000004089D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004084AB:
	branch eax_833 == 0x0000003D l00000000004089D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089D0:
	r13d_854 = 0x00000000 (alias)
	r13b_992 = 0x00 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004084B4:
	Mem857[r14_122 + 0x00000000000000B4:word32] = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408093:
	edx_896 = PHI((edx_826, l0000000000408080), (edx_827, l0000000000408458))
	Z_874 = PHI((Z_875, l0000000000408080), (Z_876, l0000000000408458))
	rdi_860 = Mem768[r14_122 + 0x00000000000000A8:word64]
	rsi_861 = 0x00000000004137B1
	rcx_862 = 0x000000000000000A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080A4:
	Z_873 = PHI((Z_874, l0000000000408093), (Z_871, l00000000004080A4_1))
	rdi_866 = PHI((rdi_860, l0000000000408093), (rdi_869, l00000000004080A4_1))
	rsi_864 = PHI((rsi_861, l0000000000408093), (rsi_868, l00000000004080A4_1))
	rcx_863 = PHI((rcx_862, l0000000000408093), (rcx_870, l00000000004080A4_1))
	branch rcx_863 == 0x0000000000000000 l00000000004080A6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080A4_1:
	Z_871 = SLICE(cond(Mem768[rsi_864:byte] - Mem768[rdi_866:byte]), bool, 2) (alias)
	rsi_868 = rsi_864 + 0x0000000000000001
	rdi_869 = rdi_866 + 0x0000000000000001
	rcx_870 = rcx_863 - 0x0000000000000001
	branch Mem768[rsi_864:byte] != Mem768[rdi_866:byte] l00000000004080A4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080A6:
	Z_872 = PHI((Z_873, l00000000004080A4), (Z_871, l00000000004080A4_1))
	r13b_877 = Z_872
	r13d_1016 = DPB(r13d_1011, Z_872, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080AA:
	r13d_1006 = PHI((r13d_1016, l00000000004080A6), (r13d_854, l00000000004089D0), (r13d_772, l0000000000408C52))
	r13b_991 = PHI((r13b_877, l00000000004080A6), (r13b_992, l00000000004089D0), (r13b_993, l0000000000408C52))
	edx_893 = PHI((edx_896, l00000000004080A6), (edx_900, l00000000004089D0), (edx_901, l0000000000408C52))
	Mem878 = PHI((Mem768, l00000000004080A6), (Mem849, l00000000004089D0), (Mem777, l0000000000408C52))
	r13d_1017 = DPB(r13d_1006, r13b_991, 0) (alias)
	r13d_1019 = DPB(r13d_1006, r13b_991, 0) (alias)
	r13d_1020 = DPB(r13d_1006, r13b_991, 0) (alias)
	r13d_1021 = DPB(r13d_1006, r13b_991, 0) (alias)
	r13d_1022 = DPB(r13d_1006, r13b_991, 0) (alias)
	r13d_1023 = DPB(r13d_1006, r13b_991, 0) (alias)
	r13d_1024 = DPB(r13d_1005, r13b_991, 0) (alias)
	r13d_1026 = DPB(r13d_1025, r13b_991, 0) (alias)
	r13d_1027 = DPB(r13d_1006, r13b_991, 0) (alias)
	branch (word32) (uint64) Mem878[0x000000000061B150:word32] == 0x00000000 l0000000000408830
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408830:
	branch Mem878[r14_122 + 0x0000000000000010:word64] == Mem878[0x000000000061A668:word64] l0000000000408B40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B40:
	Mem915[__errno_location():word32] = 0x0000005F
	ecx_912 = 0x00000000 (alias)
	edx_1059 = (word32) (uint64) edx_893 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408841:
	rax_918 = __errno_location()
	Mem934[rax_918:word32] = 0x00000000
	eax_950 = (word32) (word64) fn0000000000409CC0(r15_925, r12_589) (alias)
	ecx_985 = 0x00000001 (alias)
	r8_954 = rax_918
	edx_1057 = (word32) (uint64) edx_893 (alias)
	branch eax_950 > 0x00000000 l00000000004080BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040887E:
	edx_957 = (word32) (uint64) Mem944[rax_918:word32] (alias)
	branch edx_957 == 0x00000016 l0000000000408C3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040888A:
	branch edx_957 == 0x00000026 l0000000000408C3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408893:
	branch edx_957 == 0x0000005F l0000000000408C3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C3B:
	r13d_1025 = PHI((r13d_1020, l000000000040887E), (r13d_1021, l000000000040888A), (r13d_1022, l0000000000408893))
	Mem973[0x000000000061A668:word64] = Mem944[r14_122 + 0x0000000000000010:word64]
	ecx_970 = 0x00000000 (alias)
	edx_1058 = (word32) (uint64) (word32) (uint64) (eax_950 >>u 0x0000001F) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040889C:
	edx_1056 = (word32) (uint64) (word32) (uint64) (eax_950 >>u 0x0000001F) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080B8:
	r8_2455 = PHI((r8_954, l000000000040889C), (r8_2419, l00000000004080AA))
	edx_1055 = PHI((edx_1056, l000000000040889C), (edx_893, l00000000004080AA))
	Mem1045 = PHI((Mem944, l000000000040889C), (Mem878, l00000000004080AA))
	r13d_1005 = PHI((r13d_1023, l000000000040889C), (r13d_1017, l00000000004080AA))
	ecx_981 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080BA:
	r8_2454 = PHI((r8_2455, l00000000004080B8), (r8_954, l0000000000408841), (r8_954, l0000000000408C3B), (r8_2419, l0000000000408B40))
	edx_1054 = PHI((edx_1055, l00000000004080B8), (edx_1057, l0000000000408841), (edx_1058, l0000000000408C3B), (edx_1059, l0000000000408B40))
	Mem1044 = PHI((Mem1045, l00000000004080B8), (Mem944, l0000000000408841), (Mem973, l0000000000408C3B), (Mem915, l0000000000408B40))
	r13d_1004 = PHI((r13d_1024, l00000000004080B8), (r13d_1019, l0000000000408841), (r13d_1026, l0000000000408C3B), (r13d_1027, l0000000000408B40))
	ecx_984 = PHI((ecx_981, l00000000004080B8), (ecx_985, l0000000000408841), (ecx_970, l0000000000408C3B), (ecx_912, l0000000000408B40))
	eax_1063 = 0x00000000 (alias)
	sil_995 = (byte) (uint64) ecx_984 | r13b_991
	branch sil_995 == 0x00 l00000000004080D9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080C3:
	r13b_1001 = r13b_991 & (byte) ((uint64) (ecx_984 ^ 0x00000001))
	eax_1034 = (word32) (uint64) DPB(r13d_1004, r13b_1001, 0) (alias)
	branch r13b_1001 == 0x00 l00000000004080D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080CC_2:
	sil_1048 = r13b_1001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080D0:
	sil_1047 = PHI((sil_995, l00000000004080C3), (sil_1048, l00000000004080CC_2))
	eax_1040 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) (eax_1034 << 0x0000001F) >> 0x0000001F) + 0x00000002) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080D9:
	eax_1062 = PHI((eax_1040, l00000000004080D0), (eax_1063, l00000000004080BA))
	sil_1046 = PHI((sil_1047, l00000000004080D0), (sil_995, l00000000004080BA))
	Mem1050[0x000000000061B17C:byte] = Mem1044[0x000000000061B17C:byte] | sil_1046
	Mem1068[r14_122 + 0x00000000000000B4:word32] = eax_1062
	branch edx_1054 != 0x00000000 l00000000004084BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004084BF:
	Mem1180 = PHI((Mem1068, l00000000004080D9), (Mem857, l00000000004084B4))
	rbx_1169 = fn000000000040EAB0(r12_589, r10, fs, out rbp_1168, out r8_1165, out r9_1166, out r10_1159, out r12_1161, out r13_2660, out r14_1163, out r15_2661)
	error(0x0000000000000000, (uint64) Mem1180[__errno_location():word32], 0x0000000000415E54, 0x00000000)
	rax_1188 = (uint64) ((word32) (uint64) Mem1180[r14_1163 + 0x0000000000000028:word32] & 0x0000F000)
	eax_1189 = (word32) rax_1188 (alias)
	branch eax_1189 != 0x0000A000 l0000000000408103
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004084F6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004080EF:
	r8_2434 = PHI((r8_2419, l0000000000408049), (r8_2454, l00000000004080D9))
	Mem1193 = PHI((Mem747, l0000000000408049), (Mem1068, l00000000004080D9))
	rax_1196 = (uint64) ((word32) (uint64) Mem1193[r14_122 + 0x0000000000000028:word32] & 0x0000F000)
	eax_1197 = (word32) rax_1196 (alias)
	branch eax_1197 == 0x0000A000 l0000000000408500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408500:
	r9_2550 = PHI((r9_2501, l00000000004080EF), (r9_1166, l00000000004084F6))
	r8_2471 = PHI((r8_2434, l00000000004080EF), (r8_1165, l00000000004084F6))
	rax_2041 = PHI((rax_1196, l00000000004080EF), (rax_1188, l00000000004084F6))
	rbx_1317 = PHI((rbx_2161, l00000000004080EF), (rbx_1169, l00000000004084F6))
	r10_1251 = PHI((r10, l00000000004080EF), (r10_1159, l00000000004084F6))
	rbp_1237 = PHI((rbp_6, l00000000004080EF), (rbp_1168, l00000000004084F6))
	r12_1213 = PHI((r12_589, l00000000004080EF), (r12_1161, l00000000004084F6))
	r14_1209 = PHI((r14_122, l00000000004080EF), (r14_1163, l00000000004084F6))
	Mem1200 = PHI((Mem1193, l00000000004080EF), (Mem1180, l00000000004084F6))
	r13d_1202 = (word32) (uint64) Mem1200[0x000000000061B150:word32] (alias)
	branch r13d_1202 == 0x00000000 l0000000000408519
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040850C:
	branch Mem1200[0x000000000061B115:byte] == 0x00 l000000000040862A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408519:
	rax_1216 = fn0000000000409D20(Mem1200[r14_1209 + 0x0000000000000040:word64], r12_1213)
	Mem1227[r14_1209 + 0x0000000000000008:word64] = rax_1216
	r13_1226 = rax_1216
	branch rax_1216 == 0x0000000000000000 l0000000000408BDA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BDA:
	dcgettext(0x0000000000000000, 0x0000000000413794, 0x0000000000000005)
	rax_1260 = fn0000000000405810(r12_1213, r10_1251, fs, out r8_1258, out r9_1259, out r10_1253, out r13_2665, out r14_1256, out r15_2666)
	r13_1269 = Mem1227[r14_1256 + 0x0000000000000008:word64]
	branch r13_1269 != 0x0000000000000000 l0000000000408535
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C0A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408535:
	r9_2548 = PHI((r9_2550, l0000000000408519), (r9_1259, l0000000000408BDA))
	r8_2469 = PHI((r8_2471, l0000000000408519), (r8_1258, l0000000000408BDA))
	r10_2297 = PHI((r10_1251, l0000000000408519), (r10_1253, l0000000000408BDA))
	r14_1394 = PHI((r14_1209, l0000000000408519), (r14_1256, l0000000000408BDA))
	rax_1278 = PHI((rax_1216, l0000000000408519), (rax_1260, l0000000000408BDA))
	r13_1273 = PHI((r13_1226, l0000000000408519), (r13_1269, l0000000000408BDA))
	branch Mem1227[r13_1273:byte] == 0x2F l0000000000408C0F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C0F:
	r13_1287 = fn0000000000410E30(rax_1278, r13_1273)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408540:
	rax_1290 = fn000000000040A2B0(r12_1213)
	branch rax_1290 == 0x0000000000000000 l0000000000408B98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B98:
	r13_1311 = fn0000000000410E30(rax_1290, r13_1273)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408557:
	strlen(r13_1273)
	rax_1344 = fn0000000000410C40(rbx_1317, out rbx_1345, out rsp_2667)
	Mem1358[rbp_1237 - 0x0000000000000390:word64] = rax_1344
	strcpy(stpncpy(rax_1344, r12_1213, rax_1290 + (uint64) (Mem1227[(r12_1213 - 0x0000000000000001) + rax_1290:byte] != 0x2F)), r13_1273)
	r13_1370 = Mem1358[rbp_1237 - 0x0000000000000390:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085A1:
	rbx_2010 = PHI((rbx_1345, l0000000000408557), (rbx_1317, l0000000000408B98), (rbx_1317, l0000000000408C0F))
	Mem1375 = PHI((Mem1358, l0000000000408557), (Mem1227, l0000000000408B98), (Mem1227, l0000000000408C0F))
	r13_1371 = PHI((r13_1370, l0000000000408557), (r13_1311, l0000000000408B98), (r13_1287, l0000000000408C0F))
	branch r13_1371 == 0x0000000000000000 l0000000000408607
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085A6:
	branch Mem1375[0x000000000061B12C:word32] <=u 0x00000001 l0000000000408B80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B80:
	branch Mem1375[0x000000000061B115:byte] == 0x00 l0000000000408607
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B8D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085B3:
	branch __xstat(0x0000000000000001, r13_1371, rbp_1237 - 0x0000000000000380) != 0x00000000 l0000000000408607
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085CB:
	Mem1395[r14_1394 + 0x00000000000000B1:byte] = 0x01
	eax_1403 = (word32) (uint64) Mem1395[rbp_1237 - 0x0000000000000368:word32] (alias)
	branch Mem1375[rbp_1237 - 0x0000000000000384:byte] == 0x00 l0000000000408600
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085E2:
	branch (word32) (uint64) Mem1395[0x000000000061B150:word32] == 0x00000000 l0000000000408600
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085EC:
	branch (word32) (uint64) ((word32) (uint64) eax_1403 & 0x0000F000) == 0x00004000 l0000000000408607
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004085FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408600:
	Mem1412[r14_1394 + 0x00000000000000A4:word32] = eax_1403
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408607:
	r9_2545 = PHI((r9_2548, l00000000004085B3), (r9_2548, l00000000004085EC), (r9_2548, l0000000000408600), (r9_2548, l0000000000408B80), (r9_2548, l00000000004085A1), (r9_1259, l0000000000408C0A))
	r8_2466 = PHI((r8_2469, l00000000004085B3), (r8_2469, l00000000004085EC), (r8_2469, l0000000000408600), (r8_2469, l0000000000408B80), (r8_2469, l00000000004085A1), (r8_1258, l0000000000408C0A))
	r10_2294 = PHI((r10_2297, l00000000004085B3), (r10_2297, l00000000004085EC), (r10_2297, l0000000000408600), (r10_2297, l0000000000408B80), (r10_2297, l00000000004085A1), (r10_1253, l0000000000408C0A))
	rbx_2008 = PHI((rbx_2010, l00000000004085B3), (rbx_2010, l00000000004085EC), (rbx_2010, l0000000000408600), (rbx_2010, l0000000000408B80), (rbx_2010, l00000000004085A1), (rbx_1317, l0000000000408C0A))
	Mem1417 = PHI((Mem1375, l00000000004085B3), (Mem1395, l00000000004085EC), (Mem1412, l0000000000408600), (Mem1375, l0000000000408B80), (Mem1375, l00000000004085A1), (Mem1227, l0000000000408C0A))
	r14_1416 = PHI((r14_1394, l00000000004085B3), (r14_1394, l00000000004085EC), (r14_1394, l0000000000408600), (r14_1394, l0000000000408B80), (r14_1394, l00000000004085A1), (r14_1256, l0000000000408C0A))
	r13_1413 = PHI((r13_1371, l00000000004085B3), (r13_1371, l00000000004085EC), (r13_1371, l0000000000408600), (r13_1371, l0000000000408B80), (r13_1371, l00000000004085A1), (r13_1269, l0000000000408C0A))
	free(r13_1413)
	rax_1420 = (uint64) ((word32) (uint64) Mem1417[r14_1416 + 0x0000000000000028:word32] & 0x0000F000)
	eax_1421 = (word32) rax_1420 (alias)
	branch eax_1421 != 0x0000A000 l0000000000408103
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408623:
	r13d_1451 = (word32) (uint64) Mem1417[0x000000000061B150:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040862A:
	r9_2553 = PHI((r9_2550, l000000000040850C), (r9_2545, l0000000000408623))
	r8_2474 = PHI((r8_2471, l000000000040850C), (r8_2466, l0000000000408623))
	r10_2300 = PHI((r10_1251, l000000000040850C), (r10_2294, l0000000000408623))
	rax_2040 = PHI((rax_2041, l000000000040850C), (rax_1420, l0000000000408623))
	rbx_2013 = PHI((rbx_1317, l000000000040850C), (rbx_2008, l0000000000408623))
	r13d_1450 = PHI((r13d_1202, l000000000040850C), (r13d_1451, l0000000000408623))
	r14_1425 = PHI((r14_1209, l000000000040850C), (r14_1416, l0000000000408623))
	Mem1426[r14_1425 + 0x00000000000000A0:word32] = 0x00000006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408103:
	r9_2512 = PHI((r9_2501, l00000000004080EF), (r9_1166, l00000000004084BF), (r9_2545, l0000000000408607))
	r8_2433 = PHI((r8_2434, l00000000004080EF), (r8_1165, l00000000004084BF), (r8_2466, l0000000000408607))
	r10_2293 = PHI((r10, l00000000004080EF), (r10_1159, l00000000004084BF), (r10_2294, l0000000000408607))
	rax_2037 = PHI((rax_1196, l00000000004080EF), (rax_1188, l00000000004084BF), (rax_1420, l0000000000408607))
	rbx_2007 = PHI((rbx_2161, l00000000004080EF), (rbx_1169, l00000000004084BF), (rbx_2008, l0000000000408607))
	r14_1439 = PHI((r14_122, l00000000004080EF), (r14_1163, l00000000004084BF), (r14_1416, l0000000000408607))
	Mem1433 = PHI((Mem1193, l00000000004080EF), (Mem1180, l00000000004084BF), (Mem1417, l0000000000408607))
	rbp_1430 = PHI((rbp_6, l00000000004080EF), (rbp_1168, l00000000004084BF), (rbp_1237, l0000000000408607))
	eax_1427 = PHI((eax_1197, l00000000004080EF), (eax_1189, l00000000004084BF), (eax_1421, l0000000000408607))
	rax_2038 = DPB(rax_2037, eax_1427, 0) (alias)
	branch eax_1427 == 0x00004000 l0000000000408978
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408978:
	branch Mem1433[rbp_1430 - 0x0000000000000384:byte] == 0x00 l00000000004089A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408981:
	branch Mem1433[0x000000000061B10D:byte] != 0x00 l00000000004089A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004089A8:
	Mem1440[r14_1439 + 0x00000000000000A0:word32] = 0x00000003
	r13d_1449 = (word32) (uint64) Mem1440[0x000000000061B150:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040898A:
	Mem1442[r14_1439 + 0x00000000000000A0:word32] = 0x00000009
	r13d_1448 = (word32) (uint64) Mem1442[0x000000000061B150:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040810E:
	r13d_1447 = (word32) (uint64) Mem1433[0x000000000061B150:word32] (alias)
	Mem1445[r14_1439 + 0x00000000000000A0:word32] = 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408120:
	r9_2511 = PHI((r9_2512, l000000000040810E), (r9_2512, l000000000040898A), (r9_2512, l00000000004089A8), (r9_2553, l000000000040862A))
	r8_2432 = PHI((r8_2433, l000000000040810E), (r8_2433, l000000000040898A), (r8_2433, l00000000004089A8), (r8_2474, l000000000040862A))
	r10_2292 = PHI((r10_2293, l000000000040810E), (r10_2293, l000000000040898A), (r10_2293, l00000000004089A8), (r10_2300, l000000000040862A))
	rax_2036 = PHI((rax_2038, l000000000040810E), (rax_2038, l000000000040898A), (rax_2038, l00000000004089A8), (rax_2040, l000000000040862A))
	rbx_2006 = PHI((rbx_2007, l000000000040810E), (rbx_2007, l000000000040898A), (rbx_2007, l00000000004089A8), (rbx_2013, l000000000040862A))
	rbp_1464 = PHI((rbp_1430, l000000000040810E), (rbp_1430, l000000000040898A), (rbp_1430, l00000000004089A8), (rbp_1237, l000000000040862A))
	Mem1455 = PHI((Mem1445, l000000000040810E), (Mem1442, l000000000040898A), (Mem1440, l00000000004089A8), (Mem1426, l000000000040862A))
	r14_1454 = PHI((r14_1439, l000000000040810E), (r14_1439, l000000000040898A), (r14_1439, l00000000004089A8), (r14_1425, l000000000040862A))
	r13d_1446 = PHI((r13d_1447, l000000000040810E), (r13d_1448, l000000000040898A), (r13d_1449, l00000000004089A8), (r13d_1450, l000000000040862A))
	r12_1456 = Mem1455[r14_1454 + 0x0000000000000050:word64]
	branch r13d_1446 == 0x00000000 l0000000000408132
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408129:
	branch Mem1455[0x000000000061B144:byte] == 0x00 l00000000004081A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408132:
	r15_1467 = rbp_1464 - 0x00000000000002D0
	rax_1540 = fn000000000040BD70(0x0000000000000200, (word32) (uint64) Mem1455[0x000000000061B140:word32], r15_1467, r12_1456, Mem1455[0x000000000061B138:word64], fs, Top, out r8_1538, out r9_1539)
	rax_1554 = fn000000000040D420(rax_1540, 0x00000000, rax_1540, fs)
	eax_1561 = (word32) rax_1554 (alias)
	r15d_1693 = (word32) r15_1467 (alias)
	rax_2043 = DPB(rax_1554, eax_1561, 0) (alias)
	branch eax_1561 <= Mem1455[0x000000000061B174:word32] l000000000040816E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408168:
	Mem1564[0x000000000061B174:word32] = eax_1561
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040816E:
	rax_2042 = PHI((rax_1554, l0000000000408132), (rax_2043, l0000000000408168))
	Mem1565 = PHI((Mem1455, l0000000000408132), (Mem1564, l0000000000408168))
	r13d_1567 = (word32) (uint64) Mem1565[0x000000000061B150:word32] (alias)
	branch r13d_1567 != 0x00000000 l00000000004081A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040817A:
	branch Mem1565[0x000000000061A569:byte] != 0x00 l0000000000408B10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B10:
	rax_1579 = fn00000000004061B0((word32) (uint64) Mem1565[r14_1454 + 0x000000000000002C:word32], fs, out rbx_1581, out rsp_2662, out rbp_1580, out r12_1578)
	eax_1590 = (word32) rax_1579 (alias)
	rax_2047 = DPB(rax_1579, eax_1590, 0) (alias)
	branch eax_1590 <= Mem1565[0x000000000061B168:word32] l0000000000408187
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B25:
	Mem1593[0x000000000061B168:word32] = eax_1590
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408187:
	r12_2107 = PHI((r12_1456, l000000000040817A), (r12_1578, l0000000000408B10), (r12_1578, l0000000000408B25))
	rax_2046 = PHI((rax_2042, l000000000040817A), (rax_1579, l0000000000408B10), (rax_2047, l0000000000408B25))
	rbx_2018 = PHI((rbx_2006, l000000000040817A), (rbx_1581, l0000000000408B10), (rbx_1581, l0000000000408B25))
	rbp_1774 = PHI((rbp_1464, l000000000040817A), (rbp_1580, l0000000000408B10), (rbp_1580, l0000000000408B25))
	Mem1594 = PHI((Mem1565, l000000000040817A), (Mem1565, l0000000000408B10), (Mem1593, l0000000000408B25))
	branch Mem1594[0x000000000061A568:byte] != 0x00 l0000000000408A90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A90:
	r13d_1601 = (word32) (uint64) Mem1594[r14_1454 + 0x0000000000000030:word32] (alias)
	branch Mem1594[0x000000000061B145:byte] == 0x00 l0000000000408BA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BA8:
	rax_1605 = fn000000000040CB40((word32) (uint64) r13d_1601, out rbx_1607, out rsp_2664, out rbp_1606, out r12_1604)
	branch rax_1605 == 0x0000000000000000 l0000000000408AA1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BBC:
	rax_1625 = fn000000000040D420(rax_1605, 0x00000000, rax_1605, fs)
	eax_1633 = (word32) rax_1625 (alias)
	rax_2057 = DPB(rax_1625, eax_1633, 0) (alias)
	edx_1703 = 0x00000000 (alias)
	branch eax_1633 < 0x00000000 l0000000000408BCA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BC7_1:
	edx_1637 = eax_1633
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408BCA:
	rax_2056 = PHI((rax_1625, l0000000000408BBC), (rax_2057, l0000000000408BC7_1))
	edx_1702 = PHI((edx_1703, l0000000000408BBC), (edx_1637, l0000000000408BC7_1))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AA1:
	r12_2112 = PHI((r12_2107, l0000000000408A90), (r12_1604, l0000000000408BA8))
	rbx_2023 = PHI((rbx_2018, l0000000000408A90), (rbx_1607, l0000000000408BA8))
	rbp_1779 = PHI((rbp_1774, l0000000000408A90), (rbp_1606, l0000000000408BA8))
	__sprintf_chk(r15_1467, 0x0000000000000001, 0x0000000000000015, 0x000000000041375A, 0x00000000)
	r8_1640 = (uint64) r13d_1601
	rdx_1652 = r15_1467
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AC0:
	rdx_1653 = PHI((rdx_1652, l0000000000408AA1), (rdx_1656, l0000000000408AC0))
	rcx_1655 = (uint64) Mem1594[rdx_1653:word32]
	rax_1663 = (uint64) ((word32) (uint64) (rcx_1655 + 0xFFFFFFFFFEFEFEFF & (word32) ((uint64) (~((word32) rcx_1655)))) & 0x80808080)
	eax_1664 = (word32) rax_1663 (alias)
	rdx_1656 = rdx_1653 + 0x0000000000000004
	al_1682 = (byte) eax_1664 (alias)
	rax_2051 = DPB(rax_1663, eax_1664, 0) (alias)
	branch eax_1664 == 0x00000000 l0000000000408AC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AD7:
	ecx_1674 = (word32) (uint64) ((word32) (uint64) eax_1664 >>u 0x00000010) (alias)
	branch (eax_1664 & 0x00008080) != 0x00000000 l0000000000408AE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AE1_1:
	al_1683 = (byte) ecx_1674 (alias)
	rax_2052 = DPB(rax_1663, ecx_1674, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AE4:
	rax_2050 = PHI((rax_2051, l0000000000408AD7), (rax_2052, l0000000000408AE1_1))
	al_1681 = PHI((al_1682, l0000000000408AD7), (al_1683, l0000000000408AE1_1))
	rax_2053 = DPB(rax_2050, al_1681, 0) (alias)
	rax_2054 = DPB(rax_2050, al_1681, 0) (alias)
	branch (eax_1664 & 0x00008080) != 0x00000000 l0000000000408AEC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AE8_1:
	rdx_1679 = rdx_1656 + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AEC:
	rax_2049 = PHI((rax_2053, l0000000000408AE4), (rax_2054, l0000000000408AE8_1))
	rdx_1686 = PHI((rdx_1656, l0000000000408AE4), (rdx_1679, l0000000000408AE8_1))
	al_1684 = al_1681 * 0x02
	rax_2055 = DPB(rax_2049, al_1684, 0) (alias)
	edx_1695 = (word32) (uint64) ((word32) (rdx_1686 - 0x03 - (al_1684 <u 0x00)) - r15d_1693) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408AF5:
	r8_2479 = PHI((r8_1640, l0000000000408AEC), (r8_1538, l0000000000408BCA))
	r12_2108 = PHI((r12_2112, l0000000000408AEC), (r12_1604, l0000000000408BCA))
	rax_2048 = PHI((rax_2055, l0000000000408AEC), (rax_2056, l0000000000408BCA))
	rbx_2019 = PHI((rbx_2023, l0000000000408AEC), (rbx_1607, l0000000000408BCA))
	rbp_1775 = PHI((rbp_1779, l0000000000408AEC), (rbp_1606, l0000000000408BCA))
	edx_1701 = PHI((edx_1695, l0000000000408AEC), (edx_1702, l0000000000408BCA))
	branch Mem1594[0x000000000061B164:word32] >= edx_1701 l0000000000408194
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408B01:
	Mem1706[0x000000000061B164:word32] = edx_1701
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408194:
	r8_2477 = PHI((r8_1538, l0000000000408187), (r8_2479, l0000000000408B01), (r8_2479, l0000000000408AF5))
	r12_2106 = PHI((r12_2107, l0000000000408187), (r12_2108, l0000000000408B01), (r12_2108, l0000000000408AF5))
	rax_2045 = PHI((rax_2046, l0000000000408187), (rax_2048, l0000000000408B01), (rax_2048, l0000000000408AF5))
	rbx_2017 = PHI((rbx_2018, l0000000000408187), (rbx_2019, l0000000000408B01), (rbx_2019, l0000000000408AF5))
	rbp_1773 = PHI((rbp_1774, l0000000000408187), (rbp_1775, l0000000000408B01), (rbp_1775, l0000000000408AF5))
	Mem1707 = PHI((Mem1594, l0000000000408187), (Mem1706, l0000000000408B01), (Mem1594, l0000000000408AF5))
	branch Mem1707[0x000000000061B146:byte] != 0x00 l0000000000408A70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A70:
	rax_1727 = fn00000000004061B0((word32) (uint64) Mem1707[r14_1454 + 0x000000000000002C:word32], fs, out rbx_1729, out rsp_2663, out rbp_1728, out r12_1726)
	eax_1738 = (word32) rax_1727 (alias)
	rax_2058 = DPB(rax_1727, eax_1738, 0) (alias)
	branch eax_1738 <= Mem1707[0x000000000061B160:word32] l00000000004081A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A85:
	Mem1741[0x000000000061B160:word32] = eax_1738
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081A1:
	r12_2105 = PHI((r12_2106, l0000000000408194), (r12_1726, l0000000000408A70), (r12_1726, l0000000000408A85))
	rax_2044 = PHI((rax_2045, l0000000000408194), (rax_1727, l0000000000408A70), (rax_2058, l0000000000408A85))
	rbx_2016 = PHI((rbx_2017, l0000000000408194), (rbx_1729, l0000000000408A70), (rbx_1729, l0000000000408A85))
	rbp_1772 = PHI((rbp_1773, l0000000000408194), (rbp_1728, l0000000000408A70), (rbp_1728, l0000000000408A85))
	Mem1742 = PHI((Mem1707, l0000000000408194), (Mem1707, l0000000000408A70), (Mem1741, l0000000000408A85))
	r13d_1754 = (word32) (uint64) Mem1742[0x000000000061B150:word32] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081A8:
	r9_2510 = PHI((r9_2511, l0000000000408129), (r9_1539, l000000000040816E), (r9_1539, l00000000004081A1))
	r8_2431 = PHI((r8_2432, l0000000000408129), (r8_1538, l000000000040816E), (r8_2477, l00000000004081A1))
	r12_2103 = PHI((r12_1456, l0000000000408129), (r12_1456, l000000000040816E), (r12_2105, l00000000004081A1))
	rax_2035 = PHI((rax_2036, l0000000000408129), (rax_2042, l000000000040816E), (rax_2044, l00000000004081A1))
	rbx_2005 = PHI((rbx_2006, l0000000000408129), (rbx_2006, l000000000040816E), (rbx_2016, l00000000004081A1))
	rbp_1770 = PHI((rbp_1464, l0000000000408129), (rbp_1464, l000000000040816E), (rbp_1772, l00000000004081A1))
	r13d_1753 = PHI((r13d_1446, l0000000000408129), (r13d_1567, l000000000040816E), (r13d_1754, l00000000004081A1))
	Mem1744 = PHI((Mem1455, l0000000000408129), (Mem1565, l000000000040816E), (Mem1742, l00000000004081A1))
	branch Mem1744[0x000000000061B17D:byte] == 0x00 l00000000004081C9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081B1:
	eax_1750 = strlen(Mem1744[r14_1454 + 0x00000000000000A8:word64])
	rax_2059 = DPB(rax_2035, eax_1750, 0) (alias)
	rax_2060 = DPB(rax_2035, eax_1750, 0) (alias)
	branch eax_1750 > Mem1744[0x000000000061B16C:word32] l0000000000408730
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408730:
	Mem1757[0x000000000061B16C:word32] = eax_1750
	branch r13d_1753 != 0x00000000 l00000000004081D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081C9:
	rax_2034 = PHI((rax_2035, l00000000004081A8), (rax_2059, l00000000004081B1))
	branch r13d_1753 == 0x00000000 l000000000040873F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040873F:
	Mem1765 = PHI((Mem1744, l00000000004081C9), (Mem1757, l0000000000408730))
	eax_1792 = strlen(fn000000000040CD70(rbp_1770 - 0x00000000000002F0, Mem1765[r14_1454 + 0x0000000000000020:word64]))
	branch eax_1792 <= Mem1765[0x000000000061B170:word32] l0000000000408765
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040875F:
	Mem1795[0x000000000061B170:word32] = eax_1792
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408765:
	Mem1797 = PHI((Mem1765, l000000000040873F), (Mem1795, l000000000040875F))
	branch (word32) (uint64) ((word32) (uint64) Mem1797[r14_1454 + 0x0000000000000028:word32] & 0x0000B000) != 0x00002000 l0000000000408A30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A30:
	rax_1833 = fn000000000040BD70(0x0000000000000001, (word32) (uint64) Mem1797[0x000000000061B134:word32], rbp_1770 - 0x00000000000002D0, Mem1797[r14_1454 + 0x0000000000000040:word64], Mem1797[0x000000000061A560:word64], fs, Top, out r8_1831, out r9_1832)
	rax_1847 = fn000000000040D420(rax_1833, 0x00000000, rax_1833, fs)
	eax_1854 = (word32) rax_1847 (alias)
	rax_2063 = DPB(rax_1847, eax_1854, 0) (alias)
	branch eax_1854 <= Mem1797[0x000000000061B154:word32] l00000000004081D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408A68:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408779:
	rax_1857 = Mem1797[r14_1454 + 0x0000000000000038:word64]
	r15_1858 = rbp_1770 - 0x00000000000002D0
	eax_1883 = strlen(fn000000000040CD70(r15_1858, (uint64) ((word32) (uint64) ((word32) (rax_1857 >>u 0x0000000000000020) & 0xFFFFF000) | (word32) ((uint64) ((word32) (rax_1857 >>u 0x0000000000000008) & 0x00000FFF)))))
	branch eax_1883 <= Mem1797[0x000000000061B15C:word32] l00000000004087BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004087B4:
	Mem1886[0x000000000061B15C:word32] = eax_1883
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004087BA:
	Mem1888 = PHI((Mem1797, l0000000000408779), (Mem1886, l00000000004087B4))
	rax_1889 = Mem1888[r14_1454 + 0x0000000000000038:word64]
	eax_1914 = strlen(fn000000000040CD70(r15_1858, (uint64) (DPB((word32) (rax_1889 >>u 0x000000000000000C), (byte) (rax_1889 >>u 0x000000000000000C) & 0x00, 0) | (word32) ((byte) rax_1889))))
	rdx_1915 = (uint64) Mem1888[0x000000000061B158:word32]
	branch eax_1914 <= (word32) rdx_1915 l00000000004087F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004087E8:
	Mem1919[0x000000000061B158:word32] = eax_1914
	rdx_1920 = (uint64) eax_1914
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004087F0:
	rdx_1923 = PHI((rdx_1915, l00000000004087BA), (rdx_1920, l00000000004087E8))
	Mem1921 = PHI((Mem1888, l00000000004087BA), (Mem1919, l00000000004087E8))
	rax_1922 = (uint64) Mem1921[0x000000000061B15C:word32]
	eax_1924 = rdx_1923 + 0x0000000000000002 + rax_1922
	rax_2061 = DPB(rax_1922, eax_1924, 0) (alias)
	branch eax_1924 <= Mem1921[0x000000000061B154:word32] l00000000004081D2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408806:
	r9_2568 = PHI((r9_1832, l0000000000408A68), (r9_2510, l00000000004087F0))
	r8_2488 = PHI((r8_1831, l0000000000408A68), (r8_2431, l00000000004087F0))
	rax_2062 = PHI((rax_2063, l0000000000408A68), (rax_2061, l00000000004087F0))
	eax_1927 = PHI((eax_1854, l0000000000408A68), (eax_1924, l00000000004087F0))
	Mem1928[0x000000000061B154:word32] = eax_1927
	rax_2064 = DPB(rax_2062, eax_1927, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081D2:
	r9_2508 = PHI((r9_2510, l00000000004081C9), (r9_2510, l0000000000408730), (r9_1832, l0000000000408A30), (r9_2510, l00000000004087F0), (r9_2568, l0000000000408806))
	r8_2429 = PHI((r8_2431, l00000000004081C9), (r8_2431, l0000000000408730), (r8_1831, l0000000000408A30), (r8_2431, l00000000004087F0), (r8_2488, l0000000000408806))
	rax_2033 = PHI((rax_2034, l00000000004081C9), (rax_2060, l0000000000408730), (rax_1847, l0000000000408A30), (rax_2061, l00000000004087F0), (rax_2064, l0000000000408806))
	Mem1929 = PHI((Mem1744, l00000000004081C9), (Mem1757, l0000000000408730), (Mem1797, l0000000000408A30), (Mem1921, l00000000004087F0), (Mem1928, l0000000000408806))
	eax_1930 = (word32) Mem1929[0x000000000061B114:byte]
	rax_2065 = DPB(rax_2033, eax_1930, 0) (alias)
	branch (byte) eax_1930 != 0x00 l0000000000408640
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408640:
	rax_1944 = fn000000000040CD70(rbp_1770 - 0x00000000000002D0, Mem1929[r14_1454 + 0x0000000000000018:word64])
	eax_1954 = strlen(rax_1944)
	rax_2066 = DPB(rax_1944, eax_1954, 0) (alias)
	rax_2067 = DPB(rax_1944, eax_1954, 0) (alias)
	branch eax_1954 <= Mem1929[0x000000000061B178:word32] l00000000004081E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408664:
	Mem1957[0x000000000061B178:word32] = eax_1954
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407FB1:
	Mem1963 = PHI((Mem572, l0000000000407F92), (Mem1964, l0000000000408015))
	dcgettext(0x0000000000000000, 0x0000000000413783, 0x0000000000000005)
	r12_1972 = 0x0000000000000000
	rax_1987 = fn0000000000405810(r12_589, r10, fs, out r8_1985, out r9_1986, out r10_1980, out r13_2659, out r14_1983, out r15_1984)
	branch (byte) r15_1984 != 0x00 l00000000004081F4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407FE4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081E1:
	r9_2494 = PHI((r9_1986, l0000000000407FE4), (r9_2501, l000000000040829E), (r9_2501, l00000000004082B8), (r9_2501, l0000000000408330), (r9_2501, l0000000000408825), (r9_2508, l00000000004081D2), (r9_2508, l0000000000408640), (r9_2508, l0000000000408664))
	r8_2415 = PHI((r8_1985, l0000000000407FE4), (r8_2419, l000000000040829E), (r8_2419, l00000000004082B8), (r8_2419, l0000000000408330), (r8_2419, l0000000000408825), (r8_2429, l00000000004081D2), (r8_2429, l0000000000408640), (r8_2429, l0000000000408664))
	r10_2287 = PHI((r10_1980, l0000000000407FE4), (r10, l000000000040829E), (r10, l00000000004082B8), (r10, l0000000000408330), (r10, l0000000000408825), (r10_2292, l00000000004081D2), (r10_2292, l0000000000408640), (r10_2292, l0000000000408664))
	r12_2100 = PHI((r12_1972, l0000000000407FE4), (r12_335, l000000000040829E), (r12_335, l00000000004082B8), (r12_335, l0000000000408330), (r12_326, l0000000000408825), (r12_2103, l00000000004081D2), (r12_2103, l0000000000408640), (r12_2103, l0000000000408664))
	rbp_2085 = PHI((rbp_6, l0000000000407FE4), (rbp_6, l000000000040829E), (rbp_6, l00000000004082B8), (rbp_6, l0000000000408330), (rbp_6, l0000000000408825), (rbp_1770, l00000000004081D2), (rbp_1770, l0000000000408640), (rbp_1770, l0000000000408664))
	r14_2081 = PHI((r14_1983, l0000000000407FE4), (r14_122, l000000000040829E), (r14_122, l00000000004082B8), (r14_122, l0000000000408330), (r14_122, l0000000000408825), (r14_1454, l00000000004081D2), (r14_1454, l0000000000408640), (r14_1454, l0000000000408664))
	Mem2076 = PHI((Mem1963, l0000000000407FE4), (Mem290, l000000000040829E), (Mem290, l00000000004082B8), (Mem353, l0000000000408330), (Mem290, l0000000000408825), (Mem1929, l00000000004081D2), (Mem1929, l0000000000408640), (Mem1957, l0000000000408664))
	rax_2031 = PHI((rax_1987, l0000000000407FE4), (rax_473, l000000000040829E), (rax_473, l00000000004082B8), (rax_403, l0000000000408330), (rax_2032, l0000000000408825), (rax_2065, l00000000004081D2), (rax_2066, l0000000000408640), (rax_2067, l0000000000408664))
	rbx_2000 = PHI((rbx_2161, l0000000000407FE4), (rbx_2161, l000000000040829E), (rbx_2161, l00000000004082B8), (rbx_2161, l0000000000408330), (rbx_2161, l0000000000408825), (rbx_2005, l00000000004081D2), (rbx_2005, l0000000000408640), (rbx_2005, l0000000000408664))
	rax_2068 = fn0000000000410E30(rax_2031, rbx_2000)
	Mem2079[0x000000000061B1B0:word64] = Mem2076[0x000000000061B1B0:word64] + 0x0000000000000001
	Mem2083[r14_2081:word64] = rax_2068
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004081F4:
	r9_2493 = PHI((r9_1986, l0000000000407FB1), (r9_2494, l00000000004081E1))
	r8_2414 = PHI((r8_1985, l0000000000407FB1), (r8_2415, l00000000004081E1))
	r10_2286 = PHI((r10_1980, l0000000000407FB1), (r10_2287, l00000000004081E1))
	r12_2099 = PHI((r12_1972, l0000000000407FB1), (r12_2100, l00000000004081E1))
	Mem2087 = PHI((Mem1963, l0000000000407FB1), (Mem2083, l00000000004081E1))
	rbp_2084 = PHI((rbp_6, l0000000000407FB1), (rbp_2085, l00000000004081E1))
	rax_2119 = r12_2099
	branch (Mem2087[rbp_2084 - 0x0000000000000038:word64] ^ Mem2087[fs:0x00000028:word64]) != 0x0000000000000000 l0000000000408C76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000408C76:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040820A:
	rsp_2121 = rbp_2084 - 0x0000000000000028
	r12_2124 = Mem2087[rsp_2121 + 8:word64]
	r13_2126 = Mem2087[rsp_2121 + 16:word64]
	r14_2128 = Mem2087[rsp_2121 + 24:word64]
	r15_2130 = Mem2087[rsp_2121 + 32:word64]
	rbp_2132 = Mem2087[rsp_2121 + 40:word64]
	rbxOut = Mem2087[rsp_2121:word64]
	rspOut = rsp_2121 + 48
	rbpOut = rbp_2132
	r8Out = r8_2414
	r9Out = r9_2493
	r10Out = r10_2286
	r12Out = r12_2124
	r13Out = r13_2126
	r14Out = r14_2128
	r15Out = r15_2130
	return r12_2099
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000407EA0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000407F2A_1:
	Mem2134[rdi_173:word64] = 0x0000000000000000
	rdi_2135 = rdi_173 + 0x0000000000000008
	rcx_2136 = rcx_171 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000409750(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000409750_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409750_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409750:
	word32 ebx_333 = (word32) (uint64) edi
	branch edi == 0x00000000 l0000000000409794
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409794:
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000413D88, 0x0000000000000005), 0x00000000)
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413DB0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413E40, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413E90, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000413FA0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004141E8, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414398, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414540, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414580, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414670, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414780, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414928, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414AC0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414C28, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414DA0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000414F58, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415020, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004151F0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004153F0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415480, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004155E8, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415748, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415778, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x00000000004157B0, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415850, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415970, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	fn000000000040A390(Mem9[0x000000000061B200:word64])
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x00000000004137BB, 0x0000000000000005), 0x00000000)
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x00000000004137E8, 0x0000000000000005), 0x00000000)
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415A30, 0x0000000000000005), Mem9[0x000000000061A610:word64])
	word64 rax_264 = setlocale(0x0000000000000005, 0x0000000000000000)
	branch rax_264 == 0x0000000000000000 l0000000000409BC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409BB2:
	branch strncmp(rax_264, 0x000000000041380A, 0x0000000000000003) != 0x00000000 l0000000000409BFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409BFF:
	fn000000000040A390(Mem9[0x000000000061B200:word64])
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000415A70, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409BC8:
	fn000000000040A390(Mem9[0x000000000061B200:word64])
	__printf_chk(0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000415AB8, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409768:
	__fprintf_chk(Mem9[0x000000000061A650:word64], 0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000413D60, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040978D:
	exit((uint64) ebx_333)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000409CC0(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rsp
fn0000000000409CC0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CC0:
	word64 rax_7 = (uint64) ((word32) (uint64) Mem0[rsi + 0x0000000000000018:word32] & 0x0000F000)
	branch (word32) rax_7 == 0x0000A000 l0000000000409D10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D10:
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CCF:
	word32 eax_17 = acl_extended_file(rdi)
	word64 rax_38 = DPB(rax_7, eax_17, 0)
	branch eax_17 < 0x00000000 l0000000000409CE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CE8:
	word32 eax_23 = (word32) (uint64) Mem0[__errno_location():word32]
	branch eax_23 == 0x0000005F l0000000000409D18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CF4:
	branch eax_23 == 0x00000026 l0000000000409D18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CF9:
	branch eax_23 == 0x00000016 l0000000000409D18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D18:
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CFE:
	rax_38 = (uint64) -(word32) (eax_23 != 0x00000010)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409CDC:
	return (word32) rax_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409CC0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000409D20(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000409D20_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D20:
	word64 rbx_120 = 0x0000000000000401
	branch rsi >u 0x0000000000000400 l0000000000409D59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D55_1:
	rbx_120 = rsi + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D59:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D60:
	word64 rax_123 = malloc(rbx_120)
	word64 rbp_126 = rax_123
	branch rax_123 == 0x0000000000000000 l0000000000409DAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D70:
	word64 rax_46 = DPB(rax_123, readlink(rdi, rax_123, rbx_120), 0)
	branch rax_46 < 0x0000000000000000 l0000000000409DD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DD8:
	word64 rax_51 = __errno_location()
	word32 edx_54 = (word32) (uint64) Mem26[rax_51:word32]
	branch edx_54 == 0x00000022 l0000000000409D86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DE4:
	free(rbp_126)
	Mem65[rax_51:word32] = (word32) (uint64) edx_54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D86:
	branch rbx_120 >u rax_46 l0000000000409E08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409E08:
	Mem75[rbp_126:byte] = 0x00
	return rbp_126
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D8B:
	free(rbp_126)
	branch rbx_120 >u 0x00000000FFFFFFFF l0000000000409DC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DC0:
	branch rbx_120 >u 0x00000000FFFFFFFE l0000000000409E20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409E20:
	Mem102[__errno_location():word32] = 0x0000000C
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DC5:
	rbx_120 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409D98:
	rbx_120 = rbx_120 * 0x0000000000000002
	rax_123 = malloc(rbx_120)
	rbp_126 = rax_123
	branch rax_123 != 0x0000000000000000 l0000000000409D70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DAB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409DAD:
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409D20_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000409E50(word64 rax, word64 rcx, word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[32..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO ecx rax rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000409E50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409E50:
	word64 rax_134
	word64 qwLoc50_168
	word64 rax_38 = DPB(rax, strlen(rdi), 0)
	word64 rbp_114 = rdx
	word64 r14_119 = Mem30[rsi:word64]
	branch r14_119 == 0x0000000000000000 l0000000000409F72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F72:
	qwLoc50_168 = 0xFFFFFFFFFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409E81:
	byte bLoc41_169 = 0x00
	qwLoc50_168 = 0xFFFFFFFFFFFFFFFF
	word64 rbx_109 = 0x0000000000000000
	rax_157 = rax_38
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409EE8:
	word64 rax_157
	word32 eax_53 = strncmp(r14_119, rdi, rax_38)
	rax_157 = DPB(rax_157, eax_53, 0) (alias)
	branch eax_53 != 0x00000000 l0000000000409ED8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409EFB:
	rax_157 = DPB(rax_157, strlen(r14_119), 0) (alias)
	branch rax_157 == rax_38 l0000000000409F60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F60:
	return rbx_109
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F08:
	branch qwLoc50_168 != 0xFFFFFFFFFFFFFFFF l0000000000409EA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409EA0:
	rax_157 = rdx
	branch rdx == 0x0000000000000000 l0000000000409F50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F50:
	bLoc41_169 = 0x01
	Mem118 = Mem86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409EAE:
	byte cl_102 = (byte) (word32) bLoc41_169
	branch memcmp(qwLoc50_168 *s rcx + rdx, rbp_114, rcx) == 0x00000000 l0000000000409ED4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409ED1_1:
	cl_102 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409ED4:
	rax_157 = 0x0000000000000001
	bLoc41_169 = cl_102
	Mem118 = Mem106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409ED8:
	rbx_109 = rbx_109 + 0x0000000000000001
	rbp_114 = rbp_114 + rcx
	r14_119 = Mem118[rsi + rbx_109 * 0x0000000000000008:word64]
	branch r14_119 == 0x0000000000000000 l0000000000409F28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F10:
	rbx_109 = rbx_109 + 0x0000000000000001
	qwLoc50_168 = rbx_109
	rbp_114 = rbp_114 + rcx
	r14_119 = Mem123[rsi + rbx_109 * 0x0000000000000008:word64]
	Mem47 = Mem123
	branch r14_119 != 0x0000000000000000 l0000000000409EE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F25:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F28:
	rax_134 = 0xFFFFFFFFFFFFFFFE
	branch bLoc41_169 != 0x00 l0000000000409F3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F36:
	rax_134 = qwLoc50_168
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F3B:
	return rax_134
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409E50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000409F80(word64 rdx, word64 rdi, word64 r10, selector fs, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63] rdx:[0..63]
// LiveOut: r10 r15
// Trashed: SCZO r10 r11 r13 r14 r15 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn0000000000409F80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F80:
	branch rdx == 0xFFFFFFFFFFFFFFFF l0000000000409FE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409FE0:
	dcgettext(0x0000000000000000, 0x0000000000415DFD, 0x0000000000000005)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409F95:
	dcgettext(0x0000000000000000, 0x0000000000415E18, 0x0000000000000005)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000409FA4:
	word64 r10_42
	word64 r12_72
	word64 r15_75
	word64 r10_70 = fn000000000040E970(fn000000000040EBF0(rdi, 0x00000001, r10, fs, out r10_42), 0x00000006, 0x00000000, r10_42, fs, out r12_72, out r15_75)
	error(0x0000000000000000, 0x0000000000000000, r12_72, 0x00000000)
	r15Out = r15_75
	return r10_70
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000409F80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A000(word64 rdx, word64 rsi, word64 rdi, word64 r10, selector fs, ptr64 & rsiOut, ptr64 & rdiOut, ptr64 & r10Out, ptr64 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r13 rdi rdx rsi
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040A000_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A000:
	word64 rbx_32 = Mem30[0x000000000061A650:word64]
	fputs_unlocked(dcgettext(0x0000000000000000, 0x0000000000415E35, 0x0000000000000005), rbx_32)
	word64 r14_109 = 0x0000000000000000
	word64 r13_108 = rdx
	word64 rdx_127 = 0x0000000000000005
	word64 rbp_114 = rsi
	word64 rsp_120 = fp - 0x0000000000000038
	word64 rsi_129 = rbx_32
	word64 rbx_115 = 0x0000000000000000
	word64 r12_131 = Mem30[rdi:word64]
	branch r12_131 != 0x0000000000000000 l000000000040A086
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A086:
	branch rbx_115 == 0x0000000000000000 l000000000040A050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A08B:
	branch memcmp(r14_109, rbp_114, r13_108) != 0x00000000 l000000000040A050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A050:
	word64 r15_73
	word64 rbp_77
	fn000000000040EC10(r12_131, r10, fs, out rbx_115, out rsp_120, out rbp_77, out r8_226, out r9_227, out r10, out r12_228, out r13_108, out r14_109, out r15_73)
	__fprintf_chk(Mem30[0x000000000061A650:word64], 0x0000000000000001, 0x0000000000415E4A, 0x00000000)
	rdx_127 = 0x0000000000415E4A
	rsi_129 = 0x0000000000000001
	rbp_114 = rbp_77 + r13_108
	r12_131 = Mem30[r15_73 + rbx_115 * 0x0000000000000008:word64]
	branch r12_131 == 0x0000000000000000 l000000000040A0D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A09D:
	word64 r15_110
	fn000000000040EC10(r12_131, r10, fs, out rbx_115, out rsp_120, out rbp_114, out r8_229, out r9_230, out r10, out r12_231, out r13_108, out r14_109, out r15_110)
	__fprintf_chk(Mem30[0x000000000061A650:word64], 0x0000000000000001, 0x0000000000415E52, 0x00000000)
	rdx_127 = 0x0000000000415E52
	rsi_129 = 0x0000000000000001
	r12_131 = Mem30[r15_110 + rbx_115 * 0x0000000000000008:word64]
	branch r12_131 != 0x0000000000000000 l000000000040A086
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A047:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A0D0:
	word64 rdi_136 = Mem30[0x000000000061A650:word64]
	word64 rax_137 = Mem30[rdi_136 + 0x0000000000000028:word64]
	branch rax_137 >=u Mem30[rdi_136 + 0x0000000000000030:word64] l000000000040A0FB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A0FB:
	word64 r13_150 = Mem30[rsp_120 + 0x0000000000000020:word64]
	__overflow(rdi_136, 0x000000000000000A)
	rsiOut = 0x000000000000000A
	rdiOut = <invalid>
	r10Out = <invalid>
	r13Out = r13_150
	return rdx_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A0E1:
	Mem158[rdi_136 + 0x0000000000000028:word64] = rax_137 + 0x0000000000000001
	Mem159[rax_137:byte] = 0x0A
	word64 r13_168 = Mem159[rsp_120 + 0x0000000000000020:word64]
	rsiOut = rsi_129
	rdiOut = <invalid>
	r10Out = <invalid>
	r13Out = r13_168
	return rax_137 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A000_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A120(word64 rax, word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r8, word64 r10, selector fs, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r8:[0..63] rax:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r12 r13 r14 r15 r9 rax rbp rbx rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040A120_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A120:
	word64 rsp_111 = fp - 0x0000000000000038
	word64 rax_116 = fn0000000000409E50(rax, r8, rcx, rdx, rsi)
	branch rax_116 < 0x0000000000000000 l000000000040A165
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A165:
	word64 r15_61
	word64 r10_76
	word64 r13_79
	word64 rdi_88
	word64 rsi_90
	call r13_79 (retsize: 8;)
		uses: r10:r10_76,rdi:rdi_88,rdx:fn000000000040A000(r15_61, rcx, rdx, fn0000000000409F80(rax_41, rdi, r10, fs, out r15_61), fs, out rsi_90, out rdi_88, out r10_76, out r13_79),rsi:rsi_90
		defs: r10:r10_96,r9:r9_103,rsp:rsp_111
	rax_116 = 0xFFFFFFFFFFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A156:
	word64 rsp_118 = rsp_111 + 0x0000000000000008
	word64 rbp_123 = Mem32[rsp_118 + 8:word64]
	word64 r12_125 = Mem32[rsp_118 + 16:word64]
	word64 r13_127 = Mem32[rsp_118 + 24:word64]
	word64 r14_129 = Mem32[rsp_118 + 32:word64]
	word64 r15_131 = Mem32[rsp_118 + 40:word64]
	rbxOut = Mem32[rsp_118:word64]
	rspOut = rsp_118 + 48
	rbpOut = rbp_123
	r9Out = r9
	r10Out = r10
	r12Out = r12_125
	r13Out = r13_127
	r14Out = r14_129
	r15Out = r15_131
	return rax_116
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A120_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A2B0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx rsi
// Preserved: rbp rbx rsp
fn000000000040A2B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2B0:
	word64 rdx_30
	word64 rbp_26 = (uint64) (Mem9[rdi:byte] == 0x2F)
	word64 rax_16 = fn000000000040A390(rdi)
	word64 rcx_25 = rax_16 - rdi
	branch rcx_25 <=u rbp_26 l000000000040A2FD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2D2:
	rdx_30 = rcx_25 - 0x0000000000000001
	branch Mem9[rax_16 - 0x0000000000000001:byte] == 0x2F l000000000040A2EE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2EE:
	branch rbp_26 <u rdx_30 l000000000040A2E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2E0:
	word64 rax_39 = rdx_30 - 0x0000000000000001
	branch Mem9[rdi - 0x0000000000000001 + rdx_30:byte] != 0x2F l000000000040A2F3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2EB:
	rdx_30 = rax_39
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2DC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2FD:
	rdx_30 = rcx_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A2F3:
	return rdx_30
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A2B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A390(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx rsi
// Preserved: rsp
fn000000000040A390_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A390:
	word32 edx_13 = (word32) Mem0[rdi:byte]
	word64 rax_10 = rdi
	branch (byte) edx_13 != 0x2F l000000000040A3AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A39B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3A0:
	rax_10 = rax_10 + 0x0000000000000001
	edx_13 = (word32) Mem0[rax_10:byte]
	branch (byte) edx_13 == 0x2F l000000000040A3A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3AC:
	byte sil_38 = 0x00
	word64 rdx_21 = rax_10
	branch (byte) (uint64) edx_13 == 0x00 l000000000040A3F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3F7:
	return rax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3B7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3C0:
	rdx_21 = rdx_21 + 0x0000000000000001
	byte cl_30 = (byte) (word32) Mem0[rdx_21:byte]
	branch cl_30 == 0x00 l000000000040A3E5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3CB:
	branch cl_30 == 0x2F l000000000040A3F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3F0:
	sil_38 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3D0:
	branch sil_38 == 0x00 l000000000040A3C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3D5:
	rdx_21 = rdx_21 + 0x0000000000000001
	rax_10 = rdx_21
	cl_30 = (byte) (word32) Mem0[rdx_21:byte] (alias)
	sil_38 = 0x00 (alias)
	branch cl_30 != 0x00 l000000000040A3CB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A3E5:
	return rax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A390_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A400(word64 rax, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[32..63] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx
// Preserved: rbx rsp
fn000000000040A400_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A400:
	word64 rax_10 = DPB(rax, strlen(rdi), 0)
	branch rax_10 <=u 0x0000000000000001 l000000000040A41A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A40F:
	word64 rdx_17 = rax_10 - 0x0000000000000001
	branch Mem5[rdi - 0x0000000000000001 + rax_10:byte] == 0x2F l000000000040A420
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A420:
	rax_10 = rdx_17
	branch rdx_17 != 0x0000000000000001 l000000000040A40F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A429:
	return rdx_17
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A41A:
	return rax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A400_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040A600(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx
// Preserved: rsp
fn000000000040A600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A600:
	word32 edi_6 = (word32) (uint64) Mem0[rdi + 0x0000000000000018:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A430:
	byte dl_37
	word32 eax_10 = (word32) (uint64) ((word32) (uint64) edi_6 & 0x0000F000)
	branch eax_10 == 0x00008000 l000000000040A5B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5B0:
	dl_37 = 0x2D (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A442:
	branch eax_10 == 0x00004000 l000000000040A5C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5C0:
	dl_37 = 0x64 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A44D:
	branch eax_10 == 0x00006000 l000000000040A5D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5D0:
	dl_37 = 0x62 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A458:
	branch eax_10 == 0x00002000 l000000000040A5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5A0:
	dl_37 = 0x63 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A463:
	branch eax_10 == 0x0000A000 l000000000040A5E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5E0:
	dl_37 = 0x6C (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A46E:
	branch eax_10 == 0x00001000 l000000000040A5F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A5F0:
	dl_37 = 0x70 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A479:
	dl_37 = 0x73 (alias)
	branch eax_10 == 0x0000C000 l000000000040A48B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A488_1:
	dl_37 = 0x3F (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A48B:
	byte al_95
	Mem48[rsi:byte] = dl_37
	Mem60[rsi + 0x0000000000000001:byte] = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) ((word32) ((uint64) edi_6) & 0x00000100)) - 0x00000001), bool, 1)) & 0xFFFFFFBB) + 0x00000072)
	Mem73[rsi + 0x0000000000000002:byte] = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) ((word32) ((uint64) edi_6) & 0x00000080)) - 0x00000001), bool, 1)) & 0xFFFFFFB6) + 0x00000077)
	word32 eax_84 = (word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) ((word32) ((uint64) edi_6) & 0x00000040)) - 0x00000001), bool, 1))
	branch (edi_6 & 0x00000800) == 0x00000000 l000000000040A590
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A590:
	al_95 = (byte) (uint64) ((word32) (uint64) (eax_84 & 0xFFFFFFB5) + 0x00000078) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A4CD:
	al_95 = (byte) (uint64) ((word32) (uint64) (eax_84 & 0xFFFFFFE0) + 0x00000073) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A4D3:
	byte al_148
	Mem99[rsi + 0x0000000000000003:byte] = al_95
	Mem113[rsi + 0x0000000000000004:byte] = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) ((word32) ((uint64) edi_6) & 0x00000020)) - 0x00000001), bool, 1)) & 0xFFFFFFBB) + 0x00000072)
	Mem126[rsi + 0x0000000000000005:byte] = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) ((word32) ((uint64) edi_6) & 0x00000010)) - 0x00000001), bool, 1)) & 0xFFFFFFB6) + 0x00000077)
	word32 eax_137 = (word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) ((word32) ((uint64) edi_6) & 0x00000008)) - 0x00000001), bool, 1))
	branch (edi_6 & 0x00000400) == 0x00000000 l000000000040A580
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A580:
	al_148 = (byte) (uint64) ((word32) (uint64) (eax_137 & 0xFFFFFFB5) + 0x00000078) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A50E:
	al_148 = (byte) (uint64) ((word32) (uint64) (eax_137 & 0xFFFFFFE0) + 0x00000073) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A514:
	Mem152[rsi + 0x0000000000000006:byte] = al_148
	Mem166[rsi + 0x0000000000000007:byte] = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) ((word32) ((uint64) edi_6) & 0x00000004)) - 0x00000001), bool, 1)) & 0xFFFFFFBB) + 0x00000072)
	Mem181[rsi + 0x0000000000000008:byte] = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) ((word32) ((uint64) edi_6) & 0x00000002)) - 0x00000001), bool, 1)) & 0xFFFFFFB6) + 0x00000077)
	branch (edi_6 & 0x00000200) == 0x00000000 l000000000040A560
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A560:
	Mem184[rsi + 0x000000000000000A:byte] = 0x20
	Mem185[rsi + 0x000000000000000B:byte] = 0x00
	Mem197[rsi + 0x0000000000000009:byte] = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) (edi_6 & 0x00000001)) - 0x00000001), bool, 1)) & 0xFFFFFFB5) + 0x00000078)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A545:
	Mem199[rsi + 0x000000000000000A:byte] = 0x20
	Mem200[rsi + 0x000000000000000B:byte] = 0x00
	Mem212[rsi + 0x0000000000000009:byte] = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (0x00000000 - SLICE(cond((word32) ((uint64) (edi_6 & 0x00000001)) - 0x00000001), bool, 1)) & 0xFFFFFFE0) + 0x00000074)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A610(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
l000000000040A628_thunk_fn000000000040A630:
	return fn000000000040A630(rdx, rsi, rdi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A610_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A610:
	word64 rax_8 = fn000000000040A630(rdx, rsi, rdi)
	branch rax_8 == 0x0000000000000000 l000000000040A623
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A623:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A61E:
	return rax_8
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A610_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040A630(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040A630_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A630:
	word64 rax_30 = fn000000000040A390(rdi)
	word64 rax_40 = fn000000000040A400(rax_30, rax_30)
	word64 r14_11 = 0x0000000000000000
	word64 rsi_50 = rax_30 - rdi + rax_40
	branch rax_40 == 0x0000000000000000 l000000000040A679
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A66D:
	r14_11 = (uint64) (Mem51[rax_30 - 0x0000000000000001 + rax_40:byte] != 0x2F) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A679:
	word64 rbx_60 = rsi
	branch Mem51[rsi:byte] == 0x2F l000000000040A700
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A700:
	rbx_60 = rbx_60 + 0x0000000000000001
	branch Mem51[rbx_60:byte] != 0x2F l000000000040A682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A70D:
	rbx_60 = rbx_60 + 0x0000000000000001
	branch Mem51[rbx_60 + 0x0000000000000001:byte] != 0x2F l000000000040A682
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A71A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A682:
	word64 rax_133
	word64 rax_81 = DPB(rax_40, strlen(rbx_60), 0)
	word64 rax_89 = malloc(rsi_50 + 0x0000000000000001 + r14_11 + rax_81)
	branch rax_89 == 0x0000000000000000 l000000000040A720
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A720:
	rax_133 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A6A8:
	word64 rax_104 = mempcpy(rax_89, rdi, rsi_50)
	Mem110[rax_104:byte] = 0x2F
	word64 rdi_111 = rax_104 + r14_11
	branch rdx == 0x0000000000000000 l000000000040A6D5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A6C3:
	Mem123[rdx:word64] = rdi_111 - (uint64) (Mem110[rsi:byte] == 0x2F)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A6D5:
	Mem131[mempcpy(rdi_111, rbx_60, rax_81):byte] = 0x00
	rax_133 = rax_89
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A6E8:
	return rax_133
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A630_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040A730(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[32..63]
// LiveOut:
// Trashed: SCZO ecx r10 r8 r9d rax rdx rsi
// Preserved: rsp
fn000000000040A730_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A730:
	word64 rdx_40 = Mem0[rdi:word64]
	byte cl_25 = (byte) (word32) Mem0[rdx_40:byte]
	branch cl_25 == 0x00 l000000000040A7CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7CD:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A73E:
	byte r8b_21 = 0x00
	word64 rax_16 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A776:
	branch r8b_21 != 0x00 l000000000040A750
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A750:
	rsi = (uint64) ((word32) (uint64) ((int32) cl_25 & 0xFFFFFFDF) - 0x00000041)
	r8b_21 = 0x00 (alias)
	branch (word32) rsi <=u 0x00000019 l000000000040A768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A77B:
	branch cl_25 == 0x2E l000000000040A7B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7B8:
	branch rax_16 == 0x0000000000000000 l000000000040A7C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7C8:
	rax_16 = rdx_40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7BD:
	r8b_21 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A780:
	word32 esi_43 = (int32) cl_25
	rsi = DPB(rsi, esi_43, 0) (alias)
	branch rsi <=u 0x0000000000000039 l000000000040A768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A78D:
	rsi = (uint64) ((word32) (uint64) (esi_43 & 0xFFFFFFDF) - 0x00000041)
	branch (word32) rsi >u 0x00000019 l000000000040A761
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A761:
	branch cl_25 == 0x7E l000000000040A768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A764_1:
	rax_16 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A768:
	rdx_40 = rdx_40 + 0x0000000000000001
	Mem69[rdi:word64] = rdx_40
	cl_25 = (byte) (word32) Mem69[rdx_40:byte] (alias)
	branch cl_25 == 0x00 l000000000040A7B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A798:
	rdx_40 = rdx_40 + 0x0000000000000001
	Mem76[rdi:word64] = rdx_40
	cl_25 = (byte) (word32) Mem76[rdx_40:byte] (alias)
	branch cl_25 != 0x00 l000000000040A776
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7A6:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040A7B0:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040A730_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040AB30(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rsi
// Preserved: rbx rsp
fn000000000040AB30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB30:
	branch clock_gettime(0x0000000000000000, rdi) == 0x00000000 l000000000040AB67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB46:
	gettimeofday(fp - 0x0000000000000018, 0x0000000000000000)
	Mem19[rdi:word64] = qwLoc18
	Mem23[rdi + 0x0000000000000008:word64] = qwLoc10 *s 1000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB67:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AB30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040AB70(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rsi
// Preserved: rsp
fn000000000040AB70_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB70:
	word64 rax_6 = setlocale(rdi, 0x0000000000000000)
	branch rax_6 == 0x0000000000000000 l000000000040ABB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABB0:
	return 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB80:
	bool Z_15 = SLICE(cond(Mem0[rax_6:byte] - 0x43), bool, 2)
	branch Mem0[rax_6:byte] != 0x43 l000000000040AB98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB85:
	Z_15 = SLICE(cond(Mem0[rax_6 + 0x0000000000000001:byte]), bool, 2) (alias)
	branch Mem0[rax_6 + 0x0000000000000001:byte] != 0x00 l000000000040AB98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB98:
	word64 rsi_19 = rax_6
	word64 rdi_20 = 0x0000000000415E6A
	word64 rcx_21 = 0x0000000000000006
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABA5:
	branch rcx_21 == 0x0000000000000000 l000000000040ABA7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABA5_1:
	Z_15 = SLICE(cond(Mem0[rsi_72:byte] - Mem0[rdi_73:byte]), bool, 2) (alias)
	rsi_19 = rsi_72 + 0x0000000000000001
	rdi_20 = rdi_73 + 0x0000000000000001
	rcx_21 = rcx_21 - 0x0000000000000001
	rsi_72 = rsi_19
	rdi_73 = rdi_20
	branch Mem0[rsi_72:byte] != Mem0[rdi_73:byte] l000000000040ABA5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABA7:
	return DPB(rax_6, Z_15, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AB8B:
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AB70_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040ABC0(word64 rdi, ptr64 & r8Out, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: r8 r9 rax
// Trashed: SCZO r8 r9 rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040ABC0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABC0:
	word64 rdi_11
	branch rdi >u 0x0000000000000009 l000000000040AC4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC4F:
	rdi_11 = rdi | 0x0000000000000001
	branch (rdi | 0x0000000000000001) != 0xFFFFFFFFFFFFFFFF l000000000040ABCF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC5D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABCA:
	rdi_11 = 0x000000000000000B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABCF:
	r9 = 0x00000000AAAAAAAB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABE0:
	word64 rcx_14
	branch rdi_11 <=u 0x0000000000000009 l000000000040AC48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC48:
	rcx_14 = 0x0000000000000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABE6:
	word64 rdx_18 = SLICE(rdi_11 *u 0x00000000AAAAAAAB, word64, 64)
	branch rdi_11 == (rdx_18 >>u 0x0000000000000001) + (rdx_18 >>u 0x0000000000000001) * 0x0000000000000002 l000000000040AC3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ABF8:
	r8 = 0x0000000000000010
	word64 rsi_24 = 0x0000000000000009
	rcx_14 = 0x0000000000000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC21:
	rsi_24 = rsi_24 + r8
	rcx_14 = rcx_14 + 0x0000000000000002
	branch rsi_24 <u rdi_11 l000000000040AC10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC10:
	r8 = r8 + 0x0000000000000008
	branch (uint64) ((uint64) rdi_11 % rcx_14) == 0x0000000000000000 l000000000040AC3A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC2D:
	branch (uint64) ((uint64) rdi_11 % rcx_14) != 0x0000000000000000 l000000000040AC44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC3A:
	rdi_11 = rdi_11 + 0x0000000000000002
	branch rdi_11 != 0xFFFFFFFFFFFFFFFF l000000000040ABE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC44:
	r8Out = r8
	r9Out = r9
	return rdi_11
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040ABC0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040AC80(word64 rax, word64 rbx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[0..63] rbx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rsi
// Preserved: rbx rsp
fn000000000040AC80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC80:
	word64 rax_14
	call Mem5[rdi + 0x0000000000000030:word64] (retsize: 8;)
		uses: rax:rax,rdi:rsi,rsi:Mem5[rdi + 0x0000000000000010:word64],Stack +0008:rbx
		defs: rax:rax_14
	branch rax_14 >=u Mem5[rdi + 0x0000000000000010:word64] l000000000040AC9D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC9D:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AC94:
	return (rax_14 << 0x0000000000000004) + Mem5[rdi:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AC80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040ACB0(word64 rax, word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r9, word64 r10, word64 r12, word64 r13, word64 r14, ptr64 & rsiOut, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..63] r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r9:[0..63] rax:[0..63] rbp:[0..63] rbx:[0..63] rcx:[32..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r9 rax rsi
// Trashed: SCZO r10 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 rbp rbx rsp
fn000000000040ACB0_entry:
	word64 rcx_46 = DPB(rcx, ecx, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACB0:
	word64 r13_12 = (uint64) ecx
	word64 rax_27 = fn000000000040AC80(rax, rbx, rsi, rdi)
	Mem34[rdx:word64] = rax_27
	byte r13b_141 = (byte) r13_12
	r13b_141 = (byte) r13_12 (alias)
	word64 rsi_109 = Mem34[rax_27:word64]
	word64 rbx_122 = rax_27
	branch rsi_109 == 0x0000000000000000 l000000000040AD4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACD7:
	branch rsi == rsi_109 l000000000040ACE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACDC:
	word64 rax_50
	word64 rdx_43
	word64 rcx_47
	call Mem34[rdi + 0x0000000000000038:word64] (retsize: 8;)
		uses: r10:r10,r9:r9,rax:rax_27,rcx:rcx_46,rdi:rsi,rdx:rdx,rsi:rsi_35,Stack +0008:rbx,Stack +0010:rbp,Stack +0018:r12,Stack +0020:r13,Stack +0028:r14
		defs: r10:r10_54,r9:r9_52,rax:rax_50,rcx:rcx_47,rdx:rdx_43
	branch (byte) rax_50 == 0x00 l000000000040AD46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD46:
	byte r13b_93 = (byte) r13_12
	r13b_93 = (byte) r13_12 (alias)
	word64 rax_62 = Mem34[rbx_122 + 0x0000000000000008:word64]
	branch rax_62 != 0x0000000000000000 l000000000040AD30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD30:
	rsi_109 = Mem34[rax_62:word64]
	branch rsi_109 == rsi l000000000040AD67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD38:
	word64 rax_81
	call Mem34[rdi + 0x0000000000000038:word64] (retsize: 8;)
		uses: r10:r10_84,r9:r9_82,rax:rax_62,rcx:rcx_77,rdi:rsi,rdx:rdx_74,rsi:rsi_66,Stack +0008:rbx,Stack +0010:rbp,Stack +0018:r12,Stack +0020:r13,Stack +0028:r14
		defs: r10:r10_85,r9:r9_83,rax:rax_81,rcx:rcx_78,rdx:rdx_75
	branch (byte) rax_81 != 0x00 l000000000040AD60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD60:
	rax_62 = Mem34[rbx_122 + 0x0000000000000008:word64]
	rsi_109 = Mem34[rax_62:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD67:
	branch r13b_93 == 0x00 l000000000040AD1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD6C:
	Mem103[rbx_122 + 0x0000000000000008:word64] = Mem34[rax_62 + 0x0000000000000008:word64]
	Mem104[rax_62:word64] = 0x0000000000000000
	Mem107[rax_62 + 0x0000000000000008:word64] = Mem104[rdi + 0x0000000000000048:word64]
	Mem108[rdi + 0x0000000000000048:word64] = rax_62
	rsiOut = rsi_109
	r9Out = r9
	r10Out = r10
	return rsi_109
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD42:
	rbx_122 = Mem34[rbx_122 + 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD4F:
	rsiOut = 0x0000000000000000
	r9Out = r9
	r10Out = r10
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACE6:
	rsi_109 = Mem34[rax_27:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACE9:
	branch r13b_141 == 0x00 l000000000040AD1C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACEE:
	word64 rax_149 = Mem34[rax_27 + 0x0000000000000008:word64]
	branch rax_149 == 0x0000000000000000 l000000000040AD98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD98:
	Mem153[rax_27:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ACFB:
	r9 = Mem34[rax_149:word64]
	r10 = Mem34[rax_149 + 0x0000000000000008:word64]
	Mem156[rax_27:word64] = r9
	Mem157[rax_27 + 0x0000000000000008:word64] = r10
	Mem158[rax_149:word64] = 0x0000000000000000
	Mem161[rax_149 + 0x0000000000000008:word64] = Mem158[rdi + 0x0000000000000048:word64]
	Mem162[rdi + 0x0000000000000048:word64] = rax_149
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AD1C:
	rsiOut = rsi_109
	r9Out = r9
	r10Out = r10
	return rsi_109
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040ACB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



byte fn000000000040ADB0(word64 rdi, word64 r8, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63] rdi:[0..63] xmm0:[32..127] xmm1:[32..127] xmm2:[32..127]
// LiveOut: rax xmm0 xmm1 xmm2
// Trashed: SCZOP rax xmm0 xmm1 xmm2 xmm3
// Preserved: rsp
fn000000000040ADB0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADB0:
	word64 rax_5 = Mem0[rdi:word64]
	branch r8 == 0x0000000000415EE0 l000000000040AE30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE30:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADBB:
	xmm0 = DPB(xmm0, Mem0[rax_5 + 0x0000000000000008:real32], 0)
	branch Mem0[rax_5 + 0x0000000000000008:real32] <=u Mem0[0x0000000000415EF4:real32] l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADC9:
	xmm1 = DPB(xmm1, Mem0[0x0000000000415EF8:real32], 0)
	branch Mem0[0x0000000000415EF8:real32] <=u xmm0 l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADD6:
	xmm1 = DPB(xmm1, Mem0[rax_5 + 0x000000000000000C:real32], 0)
	branch Mem0[rax_5 + 0x000000000000000C:real32] <=u Mem0[0x0000000000415EFC:real32] l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADE4:
	xmm1 = DPB(xmm1, Mem0[rax_5:real32], 0)
	branch Mem0[rax_5:real32] <u Mem0[0x0000000000415F00:real32] l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ADF1:
	xmm1 = DPB(xmm1, Mem0[rax_5:real32] + Mem0[0x0000000000415EF4:real32], 0)
	xmm2 = DPB(xmm2, Mem0[rax_5 + 0x0000000000000004:real32], 0)
	branch Mem0[rax_5 + 0x0000000000000004:real32] <=u xmm1 l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE03:
	branch Mem0[0x0000000000415F04:real32] <u xmm2 l000000000040AE20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE10:
	branch Mem0[rax_5 + 0x0000000000000008:real32] >u xmm1 l000000000040AE35
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE35:
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE1A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE20:
	Mem52[rdi:word64] = 0x0000000000415EE0
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040ADB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040AE40(word64 rax, word32 edx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] rax:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040AE40_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE40:
	byte r15b_201 = (byte) (uint64) edx
	word64 r13_169 = Mem26[rsi:word64]
	branch r13_169 >=u Mem26[rsi + 0x0000000000000008:word64] l000000000040AEEF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE64:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE68:
	word64 rbp_33 = Mem32[r13_169:word64]
	branch rbp_33 == 0x0000000000000000 l000000000040AEE1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE71:
	word64 rbx_37 = Mem32[r13_169 + 0x0000000000000008:word64]
	branch rbx_37 != 0x0000000000000000 l000000000040AE94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE94:
	word64 rbp_43 = Mem42[rbx_37:word64]
	rax = fn000000000040AC80(rax, rbx_37, rbp_43, rdi)
	word64 rdx_56 = Mem42[rbx_37 + 0x0000000000000008:word64]
	branch Mem42[rax:word64] != 0x0000000000000000 l000000000040AE80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE80:
	Mem61[rbx_37 + 0x0000000000000008:word64] = Mem42[rax + 0x0000000000000008:word64]
	Mem62[rax + 0x0000000000000008:word64] = rbx_37
	branch rdx_56 == 0x0000000000000000 l000000000040AED0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AEAC:
	Mem64[rax:word64] = rbp_43
	Mem66[rdi + 0x0000000000000018:word64] = Mem64[rdi + 0x0000000000000018:word64] + 0x0000000000000001
	Mem69[rbx_37:word64] = 0x0000000000000000
	rax = Mem69[rdi + 0x0000000000000048:word64]
	Mem71[rbx_37 + 0x0000000000000008:word64] = rax
	Mem72[rdi + 0x0000000000000048:word64] = rbx_37
	branch rdx_56 != 0x0000000000000000 l000000000040AE91
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE91:
	rbx_37 = rdx_56
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AECF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AED0:
	rbp_33 = Mem79[r13_169:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AE7A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AED4:
	Mem89[r13_169 + 0x0000000000000008:word64] = 0x0000000000000000
	branch r15b_201 == 0x00 l000000000040AF08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF08:
	rax = fn000000000040AC80(rax, rbx_37, rbp_33, rdi)
	branch Mem89[rax:word64] == 0x0000000000000000 l000000000040AF5B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF5B:
	Mem112[rax:word64] = rbp_33
	Mem114[rdi + 0x0000000000000018:word64] = Mem112[rdi + 0x0000000000000018:word64] + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF1C:
	rax = Mem89[rdi + 0x0000000000000048:word64]
	branch rax == 0x0000000000000000 l000000000040AF66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF66:
	rax = malloc(0x0000000000000010)
	branch rax != 0x0000000000000000 l000000000040AF2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF75:
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF26:
	Mem148[rdi + 0x0000000000000048:word64] = Mem89[rax + 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF2F:
	word64 rdx_151 = Mem150[rax + 0x0000000000000008:word64]
	Mem154[rax:word64] = rbp_33
	Mem155[rax + 0x0000000000000008:word64] = rdx_151
	Mem156[rax + 0x0000000000000008:word64] = rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF3E:
	Mem159[r13_169:word64] = 0x0000000000000000
	Mem168[rsi + 0x0000000000000018:word64] = Mem159[rsi + 0x0000000000000018:word64] - 0x0000000000000001
	r13_169 = r13_169 + 0x0000000000000010
	branch Mem168[rsi + 0x0000000000000008:word64] >u r13_169 l000000000040AE68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AF59:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AEE1:
	r13_169 = r13_169 + 0x0000000000000010
	branch Mem175[rsi + 0x0000000000000008:word64] >u r13_169 l000000000040AE68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AEEF:
	return 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AE40_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040AFB0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: rax
// Preserved: rsp
fn000000000040AFB0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040AFB0:
	return Mem0[rdi + 0x0000000000000020:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040AFB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040B400(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r8, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & r9Out, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..127] xmm0:[0..127] xmm1:[0..127] xmm2:[0..127]
// LiveOut: r9 rax xmm0 xmm1 xmm2
// Trashed: SCZOP r8 r9 rax rcx rdi rdx rsi xmm0 xmm1 xmm2 xmm3
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040B400_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B400:
	word64 r15_107 = rdi
	word32 r15d_106 = (word32) rdi
	word64 r13_19 = rdx
	word64 r12_214 = rcx
	word64 rbp_29 = rsi
	branch rdx != 0x0000000000000000 l000000000040B42E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B42A_1:
	r13_19 = 0x000000000040AC60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B42E:
	branch rcx != 0x0000000000000000 l000000000040B43A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B436_1:
	r12_214 = 0x000000000040AC70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B43A:
	word64 rax_225
	word64 rax_46 = malloc(0x0000000000000050)
	branch rax_46 == 0x0000000000000000 l000000000040B598
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B598:
	rax_225 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B44B:
	branch rsi != 0x0000000000000000 l000000000040B45B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B457_1:
	rbp_29 = 0x0000000000415EE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B45B:
	Mem65[rax_46 + 0x0000000000000028:word64] = rbp_29
	branch (byte) (word64) fn000000000040ADB0(rax_46 + 0x0000000000000028, r8, xmm0, xmm1, xmm2, out xmm0, out xmm1, out xmm2) == 0x00 l000000000040B548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B46C:
	xmm1 = DPB(xmm1, Mem65[rbp_29 + 0x0000000000000008:real32], 0)
	branch Mem65[rbp_29 + 0x0000000000000010:byte] != 0x00 l000000000040B4C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B477:
	word128 xmm0_115
	branch rdi < 0x0000000000000000 l000000000040B578
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B578:
	r15_107 = (uint64) (r15d_106 & 0x00000001)
	real32 v33_112 = (real32) (rdi >>u 0x0000000000000001 | r15_107)
	xmm0_115 = DPB(xmm0, v33_112 + DPB(xmm0, v33_112, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B480:
	xmm0_115 = DPB(xmm0, (real32) rdi, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B485:
	real32 v26_120 = (real32) xmm0_115 / xmm1
	xmm0 = DPB(xmm0_115, v26_120, 0)
	branch v26_120 >=u Mem65[0x0000000000415F08:real32] l000000000040B540
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B496:
	branch v26_120 <u Mem65[0x0000000000415F0C:real32] l000000000040B568
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B568:
	r15_107 = DPB(r15_107, v26_120, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4A3:
	real32 v29_132 = v26_120 - Mem65[0x0000000000415F0C:real32]
	xmm0 = DPB(xmm0_115, v29_132, 0)
	r15_107 = DPB(r15_107, v29_132, 0) ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4C0:
	word64 rax_145 = fn000000000040ABC0(r15_107, out r8_149, out r9)
	branch rax_145 >u 0x00000000FFFFFFFF l000000000040B540
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B540:
	Mem162[rax_46 + 0x0000000000000010:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4DA:
	Mem165[rax_46 + 0x0000000000000010:word64] = rax_145
	branch rax_145 == 0x0000000000000000 l000000000040B548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4E3:
	word64 rax_169 = calloc(rax_145, 0x0000000000000010)
	Mem172[rax_46:word64] = rax_169
	branch rax_169 == 0x0000000000000000 l000000000040B548
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B548:
	free(rax_46)
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B4F8:
	Mem202[rax_46 + 0x0000000000000018:word64] = 0x0000000000000000
	Mem203[rax_46 + 0x0000000000000020:word64] = 0x0000000000000000
	Mem211[rax_46 + 0x0000000000000030:word64] = r13_19
	Mem217[rax_46 + 0x0000000000000038:word64] = r12_214
	Mem218[rax_46 + 0x0000000000000008:word64] = rax_169 + (rax_145 << 0x0000000000000004)
	Mem224[rax_46 + 0x0000000000000040:word64] = r8
	Mem226[rax_46 + 0x0000000000000048:word64] = 0x0000000000000000
	rax_225 = rax_46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B52A:
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return rax_225
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040B400_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040B640(word64 rax, word64 rbx, word64 rbp, word64 rdi, word64 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] rax:[0..63] rbp:[0..63] rbx:[0..63] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: r12 rbp rbx rdi rsp
fn000000000040B640_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B640:
	branch Mem13[rdi + 0x0000000000000040:word64] == 0x0000000000000000 l000000000040B655
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B64E:
	branch Mem13[rdi + 0x0000000000000020:word64] != 0x0000000000000000 l000000000040B6C6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6C6:
	word64 r12_18 = Mem13[rdi:word64]
	branch r12_18 >=u Mem13[rdi + 0x0000000000000008:word64] l000000000040B693
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6CF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6D0:
	word64 rdi_23 = Mem13[r12_18:word64]
	word64 rbx_24 = r12_18
	branch rdi_23 != 0x0000000000000000 l000000000040B6E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6E3:
	call Mem13[rdi + 0x0000000000000040:word64] (retsize: 8;)
		uses: rax:rax_35,rdi:rdi_32,Stack +0008:rbx,Stack +0010:rbp,Stack +0018:r12
		defs: rax:rax_36
	rbx_24 = Mem13[rbx_24 + 0x0000000000000008:word64]
	branch rbx_24 != 0x0000000000000000 l000000000040B6E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6E0:
	rdi_23 = Mem13[rbx_24:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6DC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6EF:
	rax = Mem13[rdi + 0x0000000000000008:word64]
	r12_18 = r12_18 + 0x0000000000000010
	branch rax >u r12_18 l000000000040B6D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6FC:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B655:
	rax = Mem13[rdi + 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B659:
	word64 r12_56 = Mem13[rdi:word64] + 0x0000000000000008
	branch r12_56 >=u rax l000000000040B693
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B662:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B668:
	word64 rdi_62 = Mem13[r12_56 + 0x0000000000000000:word64]
	branch rdi_62 != 0x0000000000000000 l000000000040B67B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B67B:
	word64 rbx_68 = Mem13[rdi_62 + 0x0000000000000008:word64]
	free(rdi_62)
	branch rbx_68 != 0x0000000000000000 l000000000040B678
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B678:
	rdi_62 = rbx_68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B672:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B689:
	r12_56 = r12_56 + 0x0000000000000010
	branch Mem13[rdi + 0x0000000000000008:word64] >u r12_56 l000000000040B668
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B693:
	word64 rdi_84 = Mem13[rdi + 0x0000000000000048:word64]
	branch rdi_84 != 0x0000000000000000 l000000000040B6A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6A3:
	word64 rbx_90 = Mem13[rdi_84 + 0x0000000000000008:word64]
	free(rdi_84)
	branch rbx_90 != 0x0000000000000000 l000000000040B6A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6A0:
	rdi_84 = rbx_90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B69C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B6B1:
	free(Mem13[rdi:word64])
	free(rdi)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040B640_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040B710(word64 rsi, word64 rdi, word128 xmm0, word128 xmm1, ptr64 & r8Out, ptr64 & r9Out, ptr64 & xmm0Out, ptr64 & xmm1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63] xmm0:[32..127] xmm1:[32..127]
// LiveOut: r8 r9 rax xmm0 xmm1
// Trashed: SCZOP r8 r9 rax rcx rdi rdx rsi xmm0 xmm1
// Preserved: r12 rbp rbx rsp
fn000000000040B710_entry:
	word32 esi_25 = (word32) rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B710:
	word64 rbp_15 = Mem11[rdi + 0x0000000000000028:word64]
	word128 xmm1_18 = DPB(xmm1, Mem11[rbp_15 + 0x0000000000000008:real32], 0)
	branch Mem11[rbp_15 + 0x0000000000000010:byte] != 0x00 l000000000040B770
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B72A:
	word128 xmm0_35
	branch rsi < 0x0000000000000000 l000000000040B8D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B8D0:
	rsi = (uint64) (esi_25 & 0x00000001)
	real32 v28_31 = (real32) (rsi >>u 0x0000000000000001 | rsi)
	xmm0_35 = DPB(xmm0, v28_31 + DPB(xmm0, v28_31, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B733:
	xmm0_35 = DPB(xmm0, (real32) rsi, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B738:
	real32 v16_40 = (real32) xmm0_35 / xmm1_18
	xmm0 = DPB(xmm0_35, v16_40, 0)
	branch v16_40 >=u Mem11[0x0000000000415F08:real32] l000000000040B870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B749:
	branch v16_40 <u Mem11[0x0000000000415F0C:real32] l000000000040B880
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B880:
	rsi = DPB(rsi, v16_40, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B756:
	real32 v19_52 = v16_40 - Mem11[0x0000000000415F0C:real32]
	xmm0 = DPB(xmm0_35, v19_52, 0)
	rsi = DPB(rsi, v19_52, 0) ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B770:
	word64 rax_65 = fn000000000040ABC0(rsi, out r8, out r9)
	branch rax_65 >u 0x00000000FFFFFFFF l000000000040B870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B792:
	branch Mem11[rdi + 0x0000000000000010:word64] == rax_65 l000000000040B860
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B860:
	r8Out = r8
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = <invalid>
	return 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B79C:
	word64 rax_100 = calloc(rax_65, 0x0000000000000010)
	branch rax_100 == 0x0000000000000000 l000000000040B870
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B870:
	r8Out = r8
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = <invalid>
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B7B6:
	word64 rax_138 = Mem137[rdi + 0x0000000000000048:word64]
	word64 rax_141 = fn000000000040AE40(rax_138, 0x00000000, rdi, fp - 0x0000000000000068)
	word64 rax_122 = rax_100 + (rax_65 << 0x0000000000000004)
	word32 ebp_169 = (word32) (uint64) (word32) rax_141
	branch (byte) rax_141 != 0x00 l000000000040B890
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B890:
	free(Mem139[rdi:word64])
	Mem158[rdi:word64] = rax_100
	Mem160[rdi + 0x0000000000000008:word64] = rax_122
	Mem162[rdi + 0x0000000000000010:word64] = rax_65
	Mem164[rdi + 0x0000000000000018:word64] = 0x0000000000000000
	Mem166[rdi + 0x0000000000000048:word64] = rax_138
	r8Out = r8
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = <invalid>
	return (uint64) ebp_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B815:
	Mem181[rdi + 0x0000000000000048:word64] = rax_138
	word64 rax_183 = fn000000000040AE40(rax_138, 0x00000001, fp - 0x0000000000000068, rdi)
	branch (byte) rax_183 == 0x00 l000000000040B8EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B836:
	branch (byte) fn000000000040AE40(rax_183, 0x00000000, fp - 0x0000000000000068, rdi) == 0x00 l000000000040B8EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B8EA:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B84B:
	free(rax_100)
	r8Out = r8
	r9Out = r9
	xmm0Out = xmm0
	xmm1Out = <invalid>
	return (uint64) ebp_169
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040B710_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000000000040B8F0(word64 rax, word64 rdx, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r10, word64 r13, word64 r14, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r13:[0..63] r14:[0..63] r8:[0..63] r9:[0..63] rax:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63] xmm0:[32..127] xmm1:[32..127] xmm2:[0..127]
// LiveOut: r10 r8 r9 rax xmm0 xmm1 xmm2
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi xmm0 xmm1 xmm2 xmm3
// Preserved: r12 rbp rbx rsp
fn000000000040B8F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B8F0:
	branch rsi == 0x0000000000000000 l000000000040BA67
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B904:
	word64 rax_291
	word64 rsi_35
	word64 r10_273
	word64 r9_209
	word64 rax_32 = fn000000000040ACB0(rax, 0x0000000000000000, fp - 0x0000000000000020, rdi, rsi, rsi, rdi, r9, r10, rdx, r13, r14, out rsi_35, out r9_209, out r10_273)
	branch rax_32 == 0x0000000000000000 l000000000040B938
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B938:
	word64 rax_46 = Mem13[rdi + 0x0000000000000018:word64]
	word32 eax_51 = (word32) rax_46
	branch rax_46 < 0x0000000000000000 l000000000040BA70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA70:
	real32 v27_57 = (real32) (rax_46 >>u 0x0000000000000001 | (uint64) (eax_51 & 0x00000001))
	xmm0 = DPB(xmm0, v27_57 + DPB(xmm0, v27_57, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B945:
	xmm0 = DPB(xmm0, (real32) rax_46, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B94A:
	word128 xmm1_83
	word64 rax_66 = Mem13[rdi + 0x0000000000000010:word64]
	word32 eax_72 = (word32) rax_66
	word64 rdx_67 = Mem13[rdi + 0x0000000000000028:word64]
	branch rax_66 < 0x0000000000000000 l000000000040BA90
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA90:
	real32 v46_78 = (real32) (rax_66 >>u 0x0000000000000001 | (uint64) (eax_72 & 0x00000001))
	xmm1_83 = DPB(xmm1, v46_78 + DPB(xmm1, v46_78, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B95B:
	xmm1_83 = DPB(xmm1, (real32) rax_66, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B960:
	xmm1 = DPB(xmm1_83, (real32) xmm1_83 * Mem13[rdx_67 + 0x0000000000000008:real32], 0)
	branch (real32) xmm0 >u xmm1 l000000000040B9C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9C8:
	word128 xmm0_106
	word128 xmm1_107
	word128 xmm2_108
	fn000000000040ADB0(rdi + 0x0000000000000028, r8, xmm0, xmm1, xmm2, out xmm0_106, out xmm1_107, out xmm2_108)
	word64 rax_115 = Mem13[rdi + 0x0000000000000010:word64]
	word64 rdx_116 = Mem13[rdi + 0x0000000000000028:word64]
	word32 eax_122 = (word32) rax_115
	xmm2 = DPB(xmm2_108, Mem13[rdx_116 + 0x0000000000000008:real32], 0)
	branch rax_115 < 0x0000000000000000 l000000000040BAE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BAE7:
	real32 v44_128 = (real32) (rax_115 >>u 0x0000000000000001 | (uint64) (eax_122 & 0x00000001))
	xmm0 = DPB(xmm0_106, v44_128 + DPB(xmm0_106, v44_128, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9E7:
	xmm0 = DPB(xmm0_106, (real32) rax_115, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9EC:
	word64 rax_136 = Mem13[rdi + 0x0000000000000018:word64]
	word32 eax_141 = (word32) rax_136
	branch rax_136 < 0x0000000000000000 l000000000040BB01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB01:
	real32 v41_147 = (real32) (rax_136 >>u 0x0000000000000001 | (uint64) (eax_141 & 0x00000001))
	xmm1 = DPB(xmm1_107, v41_147 + DPB(xmm1_107, v41_147, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9F9:
	xmm1 = DPB(xmm1_107, (real32) rax_136, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9FE:
	branch (real32) xmm1 <=u DPB(xmm2_108, Mem13[rdx_116 + 0x0000000000000008:real32] * xmm0, 0) l000000000040B96A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA0E:
	real32 v37_170 = (real32) xmm0 * Mem13[rdx_116 + 0x000000000000000C:real32]
	xmm0 = DPB(xmm0, v37_170, 0)
	branch Mem13[rdx_116 + 0x0000000000000010:byte] != 0x00 l000000000040BA1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA19:
	xmm0 = DPB(xmm0, v37_170 * xmm2, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA1D:
	branch (real32) xmm0 >=u Mem13[0x0000000000415F08:real32] l000000000040BB2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA2A:
	word64 rsi_195
	branch (real32) xmm0 >=u Mem13[0x0000000000415F0C:real32] l000000000040BAC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BAC8:
	real32 v43_185 = (real32) xmm0 - Mem13[0x0000000000415F0C:real32]
	xmm0 = DPB(xmm0, v43_185, 0)
	rsi_195 = DPB(rsi_35, v43_185, 0) ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA37:
	rsi_195 = DPB(rsi_35, (int32) xmm0, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA3C:
	word64 rax_210 = fn000000000040B710(rsi_195, rdi, xmm0, xmm1, out r8, out r9_209, out xmm0, out xmm1)
	branch (byte) rax_210 == 0x00 l000000000040BB2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA4C:
	branch fn000000000040ACB0(rax_210, 0x0000000000000000, fp - 0x0000000000000020, rdi, rsi, rsi, rdi, r9_209, r10_273, rdx, r13, r14, out rsi_519, out r9_209, out r10_273) == 0x0000000000000000 l000000000040B96A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BA67:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B96A:
	branch Mem13[qwLoc20:word64] == 0x0000000000000000 l000000000040BAB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BAB0:
	Mem290[qwLoc20:word64] = rsi
	Mem294[rdi + 0x0000000000000020:word64] = Mem290[rdi + 0x0000000000000020:word64] + 0x0000000000000001
	Mem296[rdi + 0x0000000000000018:word64] = Mem294[rdi + 0x0000000000000018:word64] + 0x0000000000000001
	rax_291 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B97A:
	word64 rax_298 = Mem13[rdi + 0x0000000000000048:word64]
	branch rax_298 == 0x0000000000000000 l000000000040BB1B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB1B:
	rax_298 = malloc(0x0000000000000010)
	branch rax_298 != 0x0000000000000000 l000000000040B98F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB2E:
	rax_291 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B987:
	Mem309[rdi + 0x0000000000000048:word64] = Mem13[rax_298 + 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B98F:
	word64 rdx_312 = Mem311[qwLoc20 + 0x0000000000000008:word64]
	Mem315[rax_298:word64] = rsi
	Mem316[rax_298 + 0x0000000000000008:word64] = rdx_312
	Mem317[qwLoc20 + 0x0000000000000008:word64] = rax_298
	Mem321[rdi + 0x0000000000000020:word64] = Mem317[rdi + 0x0000000000000020:word64] + 0x0000000000000001
	r8Out = r8
	r9Out = r9_209
	r10Out = r10_273
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B91B:
	branch rdx == 0x0000000000000000 l000000000040B9B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B9B8:
	r8Out = r8
	r9Out = r9_209
	r10Out = r10_273
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B924:
	Mem345[rdx:word64] = rax_32
	rax_291 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040B92A:
	r8Out = r8
	r9Out = r9_209
	r10Out = r10_273
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return (word32) rax_291
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040B8F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040BB50(word64 rax, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r10, word64 r13, word64 r14, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r13:[0..63] r14:[0..63] r8:[0..63] r9:[0..63] rax:[0..63] rdi:[0..63] rsi:[0..63] xmm0:[0..127] xmm1:[0..127] xmm2:[0..127]
// LiveOut: r10 r8 r9 rax xmm0 xmm1 xmm2
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi xmm0 xmm1 xmm2 xmm3
// Preserved: rbx rsp
fn000000000040BB50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB50:
	word64 rax_41
	word64 r10_21
	word64 r9_22
	word128 xmm0_28
	word128 xmm1_29
	word128 xmm2_30
	word64 r8_32
	word32 eax_38 = (word32) (word64) fn000000000040B8F0(rax, fp - 0x0000000000000010, rsi, rdi, r8, r9, r10, r13, r14, xmm0, xmm1, xmm2, out r8_32, out r9_22, out r10_21, out xmm0_28, out xmm1_29, out xmm2_30)
	branch eax_38 == 0xFFFFFFFF l000000000040BB80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB80:
	rax_41 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB67:
	rax_41 = rsi
	branch eax_38 != 0x00000000 l000000000040BB72
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB6C_1:
	rax_41 = qwLoc10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB72:
	r8Out = r8_32
	r9Out = r9_22
	r10Out = r10_21
	xmm0Out = xmm0_28
	xmm1Out = xmm1_29
	xmm2Out = xmm2_30
	return rax_41
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040BB50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040BB90(word64 rax, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r10, word64 r12, word64 r13, word64 r14, word128 xmm0, word128 xmm1, word128 xmm2, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & xmm0Out, ptr64 & xmm1Out, ptr64 & xmm2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r8:[0..63] r9:[0..63] rax:[0..63] rbp:[0..63] rdi:[0..63] rsi:[0..63] xmm0:[32..127] xmm1:[32..127] xmm2:[0..127]
// LiveOut: r10 r8 r9 rax xmm0 xmm1 xmm2
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi xmm0 xmm1 xmm2 xmm3
// Preserved: r12 rbp rbx rsp
fn000000000040BB90_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BB90:
	word64 rsi_28
	word64 r9_209
	word64 rax_230 = fn000000000040ACB0(rax, 0x0000000000000001, fp - 0x0000000000000020, rdi, rbp, rsi, rdi, r9, r10, r12, r13, r14, out rsi_28, out r9_209, out r10_29)
	branch rax_230 == 0x0000000000000000 l000000000040BD08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD08:
	rax_230 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBB6:
	Mem46[rdi + 0x0000000000000020:word64] = Mem12[rdi + 0x0000000000000020:word64] - 0x0000000000000001
	branch Mem46[qwLoc20:word64] == 0x0000000000000000 l000000000040BBD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBD0:
	word128 xmm0_135
	word64 rax_49 = Mem46[rdi + 0x0000000000000018:word64]
	Mem53[rdi + 0x0000000000000018:word64] = rax_49 - 0x0000000000000001
	word32 eax_56 = (word32) (rax_49 - 0x0000000000000001)
	branch rax_49 < 0x0000000000000001 l000000000040BCE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCE8:
	real32 v26_62 = (real32) (rax_49 - 0x0000000000000001 >>u 0x0000000000000001 | (uint64) (eax_56 & 0x00000001))
	xmm0_135 = DPB(xmm0, v26_62 + DPB(xmm0, v26_62, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBE5:
	xmm0_135 = DPB(xmm0, (real32) (rax_49 - 0x0000000000000001), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBEA:
	word128 xmm1_88
	word64 rax_71 = Mem53[rdi + 0x0000000000000010:word64]
	word32 eax_77 = (word32) rax_71
	word64 rdx_72 = Mem53[rdi + 0x0000000000000028:word64]
	branch rax_71 < 0x0000000000000000 l000000000040BCC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCC8:
	real32 v34_83 = (real32) (rax_71 >>u 0x0000000000000001 | (uint64) (eax_77 & 0x00000001))
	xmm1_88 = DPB(xmm1, v34_83 + DPB(xmm1, v34_83, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBFB:
	xmm1_88 = DPB(xmm1, (real32) rax_71, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC00:
	real32 v22_94 = (real32) xmm1_88 * Mem53[rdx_72:real32]
	word128 xmm1_155 = DPB(xmm1_88, v22_94, 0)
	branch v22_94 >u xmm0_135 l000000000040BC18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC18:
	word128 xmm0_111
	word128 xmm1_112
	word128 xmm2_113
	fn000000000040ADB0(rdi + 0x0000000000000028, r8, xmm0_135, xmm1_155, xmm2, out xmm0_111, out xmm1_112, out xmm2_113)
	word64 rdx_120 = Mem53[rdi + 0x0000000000000010:word64]
	word32 edx_126 = (word32) rdx_120
	word64 rax_121 = Mem53[rdi + 0x0000000000000028:word64]
	branch rdx_120 < 0x0000000000000000 l000000000040BD2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD2F:
	real32 v37_132 = (real32) (rdx_120 >>u 0x0000000000000001 | (uint64) (edx_126 & 0x00000001))
	xmm0_135 = DPB(xmm0_111, v37_132 + DPB(xmm0_111, v37_132, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC32:
	xmm0_135 = DPB(xmm0_111, (real32) rdx_120, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC37:
	word64 rdx_140 = Mem53[rdi + 0x0000000000000018:word64]
	word32 edx_145 = (word32) rdx_140
	branch rdx_140 < 0x0000000000000000 l000000000040BD49
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD49:
	real32 v39_151 = (real32) (rdx_140 >>u 0x0000000000000001 | (uint64) (edx_145 & 0x00000001))
	xmm1_155 = DPB(xmm1_112, v39_151 + DPB(xmm1_112, v39_151, 0), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC44:
	xmm1_155 = DPB(xmm1_112, (real32) rdx_140, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC49:
	real32 v31_166 = Mem53[rax_121:real32] * xmm0_135
	xmm2 = DPB(xmm2_113, v31_166, 0)
	branch v31_166 <=u xmm1_155 l000000000040BC09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC56:
	real32 v32_174 = (real32) xmm0_135 * Mem53[rax_121 + 0x0000000000000004:real32]
	word128 xmm0_175 = DPB(xmm0_135, v32_174, 0)
	branch Mem53[rax_121 + 0x0000000000000010:byte] != 0x00 l000000000040BC66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC61:
	xmm0_175 = DPB(xmm0_135, v32_174 * Mem53[rax_121 + 0x0000000000000008:real32], 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC66:
	word64 rsi_195
	branch (real32) xmm0_175 >=u Mem53[0x0000000000415F0C:real32] l000000000040BD10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD10:
	real32 v43_185 = (real32) xmm0_175 - Mem53[0x0000000000415F0C:real32]
	xmm0_175 = DPB(xmm0_175, v43_185, 0)
	rsi_195 = DPB(rsi_28, v43_185, 0) ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC73:
	rsi_195 = DPB(rsi_28, (int32) xmm0_175, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC78:
	branch (byte) (uint64) (word32) fn000000000040B710(rsi_195, rdi, xmm0_175, xmm1_155, out r8, out r9_209, out xmm0, out xmm1) != 0x00 l000000000040BBC6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC8D:
	word64 rdi_236 = Mem53[rdi + 0x0000000000000048:word64]
	branch rdi_236 != 0x0000000000000000 l000000000040BCA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCA3:
	word64 r12_242 = Mem53[rdi_236 + 0x0000000000000008:word64]
	free(rdi_236)
	branch r12_242 != 0x0000000000000000 l000000000040BCA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCA0:
	rdi_236 = r12_242
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC96:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BCB1:
	Mem249[rdi + 0x0000000000000048:word64] = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BC09:
	r8Out = r8
	r9Out = r9_209
	r10Out = <invalid>
	xmm0Out = xmm0_135
	xmm1Out = xmm1_155
	xmm2Out = xmm2
	return rax_230
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BBC6:
	r8Out = r8
	r9Out = r9_209
	r10Out = <invalid>
	xmm0Out = xmm0
	xmm1Out = xmm1
	xmm2Out = xmm2
	return rax_230
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040BB90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040BD70(word64 rcx, word32 edx, word64 rsi, word64 rdi, word64 r8, selector fs, int8 Top, ptr64 & r8Out, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] fs:[0..15] r8:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63] Top:[0..7]
// LiveOut: r8 r9 rax
// Trashed: SCZO r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: P r10 r12 r13 r14 r15 rbp rbx rsp Top
fn000000000040BD70_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BD70:
	word64 rcx_42 = Mem40[fs:0x00000028:word64]
	word64 rax_57 = localeconv()
	word64 r15_481 = Mem56[rax_57:word64]
	word32 eax_45 = (word32) (uint64) ((word32) (uint64) edx & 0x00000020)
	word64 rax_63 = DPB(rax_57, strlen(r15_481), 0)
	word32 eax_32 = (word32) (uint64) ((word32) (uint64) edx & 0x00000003)
	byte bLocC8_1506 = SLICE(edx, byte, 0)
	word32 dwLocC8_1715 = SLICE(edx, word24, 8)
	word32 v22_55 = ((word32) (uint64) (0x00000000 - SLICE(cond(eax_45 - 0x00000001), bool, 1)) & 0xFFFFFFE8) + 0x00000400
	word64 rbp_1111 = Mem56[rax_57 + 0x0000000000000010:word64]
	word64 r11_64 = rax_63
	word64 r13_1071 = Mem56[rax_57 + 0x0000000000000008:word64]
	branch rax_63 <u 0x0000000000000011 l000000000040BE0E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE06_1:
	r11_64 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE0A_1:
	r15_481 = 0x0000000000413990
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE0E:
	branch DPB(0x0000000000413990, strlen(r13_1071), 0) <u 0x0000000000000011 l000000000040BE2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE26_1:
	r13_1071 = 0x0000000000416919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE2A:
	word64 r8_1047
	word64 r10_121
	word64 rdi_1391
	word64 r12_1041
	word32 ebx_1185
	word64 rax_1046
	word32 edi_168
	word32 ecx_139
	word64 qwLocD0_1461 = rsi
	branch r8 >u rcx l000000000040C0E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C0E0:
	branch rcx == 0x0000000000000000 l000000000040BE59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C0E9:
	word128 rdx_rax_104 = (uint128) (uint64) r8
	word64 rax_107 = (uint64) (rdx_rax_104 /u rcx)
	branch (uint64) (rdx_rax_104 % rcx) != 0x0000000000000000 l000000000040BE59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C0FF:
	word128 rdx_rax_116 = (uint128) (uint64) rdi
	word128 rdx_rax_124 = (uint128) (uint64) ((uint64) (rdx_rax_116 % rax_107) * 0x000000000000000A)
	word64 rdi_130 = (uint64) (word32) (uint64) (rdx_rax_124 /u rax_107)
	edi_168 = (word32) rdi_130 (alias)
	word64 rdx_126 = (uint64) (rdx_rax_124 % rax_107)
	r10_121 = (uint64) (rdx_rax_116 /u rax_107)
	rdi_1391 = DPB(rdi_130, edi_168, 0) (alias)
	rdi_1391 = DPB(rdi_130, edi_168, 0) (alias)
	bool C_133 = SLICE(cond(rax_107 - rdx_126 * 0x0000000000000002), bool, 1)
	branch rax_107 <=u rdx_126 * 0x0000000000000002 l000000000040C6E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C6E0:
	ecx_139 = (word32) (uint64) ((word32) (uint64) ~(word32) (uint64) (0x00000000 - C_133) + 0x00000003) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C125:
	ecx_139 = (word32) (rdx_126 * 0x0000000000000002 != 0x0000000000000000) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE43:
	word128 rdx_rax_148 = (uint128) (uint64) rcx
	word64 rax_151 = (uint64) (rdx_rax_148 /u r8)
	branch (uint64) (rdx_rax_148 % r8) == 0x0000000000000000 l000000000040C2F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2F0:
	r10_121 = rax_151 *s rdi
	branch (uint64) ((uint128) (uint64) r10_121 /u rax_151) != rdi l000000000040BE59
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C308:
	ecx_139 = 0x00000000 (alias)
	rdi_1391 = 0x0000000000000000
	edi_168 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C12D:
	word64 r9_2357
	r9_177 = (uint64) ((word32) (uint64) edx & 0x00000010)
	word32 r9d_178 = (word32) r9_177
	word64 rdi_1395 = DPB(rdi_1391, edi_168, 0)
	r8_1047 = rsi
	ebx_1185 = 0xFFFFFFFF (alias)
	word64 r9_177 = DPB(r9_177, r9d_178, 0)
	word64 r9_2358 = DPB(r9_177, r9d_178, 0)
	r9_2360 = DPB(r9_2357, r9d_178, 0) (alias)
	r9_2362 = DPB(r9_2358, r9d_178, 0) (alias)
	r9_2363 = DPB(r9_2358, r9d_178, 0) (alias)
	word64 r9_2356 = DPB(r9_2357, r9d_178, 0)
	r9_2356 = DPB(r9_2357, r9d_178, 0) (alias)
	r9_177 = DPB(r9_2356, r9d_178, 0) (alias)
	word64 r9_2368 = DPB(r9_2357, r9d_178, 0)
	r9_2368 = DPB(r9_2357, r9d_178, 0) (alias)
	r9_177 = DPB(r9_2368, r9d_178, 0) (alias)
	word64 r9_2376 = DPB(r9_2368, r9d_178, 0)
	r9_2376 = DPB(r9_2368, r9d_178, 0) (alias)
	r9_177 = DPB(r9_2376, r9d_178, 0) (alias)
	branch r9d_178 == 0x00000000 l000000000040C530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C146:
	word64 rsi_182 = (uint64) v22_55
	branch r10_121 <u rsi_182 l000000000040C710
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C710:
	r8_1047 = rsi
	ebx_1185 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C153:
	ebx_1185 = 0x00000000 (alias)
	word32 r12d_1401 = (word32) (uint64) v22_55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C17D:
	word128 rdx_rax_199 = (uint128) (uint64) r10_121
	word64 rax_203 = (uint64) (rdx_rax_199 /u rsi_182)
	word64 edx_eax_216 = (uint64) (uint32) (rdi_1395 + DPB(rax_203, (uint64) (rdx_rax_199 % rsi_182) * 0x0000000000000005, 0) * 0x0000000000000002)
	word32 eax_220 = (uint32) (edx_eax_216 /u r12d_1401)
	word64 rdi_223 = (uint64) eax_220
	word32 edx_219 = (uint32) (edx_eax_216 % r12d_1401)
	edi_168 = (word32) rdi_223 (alias)
	word32 r14d_222 = (uint64) ((word32) (uint64) ecx_139 >> 0x00000001) + (uint64) edx_219 * 0x0000000000000002
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	word32 esi_277 = (word32) rsi_182
	r10_121 = rax_203
	word64 rax_293 = DPB(rax_203, eax_220, 0)
	rax_293 = DPB(rax_203, eax_220, 0) (alias)
	word64 rax_292 = DPB(rax_293, eax_220, 0)
	rax_292 = DPB(rax_293, eax_220, 0) (alias)
	word64 rax_302 = DPB(rax_292, eax_220, 0)
	word64 rdi_1396 = DPB(rdi_223, edi_168, 0)
	rdi_1396 = DPB(rdi_223, edi_168, 0) (alias)
	rdi_1395 = DPB(rdi_1396, edi_168, 0) (alias)
	word32 ecx_227 = (word32) (uint64) (ecx_139 + r14d_222)
	branch r12d_1401 >u r14d_222 l000000000040C160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C160:
	ecx_139 = (word32) (ecx_227 != 0x00000000)
	r9_2357 = r9_2363
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C1A8:
	ecx_139 = (word32) (uint64) ((word32) (uint64) ~(word32) (uint64) (0x00000000 - SLICE(cond(r12d_1401 - ecx_227), bool, 1)) + 0x00000003) (alias)
	r9_2357 = r9_2362
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C168:
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	ebx_1185 = (word32) (uint64) (ebx_1185 + 0x00000001) (alias)
	branch rsi_182 >u rax_203 l000000000040C49F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C49F:
	branch rax_203 >u 0x0000000000000009 l000000000040C768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4A9:
	byte dl_267
	branch eax_32 == 0x00000001 l000000000040C7B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7B0:
	dl_267 = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) eax_220 & 0x00000001) + ecx_139) > 0x00000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4B4:
	dl_267 = (byte) (uint64) (DPB(edx_219, ecx_139 > 0x00000000, 0) & DPB(esi_277, (word32) ((uint64) eax_32) == 0x00000000, 0)) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4C7:
	branch dl_267 == 0x00 l000000000040C788
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C788:
	branch eax_220 != 0x00000000 l000000000040C4DB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4CF:
	edi_168 = rax_302 + 0x0000000000000001
	branch rax_302 == 0x0000000000000009 l000000000040C7CE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7CE:
	r10_121 = rax_203 + 0x0000000000000001
	branch rax_203 != 0x0000000000000009 l000000000040C7FF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7FF:
	ecx_139 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C790:
	branch (bLocC8_1506 & 0x08) != 0x00 l000000000040C7C2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7C2:
	r8_1047 = rsi
	edi_168 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C797:
	edi_168 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7D8:
	r8_1047 = rsi
	ecx_139 = 0x00000000 (alias)
	edi_168 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C4DB:
	Mem370[rsi + 0x0000000000000287:byte] = (byte) (uint64) (edi_168 + 0x00000030)
	r9_177 = (uint64) r9d_178
	r8_1047 = memcpy(rsi + 0x0000000000000287 - r11_64, r15_481, r11_64)
	r9d_178 = (word32) r9_177 (alias)
	ecx_139 = 0x00000000 (alias)
	edi_168 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C174:
	r9_2358 = r9_2360
	branch ebx_1185 == 0x00000008 l000000000040C768
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C768:
	r8_1047 = rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C530:
	byte al_422
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	word64 r9_2352 = DPB(r9_177, r9d_178, 0)
	r9_2352 = DPB(r9_177, r9d_178, 0) (alias)
	r9_2352 = DPB(r9_177, r9d_178, 0) (alias)
	r9 = DPB(r9_2352, r9d_178, 0) (alias)
	r9 = DPB(r9_2352, r9d_178, 0) (alias)
	branch eax_32 == 0x00000001 l000000000040C6F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C6F0:
	al_422 = (word32) (uint64) (edi_168 + (word32) ((uint64) ((word32) r10_121 & 0x00000001) + (int64) ecx_139 != 0x0000000000000000)) > 0x00000005
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C53B:
	al_422 = 0x00 (alias)
	branch (word32) (uint64) eax_32 != 0x00000000 l000000000040C54C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C545:
	al_422 = (word32) (uint64) (ecx_139 + edi_168) > 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C54C:
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	branch al_422 == 0x00 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C550:
	r10_121 = r10_121 + 0x0000000000000001
	branch r9d_178 == 0x00000000 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C559:
	branch (uint64) v22_55 != r10_121 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C562:
	branch ebx_1185 == 0x00000008 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C567:
	ebx_1185 = (word32) (uint64) (ebx_1185 + 0x00000001) (alias)
	r10_121 = 0x0000000000000001
	branch (bLocC8_1506 & 0x08) != 0x00 l000000000040C5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C577:
	Mem470[r8_1047 - 0x0000000000000001:byte] = 0x30
	r10_121 = 0x0000000000000001
	r8_1047 = memcpy(r8_1047 - 0x0000000000000001 - r11_64, r15_481, r11_64)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5A0:
	r12_1041 = r8_1047
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5B0:
	word64 rdx_500 = SLICE(r10_121 *u 0x00000000CCCCCCCD, word64, 64)
	word64 rax_502 = (rdx_500 >>u 0x0000000000000003) + (rdx_500 >>u 0x0000000000000003) * 0x0000000000000004
	r12_1041 = r12_1041 - 0x0000000000000001
	Mem510[r12_1041:byte] = (byte) (uint64) ((word32) (r10_121 - rax_502 * 0x0000000000000002) + 0x00000030)
	dwLocC8_1715 = SLICE(dwLocC8_2466, word24, 8) (alias)
	rax_1046 = rax_502 * 0x0000000000000002
	r10_121 = rdx_500 >>u 0x0000000000000003
	dwLocC8_2466 = dwLocC8_1715
	branch rdx_500 >>u 0x0000000000000003 != 0x0000000000000000 l000000000040C5B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5D8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE59:
	ST523[Top - 1:real64] = (real64) rdi
	branch rdi < 0x0000000000000000 l000000000040C5F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5F0:
	ST525[Top - 1:real64] = ST523[Top - 1:real64] + Mem515[0x0000000000415F08:real32]
	ST531[Top - 2:real64] = (real64) rcx
	branch rcx >= 0x0000000000000000 l000000000040BE7D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE6B:
	ST537[Top - 2:real64] = (real64) rcx
	branch rcx < 0x0000000000000000 l000000000040C608
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C608:
	ST542[Top - 2:real64] = ST540[Top - 2:real64] + Mem541[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE7D:
	ST552[Top - 3:real64] = (real64) r8
	branch r8 < 0x0000000000000000 l000000000040C5E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C5E0:
	ST554[Top - 3:real64] = ST552[Top - 3:real64] + Mem547[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BE94:
	word64 r14_1028
	word64 r15_1034
	ST561[Top - 2:real64] = ST560[Top - 2:real64] / ST560[Top - 3:real64]
	ST563[Top - 1:real64] = ST561[Top - 1:real64] * ST561[Top - 2:real64]
	branch (bLocC8_1506 & 0x10) == 0x00 l000000000040C1B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C1B8:
	branch eax_32 == 0x00000001 l000000000040C1CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C1BF:
	ST569[Top - 2:real64] = (real64) Mem547[0x0000000000415F90:real80]
	branch ST569[Top - 2:real64] >u ST569[Top - 1:real64] l000000000040C408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C408:
	word64 rax_599
	ST576[Top - 2:real64] = (real64) Mem547[0x0000000000415F0C:real32]
	word32 v67_577 = ST576[Top - 2:real64]
	ST578[Top - 2:real64] = ST576[Top - 1:real64]
	ST579[Top - 1:real64] = v67_577
	branch ST579[Top - 2:real64] >=u ST579[Top - 1:real64] l000000000040C6A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C6A0:
	word16 wLoc82_1525 = __fstcw()
	ST586[Top - 2:real64] = ST579[Top - 2:real64] - ST579[Top - 1:real64]
	word32 v68_587 = ST586[Top - 2:real64]
	ST588[Top - 2:real64] = ST586[Top - 1:real64]
	ST589[Top - 1:real64] = v68_587
	word32 eax_585 = (word32) wLoc82_1525
	__fldcw(DPB((word16) eax_585, SLICE(eax_585, byte, 8) | 0x0C, 8))
	word64 qwLoc80_1527 = (int64) ST589[Top - 2:real64]
	__fldcw(wLoc82_1525)
	rax_599 = qwLoc80_1527 ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C418:
	ST602[Top - 1:real64] = ST579[Top - 2:real64]
	word16 wLoc82_1528 = __fstcw()
	ST614[Top - 2:real64] = ST602[Top - 2:real64]
	word32 eax_605 = (word32) wLoc82_1528
	__fldcw(DPB((word16) eax_605, SLICE(eax_605, byte, 8) | 0x0C, 8))
	word64 qwLoc80_1530 = (int64) ST614[Top - 2:real64]
	__fldcw(wLoc82_1528)
	rax_599 = qwLoc80_1530
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C43E:
	word64 rdx_621 = 0x0000000000000000
	branch (word32) (uint64) eax_32 != 0x00000000 l000000000040C470
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C470:
	ST628[Top - 1:real64] = ST627[Top - 1:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C448:
	ST635[Top - 2:real64] = (real64) rax_599
	branch rax_599 < 0x0000000000000000 l000000000040C772
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C772:
	ST637[Top - 2:real64] = ST635[Top - 2:real64] + Mem631[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C45A:
	ST646[Top - 1:real64] = ST641[Top - 1:real64]
	rdx_621 = 0x0000000000000001
	word64 rcx_651 = (uint64) PARITY_EVEN(ST641[Top - 2:real64] - ST641[Top - 1:real64])
	branch ST641[Top - 2:real64] != ST641[Top - 1:real64] l000000000040C46C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C468_1:
	rdx_621 = rcx_651
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C46C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C472:
	word64 rax_658 = rax_599 + rdx_621
	ST668[Top - 1:real64] = (real64) rax_658
	branch rax_658 >= 0x0000000000000000 l000000000040C1CD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C487:
	ST670[Top - 1:real64] = ST668[Top - 1:real64] + Mem662[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C1CD:
	__sprintf_chk(rsi, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000415F18, 0x00000000)
	r14_1028 = 0x0000000000000000
	ebx_1185 = 0xFFFFFFFF (alias)
	r15_1034 = (uint64) strlen(rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEA3:
	ST693[Top - 2:real64] = (real64) v22_55
	ST699[Top - 3:real64] = ST693[Top - 3:real64]
	ebx_1185 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEB4:
	ST703[Top - 4:real64] = ST702[Top - 4:real64]
	ST706[Top - 4:real64] = ST703[Top - 4:real64] * ST703[Top - 2:real64]
	word32 v42_707 = ST706[Top - 4:real64]
	ST708[Top - 4:real64] = ST706[Top - 1:real64]
	ST709[Top - 1:real64] = v42_707
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	ebx_1185 = (word32) (uint64) (ebx_1185 + 0x00000001) (alias)
	branch ST709[Top - 4:real64] <u ST709[Top - 1:real64] l000000000040BED0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BED0:
	ST714[Top - 2:real64] = ST709[Top - 4:real64]
	ST716[Top - 1:real64] = ST714[Top - 3:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEC1:
	branch ebx_1185 != 0x00000008 l000000000040BEB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEB0:
	ST721[Top - 3:real64] = ST709[Top - 4:real64]
	word32 v53_723 = ST721[Top - 3:real64]
	ST724[Top - 3:real64] = ST721[Top - 1:real64]
	ST725[Top - 1:real64] = v53_723
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEC6:
	ST726[Top - 2:real64] = ST709[Top - 4:real64]
	ST728[Top - 1:real64] = ST726[Top - 3:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BED4:
	ST732[Top - 1:real64] = ST731[Top - 2:real64] / ST731[Top - 1:real64]
	ST740[Top - 2:real64] = ST732[Top - 2:real64]
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	branch eax_32 == 0x00000001 l000000000040BF70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF70:
	word32 v64_742 = ST740[Top - 2:real64]
	ST743[Top - 2:real64] = ST740[Top - 1:real64]
	ST744[Top - 1:real64] = v64_742
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEE3:
	ST745[Top - 2:real64] = ST740[Top - 2:real64]
	ST748[Top - 2:real64] = (real64) Mem547[0x0000000000415F90:real80]
	branch ST748[Top - 2:real64] <=u ST748[Top - 1:real64] l000000000040C498
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C498:
	ST755[Top - 2:real64] = ST748[Top - 2:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BEF3:
	word64 rax_780
	ST757[Top - 2:real64] = (real64) Mem547[0x0000000000415F0C:real32]
	word32 v49_758 = ST757[Top - 2:real64]
	ST759[Top - 2:real64] = ST757[Top - 1:real64]
	ST760[Top - 1:real64] = v49_758
	branch ST760[Top - 2:real64] >=u ST760[Top - 1:real64] l000000000040C660
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C660:
	word16 wLoc82_1552 = __fstcw()
	ST767[Top - 2:real64] = ST760[Top - 2:real64] - ST760[Top - 1:real64]
	word32 v58_768 = ST767[Top - 2:real64]
	ST769[Top - 2:real64] = ST767[Top - 1:real64]
	ST770[Top - 1:real64] = v58_768
	word32 eax_766 = (word32) wLoc82_1552
	__fldcw(DPB((word16) eax_766, SLICE(eax_766, byte, 8) | 0x0C, 8))
	word64 qwLoc80_1554 = (int64) ST770[Top - 2:real64]
	__fldcw(wLoc82_1552)
	rax_780 = qwLoc80_1554 ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF03:
	ST783[Top - 1:real64] = ST760[Top - 2:real64]
	word16 wLoc82_1555 = __fstcw()
	ST795[Top - 2:real64] = ST783[Top - 2:real64]
	word32 eax_786 = (word32) wLoc82_1555
	__fldcw(DPB((word16) eax_786, SLICE(eax_786, byte, 8) | 0x0C, 8))
	word64 qwLoc80_1557 = (int64) ST795[Top - 2:real64]
	__fldcw(wLoc82_1555)
	rax_780 = qwLoc80_1557
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF29:
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	word64 rdx_802 = 0x0000000000000000
	branch (word32) (uint64) eax_32 != 0x00000000 l000000000040BF55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF33:
	ST813[Top - 2:real64] = (real64) rax_780
	branch rax_780 < 0x0000000000000000 l000000000040C77D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C77D:
	ST815[Top - 2:real64] = ST813[Top - 2:real64] + Mem808[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF45:
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	rdx_802 = 0x0000000000000001
	word64 rcx_827 = (uint64) PARITY_EVEN(ST819[Top - 2:real64] - ST819[Top - 1:real64])
	branch ST819[Top - 2:real64] != ST819[Top - 1:real64] l000000000040BF55
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF51_1:
	rdx_802 = rcx_827
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF55:
	word64 rax_832 = rax_780 + rdx_802
	ST840[Top - 2:real64] = (real64) rax_832
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	branch rax_832 < 0x0000000000000000 l000000000040C758
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C758:
	ST842[Top - 2:real64] = ST840[Top - 2:real64] + Mem835[0x0000000000415F08:real32]
	word32 v60_843 = ST842[Top - 2:real64]
	ST844[Top - 2:real64] = ST842[Top - 1:real64]
	ST845[Top - 1:real64] = v60_843
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF6A:
	word32 v57_846 = ST840[Top - 2:real64]
	ST847[Top - 2:real64] = ST840[Top - 1:real64]
	ST848[Top - 1:real64] = v57_846
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BF72:
	real80 rLocA8_1568 = (real80) ST869[Top - 2:real64]
	__sprintf_chk(rsi, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000415F1E, 0x00000000)
	word64 rax_879 = (uint64) strlen(rsi)
	ST883[Top - 1:real64] = (real64) rLocA8_1568
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	r15_1034 = rax_879
	r14_1028 = r11_64 + 0x0000000000000001
	branch rax_879 >u (r11_64 + 0x0000000000000002) + (uint64) ((word32) ((uint64) eax_45) == 0x00000000) l000000000040BFF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BFCB:
	branch (bLocC8_1506 & 0x08) == 0x00 l000000000040C208
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C208:
	ST896[Top - 1:real64] = ST883[Top - 1:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BFD6:
	branch Mem872[rsi - 0x0000000000000001 + rax_879:byte] != 0x30 l000000000040C210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C210:
	ST901[Top - 1:real64] = ST883[Top - 1:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BFE7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040BFF0:
	ST908[Top - 1:real64] = ST883[Top - 1:real64] * Mem872[0x0000000000415F84:real32]
	branch eax_32 == 0x00000001 l000000000040C0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C001:
	ST911[Top - 2:real64] = (real64) Mem872[0x0000000000415F90:real80]
	branch ST911[Top - 2:real64] <=u ST911[Top - 1:real64] l000000000040C0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C00F:
	word64 rax_941
	ST918[Top - 2:real64] = (real64) Mem872[0x0000000000415F0C:real32]
	word32 v61_919 = ST918[Top - 2:real64]
	ST920[Top - 2:real64] = ST918[Top - 1:real64]
	ST921[Top - 1:real64] = v61_919
	branch ST921[Top - 2:real64] >=u ST921[Top - 1:real64] l000000000040C720
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C720:
	word16 wLoc82_1592 = __fstcw()
	ST928[Top - 2:real64] = ST921[Top - 2:real64] - ST921[Top - 1:real64]
	word32 v62_929 = ST928[Top - 2:real64]
	ST930[Top - 2:real64] = ST928[Top - 1:real64]
	ST931[Top - 1:real64] = v62_929
	word32 eax_927 = (word32) wLoc82_1592
	__fldcw(DPB((word16) eax_927, SLICE(eax_927, byte, 8) | 0x0C, 8))
	word64 qwLoc80_1594 = (int64) ST931[Top - 2:real64]
	__fldcw(wLoc82_1592)
	rax_941 = qwLoc80_1594 ^ 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C01F:
	ST944[Top - 1:real64] = ST921[Top - 2:real64]
	word16 wLoc82_1595 = __fstcw()
	ST956[Top - 2:real64] = ST944[Top - 2:real64]
	word32 eax_947 = (word32) wLoc82_1595
	__fldcw(DPB((word16) eax_947, SLICE(eax_947, byte, 8) | 0x0C, 8))
	word64 qwLoc80_1597 = (int64) ST956[Top - 2:real64]
	__fldcw(wLoc82_1595)
	rax_941 = qwLoc80_1597
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C045:
	word64 rdx_963 = 0x0000000000000000
	branch (word32) (uint64) eax_32 != 0x00000000 l000000000040C080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C080:
	ST970[Top - 1:real64] = ST969[Top - 1:real64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C051:
	ST977[Top - 2:real64] = (real64) rax_941
	branch rax_941 < 0x0000000000000000 l000000000040C79E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C79E:
	ST979[Top - 2:real64] = ST977[Top - 2:real64] + Mem973[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C063:
	ST988[Top - 1:real64] = ST983[Top - 1:real64]
	rdx_963 = 0x0000000000000001
	word64 rcx_993 = (uint64) PARITY_EVEN(ST983[Top - 2:real64] - ST983[Top - 1:real64])
	branch ST983[Top - 2:real64] != ST983[Top - 1:real64] l000000000040C075
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C071_1:
	rdx_963 = rcx_993
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C075:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C082:
	word64 rax_1000 = rax_941 + rdx_963
	ST1010[Top - 1:real64] = (real64) rax_1000
	branch rax_1000 >= 0x0000000000000000 l000000000040C0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C093:
	ST1012[Top - 1:real64] = ST1010[Top - 1:real64] + Mem1004[0x0000000000415F08:real32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C0A0:
	ST1016[Top - 1:real64] = ST1014[Top - 1:real64] / Mem1015[0x0000000000415F84:real32]
	__sprintf_chk(rsi, 0x0000000000000001, 0xFFFFFFFFFFFFFFFF, 0x0000000000415F18, 0x00000000)
	r14_1028 = 0x0000000000000000
	r15_1034 = (uint64) strlen(rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C218:
	r12_1041 = rsi - r15_1034
	rax_1046 = memmove(r12_1041, rsi, r15_1034)
	r8_1047 = r12_1041 + (r15_1034 - r14_1028)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C237:
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	branch (bLocC8_1506 & 0x04) != 0x00 l000000000040C318
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C318:
	r8_1047 = r8_1047 - r12_1041
	word64 rax_1105 = DPB(rax_1046, strlen(r13_1071), 0)
	__memcpy_chk(fp - 0x0000000000000078, r12_1041, r8_1047, 0x0000000000000029)
	word64 r15_1097 = 0xFFFFFFFFFFFFFFFF
	word64 r14_1098 = r8_1047
	word64 r9_1108 = r12_1041 + r8_1047
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C36C:
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	byte dl_1114 = (byte) (word32) Mem1106[rbp_1111:byte]
	branch dl_1114 == 0x00 l000000000040C383
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C374:
	r15_1097 = DPB(r15_1097, (word32) dl_1114, 0) (alias)
	branch dl_1114 <=u 0x7E l000000000040C37F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C37B_1:
	r15_1097 = r14_1098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C37F:
	rbp_1111 = rbp_1111 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C383:
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	branch r15_1097 <=u r14_1098 l000000000040C38F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C38B_1:
	r15_1097 = r14_1098
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C38F:
	r14_1098 = r14_1098 - r15_1097
	word64 rax_1151 = memcpy(r9_1108 - r15_1097, fp - 0x0000000000000078 + r14_1098, r15_1097)
	dwLocC8_1715 = SLICE(dwLocC8_1715, word24, 8) (alias)
	r9 = rax_1151
	branch r14_1098 != 0x0000000000000000 l000000000040C358
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C358:
	r9_1108 = memcpy(rax_1151 - rax_1105, r13_1071, rax_1105)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3AC:
	r12_1041 = rax_1151
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C242:
	word24 nLocC7_1769 = SLICE(dwLocC8_1715, word24, 8)
	branch (bLocC8_1506 & 0x80) == 0x00 l000000000040C2BA
	word32 dwLocC8_1714 = SEQ(nLocC7_1769, bLocC8_1506)
	dwLocC8_1714 = SLICE(dwLocC8_1714, word24, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C249:
	branch ebx_1185 == 0xFFFFFFFF l000000000040C618
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C618:
	branch r8 <=u 0x0000000000000001 l000000000040C7A9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7A9:
	ebx_1185 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C627:
	word64 r14_1212 = (uint64) v22_55
	ebx_1185 = 0x00000001 (alias)
	word64 rax_1214 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C640:
	dwLocC8_1714 = SLICE(dwLocC8_1714, word24, 8) (alias)
	rax_1214 = rax_1214 *s r14_1212
	branch r8 <=u rax_1214 l000000000040C252
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C64D:
	ebx_1185 = (word32) (uint64) (ebx_1185 + 0x00000001) (alias)
	branch ebx_1185 != 0x00000008 l000000000040C640
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C655:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C252:
	word32 eax_1236 = (word32) (uint64) ((word32) (uint64) dwLocC8_1714 & 0x00000100)
	byte bLocC8_1774 = SLICE(dwLocC8_1714, byte, 0)
	branch (word32) (uint64) ((word32) (uint64) ebx_1185 | eax_1236) == 0x00000000 l000000000040C2BA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C261:
	branch (bLocC8_1774 & 0x40) != 0x00 l000000000040C3E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3E8:
	Mem1247[rsi + 0x0000000000000288:byte] = 0x20
	qwLocD0_1461 = rsi + 0x0000000000000289
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C26C:
	word64 rdx_1255
	branch ebx_1185 == 0x00000000 l000000000040C7EB
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7EB:
	rdx_1255 = qwLocD0_1461
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C274:
	byte cl_1274
	rdx_1255 = qwLocD0_1461 + 0x0000000000000001
	branch (word32) (uint64) eax_45 == 0x00000000 l000000000040C3D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3D0:
	cl_1274 = 0x6B (alias)
	branch ebx_1185 != 0x00000001 l000000000040C289
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3DE:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C289:
	cl_1274 = (byte) (word32) Mem1254[(int64) ebx_1185 + 0x0000000000415F78:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C293:
	Mem1277[qwLocD0_1461:byte] = cl_1274
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C29A:
	branch eax_1236 == 0x00000000 l000000000040C7F5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7F5:
	qwLocD0_1461 = rdx_1255
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2A2:
	branch (word32) (uint64) eax_45 != 0x00000000 l000000000040C3B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3B8:
	branch ebx_1185 == 0x00000000 l000000000040C2AE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C3C0:
	Mem1301[rdx_1255:byte] = 0x69
	rdx_1255 = rdx_1255 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2AE:
	Mem1306[rdx_1255:byte] = 0x42
	qwLocD0_1461 = rdx_1255 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2BA:
	word64 rdi_1362 = rcx_42 ^ Mem1310[fs:0x00000028:word64]
	Mem1365[qwLocD0_1461:byte] = 0x00
	branch rdi_1362 != 0x0000000000000000 l000000000040C7E6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C7E6:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C2DC:
	r8Out = r8_1047
	r9Out = r9
	return r12_1041
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040BD70_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000000000040C810(word64 rax, word64 rdx, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r14, word64 r15, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r14:[0..63] r15:[0..63] r8:[0..63] r9:[0..63] rax:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r12 r13 r14 r15 r8 r9 rax rbp rbx rsp
// Trashed: SCZO r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040C810_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C810:
	word64 rdx_125
	word32 ebp_151
	word64 rax_108
	word64 r13_103 = rsi
	word64 r12_102 = rdx
	word64 rbx_20 = rdi
	word64 rsp_115 = fp - 0x0000000000000038
	branch rdi == 0x0000000000000000 l000000000040C910
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C910:
	rax = getenv(0x00000000004138E4)
	rbx_20 = rax
	branch rax != 0x0000000000000000 l000000000040C82C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C926:
	rax = getenv(0x0000000000415F24)
	rbx_20 = rax
	branch rax != 0x0000000000000000 l000000000040C82C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C93C:
	word64 rdx_44 = (uint64) ((word32) (0x0000000000000000 - (getenv(0x0000000000415F2E) <u 0x0000000000000001)) & 0x00000200)
	Mem47[rdx:word64] = rdx_44 + 512
	ebp_151 = 0x00000000 (alias)
	rdx_125 = rdx_44 + 512
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C82C:
	word64 rbp_48 = 0x0000000000000000
	branch Mem18[rbx_20:byte] == 0x27 l000000000040C8A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8A0:
	rbx_20 = rbx_20 + 0x0000000000000001
	rbp_48 = 0x0000000000000004 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C833:
	word64 rax_65 = fn0000000000409E50(rax, 0x0000000000000004, 0x0000000000415F50, 0x0000000000415F60, rbx_20)
	word32 ebp_178 = (word32) rbp_48
	byte al_174 = (byte) rax_65
	branch (word32) rax_65 < 0x00000000 l000000000040C8B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8B0:
	word64 rbp_109 = <invalid>
	ebp_151 = (word32) rbp_109 (alias)
	word64 rbx_110
	rax_108 = (word64) fn0000000000411360(rdx, 0x00000000, rbx_20, rbp_48, fp - 0x0000000000000030, rbx_20, 0x0000000000415F3E, r9, rdx, rsi, r14, r15, out rbx_110, out rsp_115, out ebp_308, out r8, out r9, out r12_102, out r13_103, out r14, out r15)
	byte bpl_156 = (byte) ebp_151
	branch (word32) rax_108 != 0x00000000 l000000000040C968
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C968:
	Mem124[r13_103:word32] = 0x00000000
	rdx_125 = Mem124[r12_102:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8D0:
	branch (byte) (uint64) ((word32) Mem18[rbx_110:byte] - 0x00000030) <=u 0x09 l000000000040C907
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8DA:
	word64 rdx_132 = Mem18[rsp_115 + 0x0000000000000008:word64]
	branch rbx_110 != rdx_132 l000000000040C8F9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8F9:
	rbx_110 = rbx_110 + 0x0000000000000001
	branch (byte) (uint64) ((word32) Mem18[rbx_110:byte] - 0x00000030) >u 0x09 l000000000040C8F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8F0:
	branch rbx_110 == rdx_132 l000000000040C980
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C8E4:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C980:
	branch Mem18[rdx_132 - 0x0000000000000001:byte] == 0x42 l000000000040C998
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C998:
	ebp_151 = (word32) (uint64) (ebp_151 | 0x00000180) (alias)
	branch Mem18[rdx_132 - 0x0000000000000002:byte] != 0x69 l000000000040C907
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9A8:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C986:
	ebp_151 = DPB(ebp_151, bpl_156 | 0x80, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C98A:
	ebp_151 = (word32) (uint64) (ebp_151 | 0x00000020) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C907:
	rdx_125 = Mem18[r12_102:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C84E:
	Mem176[rdx:word64] = 0x0000000000000001
	rdx_125 = 0x0000000000000001
	ebp_151 = (word32) (uint64) (ebp_178 | Mem176[DPB(rax_65, (int16) al_174, 0) * 0x0000000000000004 + 0x00415F50:word32]) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C864:
	Mem192[r13_103:word32] = ebp_151
	rax_108 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C86A:
	branch rdx_125 != 0x0000000000000000 l000000000040C894
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C86F:
	Mem222[r12_102:word64] = (uint64) ((word32) (0x0000000000000000 - (getenv(0x0000000000415F2E) <u 0x0000000000000001)) & 0x00000200)
	r8 = r8 + 512
	rax_108 = 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C894:
	word64 rsp_231 = rsp_115 + 0x0000000000000018
	word64 rbp_237 = Mem233[rsp_231 + 8:word64]
	word64 r12_239 = Mem233[rsp_231 + 16:word64]
	word64 r13_241 = Mem233[rsp_231 + 24:word64]
	rbxOut = Mem233[rsp_231:word64]
	rspOut = rsp_231 + 32
	rbpOut = rbp_237
	r8Out = r8
	r9Out = r9
	r12Out = r12_239
	r13Out = r13_241
	r14Out = r14
	r15Out = r15
	return (word32) rax_108
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040C810_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040C9B0(word32 edi, ptr64 & rspOut, ptr64 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31]
// LiveOut: r12 rax rsp
// Trashed: SCZO r12 rax rbp rbx rdi rdx rsi rsp
// Preserved:
fn000000000040C9B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9B0:
	word32 ebp_28 = (word32) (uint64) edi
	word64 rsp_11 = fp - 24
	word64 rbx_14 = Mem13[0x000000000061B1F8:word64]
	branch rbx_14 != 0x0000000000000000 l000000000040C9D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9D1:
	branch Mem13[rbx_14:word32] != ebp_28 l000000000040C9C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9C8:
	rbx_14 = Mem13[rbx_14 + 0x0000000000000008:word64]
	branch rbx_14 == 0x0000000000000000 l000000000040C9F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9C2:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9F0:
	word64 r12_30 = 0x0000000000416919
	word64 rax_31 = getpwuid((uint64) ebp_28)
	branch rax_31 == 0x0000000000000000 l000000000040CA16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CA07:
	r12_30 = Mem13[rax_31:word64]
	strlen(r12_30)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CA16:
	word64 rax_44 = fn0000000000410C40(rbx_14, out rbx_105, out rsp_11)
	Mem54[rax_44:word32] = ebp_28
	strcpy(rax_44 + 0x0000000000000010, r12_30)
	word64 rax_59 = Mem54[0x000000000061B1F8:word64]
	Mem60[0x000000000061B1F8:word64] = rax_44
	Mem61[rax_44 + 0x0000000000000008:word64] = rax_59
	rbx_14 = rax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9D5:
	word64 rsp_70 = rsp_11 + 8
	word64 rax_62 = 0x0000000000000000
	word64 rdx_66 = rbx_14 + 0x0000000000000010
	word64 r12_73 = Mem64[rsp_70 + 8:word64]
	branch Mem64[rbx_14 + 0x0000000000000010:byte] == 0x00 l000000000040C9E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9E3_1:
	rax_62 = rdx_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040C9E7:
	rspOut = rsp_70 + 16
	r12Out = r12_73
	return rax_62
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040C9B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040CB40(word32 edi, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31]
// LiveOut: r12 rax rbp rbx rsp
// Trashed: SCZO r12 rax rbp rbx rdi rdx rsi rsp
// Preserved:
fn000000000040CB40_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB40:
	word32 ebp_28 = (word32) (uint64) edi
	word64 rsp_11 = fp - 24
	word64 rbx_14 = Mem13[0x000000000061B1E8:word64]
	branch rbx_14 != 0x0000000000000000 l000000000040CB61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB61:
	branch Mem13[rbx_14:word32] != ebp_28 l000000000040CB58
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB58:
	rbx_14 = Mem13[rbx_14 + 0x0000000000000008:word64]
	branch rbx_14 == 0x0000000000000000 l000000000040CB80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB52:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB80:
	word64 r12_30 = 0x0000000000416919
	word64 rax_31 = getgrgid((uint64) ebp_28)
	branch rax_31 == 0x0000000000000000 l000000000040CBA6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB97:
	r12_30 = Mem13[rax_31:word64]
	strlen(r12_30)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CBA6:
	word64 rax_44 = fn0000000000410C40(rbx_14, out rbx_107, out rsp_11)
	Mem54[rax_44:word32] = ebp_28
	strcpy(rax_44 + 0x0000000000000010, r12_30)
	word64 rax_59 = Mem54[0x000000000061B1E8:word64]
	Mem60[0x000000000061B1E8:word64] = rax_44
	Mem61[rax_44 + 0x0000000000000008:word64] = rax_59
	rbx_14 = rax_44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB65:
	word64 rsp_70 = rsp_11 + 8
	word64 rax_62 = 0x0000000000000000
	word64 rdx_66 = rbx_14 + 0x0000000000000010
	word64 rbx_69 = Mem64[rsp_11:word64]
	word64 rbp_71 = Mem64[rsp_70:word64]
	word64 r12_73 = Mem64[rsp_70 + 8:word64]
	branch Mem64[rbx_14 + 0x0000000000000010:byte] == 0x00 l000000000040CB77
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB73_1:
	rax_62 = rdx_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CB77:
	rbxOut = rbx_69
	rspOut = rsp_70 + 16
	rbpOut = rbp_71
	r12Out = r12_73
	return rax_62
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040CB40_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040CCD0(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO r8 rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040CCD0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CCD0:
	Mem8[rsi + 0x0000000000000014:byte] = 0x00
	word64 rcx_15 = rsi + 0x0000000000000014
	branch rdi < 0x0000000000000000 l000000000040CD28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD28:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD30:
	word64 rdx_23 = (SLICE(rdi *s 0x0000000066666667, word64, 64) >> 0x0000000000000002) - (rdi >> 0x000000000000003F)
	rcx_15 = rcx_15 - 0x0000000000000001
	Mem33[rcx_15:byte] = (byte) (uint64) (rdx_23 * 0x000000000000000A + 0x0000000000000030 - (word32) rdi)
	rdi = rdx_23
	branch rdx_23 != 0x0000000000000000 l000000000040CD30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD5B:
	Mem38[rcx_15 - 0x0000000000000001:byte] = 0x2D
	return rcx_15 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CCE7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CCF0:
	word64 rdx_50 = (SLICE(rdi *s 0x0000000066666667, word64, 64) >> 0x0000000000000002) - (rdi >> 0x000000000000003F)
	rcx_15 = rcx_15 - 0x0000000000000001
	Mem59[rcx_15:byte] = (byte) (uint64) ((word32) (rdi - rdx_50 * 0x000000000000000A) + 0x00000030)
	rdi = rdx_50
	branch rdx_50 != 0x0000000000000000 l000000000040CCF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD20:
	return rcx_15
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040CCD0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040CD70(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040CD70_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD70:
	Mem5[rsi + 0x0000000000000014:byte] = 0x00
	word64 rcx_10 = rsi + 0x0000000000000014
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CD88:
	word64 rdx_13 = SLICE(rdi *u 0x00000000CCCCCCCD, word64, 64)
	rcx_10 = rcx_10 - 0x0000000000000001
	Mem23[rcx_10:byte] = (byte) (uint64) ((word32) (rdi - ((rdx_13 >>u 0x0000000000000003) + (rdx_13 >>u 0x0000000000000003) * 0x0000000000000004) * 0x0000000000000002) + 0x00000030)
	rdi = rdx_13 >>u 0x0000000000000003
	branch rdx_13 >>u 0x0000000000000003 != 0x0000000000000000 l000000000040CD88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CDAE:
	return rcx_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040CD70_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040CDC0(word64 rax, word64 rcx, word64 rdx, word64 rsi, word64 rdi, word32 r8d, word32 r9d)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8d:[0..31] r9d:[0..31] rax:[32..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040CDC0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CDC0:
	word64 rbp_125
	word64 r12_306
	word64 rcx_278
	word64 qwLoc58_592
	word32 eax_286
	word64 rax_121
	word64 r15_115
	word32 ebx_373
	word64 rbx_26 = (uint64) r9d
	byte bl_35 = (byte) rbx_26
	word32 ebx_343 = (word32) rbx_26
	word64 rax_39 = DPB(rax, strlen(rdi), 0)
	word64 r13_13 = rsi
	ebx_343 = DPB(ebx_343, bl_35, 0) (alias)
	word32 ebx_342 = DPB(ebx_343, bl_35, 0)
	word32 ebx_348 = DPB(ebx_343, bl_35, 0)
	ebx_348 = DPB(ebx_343, bl_35, 0) (alias)
	ebx_342 = DPB(ebx_348, bl_35, 0) (alias)
	word32 ebx_357 = DPB(ebx_343, bl_35, 0)
	ebx_361 = DPB(ebx_357, bl_35, 0) (alias)
	ebx_362 = DPB(ebx_357, bl_35, 0) (alias)
	word32 ebx_364 = DPB(ebx_357, bl_35, 0)
	word32 ebx_356 = DPB(ebx_357, bl_35, 0)
	ebx_364 = DPB(ebx_343, bl_35, 0) (alias)
	ebx_356 = DPB(ebx_364, bl_35, 0) (alias)
	word32 ebx_355 = DPB(ebx_356, bl_35, 0)
	ebx_374 = DPB(ebx_355, bl_35, 0) (alias)
	ebx_354 = DPB(ebx_355, bl_35, 0) (alias)
	ebx_354 = DPB(ebx_373, bl_35, 0) (alias)
	word32 ebx_354 = DPB(ebx_355, bl_35, 0)
	ebx_354 = DPB(ebx_356, bl_35, 0) (alias)
	ebx_342 = DPB(ebx_354, bl_35, 0) (alias)
	ebx_342 = DPB(ebx_356, bl_35, 0) (alias)
	ebx_342 = DPB(ebx_343, bl_35, 0) (alias)
	word32 ebx_341 = DPB(ebx_342, bl_35, 0)
	ebx_341 = DPB(ebx_364, bl_35, 0) (alias)
	word32 ebx_340 = DPB(ebx_341, bl_35, 0)
	word32 ebx_389 = DPB(ebx_342, bl_35, 0)
	ebx_389 = DPB(ebx_341, bl_35, 0) (alias)
	ebx_340 = DPB(ebx_389, bl_35, 0) (alias)
	word32 ebx_339 = DPB(ebx_340, bl_35, 0)
	ebx_339 = DPB(ebx_340, bl_35, 0) (alias)
	ebx_339 = DPB(ebx_340, bl_35, 0) (alias)
	word32 ebx_397 = DPB(ebx_339, bl_35, 0)
	word64 qwLoc60_588 = rdi
	word64 r14_228 = rax_39
	branch (bl_35 & 0x02) == 0x00 l000000000040CF60
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF60:
	branch DPB(rax, __ctype_get_mb_cur_max(), 0) <=u 0x0000000000000001 l000000000040CDFA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF6F:
	word64 rax_51 = DPB(rax, mbstowcs(0x0000000000000000, rdi, 0x0000000000000000), 0)
	branch rax_51 != 0xFFFFFFFFFFFFFFFF l000000000040CFA8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CFA8:
	word64 r15_55 = (rax_51 + 0x0000000000000001) * 0x0000000000000004
	word64 rax_58 = malloc(r15_55)
	qwLoc58_592 = rax_58
	branch rax_58 == 0x0000000000000000 l000000000040D160
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D160:
	branch (bl_35 & 0x01) == 0x00 l000000000040CF8C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D169:
	r15_115 = rax_39
	rbp_125 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CFCF:
	branch DPB(rax_58, mbstowcs(rax_58, rdi, rax_51 + 0x0000000000000001), 0) == 0x0000000000000000 l000000000040CE03
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CFEC:
	word64 qwLoc48_601
	Mem80[rax_58 - 0x0000000000000004 + r15_55:word32] = 0x00000000
	word64 rdi_105 = (uint64) Mem80[rax_58:word32]
	word64 rax_140 = rax_58
	branch (word32) rdi_105 == 0x00000000 l000000000040D106
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D106:
	r15_115 = (int64) wcswidth(rax_58, rax_51 + 0x0000000000000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D004:
	word64 r15_102 = rax_58
	byte bLoc39_593 = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D010:
	word32 eax_93 = iswprint(rdi_105)
	rax_140 = DPB(rax_875, eax_93, 0) (alias)
	ebx_357 = ebx_361
	branch eax_93 != 0x00000000 l000000000040D025
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D019:
	Mem98[r15_102:word32] = 0x0000FFFD
	bLoc39_593 = 0x01
	Mem103 = Mem100
	ebx_357 = ebx_362
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D025:
	r15_102 = r15_102 + 0x0000000000000004
	rdi_105 = (uint64) Mem103[r15_102:word32]
	rax_875 = rax_140
	branch (word32) rdi_105 != 0x00000000 l000000000040D010
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D030:
	r15_115 = (int64) wcswidth(rax_58, rax_51 + 0x0000000000000001)
	branch bLoc39_593 == 0x00 l000000000040D118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D118:
	rax_121 = Mem120[rcx:word64]
	branch r15_115 <=u rax_121 l000000000040CF28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF28:
	rbp_125 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D125:
	qwLoc48_601 = rax_39 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D04D:
	qwLoc48_601 = DPB(rax_875, wcstombs(0x0000000000000000, rax_58, 0x0000000000000000), 0) + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D064:
	word64 rax_150 = malloc(qwLoc48_601)
	rbp_125 = rax_150
	branch rax_150 == 0x0000000000000000 l000000000040D138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D138:
	branch (bl_35 & 0x01) != 0x00 l000000000040CE08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D141:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D07A:
	word64 r14_172
	word64 rdi_167 = (uint64) Mem165[rax_58:word32]
	word64 rax_164 = Mem148[rcx:word64]
	word64 rax_166 = rax_58
	branch (word32) rdi_167 == 0x00000000 l000000000040D173
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D173:
	r14_172 = rax_58
	r15_115 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D092:
	r14_172 = rax_58
	r15_115 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0BA:
	word32 eax_183 = wcwidth(rdi_167)
	byte al_186 = (byte) eax_183
	branch eax_183 != 0xFFFFFFFF l000000000040D0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0A0:
	rax_166 = DPB(rax_166, (int16) al_186, 0) + r15_115
	ebx_373 = ebx_354
	branch rax_164 <u rax_166 l000000000040D0E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0C4:
	Mem199[r14_172:word32] = 0x0000FFFD
	rax_166 = r15_115 + 0x0000000000000001
	ebx_373 = ebx_374
	branch rax_164 >=u rax_166 l000000000040D0AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0AC:
	r14_172 = r14_172 + 0x0000000000000004
	rdi_167 = (uint64) Mem205[r14_172:word32]
	r15_115 = rax_166
	ebx_355 = ebx_354
	branch (word32) rdi_167 == 0x00000000 l000000000040D0E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0DA:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D0E0:
	Mem223[r14_172:word32] = 0x00000000
	qwLoc60_588 = rax_150
	r14_228 = DPB(rax_166, wcstombs(rax_150, rax_58, qwLoc48_601), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF83:
	branch (bl_35 & 0x01) != 0x00 l000000000040D14D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D14D:
	r15_115 = rax_39
	qwLoc58_592 = 0x0000000000000000
	rbp_125 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF8C:
	qwLoc58_592 = 0x0000000000000000
	rbp_125 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CDFA:
	qwLoc58_592 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE03:
	r15_115 = rax_39
	rbp_125 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE08:
	rax_121 = Mem260[rcx:word64]
	branch r15_115 <=u rax_121 l000000000040CF2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF2A:
	branch r15_115 >=u rax_121 l000000000040D180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D180:
	rax_121 = r15_115
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF33:
	Mem281[rcx:word64] = r15_115
	rcx_278 = rax_121 - r15_115
	eax_286 = (word32) (uint64) r8d (alias)
	branch eax_286 != 0x00000000 l000000000040CE2A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE15:
	r14_228 = rax_121
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE1A:
	Mem297[rcx:word64] = rax_121
	rcx_278 = 0x0000000000000000
	eax_286 = (word32) (uint64) r8d (alias)
	branch eax_286 == 0x00000000 l000000000040CF4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CF4C:
	r12_306 = rcx_278
	rcx_278 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE2A:
	word32 ecx_317 = (word32) rcx_278
	r12_306 = 0x0000000000000000
	branch eax_286 == 0x00000001 l000000000040CE3E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE32:
	r12_306 = rcx_278 >>u 0x0000000000000001
	rcx_278 = (uint64) (ecx_317 & 0x00000001) + r12_306
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE3E:
	branch (bl_35 & 0x04) == 0x00 l000000000040CE47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE43_1:
	rcx_278 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE47:
	branch (word32) (uint64) (ebx_397 & 0x00000008) == 0x00000000 l000000000040CE4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE4A_1:
	r12_306 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE4E:
	branch rdx == 0x0000000000000000 l000000000040CEF9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE5A:
	word64 rdx_423 = rcx_278 - 0x0000000000000001
	word64 rbx_441 = rsi - 0x0000000000000001 + rdx
	branch rcx_278 == 0x0000000000000000 l000000000040CE97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE6D:
	branch rsi >=u rbx_441 l000000000040CE97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE72:
	word64 rax_445 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE89:
	r13_13 = r13_13 + 0x0000000000000001
	Mem454[r13_13 - 0x0000000000000001:byte] = 0x20
	branch rdx_423 != rax_445 l000000000040CE80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE80:
	rax_445 = rax_445 + 0x0000000000000001
	branch r13_13 == rbx_441 l000000000040CE97
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CE97:
	Mem467[r13_13:byte] = 0x00
	word64 rdx_468 = rbx_441 - r13_13
	branch rdx_468 <=u r14_228 l000000000040CEB6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEB2_1:
	rdx_468 = r14_228
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEB6:
	word64 rax_495 = mempcpy(r13_13, qwLoc60_588, rdx_468)
	word64 rdx_504 = rax_495
	word64 rsi_505 = r12_306 - 0x0000000000000001
	branch r12_306 == 0x0000000000000000 l000000000040CEF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CECD:
	branch rbx_441 <=u rax_495 l000000000040CEF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CED2:
	word64 rax_513 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEE9:
	rdx_504 = rdx_504 + 0x0000000000000001
	Mem522[rdx_504 - 0x0000000000000001:byte] = 0x20
	branch rsi_505 != rax_513 l000000000040CEE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEE0:
	rax_513 = rax_513 + 0x0000000000000001
	branch rdx_504 == rbx_441 l000000000040CEF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEF6:
	Mem529[rdx_504:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEF9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040CEFF:
	free(qwLoc58_592)
	free(rbp_125)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040CDC0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D240(word32 edx, word64 rsi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] fs:[0..15] rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rcx rdi rsp
fn000000000040D240_entry:
	word64 rdx_281 = DPB(rdx, edx, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D240:
	word64 rax_185
	word64 rax_29 = Mem26[fs:0x00000028:word64]
	word32 r15d_39 = (word32) (uint64) edx
	word64 r13_16 = rdi + rsi
	word64 rbp_128 = rdi
	word64 rax_106 = (uint64) __ctype_get_mb_cur_max()
	branch rax_106 <=u 0x0000000000000001 l000000000040D370
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D370:
	branch rdi >=u r13_16 l000000000040D406
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D379:
	word64 rcx_41 = Mem30[__ctype_b_loc():word64]
	word64 rax_42 = 0x0000000000000000
	word32 eax_288 = 0x00000000
	word32 esi_45 = (word32) (uint64) ((word32) (uint64) r15d_39 & 0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D398:
	rbp_128 = rbp_128 + 0x0000000000000001
	word32 edx_55 = (word32) Mem30[rcx_41 + DPB(rdx_281, (word32) Mem30[rbp_128 - 0x0000000000000001:byte], 0) * 0x0000000000000002:word16]
	rax_42 = DPB(rax_42, eax_288, 0) (alias)
	rdx_281 = DPB(rdx_281, edx_55, 0) (alias)
	branch (SLICE(edx_55, byte, 8) & 0x40) != 0x00 l000000000040D3B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3A9:
	branch esi_45 != 0x00000000 l000000000040D369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3AD:
	rdx_281 = (uint64) (edx_55 & 0x00000002)
	branch (word32) rdx_281 != 0x00000000 l000000000040D393
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3B2:
	branch eax_288 != 0x7FFFFFFF l000000000040D390
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D390:
	rax_42 = (uint64) (eax_288 + 0x00000001)
	eax_288 = (word32) rax_42 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D393:
	rax_185 = DPB(rax_42, eax_288, 0) (alias)
	branch rbp_128 == r13_16 l000000000040D3C5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3B9:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D277:
	branch rdi >=u r13_16 l000000000040D406
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D406:
	rax_185 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D280:
	word32 r12d_143 = 0x00000000
	word32 r15d_310 = (word32) (uint64) (r15d_39 & 0x00000001)
	word32 r14d_94 = (word32) (uint64) ((word32) (uint64) r15d_39 & 0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2AC:
	word32 eax_99 = (word32) Mem98[rbp_128:byte]
	byte al_100 = (byte) eax_99
	word32 eax_105 = DPB(eax_99, al_100, 0)
	word32 eax_115 = DPB(eax_99, al_100, 0)
	rax_106 = DPB(rax_106, al_100, 0) (alias)
	rax_106 = DPB(rax_106, al_100, 0) (alias)
	rax_106 = DPB(rax_106, al_100, 0) (alias)
	branch al_100 <= 0x3F l000000000040D290
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D290:
	branch al_100 >= 0x25 l000000000040D29B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D294:
	rax_106 = (uint64) (eax_105 - 0x00000020)
	branch (byte) rax_106 >u 0x03 l000000000040D2C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2B4:
	branch al_100 < 0x41 l000000000040D2C3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2B8:
	branch al_100 <= 0x5F l000000000040D29B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2BC:
	rax_106 = (uint64) (eax_115 - 0x00000061)
	branch (byte) rax_106 <=u 0x1D l000000000040D29B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2C3:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2F4:
	rax_106 = DPB(rax_106, mbrtowc(fp - 0x000000000000004C, rbp_128, r13_16 - rbp_128, fp - 0x0000000000000048), 0) (alias)
	word64 rbx_135 = rax_106
	branch rax_106 == 0xFFFFFFFFFFFFFFFF l000000000040D360
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D360:
	Mem236 = Mem122
	branch r15d_310 == 0x00000000 l000000000040D29B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D29B:
	rbp_128 = rbp_128 + 0x0000000000000001
	r12d_143 = (word32) (uint64) (r12d_143 + 0x00000001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D315:
	branch rax_106 == 0xFFFFFFFFFFFFFFFE l000000000040D3E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3E8:
	branch r15d_310 != 0x00000000 l000000000040D369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3F1:
	rbp_128 = r13_16
	r12d_143 = (word32) (uint64) (r12d_143 + 0x00000001) (alias)
	Mem98 = Mem122
	branch true l000000000040D2AC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D31F:
	word64 rdi_159 = (uint64) dwLoc4C
	branch rax_106 != 0x0000000000000000 l000000000040D32F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D32B_1:
	rbx_135 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D32F:
	word32 eax_166 = wcwidth(rdi_159)
	word64 rax_301 = DPB(0x0000000000000001, eax_166, 0)
	word64 rax_299 = DPB(rax_301, eax_166, 0)
	branch eax_166 >= 0x00000000 l000000000040D2D0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2D0:
	branch eax_166 > (word32) ((uint64) (0x7FFFFFFF - r12d_143)) l000000000040D3C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2E0:
	r12d_143 = (word32) (uint64) (r12d_143 + eax_166) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D338:
	branch r14d_94 != 0x00000000 l000000000040D369
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D369:
	rax_185 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D33D:
	word32 eax_189 = iswcntrl((uint64) dwLoc4C)
	rax_299 = DPB(rax_301, eax_189, 0) (alias)
	branch eax_189 != 0x00000000 l000000000040D2E3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D34A:
	branch r12d_143 == 0x7FFFFFFF l000000000040D3C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3C0:
	rax_185 = 0x000000007FFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D353:
	r12d_143 = (word32) (uint64) (r12d_143 + 0x00000001) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2E3:
	word32 eax_206 = mbsinit(fp - 0x0000000000000048)
	rbp_128 = rbp_128 + rbx_135
	rax_106 = DPB(rax_299, eax_206, 0) (alias)
	Mem235 = Mem122
	branch eax_206 != 0x00000000 l000000000040D2A3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D2A3:
	branch r13_16 <=u rbp_128 l000000000040D401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D401:
	rax_185 = (uint64) r12d_143
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3C5:
	branch (rax_29 ^ Mem233[fs:0x00000028:word64]) != 0x0000000000000000 l000000000040D40A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D40A:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D3D5:
	return rax_185
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D240_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D420(word64 rax, word32 esi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi:[0..31] fs:[0..15] rax:[32..63] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi
// Preserved: rbp rbx rdi rsp
fn000000000040D420_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D420:
	word64 rax_25 = DPB(rax, strlen(rdi), 0)
	word32 edx_27 = (word32) (uint64) (word32) (uint64) esi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D43E_thunk_fn000000000040D240:
	return fn000000000040D240(edx_27, rax_25, rdi, fs)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D420_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D450(word64 rax, word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & rcxOut, ptr64 & rdxOut, ptr64 & rspOut, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] rax:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r12 r13 r14 r15 rax rcx rdx rsp
// Trashed: SCZO r12 r13 r14 r15 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040D450_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D450:
	word64 qwLoc30_289 = rbx
	word64 rsp_139 = fp - 0x0000000000000068
	branch rsi >u 0x0000000000000002 l000000000040D490
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D490:
	word64 r12_138
	word64 rax_38 = rdi + (rsi >>u 0x0000000000000001) * 0x0000000000000008
	fn000000000040D450(rax_38, rcx, rdx, rdi, rcx, rsi - (rsi >>u 0x0000000000000001), rax_38, r12, r13, r14, rsi >>u 0x0000000000000001, out rcx, out rdx, out rsp_422, out r12_423, out r13_424, out r14_425, out r15_426)
	word64 qwLoc40_293 = rax_38
	rsp_139 = fp - 0x0000000000000060
	branch rsi >>u 0x0000000000000001 == 0x0000000000000001 l000000000040D570
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D570:
	r12_138 = Mem42[rdi:word64]
	Mem54[qwLoc48:word64] = r12_138
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D4C5:
	word64 r13_61 = rdi + (rsi >>u 0x0000000000000003) * 0x0000000000000008
	word64 rdx_102
	word64 rax_104 = fn000000000040D450(fn000000000040D450(rsi >>u 0x0000000000000003, rcx, qwLoc48, rdi, rcx, qwLoc58 - (rsi >>u 0x0000000000000003), r13_61, r12, r13_61, rsi >>u 0x0000000000000003, qwLoc48, out rcx_427, out rdx_428, out rsp_429, out r12_430, out r13_431, out r14_432, out r15_433), rcx, qwLoc48, rdi, rcx, rsi >>u 0x0000000000000003, rdi, r12, r13_61, rsi >>u 0x0000000000000003, qwLoc48 + 0x0000000000000008, out rcx, out rdx_102, out rsp_434, out r12_435, out r13_436, out r14_437, out r15_438)
	word64 r14_110 = rsi >>u 0x0000000000000003
	word64 r15_208 = qwLoc48 + 0x0000000000000008
	rsp_139 = fp - 0x0000000000000050
	word64 r12_206 = Mem65[rdi:word64]
	word64 r13_115 = Mem65[r13_61:word64]
	qwLoc40_293 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D53B:
	call rcx (retsize: 8;)
		uses: rax:rax_104,rcx:rcx_97,rdi:r12_91,rdx:rdx_102,rsi:r13_89,Stack +0000:qwLoc58,Stack +0008:rdx,Stack +0010:qwLoc48,Stack +0018:qwLoc40_307,Stack +0020:qwLoc38,Stack +0028:rbx,Stack +0030:rbp,Stack +0038:r12,Stack +0040:r13,Stack +0048:r14,Stack +0050:r15,Stack +FFFFFFF0:rsi,Stack +FFFFFFF8:rsi >>u 0x0000000000000001
		defs: rax:rax_105,rcx:rcx_98,rdx:rdx_103
	branch (word32) rax_104 > 0x00000000 l000000000040D520
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D520:
	Mem113[r15_208 - 0x0000000000000008:word64] = r13_115
	r14_110 = r14_110 + 0x0000000000000001
	branch qwLoc48 == r14_110 l000000000040D634
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D533:
	r13_115 = Mem113[rdi + r14_110 * 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D547:
	word64 v21_116 = qwLoc40_293 + 0x0000000000000001
	Mem118[r15_208 - 0x0000000000000008:word64] = r12_206
	qwLoc40_293 = v21_116
	rax_104 = v21_116
	branch rbx == v21_116 l000000000040D625
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D625:
	qwLoc40_293 = r14_110
	qwLoc30_289 = qwLoc48
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D634:
	word64 rdx_131 = qwLoc30_289 - qwLoc40_293
	memcpy(r15_208, rdi + qwLoc40_293 * 0x0000000000000008, rdx_131 << 0x0000000000000003)
	rdx = rdx_131 << 0x0000000000000003
	r12_138 = Mem126[qwLoc38:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D57B:
	rax = Mem140[rsp_139 + 0x0000000000000028:word64]
	word64 r14_142 = Mem140[rsp_139 + 0x0000000000000008:word64]
	Mem144[rsp_139 + 0x0000000000000010:word64] = 0x0000000000000000
	word64 r15_143 = 0x0000000000000001
	word64 r13_145 = Mem144[rax:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5B7:
	call rcx (retsize: 8;)
		uses: rax:rax_161,rcx:rcx_154,rdi:r12_148,rdx:rdx_159,rsi:r13_146,Stack +0000:r15,Stack +FFFFFFA0:rsi,Stack +FFFFFFA8:rsi >>u 0x0000000000000001,Stack +FFFFFFB0:qwLoc58,Stack +FFFFFFB8:rdx,Stack +FFFFFFC0:qwLoc48,Stack +FFFFFFC8:qwLoc40_373,Stack +FFFFFFD0:qwLoc38,Stack +FFFFFFD8:qwLoc30_362,Stack +FFFFFFE0:rbp,Stack +FFFFFFE8:r12,Stack +FFFFFFF0:r13,Stack +FFFFFFF8:r14
		defs: rax:rax_162,rcx:rcx_155,rdx:rdx_160
	branch (word32) rax > 0x00000000 l000000000040D5A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5A0:
	Mem170[rdi - 0x0000000000000008 + r15_143 * 0x0000000000000008:word64] = r13_145
	r14_142 = r14_142 + 0x0000000000000001
	branch Mem168[rsp_139:word64] == r14_142 l000000000040D5F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5F0:
	word64 rax_172 = Mem170[rsp_139 + 0x0000000000000010:word64]
	word64 rsp_176 = rsp_139 + 0x0000000000000038
	word64 rcx_174 = Mem170[rsp_139 + 0x0000000000000018:word64]
	word64 r15_185 = Mem170[rsp_139 + 0x0000000000000008:word64] - rax_172
	word64 r12_181 = Mem170[rsp_176 + 16:word64]
	word64 r13_183 = Mem170[rsp_176 + 24:word64]
	word64 r14_188 = Mem170[rsp_176 + 32:word64]
	word64 r15_191 = Mem170[rsp_176 + 40:word64]
	word64 rax_193 = memcpy(rdi + r15_143 * 0x0000000000000008, rcx_174 + rax_172 * 0x0000000000000008, r15_185 * 0x0000000000000008)
	rcxOut = rcx_174
	rdxOut = r15_185 * 0x0000000000000008
	rspOut = rsp_176 + 48
	r12Out = r12_181
	r13Out = r13_183
	r14Out = r14_188
	r15Out = r15_191
	return rax_193
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5AF:
	r13_145 = Mem170[rdi + r14_142 * 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5C3:
	Mem196[rsp_139 + 0x0000000000000010:word64] = Mem168[rsp_139 + 0x0000000000000010:word64] + 0x0000000000000001
	Mem197[rdi - 0x0000000000000008 + r15_143 * 0x0000000000000008:word64] = r12_138
	rax = Mem197[rsp_139 + 0x0000000000000010:word64]
	branch Mem197[rsp_139 + 0x0000000000000008:word64] == rax l000000000040D479
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5DE:
	rcx = Mem197[rsp_139 + 0x0000000000000018:word64]
	r12_138 = Mem197[rcx + rax * 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D5B3:
	r15_143 = r15_143 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D561:
	r12_206 = Mem118[rdi + v21_116 * 0x0000000000000008:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D537:
	r15_208 = r15_208 + 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D473:
	branch rsi == 0x0000000000000002 l000000000040D660
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D660:
	word64 r13_211 = Mem30[rdi + 0x0000000000000008:word64]
	word64 r12_212 = Mem30[rdi:word64]
	call rcx (retsize: 8;)
		uses: rax:rax,rcx:rcx,rdi:r12_212,rdx:rdx,rsi:r13_211,Stack +0008:rsi,Stack +0010:qwLoc60,Stack +0018:qwLoc58,Stack +0020:rdx,Stack +0028:qwLoc48,Stack +0030:qwLoc40,Stack +0038:qwLoc38,Stack +0040:rbx,Stack +0048:rbp,Stack +0050:r12,Stack +0058:r13,Stack +0060:r14,Stack +0068:r15
		defs: rax:rax_220,rcx:rcx_215,rdx:rdx_218
	branch (word32) rax <= 0x00000000 l000000000040D479
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D677:
	Mem225[rdi:word64] = r13_211
	Mem226[rdi + 0x0000000000000008:word64] = r12_212
	rcxOut = rcx
	rdxOut = rdx
	rspOut = fp
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D479:
	word64 rsp_242 = rsp_139 + 0x0000000000000038
	word64 r12_249 = Mem244[rsp_242 + 16:word64]
	word64 r13_251 = Mem244[rsp_242 + 24:word64]
	word64 r14_253 = Mem244[rsp_242 + 32:word64]
	word64 r15_255 = Mem244[rsp_242 + 40:word64]
	rcxOut = rcx
	rdxOut = rdx
	rspOut = rsp_242 + 48
	r12Out = r12_249
	r13Out = r13_251
	r14Out = r14_253
	r15Out = r15_255
	return rax
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D450_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D690(word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] rbp:[0..63] rbx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r12 r13 r14 r15 rsp
// Trashed: SCZO r12 r13 r14 r15 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040D690_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D690:
	word64 rax_5 = rdi + rsi * 0x0000000000000008
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D69A_thunk_fn000000000040D450:
	word64 r12_15
	word64 r13_16
	word64 r14_17
	word64 r15_18
	word64 rsp_26
	fn000000000040D450(rax_5, rdx, rax_5, rbx, rbp, rsi, rdi, r12, r13, r14, r15, out rcx_35, out rdx_36, out rsp_26, out r12_15, out r13_16, out r14_17, out r15_18)
	r12Out = r12_15
	r13Out = r13_16
	r14Out = r14_17
	r15Out = r15_18
	return rsp_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D690_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040D6A0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn000000000040D6A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6A0:
	word64 rbx_57 = rdi
	branch rdi == 0x0000000000000000 l000000000040D713
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D713:
	fwrite(0x0000000000415FA0, 0x0000000000000001, 0x0000000000000037, Mem8[0x000000000061A650:word64])
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6A9:
	word64 rax_17 = strrchr(rdi, 0x000000000000002F)
	branch rax_17 == 0x0000000000000000 l000000000040D703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6B8:
	word64 rcx_23 = rax_17 + 0x0000000000000001 - rdi
	byte SCZO_24 = cond(rcx_23 - 0x0000000000000006)
	bool Z_37 = SLICE(SCZO_24, bool, 2)
	bool C_60 = SLICE(SCZO_24, bool, 2)
	branch rcx_23 <= 0x0000000000000006 l000000000040D703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6C8:
	word64 rsi_26 = rax_17 - 0x0000000000000006
	word64 rdi_27 = 0x0000000000415FD8
	word64 rcx_28 = 0x0000000000000007
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6D6:
	branch rcx_28 == 0x0000000000000000 l000000000040D6D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6D6_1:
	byte SCZO_33 = cond(Mem8[rsi_128:byte] - Mem8[rdi_129:byte])
	Z_37 = SLICE(SCZO_33, bool, 2) (alias)
	C_60 = SLICE(SCZO_33, bool, 2) (alias)
	rsi_26 = rsi_128 + 0x0000000000000001
	rdi_27 = rdi_129 + 0x0000000000000001
	rcx_28 = rcx_28 - 0x0000000000000001
	rsi_128 = rsi_26
	rdi_129 = rdi_27
	branch Mem8[rsi_128:byte] != Mem8[rdi_129:byte] l000000000040D6D6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6D8:
	byte CZ_58 = Z_37 | C_60
	branch Z_37 l000000000040D703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6DA:
	word64 rcx_41 = 0x0000000000000003
	word64 rsi_44 = rax_17 + 0x0000000000000001
	word64 rdi_45 = 0x0000000000415FE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6E7:
	branch rcx_41 == 0x0000000000000000 l000000000040D6E9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6E7_2:
	CZ_58 = SLICE(cond(Mem8[rsi_130:byte] - Mem8[rdi_131:byte]), bool, 2) (alias)
	rsi_44 = rsi_130 + 0x0000000000000001
	rdi_45 = rdi_131 + 0x0000000000000001
	rcx_41 = rcx_41 - 0x0000000000000001
	rsi_130 = rsi_44
	rdi_131 = rdi_45
	branch Mem8[rsi_130:byte] != Mem8[rdi_131:byte] l000000000040D6E7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6E9:
	rbx_57 = rax_17 + 0x0000000000000001
	branch CZ_58 != SLICE(CZ_58, bool, 1) l000000000040D703
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D6F8:
	Mem76[0x000000000061A600:word64] = rax_17 + 0x0000000000000004
	rbx_57 = rax_17 + 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D703:
	Mem80[0x000000000061B200:word64] = rbx_57
	Mem81[0x000000000061A648:word64] = rbx_57
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D6A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040D740(word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi:[0..31] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx
// Preserved: rsp
fn000000000040D740_entry:
	word32 dwLoc48_52 = SLICE(qwLoc48, word32, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D740:
	word64 rcx_11 = 0x0000000000000007
	word64 rdi_35 = fp - 0x0000000000000048
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D754:
	dwLoc48_52 = SLICE(dwLoc48_52, word32, 0) (alias)
	qwLoc48_54 = SEQ(dwLoc44_42, dwLoc48_52)
	word32 dwLoc44_42 = SLICE(qwLoc48, word32, 32)
	branch rcx_11 == 0x0000000000000000 l000000000040D757
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D757:
	branch esi == 0x00000008 l000000000040D7A1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7A1:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D759:
	Mem18[rdi:word64] = SEQ(dwLoc44_42, esi)
	Mem20[rdi + 0x0000000000000008:word64] = qwLoc40
	Mem22[rdi + 0x0000000000000010:word64] = qwLoc38
	Mem24[rdi + 0x0000000000000018:word64] = qwLoc30
	Mem26[rdi + 0x0000000000000020:word64] = qwLoc28
	Mem28[rdi + 0x0000000000000028:word64] = qwLoc20
	Mem30[rdi + 0x0000000000000030:word64] = qwLoc18
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D740_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D754_1:
	Mem36[rdi_35:word64] = 0x0000000000000000
	rdi_35 = rdi_35 + 0x0000000000000008
	rcx_11 = rcx_11 - 0x0000000000000001
	qwLoc48 = qwLoc48_54
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D7B0(word64 rdi, selector fs, ptr64 & rcxOut, ptr64 & rdxOut, ptr64 & rspOut, ptr64 & rsiOut, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] rdi:[0..63]
// LiveOut: r12 r13 r15 rax rcx rdx rsi rsp
// Trashed: SCZO r12 r13 r14 r15 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040D7B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7B0:
	word64 rax_23 = dcgettext(0x0000000000000000, rdi, 0x0000000000000005)
	word64 rdx_153 = 0x0000000000000005
	word64 rsp_22 = fp - 0x0000000000000028
	word64 rbx_106 = rax_23
	branch rax_23 == rdi l000000000040D7E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7E8:
	word64 rbx_33
	rcx = fn0000000000411900(fs, out rbx_33, out rsp_22, out r12d_173, out r15)
	word64 rdx_42 = (uint64) ((word32) Mem21[rax_23:byte] & 0xFFFFFFDF)
	word64 r12_28 = <invalid>
	byte dl_43 = (byte) rdx_42
	word32 r12d_89 = (word32) r12_28
	rdx_153 = DPB(rdx_42, dl_43, 0) (alias)
	branch dl_43 != 0x55 l000000000040D850
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D850:
	branch dl_43 != 0x47 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D855:
	rdx_153 = (uint64) ((word32) Mem21[rax_23 + 0x0000000000000001:byte] & 0xFFFFFFDF)
	branch (byte) rdx_153 != 0x42 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D861:
	branch Mem21[rax_23 + 0x0000000000000002:byte] != 0x31 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D867:
	branch Mem21[rax_23 + 0x0000000000000003:byte] != 0x38 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D86D:
	branch Mem21[rax_23 + 0x0000000000000004:byte] != 0x30 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D873:
	branch Mem21[rax_23 + 0x0000000000000005:byte] != 0x33 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D879:
	branch Mem21[rax_23 + 0x0000000000000006:byte] != 0x30 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D87F:
	branch Mem21[rax_23 + 0x0000000000000007:byte] != 0x00 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D885:
	rbx_106 = 0x0000000000415FED
	branch Mem21[rbx_33:byte] == 0x60 l000000000040D89B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D897_1:
	rbx_106 = 0x0000000000415FE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D89B:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7F8:
	rdx_153 = (uint64) ((word32) Mem21[rax_23 + 0x0000000000000001:byte] & 0xFFFFFFDF)
	branch (byte) rdx_153 != 0x54 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D804:
	rdx_153 = (uint64) ((word32) Mem21[rax_23 + 0x0000000000000002:byte] & 0xFFFFFFDF)
	branch (byte) rdx_153 != 0x46 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D810:
	branch Mem21[rax_23 + 0x0000000000000003:byte] != 0x2D l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D816:
	branch Mem21[rax_23 + 0x0000000000000004:byte] != 0x38 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D81C:
	branch Mem21[rax_23 + 0x0000000000000005:byte] != 0x00 l000000000040D838
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D838:
	rbx_106 = 0x0000000000415FEB
	branch r12d_89 == 0x00000007 l000000000040D84A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D846_1:
	rbx_106 = 0x0000000000416DEA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D84A:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D822:
	rbx_106 = 0x0000000000415FE4
	branch Mem21[rbx_33:byte] != 0x60 l000000000040D833
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D82F_1:
	rbx_106 = 0x0000000000415FF1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D833:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D7D7:
	word64 rsp_104 = rsp_22 + 0x0000000000000008
	word64 r12_120 = Mem21[rsp_104 + 16:word64]
	word64 r13_122 = Mem21[rsp_104 + 24:word64]
	rcxOut = rcx
	rdxOut = rdx_153
	rspOut = rsp_104 + 32
	rsiOut = rdi
	r12Out = r12_120
	r13Out = r13_122
	r15Out = r15
	return rbx_106
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D7B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040D8A0(word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word32 r8d, word32 r9d, word64 r10, word64 r12, word64 r13, word64 r14, word64 r15, selector fs, word64 qwArg08, word64 qwArg10, word64 qwArg18, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & rsiOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8d:[0..31] r9d:[0..31] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63] Stack +0008:[0..63] Stack +0010:[0..63] Stack +0018:[0..63]
// LiveOut: r10 r12 r13 r14 r15 r8 r9 rax rbp rbx rsi rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved: fs
fn000000000040D8A0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D8A0:
	word64 qwLoc40_1416 = Mem41[fs:0x00000028:word64]
	byte al_57 = (byte) (uint64) ((word32) (uint64) ((word32) (uint64) (word32) (uint64) r9d >>u 0x00000001) & 0x00000001)
	word64 qwLoc08_1400 = r15
	word64 r15_1386 = rcx
	word64 qwLoc10_1401 = r14
	word32 r14d_55 = (word32) (uint64) r8d
	word64 qwLoc18_1402 = r13
	word64 r13_17 = rdx
	word64 qwLoc20_1403 = r12
	word64 qwLoc28_1404 = rbp
	word64 qwLoc30_1405 = rbx
	word64 rsp_104 = fp - 248
	word64 qwLocD0_1407 = rdi
	word56 nLocD7_1747 = SLICE(rsi, word56, 8)
	word32 dwLocC4_1409 = r8d
	word32 dwLoc68_1410 = r9d
	word64 qwLocA0_1411 = qwArg08
	word64 qwLoc88_1413 = qwArg10
	word64 qwLoc90_1415 = qwArg18
	word64 qwLoc80_1417 = (uint64) __ctype_get_mb_cur_max()
	byte bLocC5_1418 = al_57
	branch r14d_55 >u 0x00000008 l000000000040E280
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E280:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D92D:
	word64 rbx_1029
	word64 r14_163
	word64 rax_153 = (uint64) r14d_55
	word64 r11_109 = rsi
	switch (r14d_55) { l000000000040D940 l000000000040E070 l000000000040DF10 l000000000040DF50 l000000000040DFB0 l000000000040DF90 l000000000040DFE0 l000000000040DFE0 l000000000040DFE0 }
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DFE0:
	branch r14d_55 == 0x00000008 l000000000040E012
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DFE2:
	word64 rsp_84
	Mem92[rsp_84 + 0x0000000000000070:word64] = fn000000000040D7B0(0x0000000000415FF5, fs, out rcx_2375, out rdx_2376, out rsp_84, out rsi_2377, out r12_2378, out r13_2379, out r15_2380)
	rax_153 = fn000000000040D7B0(0x0000000000416DEA, fs, out rcx, out rdx, out rsp_104, out rsi, out r12, out r13_17, out r15_1386)
	r11_109 = Mem92[rsp_104 + 0x0000000000000020:word64]
	Mem110[rsp_104 + 0x0000000000000068:word64] = rax_153
	nLocD7_1747 = SLICE(rsi, word56, 8) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E012:
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	rbx_1029 = 0x0000000000000000
	branch Mem113[rsp_104 + 0x0000000000000033:byte] != 0x00 l000000000040E044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E01B:
	rdx = Mem113[rsp_104 + 0x0000000000000070:word64]
	word32 eax_117 = (word32) Mem113[rdx:byte]
	rax_153 = DPB(rax_153, eax_117, 0) (alias)
	byte al_127 = (byte) eax_117
	branch (byte) eax_117 == 0x00 l000000000040E044
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E027:
	rcx = Mem113[rsp_104 + 0x0000000000000028:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E030:
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	rax_153 = DPB(rax_153, al_127, 0) (alias)
	rax_153 = DPB(rax_153, al_127, 0) (alias)
	branch rbx_1029 >=u r11_109 l000000000040E038
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E035:
	Mem129[rcx + rbx_1029:byte] = al_127
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E038:
	rbx_1029 = rbx_1029 + 0x0000000000000001
	word32 eax_136 = (word32) Mem134[rdx + rbx_1029:byte]
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	al_127 = (byte) eax_136 (alias)
	rax_153 = DPB(rax_153, eax_136, 0) (alias)
	branch al_127 != 0x00 l000000000040E030
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E044:
	word64 rbp_145 = Mem144[rsp_104 + 0x0000000000000068:word64]
	Mem149[rsp_104 + 0x0000000000000038:word64] = r11_109
	word64 rax_162 = DPB(rax_153, strlen(rbp_145), 0)
	Mem152[rsp_104 + 0x0000000000000060:word64] = rbp_145
	Mem164[rsp_104 + 0x0000000000000020:byte] = 0x01
	rdi = rbp_145
	r14_163 = rax_162
	r11_109 = Mem164[rsp_104 + 0x0000000000000038:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF90:
	bLocC5_1418 = 0x00
	r14_163 = 0x0000000000000000
	qwLoc98 = 0x0000000000000000
	rbx_1029 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DFB0:
	bLocC5_1418 = 0x01
	r14_163 = 0x0000000000000001
	qwLoc98 = 0x0000000000415FEB
	rbx_1029 = 0x0000000000000000
	dwLocC4_1409 = 0x00000003
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF50:
	branch al_57 != 0x00 l000000000040E428
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E428:
	r14_163 = 0x0000000000000001
	qwLoc98 = 0x0000000000415FEB
	rbx_1029 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF5B:
	branch rsi == 0x0000000000000000 l000000000040E2B3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E2B3:
	r14_163 = 0x0000000000000001
	qwLoc98 = 0x0000000000415FEB
	rbx_1029 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF64:
	Mem204[rdi:byte] = 0x22
	r14_163 = 0x0000000000000001
	qwLoc98 = 0x0000000000415FEB
	rbx_1029 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF10:
	branch al_57 != 0x00 l000000000040E408
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E408:
	r14_163 = 0x0000000000000001
	qwLoc98 = 0x0000000000416DEA
	rbx_1029 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF1B:
	branch rsi == 0x0000000000000000 l000000000040E2D1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E2D1:
	r14_163 = 0x0000000000000001
	qwLoc98 = 0x0000000000416DEA
	rbx_1029 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF24:
	Mem226[rdi:byte] = 0x27
	r14_163 = 0x0000000000000001
	qwLoc98 = 0x0000000000416DEA
	rbx_1029 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E070:
	bLocC5_1418 = 0x01
	r14_163 = 0x0000000000000001
	qwLoc98 = 0x0000000000416DEA
	rbx_1029 = 0x0000000000000000
	dwLocC4_1409 = 0x00000002
	nLocD7_1747 = SEQ(nLocD7_1747, 0x00)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D940:
	bLocC5_1418 = 0x00
	r14_163 = 0x0000000000000000
	qwLoc98 = 0x0000000000000000
	rbx_1029 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D960:
	word64 rax_1032
	word64 r11_499
	word64 r13_394
	word64 rax_1333
	word32 ecx_1320
	Mem261[rsp_104 + 0x0000000000000038:byte] = (byte) (uint64) ((word32) Mem245[rsp_104 + 0x0000000000000033:byte] ^ 0x00000001)
	word64 rax_263 = (uint64) ((word32) Mem261[rsp_104 + 0x0000000000000020:byte] ^ 0x00000001)
	Mem265[rsp_104 + 0x0000000000000095:byte] = (byte) rax_263
	byte al_274 = r15_1386 != 0x0000000000000000
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	byte bLocD8_2212 = SLICE(nLocD7_1747, byte, 0)
	word64 r9_1031 = r14_163
	word64 rbp_1025 = 0x0000000000000000
	word64 r14_1371 = r11_109
	word64 r8_1373 = r13_17
	word64 rax_1322 = DPB(rax_263, al_274, 0)
	rax_1322 = DPB(rax_263, al_274, 0) (alias)
	branch r15_1386 == 0xFFFFFFFFFFFFFFFF l000000000040DB76
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D996:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9A0:
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	bLocD8_2212 = SLICE(nLocD7_1747, byte, 0) (alias)
	ecx_1320 = (word32) rcx (alias)
	rax_1333 = DPB(rax_1322, al_274, 0) (alias)
	branch al_274 == 0x00 l000000000040DB86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9A8:
	word64 r11_1293
	word32 r11d_300
	word64 r13_298
	byte cl_285 = r9_1031 != 0x0000000000000000
	word32 ecx_307 = DPB(ecx_1320, cl_285, 0)
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	rcx = DPB(rcx, cl_285, 0) (alias)
	rcx = DPB(rcx, ecx_307, 0) (alias)
	rcx = DPB(rcx, ecx_307, 0) (alias)
	branch r9_1031 == 0x0000000000000000 l000000000040E0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9B4:
	branch Mem287[rsp_104 + 0x0000000000000020:byte] == 0x00 l000000000040E0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9BF:
	rax_1333 = rbp_1025 + r9_1031
	branch r15_1386 <u rax_1333 l000000000040E0A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E0A0:
	r13_298 = r8_1373 + rbp_1025
	r11_1293 = 0x0000000000000000
	r11d_300 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040D9CD:
	rsi = Mem287[rsp_104 + 0x0000000000000060:word64]
	Mem308[rsp_104 + 0x0000000000000050:word32] = ecx_307
	Mem309[rsp_104 + 0x0000000000000048:word64] = r8_1373
	r13_298 = r8_1373 + rbp_1025
	Mem311[rsp_104 + 0x0000000000000040:word64] = r9_1031
	word32 eax_312 = memcmp(r13_298, rsi, r9_1031)
	rdx = r9_1031
	rdi = r13_298
	rax_1333 = DPB(rax_1333, eax_312, 0) (alias)
	r9_1031 = Mem311[rsp_104 + 0x0000000000000040:word64]
	r8_1373 = Mem311[rsp_104 + 0x0000000000000048:word64]
	rcx = (uint64) Mem311[rsp_104 + 0x0000000000000050:word32]
	branch eax_312 != 0x00000000 l000000000040E0B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E0B0:
	r11_1293 = 0x0000000000000000
	r11d_300 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DA05:
	branch Mem311[rsp_104 + 0x0000000000000033:byte] != 0x00 l000000000040DC40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DA10:
	r11_1293 = 0x0000000000000001
	r11d_300 = 0x00000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DA20:
	word32 r12d_329 = (word32) Mem327[r13_298:byte]
	byte r12b_330 = (byte) r12d_329
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	byte r11b_384 = (byte) r11d_300
	word64 r11_1294 = DPB(r11_1293, r11d_300, 0)
	word32 r12d_1194 = DPB(r12d_329, r12b_330, 0)
	word64 r12_959 = DPB(r12, r12b_330, 0)
	word64 r12_1233 = DPB(r12, r12b_330, 0)
	branch r12b_330 >u 0x7E l000000000040DE18
	word64 qwLocD8_2256 = SEQ(nLocD7_1747, bLocD8_2212)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE18:
	word64 r12_1388
	byte r11b_1377
	word64 rdx_1349
	word64 rax_1325
	word64 r12_1011
	byte r12b_830
	byte dl_563
	branch Mem327[rsp_104 + 0x0000000000000078:word64] != 0x0000000000000001 l000000000040E0C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E0C0:
	Mem340[rsp_104 + 0x00000000000000B0:word64] = 0x0000000000000000
	branch r15_1386 == 0xFFFFFFFFFFFFFFFF l000000000040E285
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E285:
	Mem346[rsp_104 + 0x0000000000000050:word64] = r9_1031
	Mem349[rsp_104 + 0x0000000000000048:word32] = r11d_300
	Mem350[rsp_104 + 0x0000000000000040:word64] = r8_1373
	word64 rax_357 = DPB(rax_1333, strlen(r8_1373), 0)
	r9_1031 = Mem350[rsp_104 + 0x0000000000000050:word64]
	r15_1386 = rax_357
	r11b_384 = (byte) (uint64) Mem350[rsp_104 + 0x0000000000000048:word32] (alias)
	r8_1373 = Mem350[rsp_104 + 0x0000000000000040:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E0D6:
	Mem371[rsp_104 + 0x0000000000000080:word64] = rbx_1029
	Mem373[rsp_104 + 0x0000000000000096:byte] = r12b_330
	Mem375[rsp_104 + 0x0000000000000098:word64] = r13_298
	Mem379[rsp_104 + 0x0000000000000048:word64] = rbp_1025
	Mem381[rsp_104 + 0x0000000000000088:word64] = r9_1031
	Mem387[rsp_104 + 0x0000000000000097:byte] = r11b_384
	Mem392[rsp_104 + 0x0000000000000050:word64] = r14_1371
	Mem396[rsp_104 + 0x0000000000000040:word64] = r15_1386
	rbx_1029 = 0x0000000000000000
	word64 r12_383 = 0x0000000000000001
	word32 r12d_1336 = 0x00000001
	r13_394 = r8_1373
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E11D:
	word64 rdx_1350
	word64 r12_967
	word64 rax_399 = Mem396[rsp_104 + 0x0000000000000048:word64]
	r14_1371 = rbx_1029 + rax_399
	word64 r15_406 = r8_1373 + r14_1371
	rcx = rsp_104 + 0x00000000000000B0
	rdi = rsp_104 + 0x00000000000000AC
	word64 rax_410 = DPB(rax_399, mbrtowc(rdi, r15_406, Mem396[rsp_104 + 0x0000000000000040:word64] - r14_1371, rcx), 0)
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	word64 r12_969 = DPB(r12_383, r12d_1336, 0)
	r12_969 = DPB(r12_383, r12d_1336, 0) (alias)
	r12_969 = DPB(r12_383, r12d_1336, 0) (alias)
	word64 r12_977 = DPB(r12_383, r12d_1336, 0)
	r12_980 = DPB(r12_977, r12d_1336, 0) (alias)
	r12 = DPB(r12_977, r12d_1336, 0) (alias)
	r12_969 = DPB(r12_977, r12d_1336, 0) (alias)
	r12_383 = DPB(r12_969, r12d_1336, 0) (alias)
	rsi = r15_406
	rbp_1025 = rax_410
	branch rax_410 == 0x0000000000000000 l000000000040E30E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E30E:
	r12d_1194 = (word32) Mem396[rsp_104 + 0x0000000000000096:byte]
	rdx_1350 = (uint64) ((word32) (uint64) r12d_1336 ^ 0x00000001)
	rax_1325 = rbx_1029
	rbp_1025 = Mem396[rsp_104 + 0x0000000000000048:word64]
	r9_1031 = Mem396[rsp_104 + 0x0000000000000088:word64]
	r11b_1377 = (byte) (word32) Mem396[rsp_104 + 0x0000000000000097:byte] (alias)
	rbx_1029 = Mem396[rsp_104 + 0x0000000000000080:word64]
	r12_967 = DPB(r12_383, r12d_1194, 0) (alias)
	dl_563 = (byte) rdx_1350 (alias)
	r14_1371 = Mem396[rsp_104 + 0x0000000000000050:word64]
	r15_1386 = Mem396[rsp_104 + 0x0000000000000040:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E157:
	branch rax_410 == 0xFFFFFFFFFFFFFFFF l000000000040E350
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E350:
	r12d_1194 = (word32) Mem396[rsp_104 + 0x0000000000000096:byte]
	rax_1325 = rbx_1029
	rbp_1025 = Mem396[rsp_104 + 0x0000000000000048:word64]
	r9_1031 = Mem396[rsp_104 + 0x0000000000000088:word64]
	r12_967 = DPB(r12_383, r12d_1194, 0) (alias)
	r11b_1377 = (byte) (word32) Mem396[rsp_104 + 0x0000000000000097:byte] (alias)
	rbx_1029 = Mem396[rsp_104 + 0x0000000000000080:word64]
	r14_1371 = Mem396[rsp_104 + 0x0000000000000050:word64]
	rdx_1350 = 0x0000000000000001
	dl_563 = 0x01 (alias)
	r15_1386 = Mem396[rsp_104 + 0x0000000000000040:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E161:
	branch rax_410 == 0xFFFFFFFFFFFFFFFE l000000000040E391
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E391:
	r12d_1194 = (word32) Mem396[rsp_104 + 0x0000000000000096:byte]
	r10 = r15_406
	r15_1386 = Mem396[rsp_104 + 0x0000000000000040:word64]
	rsi = r14_1371
	rax_1325 = rbx_1029
	rbp_1025 = Mem396[rsp_104 + 0x0000000000000048:word64]
	r9_1031 = Mem396[rsp_104 + 0x0000000000000088:word64]
	r12_989 = DPB(r12_383, r12d_1194, 0) (alias)
	word64 r12_989 = DPB(r12_383, r12d_1194, 0)
	r12_989 = DPB(r12_383, r12d_1194, 0) (alias)
	r12_989 = DPB(r12_989, r12d_1194, 0) (alias)
	r12_989 = DPB(r12_989, r12d_1194, 0) (alias)
	r12_967 = DPB(r12_989, r12d_1194, 0) (alias)
	r11b_1377 = (byte) (word32) Mem396[rsp_104 + 0x0000000000000097:byte] (alias)
	rbx_1029 = Mem396[rsp_104 + 0x0000000000000080:word64]
	r14_1371 = Mem396[rsp_104 + 0x0000000000000050:word64]
	word64 r13_457 = Mem396[rsp_104 + 0x0000000000000098:word64]
	branch r15_1386 <=u r14_1371 l000000000040E3FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3DB:
	r12_2391 = r12_989
	branch Mem396[r15_406:byte] != 0x00 l000000000040E3F0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3F0:
	rax_1325 = rax_1325 + 0x0000000000000001
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	branch r15_1386 >u rbp_1025 + rax_1325 l000000000040E3E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3E8:
	r12_2392 = r12_989
	branch Mem396[r13_457 + rax_1325:byte] == 0x00 l000000000040E3FE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3E1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E3FE:
	rdx_1350 = 0x0000000000000001
	dl_563 = 0x01 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E16B:
	branch Mem396[rsp_104 + 0x0000000000000033:byte] == 0x00 l000000000040E1BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E172:
	branch Mem396[rsp_104 + 0x0000000000000034:word32] != 0x00000002 l000000000040E1BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E179:
	branch rax_410 == 0x0000000000000001 l000000000040E1BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E17F:
	word64 rdx_479 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E190:
	rdi = DPB(rdi, (word32) Mem396[r15_406 + rdx_479:byte], 0) (alias)
	byte cl_488 = (byte) (rdi - 0x000000000000005B)
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	rcx = DPB(rcx, rdi - 0x000000000000005B, 0) (alias)
	rcx = DPB(rcx, cl_488, 0) (alias)
	r12_977 = r12_980
	branch cl_488 >u 0x21 l000000000040E1B6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E19D:
	rdi = 0x000000000000002B
	r12_977 = r12
	branch (0x0000000000000001 << cl_488 & 0x000000000000002B) != 0x0000000000000000 l000000000040E260
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E260:
	r11_499 = Mem396[rsp_104 + 0x0000000000000050:word64]
	r15_1386 = Mem396[rsp_104 + 0x0000000000000040:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1B6:
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	rdx_479 = rdx_479 + 0x0000000000000001
	r12_2390 = r12_977
	branch rdx_479 != rax_410 l000000000040E190
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1BF:
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	rdi = rsp_104 + 0x00000000000000B0
	branch iswprint((uint64) Mem396[rsp_104 + 0x00000000000000AC:word32]) != 0x00000000 l000000000040E1DE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1DA_1:
	r12d_1336 = 0x00000000
	r12_383 = DPB(r12_969, 0x00000000, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1DE:
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	rbx_1029 = rbx_1029 + rax_410
	branch mbsinit(rdi) == 0x00000000 l000000000040E11D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E1EE:
	rsi = (uint64) r12d_1336
	r12d_1194 = (word32) Mem396[rsp_104 + 0x0000000000000096:byte]
	rdx_1350 = (uint64) ((word32) (uint64) (word32) rsi ^ 0x00000001)
	r11b_1377 = (byte) (word32) Mem396[rsp_104 + 0x0000000000000097:byte] (alias)
	r12_967 = DPB(r12_383, r12d_1194, 0) (alias)
	rax_1325 = rbx_1029
	rbp_1025 = Mem396[rsp_104 + 0x0000000000000048:word64]
	r9_1031 = Mem396[rsp_104 + 0x0000000000000088:word64]
	rbx_1029 = Mem396[rsp_104 + 0x0000000000000080:word64]
	r14_1371 = Mem396[rsp_104 + 0x0000000000000050:word64]
	r15_1386 = Mem396[rsp_104 + 0x0000000000000040:word64]
	dl_563 = (byte) rdx_1350 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E22D:
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	r12_959 = DPB(r12_967, r12d_1194, 0) (alias)
	r12_1388 = DPB(r12_967, r12d_1194, 0) (alias)
	rdx_1349 = DPB(rdx_1350, dl_563, 0) (alias)
	branch rax_1325 <=u 0x0000000000000001 l000000000040DE61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E237:
	rdx = DPB(rdx_1350, dl_563 & Mem396[rsp_104 + 0x0000000000000020:byte], 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE24:
	Mem576[rsp_104 + 0x0000000000000050:word64] = r8_1373
	Mem577[rsp_104 + 0x0000000000000048:word64] = r9_1031
	Mem578[rsp_104 + 0x0000000000000040:word32] = r11d_300
	word32 edx_589 = (word32) Mem578[Mem578[__ctype_b_loc():word64] + DPB(rdx, (word32) r12b_330, 0) * 0x0000000000000002:word16]
	rdx_1349 = (uint64) ((word32) (uint64) (DPB(edx_589, (word16) edx_589 >>u 0x000E, 0) ^ 0x00000001) & 0x00000001)
	r11b_1377 = (byte) (uint64) Mem578[rsp_104 + 0x0000000000000040:word32] (alias)
	r9_1031 = Mem578[rsp_104 + 0x0000000000000048:word64]
	r8_1373 = Mem578[rsp_104 + 0x0000000000000050:word64]
	rax_1325 = 0x0000000000000001
	dl_563 = (byte) rdx_1349 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE61:
	byte dl_604 = dl_563 & Mem603[rsp_104 + 0x0000000000000020:byte]
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	r12b_830 = (byte) r12d_1194 (alias)
	r12b_830 = (byte) r12d_1194 (alias)
	r12b_830 = (byte) r12d_1194 (alias)
	r12_1388 = DPB(r12_959, r12d_1194, 0) (alias)
	word64 r12_1000 = DPB(r12_959, r12d_1194, 0)
	r12_1000 = DPB(r12_959, r12d_1194, 0) (alias)
	r12_1000 = DPB(r12_1000, r12d_1194, 0) (alias)
	r12_1000 = DPB(r12_1000, r12d_1194, 0) (alias)
	rdx = DPB(rdx_1349, dl_604, 0) (alias)
	branch dl_604 == 0x00 l000000000040DAF8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DAF8:
	r12_2393 = r12_1000
	branch Mem603[rsp_104 + 0x0000000000000038:byte] == 0x00 l000000000040DB09
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DAFF:
	r12_2394 = r12_1000
	branch Mem603[rsp_104 + 0x0000000000000095:byte] != 0x00 l000000000040DB2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB09:
	rdi = Mem603[rsp_104 + 0x0000000000000058:word64]
	branch rdi == 0x0000000000000000 l000000000040DB2E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB13:
	rcx = (uint64) ((word32) (uint64) r12d_1194 & 0x0000001F)
	word64 rdx_625 = (uint64) r12d_1194
	rax_1325 = (uint64) (0x00000001 << (byte) rcx)
	rdx = DPB(rdx_625, (word32) ((byte) rdx_625 >>u 0x05), 0) (alias)
	branch (Mem603[rdi + rdx * 0x0000000000000004:word32] & (word32) rax_1325) != 0x00000000 l000000000040DB33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB2E:
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	r12_1000 = DPB(r12_1000, r12b_830, 0) (alias)
	branch r11b_1377 == 0x00 l000000000040DB50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB33:
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	r12 = DPB(r12_1000, r12b_830, 0) (alias)
	word64 r12_1005 = DPB(r12_1000, r12b_830, 0)
	r12_1005 = DPB(r12_1000, r12b_830, 0) (alias)
	r12_1000 = DPB(r12_1005, r12b_830, 0) (alias)
	branch Mem603[rsp_104 + 0x0000000000000033:byte] != 0x00 l000000000040DC40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB3E:
	branch rbx_1029 >=u r14_1371 l000000000040DB4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB43:
	rax_1325 = Mem603[rsp_104 + 0x0000000000000028:word64]
	Mem678[rax_1325 + rbx_1029:byte] = 0x5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB4C:
	rbx_1029 = rbx_1029 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB50:
	r12_1011 = DPB(r12_1000, r12b_830, 0) (alias)
	rbp_1025 = rbp_1025 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE6B:
	word32 edi_699 = (word32) Mem698[rsp_104 + 0x0000000000000033:byte]
	word64 r12_1013 = DPB(r12_1388, r12d_1194, 0)
	byte dl_1367 = (byte) rdx
	rax_1325 = rax_1325 + rbp_1025
	rdi = DPB(rdi, edi_699, 0) (alias)
	byte dil_1369 = (byte) edi_699
	rcx = Mem698[rsp_104 + 0x0000000000000028:word64]
	nLocD7_1747 = SEQ(SLICE(nLocD7_1747, word56, 8), SLICE(bLocD8_2212, byte, 0))
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEF0:
	r12b_830 = (byte) r12d_1194 (alias)
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	word64 r12_1012 = DPB(r12_1013, r12b_830, 0)
	word64 r12_1016 = DPB(r12_1013, r12b_830, 0)
	r12_1016 = DPB(r12_1013, r12b_830, 0) (alias)
	r12_1012 = DPB(r12_1016, r12b_830, 0) (alias)
	r12 = DPB(r12_1013, r12d_1194, 0) (alias)
	rdi = DPB(rdi, dil_1369, 0) (alias)
	rdi = DPB(rdi, dil_1369, 0) (alias)
	rdx = DPB(rdx, dl_1367, 0) (alias)
	branch dl_1367 != 0x00 l000000000040DE80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE80:
	branch dil_1369 != 0x00 l000000000040DC40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DC40:
	r11_499 = r14_1371
	r13_394 = r8_1373
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE89:
	branch rbx_1029 >=u r14_1371 l000000000040DE92
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE8E:
	Mem726[rcx + rbx_1029:byte] = 0x5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE92:
	branch r14_1371 <=u rbx_1029 + 0x0000000000000001 l000000000040DEAA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DE9B:
	word64 rsi_734 = (uint64) r12d_1194
	Mem744[rcx + 0x0000000000000001 + rbx_1029:byte] = (byte) (uint64) (DPB((word32) rsi_734, (byte) rsi_734 >>u 0x06, 0) + 0x00000030)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEAA:
	rsi = rbx_1029 + 0x0000000000000002
	branch r14_1371 <=u rsi l000000000040DEC5
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEB3:
	word64 rsi_751 = (uint64) r12d_1194
	rsi = (uint64) ((word32) (uint64) (DPB((word32) rsi_751, (byte) rsi_751 >>u 0x03, 0) & 0x00000007) + 0x00000030)
	Mem763[rcx + 0x0000000000000002 + rbx_1029:byte] = (byte) rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEC5:
	r12_1012 = (uint64) ((word32) (uint64) (r12d_1194 & 0x00000007) + 0x00000030)
	rbx_1029 = rbx_1029 + 0x0000000000000003
	r12b_830 = (byte) r12_1012 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEF4:
	branch r11b_1377 == 0x00 l000000000040DED1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEF9:
	branch rbx_1029 >=u r14_1371 l000000000040DF02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEFE:
	Mem778[rcx + rbx_1029:byte] = 0x5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DF02:
	rbx_1029 = rbx_1029 + 0x0000000000000001
	r11b_1377 = 0x00 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DED1:
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	dil_1369 = (byte) rdi (alias)
	r12_1011 = DPB(r12_1012, r12b_830, 0) (alias)
	word64 r12_1391 = DPB(r12_1012, r12b_830, 0)
	r12_1391 = DPB(r12_1012, r12b_830, 0) (alias)
	rbp_1025 = rbp_1025 + 0x0000000000000001
	branch rax_1325 <=u rbp_1025 l000000000040DB54
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB54:
	bLocD8_2212 = SLICE(bLocD8_2212, byte, 0) (alias)
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	r12 = DPB(r12_1011, r12b_830, 0) (alias)
	r12 = DPB(r12_1011, r12b_830, 0) (alias)
	branch rbx_1029 >=u r14_1371 l000000000040DB62
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB59:
	rax_1325 = Mem820[rsp_104 + 0x0000000000000028:word64]
	Mem842[rax_1325 + rbx_1029:byte] = r12b_830
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB62:
	al_274 = rbp_1025 != r15_1386
	nLocD7_1747 = SLICE(nLocD7_1747, word56, 8) (alias)
	rbx_1029 = rbx_1029 + 0x0000000000000001
	rax_1322 = DPB(rax_1325, al_274, 0) (alias)
	branch r15_1386 != 0xFFFFFFFFFFFFFFFF l000000000040D9A0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB76:
	byte al_883 = Mem879[r8_1373 + rbp_1025:byte] != 0x00
	ecx_1320 = (word32) rcx (alias)
	rax_1333 = DPB(rax_1322, al_883, 0) (alias)
	branch al_883 != 0x00 l000000000040D9A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB86:
	r11_499 = r14_1371
	r13_394 = r8_1373
	branch rbx_1029 != 0x0000000000000000 l000000000040DBA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB91:
	branch Mem907[rsp_104 + 0x0000000000000034:word32] != 0x00000002 l000000000040DBA3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DB98:
	branch Mem907[rsp_104 + 0x0000000000000033:byte] != 0x00 l000000000040DC46
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DC46:
	word64 rax_917 = Mem915[rsp_104 + 0x0000000000000068:word64]
	word32 r9d_934 = (word32) (uint64) Mem915[rsp_104 + 0x0000000000000090:word32]
	word64 r8_925 = (uint64) Mem915[rsp_104 + 0x0000000000000034:word32]
	word64 rdi_926 = Mem915[rsp_104 + 0x0000000000000028:word64]
	Mem929[rsp_104:word64] = 0x0000000000000000
	Mem932[rsp_104 + 0x0000000000000010:word64] = rax_917
	Mem939[rsp_104 + 0x0000000000000008:word64] = Mem932[rsp_104 + 0x0000000000000070:word64]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word64 stackArg8 = <invalid>
	rax_1032 = fn000000000040D8A0(r15_1386, r13_394, rbx_1029, rbp_1025, r11_499, rdi_926, (word32) r8_925, (word32) (uint64) (r9d_934 & 0xFFFFFFFD), r10, r12, r13_394, r14_1371, r15_1386, fs, stackArg8, qwArg08, qwArg10, out rbx_2382, out rsp_2383, out rbp_2384, out rsi_2385, out r8_1373, out r9_1031, out r10, out r12_2386, out r13_2387, out r14_2388, out r15_2389)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBA3:
	branch Mem907[rsp_104 + 0x0000000000000033:byte] != 0x00 l000000000040DBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBAA:
	branch Mem907[rsp_104 + 0x0000000000000060:word64] == 0x0000000000000000 l000000000040DBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBB2:
	word64 rdx_1118 = Mem907[rsp_104 + 0x0000000000000060:word64]
	byte al_1120 = (byte) (word32) Mem907[rdx_1118:byte]
	branch al_1120 == 0x00 l000000000040DBE4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBBE:
	word64 rcx_1124 = Mem907[rsp_104 + 0x0000000000000028:word64]
	word64 rdx_1126 = rdx_1118 - rbx_1029
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBD0:
	branch r14_1371 <=u rbx_1029 l000000000040DBD8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBD5:
	Mem1134[rcx_1124 + rbx_1029:byte] = al_1120
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBD8:
	rbx_1029 = rbx_1029 + 0x0000000000000001
	al_1120 = (byte) (word32) Mem1139[rdx_1126 + rbx_1029:byte] (alias)
	branch al_1120 != 0x00 l000000000040DBD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBE4:
	rax_1032 = rbx_1029
	branch rbx_1029 >=u r14_1371 l000000000040DC86
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DBF0:
	Mem1158[Mem1156[rsp_104 + 0x0000000000000028:word64] + rbx_1029:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DC86:
	word64 rsi_1167 = Mem1160[rsp_104 + 0x00000000000000B8:word64] ^ Mem1160[fs:0x00000028:word64]
	branch rsi_1167 != 0x0000000000000000 l000000000040E423
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E423:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DC9D:
	word64 rsp_1171 = rsp_104 + 200
	word64 rbp_1175 = Mem1160[rsp_1171 + 8:word64]
	word64 r12_1177 = Mem1160[rsp_1171 + 16:word64]
	word64 r13_1179 = Mem1160[rsp_1171 + 24:word64]
	word64 r14_1181 = Mem1160[rsp_1171 + 32:word64]
	word64 r15_1183 = Mem1160[rsp_1171 + 40:word64]
	rbxOut = Mem1160[rsp_1171:word64]
	rspOut = rsp_1171 + 48
	rbpOut = rbp_1175
	rsiOut = rsi_1167
	r8Out = r8_1373
	r9Out = r9_1031
	r10Out = r10
	r12Out = r12_1177
	r13Out = r13_1179
	r14Out = r14_1181
	r15Out = r15_1183
	return rax_1032
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEDE:
	branch rbx_1029 >=u r14_1371 l000000000040DEE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEE3:
	Mem1190[rcx + rbx_1029:byte] = r12b_830
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DEE7:
	r12d_1194 = (word32) Mem1193[r8_1373 + rbp_1025:byte]
	r12_1013 = DPB(r12_1391, r12d_1194, 0) (alias)
	rbx_1029 = rbx_1029 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040DA2F:
	word64 rax_1199 = DPB(rax_1333, (word32) r12b_330, 0)
	word64 r8_1231
	word64 r9_1234
	word64 rax_1235
	word64 rsi_1292
	word64 r10_1296
	call Mem327[rax_1199 * 0x0000000000000008 + 0x00416068:word64] (retsize: 8;)
		uses: r10:r10_1088,r11:r11_1294,r8:r8_342,r9:r9_344,rax:rax_1199,rcx:rcx_1200,rdi:rdi_1236,rdx:rdx_585,rsi:rsi_1264,Stack +0000:qwLoc08_1462,Stack +0010:qwArg08_1684,Stack +0018:qwArg10_1928,Stack +0020:qwArg18_2002,Stack +FFFFFF30:qwLocD8_2256,Stack +FFFFFF31:nLocD7_1776,Stack +FFFFFF38:qwLocD0_1721,Stack +FFFFFF43:bLocC5_2150,Stack +FFFFFF44:dwLocC4_1817,Stack +FFFFFF68:qwLocA0_1891,Stack +FFFFFF70:qwLoc98_2188,Stack +FFFFFF78:qwLoc90_2039,Stack +FFFFFF80:qwLoc88_1965,Stack +FFFFFF88:qwLoc80_2113,Stack +FFFFFFA0:dwLoc68_1854,Stack +FFFFFFC8:qwLoc40_2076,Stack +FFFFFFD8:qwLoc30_1647,Stack +FFFFFFE0:qwLoc28_1610,Stack +FFFFFFE8:qwLoc20_1573,Stack +FFFFFFF0:qwLoc18_1536,Stack +FFFFFFF8:qwLoc10_1499
		defs: r10:r10_1296,r8:r8_1231,r9:r9_1234,rax:rax_1235,rsi:rsi_1292
	rbxOut = rbx_1029
	rspOut = rsp_104
	rbpOut = rbp_1025
	rsiOut = rsi_1292
	r8Out = r8_1231
	r9Out = r9_1234
	r10Out = r10_1296
	r12Out = r12_1233
	r13Out = r13_298
	r14Out = r14_1371
	r15Out = r15_1386
	return rax_1235
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040D8A0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E450(word64 rcx, word64 rdx, word64 rsi, word32 edi, word64 r10, selector fs, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] r10:[0..63] rcx:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r12 r13 r14 r15 r8 r9 rax rbp rbx rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040E450_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E450:
	word64 r15_10 = (int64) edi
	word32 r15d_44 = (word32) r15_10
	word64 rax_41 = __errno_location()
	word64 r15_53 = DPB(r15_10, r15d_44, 0)
	word64 rbx_101 = rcx
	word64 r12_109 = Mem40[0x000000000061A5D8:word64]
	branch r15d_44 < 0x00000000 l000000000040E5F7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E5F7:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E48C:
	branch r15d_44 <u Mem49[0x000000000061A5F0:word32] l000000000040E4FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E495:
	word64 r14_55 = (uint64) (r15_53 + 0x0000000000000001)
	branch r12_109 != 0x000000000061A5E0 l000000000040E5E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E5E0:
	word64 rax_61 = fn0000000000410C90(rcx, r12_109, out rbx_101)
	Mem69[0x000000000061A5D8:word64] = rax_61
	r12_109 = rax_61
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E4B0:
	word64 rax_74 = fn0000000000410C90(rcx, 0x0000000000000000, out rbx_101)
	word64 rsi_81 = Mem49[0x000000000061A5E0:word64]
	word64 rdi_82 = Mem49[0x000000000061A5E8:word64]
	Mem84[0x000000000061A5D8:word64] = rax_74
	Mem85[rax_74:word64] = rsi_81
	Mem86[rax_74 + 0x0000000000000008:word64] = rdi_82
	r12_109 = rax_74
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E4D6:
	word64 rdi_88 = (uint64) Mem87[0x000000000061A5F0:word32]
	memset((rdi_88 << 0x0000000000000004) + r12_109, 0x0000000000000000, r14_55 - rdi_88 << 0x0000000000000004)
	Mem100[0x000000000061A5F0:word32] = r15_53 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E4FA:
	word64 r12_110 = r12_109 + (r15_53 << 0x0000000000000004)
	word64 rbp_120 = (uint64) ((word32) (uint64) Mem103[rbx_101 + 0x0000000000000004:word32] | 0x00000001)
	word64 r15_112 = rbx_101 + 0x0000000000000008
	word64 r14_114 = Mem103[r12_110 + 0x0000000000000008:word64]
	word32 ebp_194 = (word32) rbp_153
	word64 r12_146
	word64 r15_149
	word64 rbp_153
	word64 rbx_154
	word64 r9_151
	word64 r8_150
	word64 r10_144
	word64 rsp_159
	word64 r13_147
	word64 r14_148
	word64 rax_152 = fn000000000040D8A0(rdx, rsi, rbx_101, rbp_120, Mem103[r12_110:word64], r14_114, (word32) (uint64) Mem103[rbx_101:word32], (word32) (uint64) (word32) rbp_120, r10, r12_110, rax_41, r14_114, r15_112, fs, r15_112, Mem117[rbx_101 + 0x0000000000000028:word64], Mem103[rbx_101 + 0x0000000000000030:word64], out rbx_154, out rsp_159, out rbp_153, out rsi_158, out r8_150, out r9_151, out r10_144, out r12_146, out r13_147, out r14_148, out r15_149)
	word64 rbp_206 = DPB(rbp_153, ebp_194, 0)
	rbp_206 = DPB(rbp_153, ebp_194, 0) (alias)
	word64 rbp_209 = DPB(rbp_206, ebp_194, 0)
	branch Mem131[rsp_159 + 0x0000000000000038:word64] >u rax_152 l000000000040E5BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E554:
	Mem169[r12_146:word64] = rax_152 + 0x0000000000000001
	word64 rsi_167 = rax_152 + 0x0000000000000001
	branch r14_148 == 0x000000000061B220 l000000000040E577
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E565:
	Mem172[rsp_159 + 0x0000000000000038:word64] = rax_152 + 0x0000000000000001
	free(r14_148)
	rsi_167 = Mem172[rsp_159 + 0x0000000000000038:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E577:
	Mem177[rsp_159 + 0x0000000000000038:word64] = rsi_167
	word64 rbx_180
	word64 rsp_182
	word64 rax_179 = fn0000000000410C40(rbx_154, out rbx_180, out rsp_182)
	Mem188[r12_146 + 0x0000000000000008:word64] = rax_179
	word32 r8d_204 = (word32) (uint64) Mem188[rbx_180:word32]
	word64 rcx_192 = Mem188[rsp_182 + 0x0000000000000028:word64]
	word64 rdx_196 = Mem188[rsp_182 + 0x0000000000000020:word64]
	word64 rsi_197 = Mem188[rsp_182 + 0x0000000000000038:word64]
	Mem199[rsp_182 + 0x0000000000000010:word64] = Mem188[rbx_180 + 0x0000000000000030:word64]
	word64 rax_200 = Mem199[rbx_180 + 0x0000000000000028:word64]
	Mem202[rsp_182:word64] = r15_149
	Mem203[rsp_182 + 0x0000000000000008:word64] = rax_200
	fn000000000040D8A0(rcx_192, rdx_196, rbx_180, rbp_209, rsi_197, rax_179, r8d_204, (word32) (uint64) ebp_194, r10_144, r12_146, r13_147, rax_179, r15_149, fs, Mem203[rsp_182:word64], Mem203[rsp_182 + 8:word64], Mem203[rsp_182 + 16:word64], out rbx_294, out rsp_159, out rbp_295, out rsi_227, out r8_150, out r9_151, out r10_144, out r12_296, out r13_147, out r14_148, out r15_297)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E5BF:
	Mem238[r13_147:word32] = (word32) (uint64) Mem234[rsp_159 + 0x0000000000000034:word32]
	word64 rsp_239 = rsp_159 + 0x0000000000000048
	word64 rbp_245 = Mem238[rsp_239 + 8:word64]
	word64 r12_247 = Mem238[rsp_239 + 16:word64]
	word64 r13_249 = Mem238[rsp_239 + 24:word64]
	word64 r14_251 = Mem238[rsp_239 + 32:word64]
	word64 r15_253 = Mem238[rsp_239 + 40:word64]
	rbxOut = Mem238[rsp_239:word64]
	rspOut = rsp_239 + 48
	rbpOut = rbp_245
	r8Out = r8_150
	r9Out = r9_151
	r10Out = r10_144
	r12Out = r12_247
	r13Out = r13_249
	r14Out = r14_251
	r15Out = r15_253
	return r14_148
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E450_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E600(word64 rdi, ptr64 & rsiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax rsi
// Trashed: SCZO rax rdi rdx rsi
// Preserved: r12 rbp rbx rsp
fn000000000040E600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E600:
	word64 rax_14 = __errno_location()
	word32 r12d_33 = (word32) (uint64) Mem13[rax_14:word32]
	word64 rdi_18 = 0x000000000061B320
	branch rdi == 0x0000000000000000 l000000000040E61E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E61A_1:
	rdi_18 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E61E:
	word64 rsi_27
	word64 rax_24 = fn0000000000410E00(0x0000000000000038, rdi_18, out rsi_27)
	Mem35[rax_14:word32] = r12d_33
	rsiOut = rsi_27
	return rax_24
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn000000000040E630(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rsp
fn000000000040E630_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E630:
	word64 rax_6 = 0x000000000061B320
	branch rdi == 0x0000000000000000 l000000000040E63C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E638_1:
	rax_6 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E63C:
	return (word32) (uint64) Mem0[rax_6:word32]
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E630_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040E640(word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi:[0..31] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rsp
fn000000000040E640_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E640:
	word64 rax_11 = 0x000000000061B320
	branch rdi == 0x0000000000000000 l000000000040E64C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E648_1:
	rax_11 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E64C:
	Mem12[rax_11:word32] = esi
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E640_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E650(word32 edx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] esi:[0..63] rdi:[0..63] rsi:[32..63]
// LiveOut: rsi
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn000000000040E650_entry:
	byte sil_12 = (byte) esi
	word64 rsi_19 = DPB(rsi, esi, 0)
	rsi_19 = DPB(rsi, sil_12, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E650:
	word64 rax_10 = 0x000000000061B320
	word32 ecx_15 = (word32) (uint64) esi
	branch rdi == 0x0000000000000000 l000000000040E65E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E65A_1:
	rax_10 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E65E:
	word64 rsi_25 = rax_10 + DPB(rsi_19, (word32) (sil_12 >>u 0x05), 0) * 0x0000000000000004
	word32 edi_29 = (word32) (uint64) Mem0[rsi_25 + 0x0000000000000008:word32]
	byte cl_32 = (byte) (uint64) (ecx_15 & 0x0000001F)
	Mem48[rsi_25 + 0x0000000000000008:word32] = (word32) (uint64) ((word32) (uint64) ((word32) (uint64) ((word32) (uint64) (edx ^ (word32) ((uint64) ((word32) ((uint64) edi_29) >>u cl_32))) & 0x00000001) << cl_32) ^ edi_29)
	return rsi_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E650_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040E6B0(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rdi rsp
fn000000000040E6B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6B0:
	branch rdi != 0x0000000000000000 l000000000040E6C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6BC_1:
	rdi = 0x000000000061B320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6C0:
	Mem15[rdi:word32] = 0x00000008
	branch rsi == 0x0000000000000000 l000000000040E6DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6CB:
	branch rdx == 0x0000000000000000 l000000000040E6DD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6DD:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6D0:
	Mem22[rdi + 0x0000000000000028:word64] = rsi
	Mem23[rdi + 0x0000000000000030:word64] = rdx
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E6B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E6F0(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r8, word64 r10, selector fs, ptr64 & rsiOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] r8:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r8 r9 rax rsi
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040E6F0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E6F0:
	word64 rbx_29 = r8
	branch r8 != 0x0000000000000000 l000000000040E716
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E712_1:
	rbx_29 = 0x000000000061B320
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E716:
	word64 rax_39 = __errno_location()
	word64 r10_64
	word64 r12_66
	word64 r8_70
	word64 r9_71
	word64 rbp_73
	word64 rsi_78
	word64 rax_72 = fn000000000040D8A0(rcx, rdx, rbx_29, rax_39, rsi, rdi, (word32) (uint64) Mem56[rbx_29:word32], (word32) (uint64) Mem38[rbx_29 + 0x0000000000000004:word32], r10, (uint64) Mem38[rax_39:word32], rsi, rdx, rcx, fs, rbx_29 + 0x0000000000000008, Mem52[rbx_29 + 0x0000000000000028:word64], Mem38[rbx_29 + 0x0000000000000030:word64], out rbx_124, out rsp_125, out rbp_73, out rsi_78, out r8_70, out r9_71, out r10_64, out r12_66, out r13_126, out r14_127, out r15_128)
	Mem85[rbp_73:word32] = (word32) r12_66
	rsiOut = rsi_78
	r8Out = r8_70
	r9Out = r9_71
	r10Out = r10_64
	return rax_72
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E6F0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E930(word64 rdi, word64 r10, selector fs, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63]
// LiveOut: r10 r12 r13 r14 r15 r8 r9 rax rbp rbx rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040E930_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E930:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E941_thunk_fn000000000040E450:
	word64 r10_13
	word64 r12_15
	word64 r13_16
	word64 r14_17
	word64 r15_18
	word64 r8_19
	word64 r9_20
	word64 rbp_22
	word64 rbx_23
	word64 rsp_28
	word64 rax_21 = fn000000000040E450(0x000000000061B320, 0xFFFFFFFFFFFFFFFF, rdi, 0x00000000, r10, fs, out rbx_23, out rsp_28, out rbp_22, out r8_19, out r9_20, out r10_13, out r12_15, out r13_16, out r14_17, out r15_18)
	rbxOut = rbx_23
	rspOut = rsp_28
	rbpOut = rbp_22
	r8Out = r8_19
	r9Out = r9_20
	r10Out = r10_13
	r12Out = r12_15
	r13Out = r13_16
	r14Out = r14_17
	r15Out = r15_18
	return rax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E930_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040E970(word64 rdx, word32 esi, word32 edi, word64 r10, selector fs, ptr64 & r12Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] esi:[0..31] fs:[0..15] r10:[0..63] rdx:[0..63]
// LiveOut: r10 r12 r15
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rcx rdi rdx rsi
// Preserved: rbp rbx rsp
fn000000000040E970_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040E970:
	fn000000000040D740(esi, fp - 0x0000000000000058)
	word64 r10_33
	word64 r12_35
	word64 r15_38
	fn000000000040E450(fp - 0x0000000000000058, 0xFFFFFFFFFFFFFFFF, rdx, (word32) (uint64) (word32) (uint64) edi, r10, fs, out rbx_67, out rsp_68, out rbp_69, out r8_70, out r9_71, out r10_33, out r12_35, out r13_72, out r14_73, out r15_38)
	r12Out = r12_35
	r15Out = r15_38
	return r10_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040E970_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040EAB0(word64 rdi, word64 r10, selector fs, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63]
// LiveOut: r10 r12 r13 r14 r15 r8 r9 rbp rbx
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi
// Preserved: rsp
fn000000000040EAB0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EAB0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EA00:
	word64 r10_56
	word64 r12_58
	word64 r13_59
	word64 r14_60
	word64 r15_61
	word64 r8_62
	word64 r9_63
	word64 rbp_65
	word64 rbx_66
	fn000000000040E450(fp - 0x0000000000000048, 0xFFFFFFFFFFFFFFFF, rdi, 0x00000000, r10, fs, out rbx_66, out rsp_99, out rbp_65, out r8_62, out r9_63, out r10_56, out r12_58, out r13_59, out r14_60, out r15_61)
	rbpOut = rbp_65
	r8Out = r8_62
	r9Out = r9_63
	r10Out = r10_56
	r12Out = r12_58
	r13Out = r13_59
	r14Out = r14_60
	r15Out = r15_61
	return rbx_66
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EAB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040EBF0(word64 rsi, word32 edi, word64 r10, selector fs, ptr64 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] r10:[0..63] rsi:[0..63]
// LiveOut: r10 rbx
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040EBF0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EBF0:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EBFC_thunk_fn000000000040E450:
	word64 r10_9
	word64 rbx_19
	fn000000000040E450(0x000000000061A5A0, 0xFFFFFFFFFFFFFFFF, rsi, edi, r10, fs, out rbx_19, out rsp_30, out rbp_31, out r8_32, out r9_33, out r10_9, out r12_34, out r13_35, out r14_36, out r15_37)
	r10Out = r10_9
	return rbx_19
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EBF0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040EC10(word64 rdi, word64 r10, selector fs, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r10Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r10:[0..63] rdi:[0..63]
// LiveOut: r10 r12 r13 r14 r15 r8 r9 rax rbp rbx rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040EC10_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC10:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC21_thunk_fn000000000040E450:
	word64 r10_13
	word64 r12_15
	word64 r13_16
	word64 r14_17
	word64 r15_18
	word64 r8_19
	word64 r9_20
	word64 rbp_22
	word64 rbx_23
	word64 rsp_28
	word64 rax_21 = fn000000000040E450(0x000000000061A5A0, 0xFFFFFFFFFFFFFFFF, rdi, 0x00000000, r10, fs, out rbx_23, out rsp_28, out rbp_22, out r8_19, out r9_20, out r10_13, out r12_15, out r13_16, out r14_17, out r15_18)
	rbxOut = rbx_23
	rspOut = rsp_28
	rbpOut = rbp_22
	r8Out = r8_19
	r9Out = r9_20
	r10Out = r10_13
	r12Out = r12_15
	r13Out = r13_16
	r14Out = r14_17
	r15Out = r15_18
	return rax_21
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EC10_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040EC30(word64 rcx, word64 rdx, word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[32..63] rdi:[0..63] rdx:[0..63] rsi:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: r12 rbp rbx rsp
fn000000000040EC30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC30:
	word64 rbx_17 = rdx - 0x0000000000000001
	branch rdx == 0x0000000000000000 l000000000040EC69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC40:
	word64 rax_21 = __ctype_tolower_loc()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC50:
	rcx = DPB(rcx, (word32) Mem24[rsi + rbx_17:byte], 0) (alias)
	Mem33[rdi + rbx_17:byte] = (byte) (uint64) Mem24[Mem24[rax_21:word64] + rcx * 0x0000000000000004:word32]
	rbx_17 = rbx_17 - 0x0000000000000001
	branch rbx_17 != 0xFFFFFFFFFFFFFFFF l000000000040EC50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC69:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EC30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn000000000040EC80(word64 rcx, word64 rdx, word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[32..63] rdi:[0..63] rdx:[0..63] rsi:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: r12 rbp rbx rsp
fn000000000040EC80_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC80:
	word64 rbx_17 = rdx - 0x0000000000000001
	branch rdx == 0x0000000000000000 l000000000040ECB9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EC90:
	word64 rax_21 = __ctype_toupper_loc()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ECA0:
	rcx = DPB(rcx, (word32) Mem24[rsi + rbx_17:byte], 0) (alias)
	Mem33[rdi + rbx_17:byte] = (byte) (uint64) Mem24[Mem24[rax_21:word64] + rcx * 0x0000000000000004:word32]
	rbx_17 = rbx_17 - 0x0000000000000001
	branch rbx_17 != 0xFFFFFFFFFFFFFFFF l000000000040ECA0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ECB9:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040EC80_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn000000000040ECD0(word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r12, word64 r13, word64 r14, word64 r15, selector fs, ptr64 & r10Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dil:[0..63] fs:[0..15] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] r9:[32..63] r9d:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[32..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r15 rax
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn000000000040ECD0_entry:
	word64 r9_723 = DPB(r9, r9d, 0)
	word64 rdi_377 = DPB(rdi, dil, 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ECD0:
	word32 dwLoc04C8_1120
	word64 r12_18 = rsi
	word64 rbx_104 = rcx
	word64 rax_29 = Mem24[r8 + 0x0000000000000030:word64]
	word64 rsi_31 = Mem24[fs:0x00000028:word64]
	word32 esi_41 = (word32) (uint64) Mem32[r8 + 0x0000000000000008:word32]
	branch esi_41 <= 0x0000000C l000000000040EEE0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEE0:
	word32 esi_47 = (word32) (uint64) esi_41
	word32 eax_51 = 0x0000000C
	branch esi_47 == 0x00000000 l000000000040EEEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEEB_1:
	eax_51 = esi_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEEE:
	dwLoc04C8_1120 = eax_51
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED26:
	dwLoc04C8_1120 = esi_41 - 0x0000000C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED2B:
	word64 rax_1244
	byte al_416 = (byte) (word32) Mem61[rcx:byte]
	word64 r13_401 = 0x0000000000000000
	branch al_416 == 0x00 l000000000040F053
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED39:
	word64 rsi_375 = fp - 0x0000000000000447
	r15_202 = r15
	r8_403 = r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED85:
	word64 r8_403
	word64 r15_202
	branch al_416 != 0x25 l000000000040ED50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED50:
	branch rdx - r13_401 <=u 0x0000000000000001 l000000000040EE98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED60:
	branch r12_18 == 0x0000000000000000 l000000000040ED6D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED65:
	Mem87[r12_18:byte] = al_416
	r12_18 = r12_18 + 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED6D:
	r13_401 = r13_401 + 0x0000000000000001
	r8_403 = rbx_104
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED89:
	word32 r9d_668 = (word32) dil
	word64 r9_118 = DPB(r9_723, r9d_668, 0)
	word64 rax_556 = 0x0000000000000000
	word64 r11_100 = 0x0000000000000000
	word32 r11d_101 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED94:
	word64 r9_571
	rbx_104 = rbx_104 + 0x0000000000000001
	word32 edi_107 = (word32) Mem97[rbx_104:byte]
	byte dil_108 = (byte) edi_107
	r11_100 = DPB(r11_100, r11d_101, 0) (alias)
	r11_100 = DPB(r11_100, r11d_101, 0) (alias)
	r11_100 = DPB(r11_100, r11d_101, 0) (alias)
	word64 r9_574 = DPB(r9_574, r9d_668, 0)
	word64 r9_734 = DPB(r9_571, r9d_668, 0)
	r9_734 = DPB(r9_571, r9d_668, 0) (alias)
	word64 r9_733 = DPB(r9_734, r9d_668, 0)
	r9_733 = DPB(r9_734, r9d_668, 0) (alias)
	word64 r9_732 = DPB(r9_733, r9d_668, 0)
	r9_732 = DPB(r9_733, r9d_668, 0) (alias)
	r9_723 = DPB(r9_732, r9d_668, 0) (alias)
	word64 r9_349 = DPB(r9_732, r9d_668, 0)
	r9_118 = DPB(r9_574, r9d_668, 0) (alias)
	r9_118 = DPB(r9_118, r9d_668, 0) (alias)
	r9_118 = DPB(r9_574, r9d_668, 0) (alias)
	r9_574 = DPB(r9_118, r9d_668, 0) (alias)
	word64 rdi_601 = DPB(rdi_377, edi_107, 0)
	byte SZO_111 = SLICE(cond(dil_108 - 0x30), bool, 4)
	r9_1281 = r9_574
	r11_1292 = r11_100
	r9_1299 = r9_118
	branch dil_108 == 0x30 l000000000040EDC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDA1:
	r11_100 = DPB(r11_1291, r11d_101, 0) (alias)
	r11_100 = DPB(r11_1291, r11d_101, 0) (alias)
	word64 r11_620 = DPB(r11_100, r11d_101, 0)
	word64 r11_629 = DPB(r11_100, r11d_101, 0)
	r11_633 = DPB(r11_629, r11d_101, 0) (alias)
	word64 r11_634 = DPB(r11_629, r11d_101, 0)
	r11_634 = DPB(r11_629, r11d_101, 0) (alias)
	r11_637 = DPB(r11_634, r11d_101, 0) (alias)
	r11_638 = DPB(r11_629, r11d_101, 0) (alias)
	r11_620 = DPB(r11_629, r11d_101, 0) (alias)
	word64 r11_619 = DPB(r11_620, r11d_101, 0)
	r11_619 = DPB(r11_620, r11d_101, 0) (alias)
	r11_619 = DPB(r11_619, r11d_101, 0) (alias)
	word64 r11_644 = DPB(r11_619, r11d_101, 0)
	byte r9b_359 = (byte) r9d_668
	r9_118 = DPB(r9_1280, r9d_668, 0) (alias)
	r9_118 = DPB(r9_1280, r9d_668, 0) (alias)
	word64 r9_572 = DPB(r9_118, r9d_668, 0)
	word64 r9_581 = DPB(r9_118, r9d_668, 0)
	r9_585 = DPB(r9_581, r9d_668, 0) (alias)
	word64 r9_586 = DPB(r9_581, r9d_668, 0)
	r9_586 = DPB(r9_581, r9d_668, 0) (alias)
	r9_589 = DPB(r9_586, r9d_668, 0) (alias)
	r9_590 = DPB(r9_581, r9d_668, 0) (alias)
	r9_572 = DPB(r9_581, r9d_668, 0) (alias)
	r9_571 = DPB(r9_572, r9d_668, 0) (alias)
	r9_571 = DPB(r9_572, r9d_668, 0) (alias)
	r9_571 = DPB(r9_571, r9d_668, 0) (alias)
	word64 r9_596 = DPB(r9_571, r9d_668, 0)
	rdi_377 = DPB(rdi_601, dil_108, 0) (alias)
	rdi_377 = DPB(rdi_601, dil_108, 0) (alias)
	rdi_377 = DPB(rdi_601, dil_108, 0) (alias)
	word64 rdi_599 = DPB(rdi_377, dil_108, 0)
	rdi_377 = DPB(rdi_601, dil_108, 0) (alias)
	branch SZO_111 l000000000040EDD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDD0:
	branch dil_108 != 0x5E l000000000040EE70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE70:
	r9_1279 = r9_118
	rdi_1288 = rdi_377
	r11_1290 = r11_100
	branch dil_108 != 0x5F l000000000040EDEE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE7A:
	r11d_101 = (int32) dil_108
	r11_100 = DPB(r11_1291, r11d_101, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDDA:
	r9_118 = 0x0000000000000001
	r9d_668 = 0x00000001 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDA3:
	branch dil_108 != 0x23 l000000000040EDE8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDE8:
	r9_1278 = r9_118
	rdi_1287 = rdi_377
	r11_1289 = r11_100
	r9_1298 = r9_118
	branch dil_108 == 0x2D l000000000040EDC0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDEE:
	word64 rdx_126 = (uint64) ((int32) dil_108 - 0x00000030)
	word32 ebp_131 = 0xFFFFFFFF
	branch (word32) rdx_126 >u 0x00000009 l000000000040EE40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDFF:
	word64 rbp_130 = 0x0000000000000000
	ebp_131 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE28:
	word64 rbp_144
	word64 rbp_147 = DPB(rbp_130, ebp_131, 0)
	branch ebp_131 <= 0x0CCCCCCC l000000000040EE08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE08:
	word32 edx_139 = (int32) Mem97[rbx_104:byte]
	byte dl_141 = (byte) edx_139
	word64 rdx_149 = DPB(rdx_126, edx_139, 0)
	rdx_149 = DPB(rdx_126, dl_141, 0) (alias)
	r9_1283 = r9_586
	r11_1294 = r11_634
	branch ebp_131 == 0x0CCCCCCC l000000000040EE88
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE88:
	r9_1284 = r9_586
	r11_1295 = r11_634
	branch dl_141 <= 0x37 l000000000040EE0D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE8D:
	rbp_144 = 0x000000007FFFFFFF
	ebp_131 = 0x7FFFFFFF (alias)
	r9_581 = r9_590
	r11_629 = r11_638
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE0D:
	rcx = DPB(rcx, rbp_147 * 0x0000000000000005, 0) (alias)
	ebp_131 = rdx_149 - 0x0000000000000030 + rcx * 0x0000000000000002
	rbp_144 = DPB(rbp_130, ebp_131, 0) (alias)
	r9_581 = r9_589
	r11_629 = r11_637
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE30:
	rbp_144 = 0x000000007FFFFFFF
	ebp_131 = 0x7FFFFFFF (alias)
	r9_581 = r9_585
	r11_629 = r11_633
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE15:
	rbx_104 = rbx_104 + 0x0000000000000001
	word32 edi_163 = (word32) Mem97[rbx_104:byte]
	dil_108 = (byte) edi_163 (alias)
	rdx_126 = (uint64) ((int32) dil_108 - 0x00000030)
	rbp_130 = DPB(rbp_144, ebp_131, 0) (alias)
	rdi_599 = DPB(rdi_1287, edi_163, 0) (alias)
	r9_1282 = r9_581
	r11_1293 = r11_629
	branch (word32) rdx_126 >u 0x00000009 l000000000040EE40
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE40:
	word64 rdi_598 = DPB(rdi_599, dil_108, 0)
	rdi_598 = DPB(rdi_599, dil_108, 0) (alias)
	r9_1285 = r9_571
	r11_1296 = r11_619
	branch dil_108 == 0x45 l000000000040EEC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE4A:
	rcx = 0x0000000000000000
	r9_1286 = r9_571
	r11_1297 = r11_619
	branch dil_108 == 0x4F l000000000040EEC8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEC8:
	rbx_104 = rbx_104 + 0x0000000000000001
	word32 edi_188 = (word32) Mem97[rbx_104:byte]
	rcx = DPB(rcx, (int32) dil_108, 0) (alias)
	dil_108 = (byte) edi_188 (alias)
	rdi_598 = DPB(rdi_598, edi_188, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE52:
	word64 rdi_617 = DPB(rdi_598, dil_108, 0)
	rdi_377 = DPB(rdi_598, dil_108, 0) (alias)
	rsi_375 = DPB(rsi_375, (int32) dil_108, 0) (alias)
	branch dil_108 >u 0x7A l000000000040FF4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040FF4D:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F39F:
	word64 rcx_210
	branch dil_108 != 0x25 l000000000040F0B2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0B2:
	word64 rax_199 = rbx_104 - 0x0000000000000001
	word32 ecx_204 = 0x00000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0C1:
	r15_202 = rax_199
	rax_199 = rax_199 - 0x0000000000000001
	ecx_204 = (word32) (uint64) (ecx_204 + 0x00000001) (alias)
	branch Mem97[rax_199 + 0x0000000000000001:byte] != 0x25 l000000000040F0C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0D1:
	rcx_210 = (int64) ecx_204
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F3A9:
	r15_202 = rbx_104
	rcx_210 = 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0D7:
	word64 rax_215 = 0x0000000000000000
	byte al_240 = 0x00
	branch ebp_131 < 0x00000000 l000000000040F0E1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0DE_1:
	al_240 = (byte) ebp_131 (alias)
	rax_215 = (uint64) ebp_131 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0E1:
	word64 rax_248 = DPB(rax_215, (int16) al_240, 0)
	word64 rbx_250 = rax_248
	branch rcx_210 <u rax_248 l000000000040F0ED
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0E9_1:
	rbx_250 = rcx_210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0ED:
	branch rbx_250 >=u rdx - r13_401 l000000000040EE98
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE98:
	rax_1244 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0F9:
	branch r12_18 == 0x0000000000000000 l000000000040F16E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F0FE:
	branch rax_248 <=u rcx_210 l000000000040F144
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F103:
	qwLoc04D8 = rcx_210
	word64 rbp_323 = (int64) ebp_131 - rcx_210
	branch r11d_101 == 0x00000030 l000000000040F1C1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F1C1:
	memset(r12_18, 0x0000000000000030, rbp_323)
	r9_349 = (uint64) r9d_668
	r12_18 = r12_18 + rbp_323
	r9b_359 = (byte) r9_349 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F125:
	memset(r12_18, 0x0000000000000020, rbp_323)
	r9_349 = (uint64) r9d_668
	r12_18 = r12_18 + rbp_323
	r9b_359 = (byte) r9_349 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F144:
	r9_723 = DPB(r9_349, r9b_359, 0) (alias)
	dwLoc04E0 = SLICE(rbx_104, word32, 0) (alias)
	qwLoc04F0 = rcx_210
	rsi_375 = r15_202
	rdi_377 = r12_18
	branch r9b_359 == 0x00 l000000000040F180
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F180:
	memcpy(r12_18, r15_202, rcx_210)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F15C:
	fn000000000040EC80(rcx_210, rcx_210, r15_202, r12_18)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F16B:
	r12_18 = r12_18 + rcx_210
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F16E:
	rcx = rcx_210
	r8_403 = rbx_104
	r13_401 = r13_401 + rbx_250
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040ED74:
	al_416 = (byte) (word32) Mem406[r8_403 + 0x0000000000000001:byte] (alias)
	rbx_104 = r8_403 + 0x0000000000000001
	branch al_416 == 0x00 l000000000040F050
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F050:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F053:
	branch r12_18 == 0x0000000000000000 l000000000040F191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F05C:
	branch rdx == 0x0000000000000000 l000000000040F191
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F191:
	rax_1244 = r13_401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040F065:
	Mem445[r12_18:byte] = 0x00
	rax_1244 = r13_401
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE9A:
	branch (rsi_31 ^ Mem455[fs:0x00000028:word64]) != 0x0000000000000000 l00000000004105EA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004105EA:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EEB1:
	r10Out = rdx
	r15Out = r15
	return rax_1244
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EE60:
	word64 rdx_506 = DPB(rdx_126, (word32) dil_108, 0)
	word64 r10_523
	word64 rax_561
	call Mem97[rdx_506 * 0x0000000000000008 + 0x004164E8:word64] (retsize: 8;)
		uses: r10:rdx,r11:r11_644,r8:r8_717,r9:r9_596,rax:rax_556,rcx:rcx_545,rdi:rdi_617,rdx:rdx_506,rsi:rsi_533,Stack +0017:dil,Stack +0018:r8,Stack +0020:qwLoc04F0_1174,Stack +0028:fp - 0x0000000000000447,Stack +0030:dwLoc04E0_1159,Stack +0038:qwLoc04D8_1144,Stack +0048:dwLoc04C8_1120,Stack +004C:r9d,Stack +0050:rax_29,Stack +04D0:rsi_31,Stack +04E0:rbx,Stack +04E8:rbp,Stack +04F0:r12,Stack +04F8:r13,Stack +0500:r14,Stack +0508:r15
		defs: r10:r10_523,rax:rax_561
	r10Out = r10_523
	r15Out = r15_202
	return rax_561
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn000000000040ECD0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDA9:
	rbx_104 = rbx_104 + 0x0000000000000001
	word32 edi_648 = (word32) Mem97[rbx_104:byte]
	dil_108 = (byte) edi_648 (alias)
	rdi_601 = DPB(rdi_601, edi_648, 0) (alias)
	rdi_377 = DPB(rdi_601, dil_108, 0) (alias)
	rax_556 = 0x0000000000000001
	SZO_111 = SLICE(cond(dil_108 - 0x30), bool, 4) (alias)
	r9_1280 = r9_574
	r11_1291 = r11_100
	branch dil_108 != 0x30 l000000000040EDA1
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDBB:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000040EDC0:
	r11d_101 = (int32) dil_108
	rdi_377 = DPB(rdi_377, dil_108, 0) (alias)
	r11_100 = DPB(r11_100, r11d_101, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410600(word64 rcx, word64 rdx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word32 r8d, word64 r12, word64 r13, word64 r14, word64 r15, selector fs, ptr64 & r10Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8d:[0..31] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r10 r15 rax
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi
// Preserved: rsp
fn0000000000410600_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410600:
	word64 r10_29
	word64 r15_39
	word64 rax_31 = fn000000000040ECD0(rdx, rsi, rbx, rbp, rdi, 0x0000000000000000, rcx, (uint64) r8d, r12, r13, r14, r15, fs, out r10_29, out r15_39)
	r10Out = r10_29
	r15Out = r15_39
	return rax_31
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410600_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000410630(word64 rcx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r10, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..63] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] r9:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved: r13 r14 r15
fn0000000000410630_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410630:
	word64 r9_128
	branch rsi == 0x0000000000000000 l0000000000410A30
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410A30:
	__fprintf_chk(rdi, 0x0000000000000001, 0x00000000004168CC, 0x00000000)
	r9_128 = r9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410650:
	__fprintf_chk(rdi, 0x0000000000000001, 0x00000000004168C0, 0x00000000)
	r9_128 = rcx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041066A:
	word64 rax_56 = dcgettext(0x0000000000000000, 0x00000000004168D3, 0x0000000000000005)
	__fprintf_chk(rdi, 0x0000000000000001, 0x0000000000416BA0, 0x00000000)
	word64 rax_68 = dcgettext(0x0000000000000000, 0x0000000000416930, 0x0000000000000005)
	word64 rax_135 = DPB(rax_68, fputs_unlocked(rax_68, rdi), 0)
	branch r9 >u 0x0000000000000009 l0000000000410A50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410A50:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004107A1:
	__fprintf_chk(rdi, 0x0000000000000001, dcgettext(0x0000000000000000, 0x0000000000416B08, 0x0000000000000005), 0x00000000)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004106BE:
	call Mem24[0x0000000000416B48:word64] (retsize: 8;)
		uses: r10:r10,r8:0x00000000000007DD,r9:r9_128,rax:rax_135,rcx:rax_56,rdi:rax_68,rdx:0x0000000000000005,rsi:rdi,Stack +0008:qwLoc88,Stack +0010:qwLoc80,Stack +0018:qwLoc78,Stack +0020:qwLoc70,Stack +0028:qwLoc68,Stack +0030:qwLoc60,Stack +0038:qwLoc58,Stack +0040:qwLoc50,Stack +0048:qwLoc48,Stack +0050:qwLoc40,Stack +0060:rbx,Stack +0068:rbp,Stack +0070:r12,Stack +0078:r13,Stack +0080:r14,Stack +0088:r15
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410630_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000410AC0(word64 rcx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi
// Preserved: rsp
fn0000000000410AC0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AC0:
	word64 r9_23 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AF3:
	word64 r10_15
	word32 eax_11 = (word32) (uint64) Mem9[r8:word32]
	branch eax_11 <u 0x00000030 l0000000000410AD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AD0:
	r10_15 = (uint64) eax_11 + Mem9[r8 + 0x0000000000000010:word64]
	Mem18[r8:word32] = (word32) (uint64) (eax_11 + 0x00000008)
	word64 rax_19 = Mem18[r10_15:word64]
	Mem24[fp - 0x0000000000000058 + r9_23 * 0x0000000000000008:word64] = rax_19
	branch rax_19 == 0x0000000000000000 l0000000000410B18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AFB:
	r10_15 = Mem9[r8 + 0x0000000000000008:word64]
	Mem28[r8 + 0x0000000000000008:word64] = r10_15 + 0x0000000000000008
	word64 rax_29 = Mem28[r10_15:word64]
	Mem32[fp - 0x0000000000000058 + r9_23 * 0x0000000000000008:word64] = rax_29
	branch rax_29 != 0x0000000000000000 l0000000000410AE9
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410AE9:
	r9_23 = r9_23 + 0x0000000000000001
	branch r9_23 == 0x000000000000000A l0000000000410B18
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B13:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B18:
	fn0000000000410630(rcx, rbx, rbp, rsi, rdi, fp - 0x0000000000000058, r9_23, r10_15, r12, r13, r14, r15)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410AC0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000410B30(byte al, word64 rcx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r12, word64 r13, word64 r14, word64 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi
// Preserved: rsp
fn0000000000410B30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B30:
	branch al == 0x00 l0000000000410B7C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B45:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410B7C:
	fn0000000000410AC0(rcx, rbx, rbp, rsi, rdi, fp - 0x00000000000000D0, r12, r13, r14, r15)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410B30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410C40(word64 rbx, ptr64 & rbxOut, ptr64 & rspOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbx:[0..63]
// LiveOut: rax rbx rsp
// Trashed: SCZO rax rbx rdi rsp
// Preserved:
l0000000000410C71:
	rdi = rdi *s rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C7A:
	Mem19[rsp - 8:word64] = rax
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410C40_entry:
	rsp = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C40:
	word64 rsp_4 = rsp - 8
	Mem6[rsp_4:word64] = rbx
	word64 rax_9 = malloc(rdi)
	branch rax_9 == 0x0000000000000000 l0000000000410C50
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C50:
	branch rdi == 0x0000000000000000 l0000000000410C4E
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C55:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C4E:
	rbxOut = Mem6[rsp_4:word64]
	rspOut = rsp_4 + 8
	return rax_9
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410C40_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410C90(word64 rbx, word64 rdi, ptr64 & rbxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rbx:[0..63] rdi:[0..63]
// LiveOut: rax rbx
// Trashed: SCZO rax rbx rcx
// Preserved: rdx rsp
l0000000000410D78:
	branch rax >u 0x00000000AAAAAAA9 l0000000000410DB7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410DB7:
	Mem78[rsp - 8:word64] = rax
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410D87:
	rax_81 = rax + (rax + 0x0000000000000001 >>u 0x0000000000000001)
	Mem83[rsi:word64] = rax_81
	rsi_84 = rax_81
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410DA0:
	branch rax != 0x0000000000000000 l0000000000410DAC
	def rsi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410DA8_1:
	rax_68 = 0x0000000000000080
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410DAC:
	rax_69 = PHI((rax, l0000000000410DA0), (rax_68, l0000000000410DA8_1))
	Mem72[rsi:word64] = rax_69
	rsi_73 = rax_69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410D0B:
	rax_59 = (uint64) (0x00000000AAAAAAAA /u r8)
	branch rcx >=u rax_59 l0000000000410D5C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410D5C:
	Mem63[rsp - 8:word64] = rax_59
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410D1F:
	rcx_87 = rcx + (rcx + 0x0000000000000001 >>u 0x0000000000000001)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410D40:
	branch rcx != 0x0000000000000000 l0000000000410D29
	def rcx
	def r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410D45:
	rax_47 = (uint64) (0x0000000000000080 /u r8)
	rcx_52 = (uint64) (rax_47 == 0x0000000000000000) + rax_47
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410D29:
	rcx_89 = PHI((rcx_87, l0000000000410D1F), (rcx, l0000000000410D40), (rcx_52, l0000000000410D45))
	Mem91[rsi:word64] = rcx_89
	rsi_95 = rcx_89 *s r8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CE4:
	rsi_96 = rsi *s rcx
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CED:
	Mem35[rsp - 8:word64] = rax
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410C90_entry:
	def fp
	def rbx
	def rdi
	rsp_2 = fp
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C90:
	rsp_6 = PHI((rsp_2, fn0000000000410C90_entry), (rsp, l0000000000410CE4), (rsp, l0000000000410D29), (rsp, l0000000000410D87), (rsp, l0000000000410DAC))
	rsi_3 = PHI((rsi, fn0000000000410C90_entry), (rsi_96, l0000000000410CE4), (rsi_95, l0000000000410D29), (rsi_84, l0000000000410D87), (rsi_73, l0000000000410DAC))
	rsp_7 = rsp_6 - 8
	Mem9[rsp_7:word64] = rbx
	branch rsi_3 == 0x0000000000000000 l0000000000410CB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CB0:
	branch rdi == 0x0000000000000000 l0000000000410C99
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CB5:
	free(rdi)
	rbxOut = Mem9[rsp_7:word64]
	return 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410C99:
	rax_25 = realloc(rdi, rsi_3)
	branch rax_25 == 0x0000000000000000 l0000000000410CBE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CBE:
	branch rsi_3 == 0x0000000000000000 l0000000000410CA6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CC3:
	fn0000000000410E50()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410CA6:
	rbxOut = Mem9[rsp_7:word64]
	return rax_25
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410C90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410E00(word64 rsi, word64 rdi, ptr64 & rsiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax rsi
// Trashed: SCZO rax rdi rdx rsi
// Preserved: rbp rbx rsp
fn0000000000410E00_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E00:
	word64 rbx_17
	word64 rax_33 = memcpy(fn0000000000410C40(rsi, out rbx_17, out rsp_41), rdi, rbx_17)
	rsiOut = rdi
	return rax_33
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410E00_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000410E30(word64 rax, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[32..63] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi
// Preserved: rbx rsp
fn0000000000410E30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E30:
	word64 rax_11 = DPB(rax, strlen(rdi), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E41_thunk_fn0000000000410E00:
	return fn0000000000410E00(rax_11 + 0x0000000000000001, rdi, out rsi_24)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410E30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000410E50()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
fn0000000000410E50_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410E50_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E50:
	dcgettext(0x0000000000000000, 0x0000000000416BCF, 0x0000000000000005)
	error((uint64) Mem0[0x000000000061A580:word32], 0x0000000000000000, 0x0000000000415E54, 0x00000000)
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000410E90(word64 rcx, word32 edx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & rbpOut, ptr64 & r9Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] r9:[32..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r12 r13 r14 r15 r9 rax rbp rbx rsp
// Trashed: SCZO r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn0000000000410E90_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410E90:
	word32 r14d_68 = (word32) (uint64) edx
	branch edx >u 0x00000024 l00000000004112B0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112B0:
	__assert_fail(0x0000000000416BF0, 0x0000000000416BE0, 0x0000000000000060, 0x0000000000416DC8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EAA:
	word64 r15_34 = rsi
	branch rsi != 0x0000000000000000 l0000000000410EC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EBE_1:
	r15_34 = fp - 0x0000000000000040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EC2:
	byte bl_318 = (byte) (word32) Mem22[rdi:byte]
	word64 rdx_47 = Mem22[__ctype_b_loc():word64]
	word64 rax_49 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EDF:
	r9 = DPB(r9, (word32) bl_318, 0) (alias)
	branch (Mem22[rdx_47 + 0x0000000000000001 + r9 * 0x0000000000000002:byte] & 0x20) != 0x00 l0000000000410ED8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410ED8:
	rax_49 = rax_49 + 0x0000000000000001
	bl_318 = (byte) (word32) Mem22[rax_49:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EEB:
	word64 rax_209
	branch bl_318 != 0x2D l0000000000410F08
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F08:
	word64 rbp_100
	word32 ebp_117
	word32 edx_146
	word64 rax_65 = __errno_location()
	Mem70[rax_65:word32] = 0x00000000
	word64 rax_81 = DPB(rax_65, strtoul(rdi, r15_34, (uint64) r14d_68), 0)
	word32 dwLoc4C_377 = SLICE(rax_65, word32, 32)
	word64 r14_80 = Mem78[r15_34:word64]
	word64 rbx_101 = rax_81
	branch r14_80 == rdi l0000000000410FE7
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FE7:
	branch r8 == 0x0000000000000000 l0000000000410EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FF0:
	word32 edx_91 = (word32) Mem78[rdi:byte]
	byte dl_92 = (byte) edx_91
	word32 edx_98 = DPB(edx_91, dl_92, 0)
	branch dl_92 == 0x00 l0000000000410EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FFC:
	rbp_100 = 0x0000000000000000
	ebp_117 = 0x00000000 (alias)
	rbx_101 = 0x0000000000000001
	edx_146 = (word32) (uint64) edx_98 (alias)
	branch strchr(r8, DPB(r15_34, (int32) dl_92, 0)) != 0x0000000000000000 l0000000000410F94
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041101F:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F3A:
	word64 rbp_116
	word32 eax_109 = (word32) (uint64) Mem78[rax_65:word32]
	branch eax_109 != 0x00000000 l0000000000410F68
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F68:
	ebp_117 = 0x00000001 (alias)
	rbp_116 = 0x0000000000000001 (alias)
	branch eax_109 != 0x00000022 l0000000000410EF0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F76:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F40:
	rbp_116 = 0x0000000000000000
	ebp_117 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F42:
	rbp_100 = DPB(rbp_116, ebp_117, 0) (alias)
	branch r8 == 0x0000000000000000 l0000000000410F4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F47:
	word32 edx_126 = (word32) Mem78[r14_80:byte]
	byte dl_127 = (byte) edx_126
	word32 edx_133 = DPB(edx_126, dl_127, 0)
	branch dl_127 != 0x00 l0000000000410F78
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F78:
	edx_146 = (word32) (uint64) edx_133 (alias)
	branch strchr(r8, DPB(r15_34, (int32) dl_127, 0)) == 0x0000000000000000 l0000000000411028
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F94:
	word64 rcx_172
	word64 rax_165
	rbp_234 = DPB(rbp_100, ebp_117, 0) (alias)
	word64 rbp_234 = DPB(rbp_100, ebp_117, 0)
	rbp_234 = DPB(rbp_100, ebp_117, 0) (alias)
	word64 rbp_233 = DPB(rbp_234, ebp_117, 0)
	rbp_233 = DPB(rbp_100, ebp_117, 0) (alias)
	rbp_233 = DPB(rbp_234, ebp_117, 0) (alias)
	word64 rbp_249 = DPB(rbp_233, ebp_117, 0)
	word32 edx_178 = (word32) (uint64) edx_146
	branch strchr(r8, 0x0000000000000030) == 0x0000000000000000 l0000000000410FCB
	dwLoc4C_377 = SEQ(dwLoc4C_377, edx_146)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FAE:
	byte al_158 = (byte) (word32) Mem150[r14_80 + 0x0000000000000001:byte]
	branch al_158 == 0x44 l0000000000411262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FBB:
	branch al_158 == 0x69 l000000000041124A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041124A:
	word64 rcx_168 = (uint64) (Mem150[r14_80 + 0x0000000000000002:byte] == 0x42)
	rax_165 = 0x0000000000000400
	rcx_172 = (uint64) (rcx_168 + 0x0000000000000001 + rcx_168) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FC3:
	branch al_158 == 0x42 l0000000000411262
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411262:
	rcx_172 = 0x0000000000000002
	rax_165 = 0x00000000000003E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FCB:
	rcx_172 = 0x0000000000000001
	rax_165 = 0x0000000000000400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FD5:
	word64 rdx_180 = (uint64) (edx_178 - 0x00000042)
	word32 dwLoc4C_470 = SLICE(dwLoc4C_377, word32, 32)
	byte dl_181 = (byte) rdx_180
	branch dl_181 >u 0x35 l0000000000411028
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411028:
	Mem207[rcx:word64] = rbx_101
	rax_209 = (uint64) ((word32) (uint64) ebp_117 | 0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410FDD:
	word64 rdx_214 = DPB(rdx_180, (word32) dl_181, 0)
	word64 rax_251
	word64 r9_276
	call Mem150[rdx_214 * 0x0000000000000008 + 0x00416C18:word64] (retsize: 8;)
		uses: r8:r8,r9:r9_54,rax:rax_250,rcx:rcx_260,rdi:r8,rdx:rdx_214,rsi:0x0000000000000030,Stack +0010:qwLoc50_374,Stack +0014:dwLoc4C_470,Stack +0030:rbx,Stack +0038:rbp,Stack +0040:r12,Stack +0048:r13,Stack +0050:r14,Stack +0058:r15
		defs: r9:r9_276,rax:rax_251
	rbxOut = rbx_101
	rspOut = fp - 0x0000000000000058
	rbpOut = rbp_249
	r9Out = r9_276
	r12Out = r8
	r13Out = rcx
	r14Out = r14_80
	r15Out = r15_34
	return (word32) rax_251
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410F4F:
	Mem280[rcx:word64] = rax_81
	rbxOut = rbx
	rspOut = fp
	rbpOut = rbp
	r9Out = r9
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (word32) (uint64) ebp_117
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EF0:
	rax_209 = 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000410EF5:
	rbxOut = rbx
	rspOut = fp
	rbpOut = rbp
	r9Out = r9
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (word32) rax_209
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000410E90_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn00000000004112D0(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] esi:[0..31]
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
fn00000000004112D0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004112D0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112D0:
	word64 rsi_25
	word32 r10d_36 = (word32) (int64) esi
	word32 ebp_78 = (word32) (uint64) Mem18[0x000000000061A580:word32]
	branch edi >u 0x00000003 l000000000041133B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041133B:
	rsi_25 = 0x0000000000416DD1
	branch edi == 0x00000004 l00000000004112FA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411345:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112EB:
	branch edi >=u 0x00000002 l0000000000411334
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411334:
	rsi_25 = 0x0000000000416E10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112F0:
	rsi_25 = 0x0000000000416DEC
	branch (word32) (uint64) (edi - 0x00000001) != 0x00000000 l000000000041132F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112FA:
	branch r10d_36 < 0x00000000 l0000000000411347
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411347:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004112FF:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041130C:
	error((uint64) ebp_78, 0x0000000000000000, dcgettext(0x0000000000000000, rsi_25, 0x0000000000000005), 0x00000000)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041132F:
	abort()
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000411360(word64 rcx, word32 edx, word64 rbx, word64 rbp, word64 rsi, word64 rdi, word64 r8, word64 r9, word64 r12, word64 r13, word64 r14, word64 r15, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & ebpOut, ptr64 & r8Out, ptr64 & r9Out, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] r12:[0..63] r13:[0..63] r14:[0..63] r15:[0..63] r8:[0..63] r9:[32..63] rbp:[0..63] rbx:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r12 r13 r14 r15 r8 r9 rax rbp rbx rsp
// Trashed: SCZO r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn0000000000411360_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411360:
	word32 r14d_69 = (word32) (uint64) edx
	branch edx >u 0x00000024 l0000000000411788
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411788:
	__assert_fail(0x0000000000416BF0, 0x0000000000416BE0, 0x0000000000000060, 0x0000000000416FE8)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041137A:
	word64 r15_34 = rsi
	branch rsi != 0x0000000000000000 l0000000000411392
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041138E_1:
	r15_34 = fp - 0x0000000000000040
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411392:
	byte bl_317 = (byte) (word32) Mem22[rdi:byte]
	word64 rdx_47 = Mem22[__ctype_b_loc():word64]
	word64 rax_49 = rdi
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113AF:
	r9 = DPB(r9, (word32) bl_317, 0) (alias)
	branch (Mem22[rdx_47 + 0x0000000000000001 + r9 * 0x0000000000000002:byte] & 0x20) != 0x00 l00000000004113A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113A8:
	rax_49 = rax_49 + 0x0000000000000001
	bl_317 = (byte) (word32) Mem22[rax_49:byte] (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113BB:
	word64 rax_210
	branch bl_317 != 0x2D l00000000004113D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113D8:
	word32 ebp_118
	word32 edx_147
	word64 rax_65 = __errno_location()
	Mem71[rax_65:word32] = 0x00000000
	word64 rax_82 = DPB(rax_65, __strtoul_internal(rdi, r15_34, (uint64) r14d_69, 0x0000000000000000), 0)
	word32 dwLoc4C_376 = SLICE(rax_65, word32, 32)
	word64 r14_81 = Mem79[r15_34:word64]
	word64 rbx_102 = rax_82
	r8 = rax_65
	branch r14_81 == rdi l00000000004114BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114BF:
	branch r8 == 0x0000000000000000 l00000000004113C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114C8:
	word32 edx_92 = (word32) Mem79[rdi:byte]
	byte dl_93 = (byte) edx_92
	word32 edx_99 = DPB(edx_92, dl_93, 0)
	branch dl_93 == 0x00 l00000000004113C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114D4:
	ebp_118 = 0x00000000 (alias)
	rbx_102 = 0x0000000000000001
	edx_147 = (word32) (uint64) edx_99 (alias)
	branch strchr(r8, DPB(r15_34, (int32) dl_93, 0)) != 0x0000000000000000 l000000000041146C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114F7:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041140C:
	word32 eax_110 = (word32) (uint64) Mem79[rax_65:word32]
	branch eax_110 != 0x00000000 l0000000000411440
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411440:
	ebp_118 = 0x00000001 (alias)
	branch eax_110 != 0x00000022 l00000000004113C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041144E:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411413:
	ebp_118 = 0x00000000 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411415:
	branch r8 == 0x0000000000000000 l0000000000411422
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041141A:
	word32 edx_127 = (word32) Mem79[r14_81:byte]
	byte dl_128 = (byte) edx_127
	word32 edx_134 = DPB(edx_127, dl_128, 0)
	branch dl_128 != 0x00 l0000000000411450
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411450:
	edx_147 = (word32) (uint64) edx_134 (alias)
	branch strchr(r8, DPB(r15_34, (int32) dl_128, 0)) == 0x0000000000000000 l0000000000411500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041146C:
	word64 rcx_173
	word64 rax_166
	word32 edx_179 = (word32) (uint64) edx_147
	branch strchr(r8, 0x0000000000000030) == 0x0000000000000000 l00000000004114A3
	dwLoc4C_376 = SEQ(dwLoc4C_376, edx_147)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411486:
	byte al_159 = (byte) (word32) Mem151[r14_81 + 0x0000000000000001:byte]
	branch al_159 == 0x44 l000000000041173A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411493:
	branch al_159 == 0x69 l0000000000411722
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411722:
	word64 rcx_169 = (uint64) (Mem151[r14_81 + 0x0000000000000002:byte] == 0x42)
	rax_166 = 0x0000000000000400
	rcx_173 = (uint64) (rcx_169 + 0x0000000000000001 + rcx_169) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041149B:
	branch al_159 == 0x42 l000000000041173A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041173A:
	rcx_173 = 0x0000000000000002
	rax_166 = 0x00000000000003E8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114A3:
	rcx_173 = 0x0000000000000001
	rax_166 = 0x0000000000000400
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114AD:
	word64 rdx_181 = (uint64) (edx_179 - 0x00000042)
	word32 dwLoc4C_471 = SLICE(dwLoc4C_376, word32, 32)
	byte dl_182 = (byte) rdx_181
	branch dl_182 >u 0x35 l0000000000411500
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411500:
	Mem208[rcx:word64] = rbx_102
	rax_210 = (uint64) ((word32) (uint64) ebp_118 | 0x00000002)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004114B5:
	word64 rdx_215 = DPB(rdx_181, (word32) dl_182, 0)
	word64 rax_252
	word64 r8_269
	word64 r9_275
	call Mem151[rdx_215 * 0x0000000000000008 + 0x00416E38:word64] (retsize: 8;)
		uses: r8:rax_65,r9:r9_54,rax:rax_251,rcx:rcx_261,rdi:r8,rdx:rdx_215,rsi:0x0000000000000030,Stack +0010:qwLoc50_373,Stack +0014:dwLoc4C_471,Stack +0030:rbx,Stack +0038:rbp,Stack +0040:r12,Stack +0048:r13,Stack +0050:r14,Stack +0058:r15
		defs: r8:r8_269,r9:r9_275,rax:rax_252
	rbxOut = rbx_102
	rspOut = fp - 0x0000000000000058
	ebpOut = <invalid>
	r8Out = r8_269
	r9Out = r9_275
	r12Out = r8
	r13Out = rcx
	r14Out = r14_81
	r15Out = r15_34
	return (word32) rax_252
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411422:
	Mem279[rcx:word64] = rax_82
	rbxOut = rbx
	rspOut = fp
	ebpOut = <invalid>
	r8Out = rax_65
	r9Out = r9
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (word32) (uint64) ebp_118
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113C0:
	rax_210 = 0x0000000000000004
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004113C5:
	rbxOut = rbx
	rspOut = fp
	ebpOut = <invalid>
	r8Out = r8
	r9Out = r9
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return (word32) rax_210
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411360_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn00000000004117B0(word64 rsi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rsp
fn00000000004117B0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117B0:
	word64 rax_10
	branch edi == 0x00000000 l0000000000411800
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411800:
	Mem9[__errno_location():word32] = 0x0000005F
	rax_10 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117B8:
	bool Z_13 = SLICE(cond(edi - 0x0000000A), bool, 2)
	rax_10 = (uint64) edi
	branch edi == 0x0000000A l00000000004117C8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117C8:
	word64 rdx_16 = Mem0[rsi:word64]
	word64 rdi_17 = 0x00000000004137B1
	word64 rcx_18 = 0x000000000000000A
	word64 rsi_19 = rdx_16
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117D8:
	branch rcx_18 == 0x0000000000000000 l00000000004117DA
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117D8_1:
	Z_13 = SLICE(cond(Mem0[rsi_62:byte] - Mem0[rdi_63:byte]), bool, 2) (alias)
	rsi_19 = rsi_62 + 0x0000000000000001
	rdi_17 = rdi_63 + 0x0000000000000001
	rcx_18 = rcx_18 - 0x0000000000000001
	rsi_62 = rsi_19
	rdi_63 = rdi_17
	branch Mem0[rsi_62:byte] != Mem0[rdi_63:byte] l00000000004117D8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117DA:
	branch Z_13 l00000000004117BF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117DC:
	freecon(rdx_16)
	Mem35[__errno_location():word32] = 0x0000003D
	rax_10 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004117BF:
	return (word32) rax_10
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn00000000004117B0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000411820(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn0000000000411820_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411820:
	word32 edi_14 = (word32) (uint64) getfilecon(rdi, rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041182F_thunk_fn00000000004117B0:
	return (word32) (word64) fn00000000004117B0(rsi, edi_14)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411820_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word32 fn0000000000411840(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi
// Preserved: rbx rsp
fn0000000000411840_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411840:
	word32 edi_14 = (word32) (uint64) lgetfilecon(rdi, rsi)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041184F_thunk_fn00000000004117B0:
	return (word32) (word64) fn00000000004117B0(rsi, edi_14)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411840_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000411880(word64 rax, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[32..63] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdx rsi
// Preserved: r12 rbp rbx rdi rsp
fn0000000000411880_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411880:
	word64 rax_18 = DPB(rax, __fpending(rdi), 0)
	word32 ebx_27 = (word32) (uint64) Mem13[rdi:word32]
	word32 eax_29 = (word32) fn0000000000411D30(rax_18, rdi)
	branch (word32) (uint64) (ebx_27 & 0x00000020) != 0x00000000 l00000000004118C0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118C0:
	branch eax_29 != 0x00000000 != 0x00 l00000000004118B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118C9:
	Mem42[__errno_location():word32] = 0x00000000
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118A6:
	branch eax_29 != 0x00000000 == 0x00 l00000000004118B4
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118AA:
	branch rax_18 == 0x0000000000000000 l00000000004118E0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118E0:
	__errno_location()
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004118B4:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411880_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000411900(selector fs, ptr64 & rbxOut, ptr64 & rspOut, ptr64 & r12dOut, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: r12 r15 rbx rcx rsp
// Trashed: SCZO r12 r13 r14 r15 rbp rbx rcx rdi rsp
// Preserved: fs r10 rdx rsi
fn0000000000411900_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411900:
	word64 rax_27 = nl_langinfo(0x000000000000000E)
	word64 rsp_175 = fp - 216
	word64 r14_28 = Mem25[0x000000000061B358:word64]
	word64 rbx_31 = rax_27
	word64 rax_32 = 0x0000000000416919
	branch rax_27 != 0x0000000000000000 l0000000000411944
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411940_1:
	rbx_31 = 0x0000000000416919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411944:
	branch r14_28 != 0x0000000000000000 l000000000041196A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411949:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119D4:
	word32 dwLocD0_593
	word64 r12_53
	word64 r13_64
	word64 rax_55
	word64 rax_40 = getenv(0x0000000000417002)
	word64 r15_43 = rax_40
	branch rax_40 == 0x0000000000000000 l00000000004119EF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119E6:
	branch Mem25[rax_40:byte] != 0x00 l0000000000411C52
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C52:
	word64 rax_50 = DPB(rax_40, strlen(rax_40), 0)
	r12_53 = rax_50
	branch rax_50 == 0x0000000000000000 l0000000000411C42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C62:
	rax_55 = rax_50 - 0x0000000000000001
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119EF:
	rax_55 = 0x0000000000000007
	r12_53 = 0x0000000000000008
	r15_43 = 0x0000000000416FF3
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A00:
	r13_64 = 0x0000000000000001
	dwLocD0_593 = 0x00000001
	branch Mem25[r15_43 + rax_55:byte] == 0x2F l0000000000411C42
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C42:
	r13_64 = 0x0000000000000000
	dwLocD0_593 = 0x00000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A19:
	word64 r13_80 = r13_64 + r12_53
	rax_32 = malloc(r13_80 + 0x000000000000000E)
	word64 rbp_410 = rax_32
	branch rax_32 == 0x0000000000000000 l0000000000411CF2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411CF2:
	r14_28 = 0x0000000000416919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A31:
	memcpy(rax_32, r15_43, r12_53)
	branch (word32) (uint64) dwLocD0_593 == 0x00000000 l0000000000411A4D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A47:
	Mem101[rax_32:byte] = 0x2F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A4D:
	word64 r13_104 = r13_80 + rax_32
	Mem107[r13_104:word64] = 0x0000000072616863
	Mem109[r13_104 + 0x0000000000000008:word32] = 0x61696C61
	Mem111[r13_104 + 0x000000000000000C:word16] = 0x0073
	word32 eax_114 = open(rax_32, 0x0000000000020000)
	rax_32 = (uint64) eax_114 (alias)
	word32 r12d_126 = (word32) (uint64) eax_114
	branch eax_114 < 0x00000000 l0000000000411C28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411A8A:
	word64 rdi_120 = (uint64) eax_114
	word64 rax_121 = fdopen(rdi_120, 0x0000000000413A21)
	word64 r15_124 = rax_121
	branch rax_121 == 0x0000000000000000 l0000000000411C20
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C20:
	rax_32 = DPB(rax_121, close((uint64) r12d_126), 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411AA2:
	word64 r12_130 = fp - 0x00000000000000B8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411AB0:
	word64 rax_364
	word64 rdi_145
	word32 edi_141
	word64 rax_134 = Mem133[r15_124 + 0x0000000000000008:word64]
	branch rax_134 >=u Mem133[r15_124 + 0x0000000000000010:word64] l0000000000411C01
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411ABE:
	Mem140[r15_124 + 0x0000000000000008:word64] = rax_134 + 0x0000000000000001
	edi_141 = (word32) Mem140[rax_134:byte]
	rdi_145 = DPB(rdi_120, edi_141, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411AC9:
	rdi_120 = DPB(rdi_145, edi_141, 0) (alias)
	rdi_120 = DPB(rdi_145, edi_141, 0) (alias)
	branch edi_141 == 0x00000020 l0000000000411AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411ACE:
	branch rdi_120 <=u 0x000000000000000A l0000000000411AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411AD6:
	branch edi_141 == 0x00000023 l0000000000411C75
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C75:
	word64 rax_367
	word32 eax_159
	word64 rax_155 = Mem154[r15_124 + 0x0000000000000008:word64]
	branch rax_155 >=u Mem154[r15_124 + 0x0000000000000010:word64] l0000000000411D1D
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D1D:
	eax_159 = __uflow(r15_124)
	rdi_120 = r15_124
	rax_367 = DPB(rax_155, eax_159, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C83:
	Mem161[r15_124 + 0x0000000000000008:word64] = rax_155 + 0x0000000000000001
	eax_159 = (word32) Mem161[rax_155:byte]
	rax_367 = DPB(rax_155, eax_159, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C8E:
	rax_366 = DPB(rax_367, eax_159, 0) (alias)
	word64 rax_366 = DPB(rax_367, eax_159, 0)
	rax_364 = DPB(rax_366, eax_159, 0) (alias)
	rax_663 = rax_366
	branch eax_159 != 0x0000000A l0000000000411C70
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C70:
	rax_662 = rax_366
	branch eax_159 == 0xFFFFFFFF l0000000000411C93
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C93:
	branch eax_159 != 0xFFFFFFFF l0000000000411AB0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411ADF:
	ungetc(rdi_120, r15_124)
	word32 eax_182 = fscanf(r15_124, 0x0000000000417012, 0x00000000)
	rax_364 = (uint64) eax_182 (alias)
	branch eax_182 <= 0x00000001 l0000000000411C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B07:
	word64 rdx_185 = r12_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B0A:
	word64 rcx_188 = (uint64) Mem389[rdx_185:word32]
	word32 eax_197 = (word32) (uint64) ((word32) (uint64) (rcx_188 + 0xFFFFFFFFFEFEFEFF & (word32) ((uint64) (~((word32) rcx_188)))) & 0x80808080)
	rdx_185 = rdx_185 + 0x0000000000000004
	byte al_216 = (byte) eax_197
	branch eax_197 == 0x00000000 l0000000000411B0A
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B21:
	word64 r10_203 = rsp_175 + 0x0000000000000060
	word32 ecx_209 = (word32) (uint64) ((word32) (uint64) eax_197 >>u 0x00000010)
	branch (eax_197 & 0x00008080) != 0x00000000 l0000000000411B33
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B30_1:
	al_216 = (byte) ecx_209 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B33:
	branch (eax_197 & 0x00008080) != 0x00000000 l0000000000411B3B
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B37_1:
	rdx_185 = rdx_185 + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B3B:
	word64 rdx_227 = rdx_185 - 0x03 - (al_216 * 0x02 <u 0x00) - r12_130
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B44:
	word64 rcx_231 = (uint64) Mem389[r10_203:word32]
	word32 eax_240 = (word32) (uint64) ((word32) (uint64) (rcx_231 + 0xFFFFFFFFFEFEFEFF & (word32) ((uint64) (~((word32) rcx_231)))) & 0x80808080)
	r10_203 = r10_203 + 0x0000000000000004
	byte al_257 = (byte) eax_240
	branch eax_240 == 0x00000000 l0000000000411B44
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B5C:
	word32 ecx_250 = (word32) (uint64) ((word32) (uint64) eax_240 >>u 0x00000010)
	branch (eax_240 & 0x00008080) != 0x00000000 l0000000000411B69
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B66_1:
	al_257 = (byte) ecx_250 (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B69:
	branch (eax_240 & 0x00008080) != 0x00000000 l0000000000411B71
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B6D_1:
	r10_203 = r10_203 + 0x0000000000000002
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B71:
	word64 r10_296
	word64 rdx_298
	word64 rax_295
	word64 r13_297
	word64 r10_271 = r10_203 - 0x03 - (al_257 * 0x02 <u 0x00) - (rsp_175 + 0x0000000000000060)
	word64 rax_278 = r10_271 + rdx_227
	branch Mem389[rsp_175 + 0x0000000000000008:word64] != 0x0000000000000000 l0000000000411CBC
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411CBC:
	word64 rax_280 = rax_278 + Mem389[rsp_175 + 0x0000000000000008:word64]
	Mem290[rsp_175 + 0x0000000000000018:word64] = r10_271
	Mem291[rsp_175 + 0x0000000000000010:word64] = rdx_227
	Mem294[rsp_175 + 0x0000000000000008:word64] = rax_280 + 0x0000000000000002
	rax_295 = realloc(r14_28, rax_280 + 0x0000000000000003)
	r10_296 = Mem294[rsp_175 + 0x0000000000000018:word64]
	r13_297 = rax_295
	rdx_298 = Mem294[rsp_175 + 0x0000000000000010:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411B8F:
	Mem301[rsp_175 + 0x0000000000000018:word64] = rdx_227
	Mem302[rsp_175 + 0x0000000000000010:word64] = r10_271
	Mem303[rsp_175 + 0x0000000000000008:word64] = rax_278 + 0x0000000000000002
	rax_295 = malloc(rax_278 + 0x0000000000000003)
	r10_296 = Mem303[rsp_175 + 0x0000000000000010:word64]
	rdx_298 = Mem303[rsp_175 + 0x0000000000000018:word64]
	r13_297 = rax_295
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411BB8:
	branch r13_297 == 0x0000000000000000 l0000000000411D02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D02:
	free(r14_28)
	r14_28 = 0x0000000000416919
	rax_32 = fn0000000000411D30(rax_295, r15_124)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411BC1:
	word64 r14_343 = Mem332[rsp_175 + 0x0000000000000008:word64] - r10_296
	strcpy(0xFFFFFFFFFFFFFFFE - rdx_298 + r14_343 + r13_297, r12_130)
	rdi_120 = r13_297 - 0x0000000000000001 + r14_343
	strcpy(rdi_120, rsp_175 + 0x0000000000000060)
	r14_28 = r13_297
	rax_134 = Mem332[r15_124 + 0x0000000000000008:word64]
	branch rax_134 <u Mem332[r15_124 + 0x0000000000000010:word64] l0000000000411ABE
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C01:
	word32 eax_356 = __uflow(r15_124)
	word64 rdi_358 = (uint64) eax_356
	edi_141 = (word32) rdi_358 (alias)
	rax_364 = DPB(rax_134, eax_356, 0) (alias)
	rdi_145 = DPB(rdi_358, edi_141, 0) (alias)
	branch eax_356 == 0xFFFFFFFF l0000000000411C9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C9C:
	fn0000000000411D30(rax_364, r15_124)
	rax_32 = Mem388[rsp_175 + 0x0000000000000008:word64]
	branch rax_32 == 0x0000000000000000 l0000000000411C28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C28:
	r14_28 = 0x0000000000416919
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411CB2:
	Mem409[r14_28 + rax_32:byte] = 0x00
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C2E:
	free(rbp_410)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C36:
	Mem429[0x000000000061B358:word64] = r14_28
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041196A:
	byte bpl_433 = (byte) (word32) Mem431[r14_28:byte]
	branch bpl_433 == 0x00 l000000000041199C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411973:
	branch strcmp(rbx_31, r14_28) == 0x00000000 l000000000041198F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411982:
	branch bpl_433 != 0x2A l0000000000411950
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411988:
	branch Mem431[r14_28 + 0x0000000000000001:byte] != 0x00 l0000000000411950
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411950:
	word64 rbp_455 = r14_28 + 0x0000000000000001 + DPB(rax_32, strlen(r14_28), 0)
	rax_32 = DPB(rax_32, strlen(rbp_455), 0) (alias)
	r14_28 = rbp_455 + 0x0000000000000001 + rax_32
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041198F:
	rbx_31 = r14_28 + 0x0000000000000001 + DPB(rax_32, strlen(r14_28), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l000000000041199C:
	branch Mem431[rbx_31:byte] != 0x00 l00000000004119A8
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119A4_1:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119A8:
	word64 rcx_512 = Mem431[rsp_175 + 0x0000000000000098:word64] ^ Mem431[fs:0x00000028:word64]
	branch rcx_512 != 0x0000000000000000 l0000000000411CFD
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411CFD:
	__stack_chk_fail()
// DataOut:
// DataOut (flags):
// SymbolicIn:

l00000000004119C2:
	word64 rsp_518 = rsp_175 + 168
	word64 r15_530 = Mem431[rsp_518 + 40:word64]
	rbxOut = Mem431[rsp_518:word64]
	rspOut = rsp_518 + 48
	r12dOut = <invalid>
	r15Out = r15_530
	return rcx_512
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411900_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411C14:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000411D30(word64 rax, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax:[32..63] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi
// Preserved: r12 rbp rbx rdi rsp
fn0000000000411D30_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D30:
	word32 eax_14 = fileno(rdi)
	word64 rax_113 = DPB(rax, eax_14, 0)
	branch eax_14 < 0x00000000 l0000000000411D9F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D43:
	branch __freading(rdi) != 0x00000000 l0000000000411D80
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D80:
	rax_113 = DPB(rax, lseek((uint64) fileno(rdi), 0x0000000000000000, 0x0000000000000001), 0) (alias)
	branch rax_113 != 0xFFFFFFFFFFFFFFFF l0000000000411D4C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D4C:
	rax_113 = fn0000000000411DB0(rdi)
	branch (word32) rax_113 == 0x00000000 l0000000000411D9C
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D9C:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D9F:
	return DPB(rax_113, fclose(rdi), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D58:
	word64 rax_64 = __errno_location()
	word32 r12d_69 = (word32) (uint64) Mem11[rax_64:word32]
	word64 rax_116 = DPB(rax_64, fclose(rdi), 0)
	branch r12d_69 == 0x00000000 l0000000000411D79
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D70:
	Mem73[rax_64:word32] = r12d_69
	rax_116 = 0x00000000FFFFFFFF
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411D79:
	return rax_116
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411D30_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000411DB0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi
// Preserved: rbx rdi rsp
fn0000000000411DB0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DB0:
	branch rdi == 0x0000000000000000 l0000000000411DC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DB9:
	word32 eax_11 = __freading(rdi)
	rax = DPB(rax, eax_11, 0) (alias)
	branch eax_11 != 0x00000000 l0000000000411DD0
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DD0:
	branch (Mem8[rdi:word32] & 0x00000100) == 0x00000000 l0000000000411DC2
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DD8:
	return DPB(fn0000000000411DF0(0x0000000000000001, 0x0000000000000000, rdi), fflush(rdi), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DC2:
	return DPB(rax, fflush(rdi), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411DB0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



word64 fn0000000000411DF0(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..63] rdi:[0..63] rdx:[32..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx
// Preserved: rbx rsi rsp
fn0000000000411DF0_entry:
	word64 rdx_52 = DPB(rdx, edx, 0)
	rdx_52 = DPB(rdx, edx, 0) (alias)
	rdx_52 = DPB(rdx, edx, 0) (alias)
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411DF0:
	word64 rax_12 = Mem5[rdi + 0x0000000000000008:word64]
	branch Mem5[rdi + 0x0000000000000010:word64] == rax_12 l0000000000411E10
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E10:
	rax_12 = Mem5[rdi + 0x0000000000000020:word64]
	branch Mem5[rdi + 0x0000000000000028:word64] != rax_12 l0000000000411E02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E1A:
	branch Mem5[rdi + 0x0000000000000048:word64] != 0x0000000000000000 l0000000000411E02
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E21:
	word64 rax_26 = DPB(rax_12, lseek((uint64) fileno(rdi), rsi, (uint64) edx), 0)
	branch rax_26 == 0xFFFFFFFFFFFFFFFF l0000000000411E4F
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E43:
	Mem30[rdi:word32] = Mem20[rdi:word32] & 0xFFFFFFEF
	Mem32[rdi + 0x0000000000000090:word64] = rax_26
	rax_26 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E4F:
	return rax_26
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411E02:
	return DPB(rax_12, fseeko(rdi, rsi, rdx_52), 0)
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411DF0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void fn0000000000411EE0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdx rsi
// Preserved: rsp
fn0000000000411EE0_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EE0:
	word64 rdx_12
	branch 0x000000000061A3A8 == 0x0000000000000000 l0000000000411EF6
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EF6:
	rdx_12 = 0x0000000000000000
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EEC:
	rdx_12 = Mem0[0x000000000061A3A8:word64]
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EEF:
	__cxa_atexit(rdi, 0x0000000000000000, rdx_12)
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

fn0000000000411EE0_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags):
// SymbolicIn:

l0000000000411EFC:
	return
// DataOut:
// DataOut (flags):
// SymbolicIn:

_fini_exit:
// DataOut:
// DataOut (flags):
// SymbolicIn:



